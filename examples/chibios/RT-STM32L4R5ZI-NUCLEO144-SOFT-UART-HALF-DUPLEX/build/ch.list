
build/ch.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08000000 <_vectors>:
 8000000:	20000400 	.word	0x20000400
 8000004:	080002d9 	.word	0x080002d9
 8000008:	080002db 	.word	0x080002db
 800000c:	080002db 	.word	0x080002db
 8000010:	080002db 	.word	0x080002db
 8000014:	080002db 	.word	0x080002db
 8000018:	080002db 	.word	0x080002db
 800001c:	080002db 	.word	0x080002db
 8000020:	080002db 	.word	0x080002db
 8000024:	080002db 	.word	0x080002db
 8000028:	080002db 	.word	0x080002db
 800002c:	0800a731 	.word	0x0800a731
 8000030:	080002db 	.word	0x080002db
 8000034:	080002db 	.word	0x080002db
 8000038:	080002db 	.word	0x080002db
 800003c:	080002db 	.word	0x080002db
 8000040:	080002db 	.word	0x080002db
 8000044:	080002db 	.word	0x080002db
 8000048:	080002db 	.word	0x080002db
 800004c:	080002db 	.word	0x080002db
 8000050:	080002db 	.word	0x080002db
 8000054:	080002db 	.word	0x080002db
 8000058:	0800c071 	.word	0x0800c071
 800005c:	0800c041 	.word	0x0800c041
 8000060:	0800c011 	.word	0x0800c011
 8000064:	0800bfe1 	.word	0x0800bfe1
 8000068:	0800bfb1 	.word	0x0800bfb1
 800006c:	080002db 	.word	0x080002db
 8000070:	080002db 	.word	0x080002db
 8000074:	080002db 	.word	0x080002db
 8000078:	080002db 	.word	0x080002db
 800007c:	080002db 	.word	0x080002db
 8000080:	080002db 	.word	0x080002db
 8000084:	080002db 	.word	0x080002db
 8000088:	080002db 	.word	0x080002db
 800008c:	080002db 	.word	0x080002db
 8000090:	080002db 	.word	0x080002db
 8000094:	080002db 	.word	0x080002db
 8000098:	080002db 	.word	0x080002db
 800009c:	0800bf41 	.word	0x0800bf41
 80000a0:	0800be61 	.word	0x0800be61
 80000a4:	0800be81 	.word	0x0800be81
 80000a8:	0800be71 	.word	0x0800be71
 80000ac:	0800be51 	.word	0x0800be51
 80000b0:	0800bd91 	.word	0x0800bd91
 80000b4:	0800bd51 	.word	0x0800bd51
 80000b8:	080002db 	.word	0x080002db
 80000bc:	080002db 	.word	0x080002db
 80000c0:	080002db 	.word	0x080002db
 80000c4:	080002db 	.word	0x080002db
 80000c8:	080002db 	.word	0x080002db
 80000cc:	080002db 	.word	0x080002db
 80000d0:	080002db 	.word	0x080002db
 80000d4:	080002db 	.word	0x080002db
 80000d8:	080002db 	.word	0x080002db
 80000dc:	0800bd31 	.word	0x0800bd31
 80000e0:	0800bec1 	.word	0x0800bec1
 80000e4:	080002db 	.word	0x080002db
 80000e8:	080002db 	.word	0x080002db
 80000ec:	080002db 	.word	0x080002db
 80000f0:	080002db 	.word	0x080002db
 80000f4:	080002db 	.word	0x080002db
 80000f8:	080002db 	.word	0x080002db
 80000fc:	080002db 	.word	0x080002db
 8000100:	080002db 	.word	0x080002db
 8000104:	080002db 	.word	0x080002db
 8000108:	080002db 	.word	0x080002db
 800010c:	080002db 	.word	0x080002db
 8000110:	080002db 	.word	0x080002db
 8000114:	080002db 	.word	0x080002db
 8000118:	080002db 	.word	0x080002db
 800011c:	080002db 	.word	0x080002db
 8000120:	080002db 	.word	0x080002db
 8000124:	080002db 	.word	0x080002db
 8000128:	080002db 	.word	0x080002db
 800012c:	080002db 	.word	0x080002db
 8000130:	080002db 	.word	0x080002db
 8000134:	080002db 	.word	0x080002db
 8000138:	080002db 	.word	0x080002db
 800013c:	080002db 	.word	0x080002db
 8000140:	080002db 	.word	0x080002db
 8000144:	080002db 	.word	0x080002db
 8000148:	080002db 	.word	0x080002db
 800014c:	080002db 	.word	0x080002db
 8000150:	080002db 	.word	0x080002db
 8000154:	080002db 	.word	0x080002db
 8000158:	0800bd11 	.word	0x0800bd11
 800015c:	080002db 	.word	0x080002db
 8000160:	080002db 	.word	0x080002db
 8000164:	080002db 	.word	0x080002db
 8000168:	080002db 	.word	0x080002db
 800016c:	080002db 	.word	0x080002db
 8000170:	080002db 	.word	0x080002db
 8000174:	080002db 	.word	0x080002db
 8000178:	080002db 	.word	0x080002db
 800017c:	080002db 	.word	0x080002db
 8000180:	080002db 	.word	0x080002db
 8000184:	080002db 	.word	0x080002db
 8000188:	080002db 	.word	0x080002db
 800018c:	080002db 	.word	0x080002db
 8000190:	080002db 	.word	0x080002db
 8000194:	080002db 	.word	0x080002db
 8000198:	080002db 	.word	0x080002db
 800019c:	080002db 	.word	0x080002db
 80001a0:	080002db 	.word	0x080002db
 80001a4:	080002db 	.word	0x080002db
 80001a8:	080002db 	.word	0x080002db
 80001ac:	080002db 	.word	0x080002db
 80001b0:	080002db 	.word	0x080002db
 80001b4:	080002db 	.word	0x080002db
 80001b8:	080002db 	.word	0x080002db
 80001bc:	080002db 	.word	0x080002db

Disassembly of section .text:

08000200 <_crt0_entry>:
                .align  2
                .thumb_func
                .global _crt0_entry
_crt0_entry:
                /* Interrupts are globally masked initially.*/
                cpsid   i
 8000200:	b672      	cpsid	i

#if CRT0_FORCE_MSP_INIT == TRUE
                /* MSP stack pointers initialization.*/
                ldr     r0, =__main_stack_end__
 8000202:	4827      	ldr	r0, [pc, #156]	; (80002a0 <endfiniloop+0x4>)
                msr     MSP, r0
 8000204:	f380 8808 	msr	MSP, r0
#endif

                /* PSP stack pointers initialization.*/
                ldr     r0, =__process_stack_end__
 8000208:	4826      	ldr	r0, [pc, #152]	; (80002a4 <endfiniloop+0x8>)
                msr     PSP, r0
 800020a:	f380 8809 	msr	PSP, r0

#if CRT0_VTOR_INIT == TRUE
                ldr     r0, =_vectors
 800020e:	4826      	ldr	r0, [pc, #152]	; (80002a8 <endfiniloop+0xc>)
                movw    r1, #SCB_VTOR & 0xFFFF
 8000210:	f64e 5108 	movw	r1, #60680	; 0xed08
                movt    r1, #SCB_VTOR >> 16
 8000214:	f2ce 0100 	movt	r1, #57344	; 0xe000
                str     r0, [r1]
 8000218:	6008      	str	r0, [r1, #0]

                /* Enforcing FPCA bit in the CONTROL register.*/
                movs    r0, #CRT0_CONTROL_INIT | CONTROL_FPCA

#else
                movs    r0, #CRT0_CONTROL_INIT
 800021a:	2002      	movs	r0, #2
#endif

                /* CONTROL register initialization as configured.*/
                msr     CONTROL, r0
 800021c:	f380 8814 	msr	CONTROL, r0
                isb
 8000220:	f3bf 8f6f 	isb	sy

#if CRT0_INIT_CORE == TRUE
                /* Core initialization.*/
                bl      __core_init
 8000224:	f00b ff84 	bl	800c130 <__core_init>
#endif

                /* Early initialization.*/
                bl      __early_init
 8000228:	f00b fc42 	bl	800bab0 <__early_init>

#if CRT0_INIT_STACKS == TRUE
                ldr     r0, =CRT0_STACKS_FILL_PATTERN
 800022c:	f04f 3055 	mov.w	r0, #1431655765	; 0x55555555
                /* Main Stack initialization. Note, it assumes that the
                   stack size is a multiple of 4 so the linker file must
                   ensure this.*/
                ldr     r1, =__main_stack_base__
 8000230:	491e      	ldr	r1, [pc, #120]	; (80002ac <endfiniloop+0x10>)
                ldr     r2, =__main_stack_end__
 8000232:	4a1b      	ldr	r2, [pc, #108]	; (80002a0 <endfiniloop+0x4>)

08000234 <msloop>:
msloop:
                cmp     r1, r2
 8000234:	4291      	cmp	r1, r2
                itt     lo
 8000236:	bf3c      	itt	cc
                strlo   r0, [r1], #4
 8000238:	f841 0b04 	strcc.w	r0, [r1], #4
                blo     msloop
 800023c:	e7fa      	bcc.n	8000234 <msloop>

                /* Process Stack initialization. Note, it assumes that the
                   stack size is a multiple of 4 so the linker file must
                   ensure this.*/
                ldr     r1, =__process_stack_base__
 800023e:	491c      	ldr	r1, [pc, #112]	; (80002b0 <endfiniloop+0x14>)
                ldr     r2, =__process_stack_end__
 8000240:	4a18      	ldr	r2, [pc, #96]	; (80002a4 <endfiniloop+0x8>)

08000242 <psloop>:
psloop:
                cmp     r1, r2
 8000242:	4291      	cmp	r1, r2
                itt     lo
 8000244:	bf3c      	itt	cc
                strlo   r0, [r1], #4
 8000246:	f841 0b04 	strcc.w	r0, [r1], #4
                blo     psloop
 800024a:	e7fa      	bcc.n	8000242 <psloop>
#endif

#if CRT0_INIT_DATA == TRUE
                /* Data initialization. Note, it assumes that the DATA size
                  is a multiple of 4 so the linker file must ensure this.*/
                ldr     r1, =_textdata_start
 800024c:	4919      	ldr	r1, [pc, #100]	; (80002b4 <endfiniloop+0x18>)
                ldr     r2, =_data_start
 800024e:	4a1a      	ldr	r2, [pc, #104]	; (80002b8 <endfiniloop+0x1c>)
                ldr     r3, =_data_end
 8000250:	4b1a      	ldr	r3, [pc, #104]	; (80002bc <endfiniloop+0x20>)

08000252 <dloop>:
dloop:
                cmp     r2, r3
 8000252:	429a      	cmp	r2, r3
                ittt    lo
 8000254:	bf3e      	ittt	cc
                ldrlo   r0, [r1], #4
 8000256:	f851 0b04 	ldrcc.w	r0, [r1], #4
                strlo   r0, [r2], #4
 800025a:	f842 0b04 	strcc.w	r0, [r2], #4
                blo     dloop
 800025e:	e7f8      	bcc.n	8000252 <dloop>
#endif

#if CRT0_INIT_BSS == TRUE
                /* BSS initialization. Note, it assumes that the DATA size
                  is a multiple of 4 so the linker file must ensure this.*/
                movs    r0, #0
 8000260:	2000      	movs	r0, #0
                ldr     r1, =_bss_start
 8000262:	4917      	ldr	r1, [pc, #92]	; (80002c0 <endfiniloop+0x24>)
                ldr     r2, =_bss_end
 8000264:	4a17      	ldr	r2, [pc, #92]	; (80002c4 <endfiniloop+0x28>)

08000266 <bloop>:
bloop:
                cmp     r1, r2
 8000266:	4291      	cmp	r1, r2
                itt     lo
 8000268:	bf3c      	itt	cc
                strlo   r0, [r1], #4
 800026a:	f841 0b04 	strcc.w	r0, [r1], #4
                blo     bloop
 800026e:	e7fa      	bcc.n	8000266 <bloop>
#endif

#if CRT0_INIT_RAM_AREAS == TRUE
                /* RAM areas initialization.*/
                bl      __init_ram_areas
 8000270:	f00b ff16 	bl	800c0a0 <__init_ram_areas>
#endif

                /* Late initialization..*/
                bl      __late_init
 8000274:	f00b ff54 	bl	800c120 <__late_init>

#if CRT0_CALL_CONSTRUCTORS == TRUE
                /* Constructors invocation.*/
                ldr     r4, =__init_array_start
 8000278:	4c13      	ldr	r4, [pc, #76]	; (80002c8 <endfiniloop+0x2c>)
                ldr     r5, =__init_array_end
 800027a:	4d14      	ldr	r5, [pc, #80]	; (80002cc <endfiniloop+0x30>)

0800027c <initloop>:
initloop:
                cmp     r4, r5
 800027c:	42ac      	cmp	r4, r5
                bge     endinitloop
 800027e:	da03      	bge.n	8000288 <endinitloop>
                ldr     r1, [r4], #4
 8000280:	f854 1b04 	ldr.w	r1, [r4], #4
                blx     r1
 8000284:	4788      	blx	r1
                b       initloop
 8000286:	e7f9      	b.n	800027c <initloop>

08000288 <endinitloop>:
endinitloop:
#endif

                /* Main program invocation, r0 contains the returned value.*/
                bl      main
 8000288:	f00a faaa 	bl	800a7e0 <main>

#if CRT0_CALL_DESTRUCTORS == TRUE
                /* Destructors invocation.*/
                ldr     r4, =__fini_array_start
 800028c:	4c10      	ldr	r4, [pc, #64]	; (80002d0 <endfiniloop+0x34>)
                ldr     r5, =__fini_array_end
 800028e:	4d11      	ldr	r5, [pc, #68]	; (80002d4 <endfiniloop+0x38>)

08000290 <finiloop>:
finiloop:
                cmp     r4, r5
 8000290:	42ac      	cmp	r4, r5
                bge     endfiniloop
 8000292:	da03      	bge.n	800029c <endfiniloop>
                ldr     r1, [r4], #4
 8000294:	f854 1b04 	ldr.w	r1, [r4], #4
                blx     r1
 8000298:	4788      	blx	r1
                b       finiloop
 800029a:	e7f9      	b.n	8000290 <finiloop>

0800029c <endfiniloop>:
endfiniloop:
#endif

                /* Branching to the defined exit handler.*/
                b       __default_exit
 800029c:	f00b bf38 	b.w	800c110 <__default_exit>
                ldr     r0, =__main_stack_end__
 80002a0:	20000400 	.word	0x20000400
                ldr     r0, =__process_stack_end__
 80002a4:	20000800 	.word	0x20000800
                ldr     r0, =_vectors
 80002a8:	08000000 	.word	0x08000000
                ldr     r1, =__main_stack_base__
 80002ac:	20000000 	.word	0x20000000
                ldr     r1, =__process_stack_base__
 80002b0:	20000400 	.word	0x20000400
                ldr     r1, =_textdata_start
 80002b4:	08013aa4 	.word	0x08013aa4
                ldr     r2, =_data_start
 80002b8:	20000800 	.word	0x20000800
                ldr     r3, =_data_end
 80002bc:	200011b8 	.word	0x200011b8
                ldr     r1, =_bss_start
 80002c0:	200011b8 	.word	0x200011b8
                ldr     r2, =_bss_end
 80002c4:	200026d8 	.word	0x200026d8
                ldr     r4, =__init_array_start
 80002c8:	080001c0 	.word	0x080001c0
                ldr     r5, =__init_array_end
 80002cc:	080001cc 	.word	0x080001cc
                ldr     r4, =__fini_array_start
 80002d0:	080001cc 	.word	0x080001cc
                ldr     r5, =__fini_array_end
 80002d4:	080001cc 	.word	0x080001cc

080002d8 <Reset_Handler>:

        .align      2
        .thumb_func
        .weak       Reset_Handler
Reset_Handler:
         b          _crt0_entry
 80002d8:	e792      	b.n	8000200 <_crt0_entry>

080002da <BusFault_Handler>:
        .thumb_func
Vector3F8:
        .thumb_func
Vector3FC:
#endif
        bl          _unhandled_exception
 80002da:	f000 f800 	bl	80002de <_unhandled_exception>

080002de <_unhandled_exception>:

        .thumb_func
        .weak       _unhandled_exception
_unhandled_exception:
.stay:
        b           .stay
 80002de:	e7fe      	b.n	80002de <_unhandled_exception>

080002e0 <_port_switch>:
 * Performs a context switch between two threads.
 *--------------------------------------------------------------------------*/
                .thumb_func
                .globl  _port_switch
_port_switch:
                push    {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80002e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
#if CORTEX_USE_FPU
                vpush   {s16-s31}
#endif

                str     sp, [r1, #CONTEXT_OFFSET]
 80002e4:	f8c1 d00c 	str.w	sp, [r1, #12]
#if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) &&                                \
    ((CORTEX_MODEL == 3) || (CORTEX_MODEL == 4))
                /* Workaround for ARM errata 752419, only applied if
                   condition exists for it to be triggered.*/
                ldr     r3, [r0, #CONTEXT_OFFSET]
 80002e8:	68c3      	ldr	r3, [r0, #12]
                mov     sp, r3
 80002ea:	469d      	mov	sp, r3
#endif

#if CORTEX_USE_FPU
                vpop    {s16-s31}
#endif
                pop     {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80002ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080002f0 <_port_thread_start>:
                bl      _stats_stop_measure_crit_thd
#endif
#if CORTEX_SIMPLIFIED_PRIORITY
                cpsie   i
#else
                movs    r3, #0              /* CORTEX_BASEPRI_DISABLED */
 80002f0:	2300      	movs	r3, #0
                msr     BASEPRI, r3
 80002f2:	f383 8811 	msr	BASEPRI, r3
#endif
                mov     r0, r5
 80002f6:	4628      	mov	r0, r5
                blx     r4
 80002f8:	47a0      	blx	r4
#if defined(_CHIBIOS_RT_CONF_)
                movs    r0, #0              /* MSG_OK */
 80002fa:	2000      	movs	r0, #0
                bl      chThdExit
 80002fc:	f00a fa28 	bl	800a750 <chThdExit>

08000300 <_port_switch_from_isr>:
                bl      _stats_start_measure_crit_thd
#endif
#if CH_DBG_SYSTEM_STATE_CHECK
                bl      _dbg_check_lock
#endif
                bl      chSchDoReschedule
 8000300:	f00a fa56 	bl	800a7b0 <chSchDoReschedule>

08000304 <_port_exit_from_isr>:
                movt    r3, #:upper16:SCB_ICSR
                mov     r2, ICSR_PENDSVSET
                str     r2, [r3, #0]
                cpsie   i
#else /* !CORTEX_SIMPLIFIED_PRIORITY */
                svc     #0
 8000304:	df00      	svc	0
#endif /* !CORTEX_SIMPLIFIED_PRIORITY */
.L1:            b       .L1
 8000306:	e7fe      	b.n	8000306 <_port_exit_from_isr+0x2>

08000308 <d_make_comp>:
 8000308:	b4f0      	push	{r4, r5, r6, r7}
 800030a:	1e4c      	subs	r4, r1, #1
 800030c:	4605      	mov	r5, r0
 800030e:	2c4e      	cmp	r4, #78	; 0x4e
 8000310:	d83f      	bhi.n	8000392 <d_make_comp+0x8a>
 8000312:	e8df f004 	tbb	[pc, r4]
 8000316:	2828      	.short	0x2828
 8000318:	3e3e2828 	.word	0x3e3e2828
 800031c:	3c3c3e3e 	.word	0x3c3c3e3e
 8000320:	3c3c3c28 	.word	0x3c3c3c28
 8000324:	3c3c3c3c 	.word	0x3c3c3c3c
 8000328:	3c3c3c3c 	.word	0x3c3c3c3c
 800032c:	2a2a3e3c 	.word	0x2a2a3e3c
 8000330:	2a2a2a2a 	.word	0x2a2a2a2a
 8000334:	3c282a2a 	.word	0x3c282a2a
 8000338:	3c3c3c3c 	.word	0x3c3c3c3c
 800033c:	292a3c3e 	.word	0x292a3c3e
 8000340:	2a283e28 	.word	0x2a283e28
 8000344:	3e3e292a 	.word	0x3e3e292a
 8000348:	283c3c3c 	.word	0x283c3c3c
 800034c:	28282828 	.word	0x28282828
 8000350:	3c28283c 	.word	0x3c28283c
 8000354:	3c3e3e28 	.word	0x3c3e3e28
 8000358:	3e3e3c3c 	.word	0x3e3e3c3c
 800035c:	3c3c3c3e 	.word	0x3c3c3c3e
 8000360:	2a282a28 	.word	0x2a282a28
 8000364:	2a          	.byte	0x2a
 8000365:	00          	.byte	0x00
 8000366:	b1a2      	cbz	r2, 8000392 <d_make_comp+0x8a>
 8000368:	b19b      	cbz	r3, 8000392 <d_make_comp+0x8a>
 800036a:	e9d5 4005 	ldrd	r4, r0, [r5, #20]
 800036e:	4284      	cmp	r4, r0
 8000370:	da0f      	bge.n	8000392 <d_make_comp+0x8a>
 8000372:	692f      	ldr	r7, [r5, #16]
 8000374:	0126      	lsls	r6, r4, #4
 8000376:	19b8      	adds	r0, r7, r6
 8000378:	3401      	adds	r4, #1
 800037a:	f04f 0c00 	mov.w	ip, #0
 800037e:	f8c0 c004 	str.w	ip, [r0, #4]
 8000382:	616c      	str	r4, [r5, #20]
 8000384:	55b9      	strb	r1, [r7, r6]
 8000386:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800038a:	bcf0      	pop	{r4, r5, r6, r7}
 800038c:	4770      	bx	lr
 800038e:	2a00      	cmp	r2, #0
 8000390:	d1eb      	bne.n	800036a <d_make_comp+0x62>
 8000392:	2000      	movs	r0, #0
 8000394:	bcf0      	pop	{r4, r5, r6, r7}
 8000396:	4770      	bx	lr

08000398 <d_ref_qualifier>:
 8000398:	b410      	push	{r4}
 800039a:	68c3      	ldr	r3, [r0, #12]
 800039c:	781c      	ldrb	r4, [r3, #0]
 800039e:	2c52      	cmp	r4, #82	; 0x52
 80003a0:	460a      	mov	r2, r1
 80003a2:	d00d      	beq.n	80003c0 <d_ref_qualifier+0x28>
 80003a4:	2c4f      	cmp	r4, #79	; 0x4f
 80003a6:	d002      	beq.n	80003ae <d_ref_qualifier+0x16>
 80003a8:	4608      	mov	r0, r1
 80003aa:	bc10      	pop	{r4}
 80003ac:	4770      	bx	lr
 80003ae:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80003b0:	3103      	adds	r1, #3
 80003b2:	62c1      	str	r1, [r0, #44]	; 0x2c
 80003b4:	2120      	movs	r1, #32
 80003b6:	3301      	adds	r3, #1
 80003b8:	60c3      	str	r3, [r0, #12]
 80003ba:	bc10      	pop	{r4}
 80003bc:	2300      	movs	r3, #0
 80003be:	e7a3      	b.n	8000308 <d_make_comp>
 80003c0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80003c2:	3102      	adds	r1, #2
 80003c4:	62c1      	str	r1, [r0, #44]	; 0x2c
 80003c6:	211f      	movs	r1, #31
 80003c8:	e7f5      	b.n	80003b6 <d_ref_qualifier+0x1e>
 80003ca:	bf00      	nop

080003cc <d_count_templates_scopes>:
 80003cc:	2a00      	cmp	r2, #0
 80003ce:	d04e      	beq.n	800046e <d_count_templates_scopes+0xa2>
 80003d0:	b570      	push	{r4, r5, r6, lr}
 80003d2:	4605      	mov	r5, r0
 80003d4:	460e      	mov	r6, r1
 80003d6:	4614      	mov	r4, r2
 80003d8:	7823      	ldrb	r3, [r4, #0]
 80003da:	3b01      	subs	r3, #1
 80003dc:	2b4e      	cmp	r3, #78	; 0x4e
 80003de:	d82c      	bhi.n	800043a <d_count_templates_scopes+0x6e>
 80003e0:	e8df f003 	tbb	[pc, r3]
 80003e4:	40373737 	.word	0x40373737
 80003e8:	28282b2b 	.word	0x28282b2b
 80003ec:	37373737 	.word	0x37373737
 80003f0:	37373737 	.word	0x37373737
 80003f4:	37373737 	.word	0x37373737
 80003f8:	2b373737 	.word	0x2b373737
 80003fc:	37373737 	.word	0x37373737
 8000400:	37373737 	.word	0x37373737
 8000404:	30303737 	.word	0x30303737
 8000408:	372b3737 	.word	0x372b3737
 800040c:	2c373737 	.word	0x2c373737
 8000410:	37373737 	.word	0x37373737
 8000414:	3737282b 	.word	0x3737282b
 8000418:	37373737 	.word	0x37373737
 800041c:	37373737 	.word	0x37373737
 8000420:	2b373737 	.word	0x2b373737
 8000424:	2c2c372b 	.word	0x2c2c372b
 8000428:	372b2c2c 	.word	0x372b2c2c
 800042c:	37373737 	.word	0x37373737
 8000430:	3737      	.short	0x3737
 8000432:	37          	.byte	0x37
 8000433:	00          	.byte	0x00
 8000434:	68e4      	ldr	r4, [r4, #12]
 8000436:	2c00      	cmp	r4, #0
 8000438:	d1ce      	bne.n	80003d8 <d_count_templates_scopes+0xc>
 800043a:	bd70      	pop	{r4, r5, r6, pc}
 800043c:	68a4      	ldr	r4, [r4, #8]
 800043e:	2c00      	cmp	r4, #0
 8000440:	d1ca      	bne.n	80003d8 <d_count_templates_scopes+0xc>
 8000442:	e7fa      	b.n	800043a <d_count_templates_scopes+0x6e>
 8000444:	68a2      	ldr	r2, [r4, #8]
 8000446:	7813      	ldrb	r3, [r2, #0]
 8000448:	2b05      	cmp	r3, #5
 800044a:	d103      	bne.n	8000454 <d_count_templates_scopes+0x88>
 800044c:	6833      	ldr	r3, [r6, #0]
 800044e:	3301      	adds	r3, #1
 8000450:	6033      	str	r3, [r6, #0]
 8000452:	68a2      	ldr	r2, [r4, #8]
 8000454:	4631      	mov	r1, r6
 8000456:	4628      	mov	r0, r5
 8000458:	f7ff ffb8 	bl	80003cc <d_count_templates_scopes>
 800045c:	68e4      	ldr	r4, [r4, #12]
 800045e:	2c00      	cmp	r4, #0
 8000460:	d1ba      	bne.n	80003d8 <d_count_templates_scopes+0xc>
 8000462:	e7ea      	b.n	800043a <d_count_templates_scopes+0x6e>
 8000464:	682b      	ldr	r3, [r5, #0]
 8000466:	3301      	adds	r3, #1
 8000468:	602b      	str	r3, [r5, #0]
 800046a:	68a2      	ldr	r2, [r4, #8]
 800046c:	e7f2      	b.n	8000454 <d_count_templates_scopes+0x88>
 800046e:	4770      	bx	lr

08000470 <d_append_buffer>:
 8000470:	b37a      	cbz	r2, 80004d2 <d_append_buffer+0x62>
 8000472:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000476:	460d      	mov	r5, r1
 8000478:	188f      	adds	r7, r1, r2
 800047a:	4604      	mov	r4, r0
 800047c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8000480:	3f01      	subs	r7, #1
 8000482:	3d01      	subs	r5, #1
 8000484:	f04f 0800 	mov.w	r8, #0
 8000488:	e009      	b.n	800049e <d_append_buffer+0x2e>
 800048a:	460b      	mov	r3, r1
 800048c:	42bd      	cmp	r5, r7
 800048e:	f101 0101 	add.w	r1, r1, #1
 8000492:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000496:	54e6      	strb	r6, [r4, r3]
 8000498:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800049c:	d017      	beq.n	80004ce <d_append_buffer+0x5e>
 800049e:	29ff      	cmp	r1, #255	; 0xff
 80004a0:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 80004a4:	d1f1      	bne.n	800048a <d_append_buffer+0x1a>
 80004a6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80004aa:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80004ae:	4620      	mov	r0, r4
 80004b0:	4798      	blx	r3
 80004b2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80004b6:	3301      	adds	r3, #1
 80004b8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80004bc:	2300      	movs	r3, #0
 80004be:	2101      	movs	r1, #1
 80004c0:	42bd      	cmp	r5, r7
 80004c2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80004c6:	54e6      	strb	r6, [r4, r3]
 80004c8:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80004cc:	d1e7      	bne.n	800049e <d_append_buffer+0x2e>
 80004ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80004d2:	4770      	bx	lr

080004d4 <d_number.isra.0>:
 80004d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80004d8:	6801      	ldr	r1, [r0, #0]
 80004da:	780e      	ldrb	r6, [r1, #0]
 80004dc:	2e6e      	cmp	r6, #110	; 0x6e
 80004de:	d02e      	beq.n	800053e <d_number.isra.0+0x6a>
 80004e0:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 80004e4:	2b09      	cmp	r3, #9
 80004e6:	d835      	bhi.n	8000554 <d_number.isra.0+0x80>
 80004e8:	f04f 0e00 	mov.w	lr, #0
 80004ec:	2300      	movs	r3, #0
 80004ee:	f06f 4800 	mvn.w	r8, #2147483648	; 0x80000000
 80004f2:	f8df c064 	ldr.w	ip, [pc, #100]	; 8000558 <d_number.isra.0+0x84>
 80004f6:	e002      	b.n	80004fe <d_number.isra.0+0x2a>
 80004f8:	ebb3 0fd4 	cmp.w	r3, r4, lsr #3
 80004fc:	dc1a      	bgt.n	8000534 <d_number.isra.0+0x60>
 80004fe:	3101      	adds	r1, #1
 8000500:	6001      	str	r1, [r0, #0]
 8000502:	780d      	ldrb	r5, [r1, #0]
 8000504:	f1a5 0230 	sub.w	r2, r5, #48	; 0x30
 8000508:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800050c:	eba8 0402 	sub.w	r4, r8, r2
 8000510:	b2d2      	uxtb	r2, r2
 8000512:	eb06 0743 	add.w	r7, r6, r3, lsl #1
 8000516:	2a09      	cmp	r2, #9
 8000518:	fbac 3404 	umull	r3, r4, ip, r4
 800051c:	462e      	mov	r6, r5
 800051e:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 8000522:	d9e9      	bls.n	80004f8 <d_number.isra.0+0x24>
 8000524:	f1be 0f00 	cmp.w	lr, #0
 8000528:	d001      	beq.n	800052e <d_number.isra.0+0x5a>
 800052a:	f1c7 0330 	rsb	r3, r7, #48	; 0x30
 800052e:	4618      	mov	r0, r3
 8000530:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000534:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000538:	4618      	mov	r0, r3
 800053a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800053e:	1c4b      	adds	r3, r1, #1
 8000540:	6003      	str	r3, [r0, #0]
 8000542:	784e      	ldrb	r6, [r1, #1]
 8000544:	f1a6 0230 	sub.w	r2, r6, #48	; 0x30
 8000548:	2a09      	cmp	r2, #9
 800054a:	d803      	bhi.n	8000554 <d_number.isra.0+0x80>
 800054c:	4619      	mov	r1, r3
 800054e:	f04f 0e01 	mov.w	lr, #1
 8000552:	e7cb      	b.n	80004ec <d_number.isra.0+0x18>
 8000554:	2300      	movs	r3, #0
 8000556:	e7ea      	b.n	800052e <d_number.isra.0+0x5a>
 8000558:	cccccccd 	.word	0xcccccccd

0800055c <d_number_component>:
 800055c:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8000560:	4293      	cmp	r3, r2
 8000562:	b570      	push	{r4, r5, r6, lr}
 8000564:	da0e      	bge.n	8000584 <d_number_component+0x28>
 8000566:	6901      	ldr	r1, [r0, #16]
 8000568:	011a      	lsls	r2, r3, #4
 800056a:	188c      	adds	r4, r1, r2
 800056c:	3301      	adds	r3, #1
 800056e:	2600      	movs	r6, #0
 8000570:	2541      	movs	r5, #65	; 0x41
 8000572:	6066      	str	r6, [r4, #4]
 8000574:	300c      	adds	r0, #12
 8000576:	6083      	str	r3, [r0, #8]
 8000578:	548d      	strb	r5, [r1, r2]
 800057a:	f7ff ffab 	bl	80004d4 <d_number.isra.0>
 800057e:	60a0      	str	r0, [r4, #8]
 8000580:	4620      	mov	r0, r4
 8000582:	bd70      	pop	{r4, r5, r6, pc}
 8000584:	2400      	movs	r4, #0
 8000586:	4620      	mov	r0, r4
 8000588:	bd70      	pop	{r4, r5, r6, pc}
 800058a:	bf00      	nop

0800058c <d_compact_number>:
 800058c:	b510      	push	{r4, lr}
 800058e:	68c3      	ldr	r3, [r0, #12]
 8000590:	781a      	ldrb	r2, [r3, #0]
 8000592:	2a5f      	cmp	r2, #95	; 0x5f
 8000594:	4604      	mov	r4, r0
 8000596:	d00d      	beq.n	80005b4 <d_compact_number+0x28>
 8000598:	2a6e      	cmp	r2, #110	; 0x6e
 800059a:	d00d      	beq.n	80005b8 <d_compact_number+0x2c>
 800059c:	300c      	adds	r0, #12
 800059e:	f7ff ff99 	bl	80004d4 <d_number.isra.0>
 80005a2:	3001      	adds	r0, #1
 80005a4:	d408      	bmi.n	80005b8 <d_compact_number+0x2c>
 80005a6:	68e3      	ldr	r3, [r4, #12]
 80005a8:	781a      	ldrb	r2, [r3, #0]
 80005aa:	2a5f      	cmp	r2, #95	; 0x5f
 80005ac:	d104      	bne.n	80005b8 <d_compact_number+0x2c>
 80005ae:	3301      	adds	r3, #1
 80005b0:	60e3      	str	r3, [r4, #12]
 80005b2:	bd10      	pop	{r4, pc}
 80005b4:	2000      	movs	r0, #0
 80005b6:	e7fa      	b.n	80005ae <d_compact_number+0x22>
 80005b8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80005bc:	bd10      	pop	{r4, pc}
 80005be:	bf00      	nop

080005c0 <d_template_param>:
 80005c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005c2:	68c3      	ldr	r3, [r0, #12]
 80005c4:	781a      	ldrb	r2, [r3, #0]
 80005c6:	2a54      	cmp	r2, #84	; 0x54
 80005c8:	d115      	bne.n	80005f6 <d_template_param+0x36>
 80005ca:	3301      	adds	r3, #1
 80005cc:	60c3      	str	r3, [r0, #12]
 80005ce:	4604      	mov	r4, r0
 80005d0:	f7ff ffdc 	bl	800058c <d_compact_number>
 80005d4:	1e05      	subs	r5, r0, #0
 80005d6:	db0e      	blt.n	80005f6 <d_template_param+0x36>
 80005d8:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 80005dc:	4293      	cmp	r3, r2
 80005de:	da0a      	bge.n	80005f6 <d_template_param+0x36>
 80005e0:	6921      	ldr	r1, [r4, #16]
 80005e2:	011a      	lsls	r2, r3, #4
 80005e4:	1888      	adds	r0, r1, r2
 80005e6:	3301      	adds	r3, #1
 80005e8:	2700      	movs	r7, #0
 80005ea:	2605      	movs	r6, #5
 80005ec:	6047      	str	r7, [r0, #4]
 80005ee:	6163      	str	r3, [r4, #20]
 80005f0:	548e      	strb	r6, [r1, r2]
 80005f2:	6085      	str	r5, [r0, #8]
 80005f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005f6:	2000      	movs	r0, #0
 80005f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005fa:	bf00      	nop

080005fc <d_source_name>:
 80005fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000600:	4604      	mov	r4, r0
 8000602:	300c      	adds	r0, #12
 8000604:	f7ff ff66 	bl	80004d4 <d_number.isra.0>
 8000608:	1e05      	subs	r5, r0, #0
 800060a:	dd3d      	ble.n	8000688 <d_source_name+0x8c>
 800060c:	68e6      	ldr	r6, [r4, #12]
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	1b9b      	subs	r3, r3, r6
 8000612:	429d      	cmp	r5, r3
 8000614:	dc36      	bgt.n	8000684 <d_source_name+0x88>
 8000616:	68a2      	ldr	r2, [r4, #8]
 8000618:	1973      	adds	r3, r6, r5
 800061a:	0752      	lsls	r2, r2, #29
 800061c:	60e3      	str	r3, [r4, #12]
 800061e:	d504      	bpl.n	800062a <d_source_name+0x2e>
 8000620:	5d72      	ldrb	r2, [r6, r5]
 8000622:	2a24      	cmp	r2, #36	; 0x24
 8000624:	bf04      	itt	eq
 8000626:	3301      	addeq	r3, #1
 8000628:	60e3      	streq	r3, [r4, #12]
 800062a:	2d09      	cmp	r5, #9
 800062c:	e9d4 7805 	ldrd	r7, r8, [r4, #20]
 8000630:	dc11      	bgt.n	8000656 <d_source_name+0x5a>
 8000632:	45b8      	cmp	r8, r7
 8000634:	dd26      	ble.n	8000684 <d_source_name+0x88>
 8000636:	6920      	ldr	r0, [r4, #16]
 8000638:	eb00 1007 	add.w	r0, r0, r7, lsl #4
 800063c:	2200      	movs	r2, #0
 800063e:	3701      	adds	r7, #1
 8000640:	6042      	str	r2, [r0, #4]
 8000642:	6167      	str	r7, [r4, #20]
 8000644:	b1f6      	cbz	r6, 8000684 <d_source_name+0x88>
 8000646:	e9c0 6502 	strd	r6, r5, [r0, #8]
 800064a:	2300      	movs	r3, #0
 800064c:	6043      	str	r3, [r0, #4]
 800064e:	7003      	strb	r3, [r0, #0]
 8000650:	62a0      	str	r0, [r4, #40]	; 0x28
 8000652:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000656:	2208      	movs	r2, #8
 8000658:	4918      	ldr	r1, [pc, #96]	; (80006bc <d_source_name+0xc0>)
 800065a:	4630      	mov	r0, r6
 800065c:	f00d fb0c 	bl	800dc78 <memcmp>
 8000660:	b930      	cbnz	r0, 8000670 <d_source_name+0x74>
 8000662:	7a32      	ldrb	r2, [r6, #8]
 8000664:	2a2e      	cmp	r2, #46	; 0x2e
 8000666:	d012      	beq.n	800068e <d_source_name+0x92>
 8000668:	2a5f      	cmp	r2, #95	; 0x5f
 800066a:	d010      	beq.n	800068e <d_source_name+0x92>
 800066c:	2a24      	cmp	r2, #36	; 0x24
 800066e:	d00e      	beq.n	800068e <d_source_name+0x92>
 8000670:	45b8      	cmp	r8, r7
 8000672:	dd07      	ble.n	8000684 <d_source_name+0x88>
 8000674:	6920      	ldr	r0, [r4, #16]
 8000676:	eb00 1007 	add.w	r0, r0, r7, lsl #4
 800067a:	2200      	movs	r2, #0
 800067c:	3701      	adds	r7, #1
 800067e:	6042      	str	r2, [r0, #4]
 8000680:	6167      	str	r7, [r4, #20]
 8000682:	e7e0      	b.n	8000646 <d_source_name+0x4a>
 8000684:	2000      	movs	r0, #0
 8000686:	e7e3      	b.n	8000650 <d_source_name+0x54>
 8000688:	2000      	movs	r0, #0
 800068a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800068e:	7a73      	ldrb	r3, [r6, #9]
 8000690:	2b4e      	cmp	r3, #78	; 0x4e
 8000692:	d1ed      	bne.n	8000670 <d_source_name+0x74>
 8000694:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000696:	3316      	adds	r3, #22
 8000698:	1b5d      	subs	r5, r3, r5
 800069a:	45b8      	cmp	r8, r7
 800069c:	62e5      	str	r5, [r4, #44]	; 0x2c
 800069e:	ddf1      	ble.n	8000684 <d_source_name+0x88>
 80006a0:	6921      	ldr	r1, [r4, #16]
 80006a2:	4d07      	ldr	r5, [pc, #28]	; (80006c0 <d_source_name+0xc4>)
 80006a4:	013a      	lsls	r2, r7, #4
 80006a6:	1888      	adds	r0, r1, r2
 80006a8:	2300      	movs	r3, #0
 80006aa:	3701      	adds	r7, #1
 80006ac:	6167      	str	r7, [r4, #20]
 80006ae:	6043      	str	r3, [r0, #4]
 80006b0:	548b      	strb	r3, [r1, r2]
 80006b2:	2315      	movs	r3, #21
 80006b4:	e9c0 5302 	strd	r5, r3, [r0, #8]
 80006b8:	e7ca      	b.n	8000650 <d_source_name+0x54>
 80006ba:	bf00      	nop
 80006bc:	08012c60 	.word	0x08012c60
 80006c0:	08012c6c 	.word	0x08012c6c

080006c4 <d_abi_tags>:
 80006c4:	b570      	push	{r4, r5, r6, lr}
 80006c6:	68c3      	ldr	r3, [r0, #12]
 80006c8:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80006ca:	781a      	ldrb	r2, [r3, #0]
 80006cc:	2a42      	cmp	r2, #66	; 0x42
 80006ce:	4604      	mov	r4, r0
 80006d0:	460d      	mov	r5, r1
 80006d2:	d10f      	bne.n	80006f4 <d_abi_tags+0x30>
 80006d4:	3301      	adds	r3, #1
 80006d6:	60e3      	str	r3, [r4, #12]
 80006d8:	4620      	mov	r0, r4
 80006da:	f7ff ff8f 	bl	80005fc <d_source_name>
 80006de:	462a      	mov	r2, r5
 80006e0:	4603      	mov	r3, r0
 80006e2:	214b      	movs	r1, #75	; 0x4b
 80006e4:	4620      	mov	r0, r4
 80006e6:	f7ff fe0f 	bl	8000308 <d_make_comp>
 80006ea:	68e3      	ldr	r3, [r4, #12]
 80006ec:	781a      	ldrb	r2, [r3, #0]
 80006ee:	2a42      	cmp	r2, #66	; 0x42
 80006f0:	4605      	mov	r5, r0
 80006f2:	d0ef      	beq.n	80006d4 <d_abi_tags+0x10>
 80006f4:	62a6      	str	r6, [r4, #40]	; 0x28
 80006f6:	4628      	mov	r0, r5
 80006f8:	bd70      	pop	{r4, r5, r6, pc}
 80006fa:	bf00      	nop

080006fc <d_substitution>:
 80006fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000700:	68c3      	ldr	r3, [r0, #12]
 8000702:	781a      	ldrb	r2, [r3, #0]
 8000704:	2a53      	cmp	r2, #83	; 0x53
 8000706:	d130      	bne.n	800076a <d_substitution+0x6e>
 8000708:	1c5a      	adds	r2, r3, #1
 800070a:	60c2      	str	r2, [r0, #12]
 800070c:	785a      	ldrb	r2, [r3, #1]
 800070e:	4605      	mov	r5, r0
 8000710:	b392      	cbz	r2, 8000778 <d_substitution+0x7c>
 8000712:	1c9a      	adds	r2, r3, #2
 8000714:	60c2      	str	r2, [r0, #12]
 8000716:	785a      	ldrb	r2, [r3, #1]
 8000718:	2a5f      	cmp	r2, #95	; 0x5f
 800071a:	d042      	beq.n	80007a2 <d_substitution+0xa6>
 800071c:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 8000720:	b2e3      	uxtb	r3, r4
 8000722:	2b09      	cmp	r3, #9
 8000724:	d824      	bhi.n	8000770 <d_substitution+0x74>
 8000726:	2100      	movs	r1, #0
 8000728:	e00d      	b.n	8000746 <d_substitution+0x4a>
 800072a:	3b30      	subs	r3, #48	; 0x30
 800072c:	4299      	cmp	r1, r3
 800072e:	d81c      	bhi.n	800076a <d_substitution+0x6e>
 8000730:	68e9      	ldr	r1, [r5, #12]
 8000732:	780a      	ldrb	r2, [r1, #0]
 8000734:	1c48      	adds	r0, r1, #1
 8000736:	b11a      	cbz	r2, 8000740 <d_substitution+0x44>
 8000738:	60e8      	str	r0, [r5, #12]
 800073a:	780a      	ldrb	r2, [r1, #0]
 800073c:	2a5f      	cmp	r2, #95	; 0x5f
 800073e:	d039      	beq.n	80007b4 <d_substitution+0xb8>
 8000740:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 8000744:	4619      	mov	r1, r3
 8000746:	b2e4      	uxtb	r4, r4
 8000748:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 800074c:	2c09      	cmp	r4, #9
 800074e:	f1a2 0041 	sub.w	r0, r2, #65	; 0x41
 8000752:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8000756:	d9e8      	bls.n	800072a <d_substitution+0x2e>
 8000758:	2819      	cmp	r0, #25
 800075a:	d806      	bhi.n	800076a <d_substitution+0x6e>
 800075c:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 8000760:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8000764:	3b37      	subs	r3, #55	; 0x37
 8000766:	4299      	cmp	r1, r3
 8000768:	d9e2      	bls.n	8000730 <d_substitution+0x34>
 800076a:	2000      	movs	r0, #0
 800076c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000770:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 8000774:	2b19      	cmp	r3, #25
 8000776:	d9d6      	bls.n	8000726 <d_substitution+0x2a>
 8000778:	68ab      	ldr	r3, [r5, #8]
 800077a:	f003 0308 	and.w	r3, r3, #8
 800077e:	2b00      	cmp	r3, #0
 8000780:	bf14      	ite	ne
 8000782:	2401      	movne	r4, #1
 8000784:	2400      	moveq	r4, #0
 8000786:	d100      	bne.n	800078a <d_substitution+0x8e>
 8000788:	b9b1      	cbnz	r1, 80007b8 <d_substitution+0xbc>
 800078a:	4b34      	ldr	r3, [pc, #208]	; (800085c <d_substitution+0x160>)
 800078c:	2174      	movs	r1, #116	; 0x74
 800078e:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
 8000792:	e001      	b.n	8000798 <d_substitution+0x9c>
 8000794:	f813 1f1c 	ldrb.w	r1, [r3, #28]!
 8000798:	4291      	cmp	r1, r2
 800079a:	d014      	beq.n	80007c6 <d_substitution+0xca>
 800079c:	4283      	cmp	r3, r0
 800079e:	d1f9      	bne.n	8000794 <d_substitution+0x98>
 80007a0:	e7e3      	b.n	800076a <d_substitution+0x6e>
 80007a2:	2300      	movs	r3, #0
 80007a4:	6a2a      	ldr	r2, [r5, #32]
 80007a6:	429a      	cmp	r2, r3
 80007a8:	d9df      	bls.n	800076a <d_substitution+0x6e>
 80007aa:	69ea      	ldr	r2, [r5, #28]
 80007ac:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80007b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007b4:	3301      	adds	r3, #1
 80007b6:	e7f5      	b.n	80007a4 <d_substitution+0xa8>
 80007b8:	68eb      	ldr	r3, [r5, #12]
 80007ba:	781b      	ldrb	r3, [r3, #0]
 80007bc:	3b43      	subs	r3, #67	; 0x43
 80007be:	2b01      	cmp	r3, #1
 80007c0:	bf98      	it	ls
 80007c2:	460c      	movls	r4, r1
 80007c4:	e7e1      	b.n	800078a <d_substitution+0x8e>
 80007c6:	695e      	ldr	r6, [r3, #20]
 80007c8:	e9d5 2005 	ldrd	r2, r0, [r5, #20]
 80007cc:	b1ae      	cbz	r6, 80007fa <d_substitution+0xfe>
 80007ce:	4282      	cmp	r2, r0
 80007d0:	f8d3 e018 	ldr.w	lr, [r3, #24]
 80007d4:	da3f      	bge.n	8000856 <d_substitution+0x15a>
 80007d6:	f8d5 c010 	ldr.w	ip, [r5, #16]
 80007da:	0117      	lsls	r7, r2, #4
 80007dc:	eb0c 0107 	add.w	r1, ip, r7
 80007e0:	3201      	adds	r2, #1
 80007e2:	f04f 0900 	mov.w	r9, #0
 80007e6:	f04f 0818 	mov.w	r8, #24
 80007ea:	f8c1 9004 	str.w	r9, [r1, #4]
 80007ee:	616a      	str	r2, [r5, #20]
 80007f0:	f80c 8007 	strb.w	r8, [ip, r7]
 80007f4:	e9c1 6e02 	strd	r6, lr, [r1, #8]
 80007f8:	62a9      	str	r1, [r5, #40]	; 0x28
 80007fa:	b33c      	cbz	r4, 800084c <d_substitution+0x150>
 80007fc:	e9d3 6103 	ldrd	r6, r1, [r3, #12]
 8000800:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8000802:	4282      	cmp	r2, r0
 8000804:	440b      	add	r3, r1
 8000806:	62eb      	str	r3, [r5, #44]	; 0x2c
 8000808:	da23      	bge.n	8000852 <d_substitution+0x156>
 800080a:	692c      	ldr	r4, [r5, #16]
 800080c:	0113      	lsls	r3, r2, #4
 800080e:	18e0      	adds	r0, r4, r3
 8000810:	3201      	adds	r2, #1
 8000812:	f04f 0c00 	mov.w	ip, #0
 8000816:	2718      	movs	r7, #24
 8000818:	f8c0 c004 	str.w	ip, [r0, #4]
 800081c:	616a      	str	r2, [r5, #20]
 800081e:	54e7      	strb	r7, [r4, r3]
 8000820:	e9c0 6102 	strd	r6, r1, [r0, #8]
 8000824:	68eb      	ldr	r3, [r5, #12]
 8000826:	781b      	ldrb	r3, [r3, #0]
 8000828:	2b42      	cmp	r3, #66	; 0x42
 800082a:	d19f      	bne.n	800076c <d_substitution+0x70>
 800082c:	4601      	mov	r1, r0
 800082e:	4628      	mov	r0, r5
 8000830:	f7ff ff48 	bl	80006c4 <d_abi_tags>
 8000834:	2800      	cmp	r0, #0
 8000836:	d098      	beq.n	800076a <d_substitution+0x6e>
 8000838:	e9d5 3208 	ldrd	r3, r2, [r5, #32]
 800083c:	4293      	cmp	r3, r2
 800083e:	da94      	bge.n	800076a <d_substitution+0x6e>
 8000840:	69e9      	ldr	r1, [r5, #28]
 8000842:	1c5a      	adds	r2, r3, #1
 8000844:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8000848:	622a      	str	r2, [r5, #32]
 800084a:	e78f      	b.n	800076c <d_substitution+0x70>
 800084c:	e9d3 6101 	ldrd	r6, r1, [r3, #4]
 8000850:	e7d6      	b.n	8000800 <d_substitution+0x104>
 8000852:	2000      	movs	r0, #0
 8000854:	e7e6      	b.n	8000824 <d_substitution+0x128>
 8000856:	2100      	movs	r1, #0
 8000858:	e7ce      	b.n	80007f8 <d_substitution+0xfc>
 800085a:	bf00      	nop
 800085c:	08011fc0 	.word	0x08011fc0

08000860 <d_call_offset>:
 8000860:	b538      	push	{r3, r4, r5, lr}
 8000862:	4604      	mov	r4, r0
 8000864:	b929      	cbnz	r1, 8000872 <d_call_offset+0x12>
 8000866:	68c3      	ldr	r3, [r0, #12]
 8000868:	781a      	ldrb	r2, [r3, #0]
 800086a:	b17a      	cbz	r2, 800088c <d_call_offset+0x2c>
 800086c:	1c5a      	adds	r2, r3, #1
 800086e:	60c2      	str	r2, [r0, #12]
 8000870:	7819      	ldrb	r1, [r3, #0]
 8000872:	2968      	cmp	r1, #104	; 0x68
 8000874:	d019      	beq.n	80008aa <d_call_offset+0x4a>
 8000876:	2976      	cmp	r1, #118	; 0x76
 8000878:	d108      	bne.n	800088c <d_call_offset+0x2c>
 800087a:	f104 050c 	add.w	r5, r4, #12
 800087e:	4628      	mov	r0, r5
 8000880:	f7ff fe28 	bl	80004d4 <d_number.isra.0>
 8000884:	68e3      	ldr	r3, [r4, #12]
 8000886:	781a      	ldrb	r2, [r3, #0]
 8000888:	2a5f      	cmp	r2, #95	; 0x5f
 800088a:	d001      	beq.n	8000890 <d_call_offset+0x30>
 800088c:	2000      	movs	r0, #0
 800088e:	bd38      	pop	{r3, r4, r5, pc}
 8000890:	3301      	adds	r3, #1
 8000892:	60e3      	str	r3, [r4, #12]
 8000894:	4628      	mov	r0, r5
 8000896:	f7ff fe1d 	bl	80004d4 <d_number.isra.0>
 800089a:	68e3      	ldr	r3, [r4, #12]
 800089c:	781a      	ldrb	r2, [r3, #0]
 800089e:	2a5f      	cmp	r2, #95	; 0x5f
 80008a0:	d1f4      	bne.n	800088c <d_call_offset+0x2c>
 80008a2:	3301      	adds	r3, #1
 80008a4:	60e3      	str	r3, [r4, #12]
 80008a6:	2001      	movs	r0, #1
 80008a8:	bd38      	pop	{r3, r4, r5, pc}
 80008aa:	f104 000c 	add.w	r0, r4, #12
 80008ae:	f7ff fe11 	bl	80004d4 <d_number.isra.0>
 80008b2:	e7f2      	b.n	800089a <d_call_offset+0x3a>

080008b4 <d_discriminator>:
 80008b4:	68c3      	ldr	r3, [r0, #12]
 80008b6:	781a      	ldrb	r2, [r3, #0]
 80008b8:	2a5f      	cmp	r2, #95	; 0x5f
 80008ba:	d001      	beq.n	80008c0 <d_discriminator+0xc>
 80008bc:	2001      	movs	r0, #1
 80008be:	4770      	bx	lr
 80008c0:	b510      	push	{r4, lr}
 80008c2:	1c5a      	adds	r2, r3, #1
 80008c4:	4604      	mov	r4, r0
 80008c6:	f840 2f0c 	str.w	r2, [r0, #12]!
 80008ca:	785a      	ldrb	r2, [r3, #1]
 80008cc:	2a5f      	cmp	r2, #95	; 0x5f
 80008ce:	d004      	beq.n	80008da <d_discriminator+0x26>
 80008d0:	f7ff fe00 	bl	80004d4 <d_number.isra.0>
 80008d4:	43c0      	mvns	r0, r0
 80008d6:	0fc0      	lsrs	r0, r0, #31
 80008d8:	bd10      	pop	{r4, pc}
 80008da:	3302      	adds	r3, #2
 80008dc:	60e3      	str	r3, [r4, #12]
 80008de:	f7ff fdf9 	bl	80004d4 <d_number.isra.0>
 80008e2:	2800      	cmp	r0, #0
 80008e4:	db09      	blt.n	80008fa <d_discriminator+0x46>
 80008e6:	2809      	cmp	r0, #9
 80008e8:	dd05      	ble.n	80008f6 <d_discriminator+0x42>
 80008ea:	68e3      	ldr	r3, [r4, #12]
 80008ec:	781a      	ldrb	r2, [r3, #0]
 80008ee:	2a5f      	cmp	r2, #95	; 0x5f
 80008f0:	d103      	bne.n	80008fa <d_discriminator+0x46>
 80008f2:	3301      	adds	r3, #1
 80008f4:	60e3      	str	r3, [r4, #12]
 80008f6:	2001      	movs	r0, #1
 80008f8:	bd10      	pop	{r4, pc}
 80008fa:	2000      	movs	r0, #0
 80008fc:	bd10      	pop	{r4, pc}
 80008fe:	bf00      	nop

08000900 <d_index_template_argument.part.8>:
 8000900:	b170      	cbz	r0, 8000920 <d_index_template_argument.part.8+0x20>
 8000902:	7803      	ldrb	r3, [r0, #0]
 8000904:	2b2f      	cmp	r3, #47	; 0x2f
 8000906:	d10f      	bne.n	8000928 <d_index_template_argument.part.8+0x28>
 8000908:	2900      	cmp	r1, #0
 800090a:	dc04      	bgt.n	8000916 <d_index_template_argument.part.8+0x16>
 800090c:	e009      	b.n	8000922 <d_index_template_argument.part.8+0x22>
 800090e:	7803      	ldrb	r3, [r0, #0]
 8000910:	2b2f      	cmp	r3, #47	; 0x2f
 8000912:	d109      	bne.n	8000928 <d_index_template_argument.part.8+0x28>
 8000914:	b131      	cbz	r1, 8000924 <d_index_template_argument.part.8+0x24>
 8000916:	68c0      	ldr	r0, [r0, #12]
 8000918:	3901      	subs	r1, #1
 800091a:	2800      	cmp	r0, #0
 800091c:	d1f7      	bne.n	800090e <d_index_template_argument.part.8+0xe>
 800091e:	4770      	bx	lr
 8000920:	4770      	bx	lr
 8000922:	d101      	bne.n	8000928 <d_index_template_argument.part.8+0x28>
 8000924:	6880      	ldr	r0, [r0, #8]
 8000926:	4770      	bx	lr
 8000928:	2000      	movs	r0, #0
 800092a:	4770      	bx	lr

0800092c <d_lookup_template_argument.isra.9>:
 800092c:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 8000930:	b133      	cbz	r3, 8000940 <d_lookup_template_argument.isra.9+0x14>
 8000932:	6809      	ldr	r1, [r1, #0]
 8000934:	685b      	ldr	r3, [r3, #4]
 8000936:	2900      	cmp	r1, #0
 8000938:	68db      	ldr	r3, [r3, #12]
 800093a:	db04      	blt.n	8000946 <d_lookup_template_argument.isra.9+0x1a>
 800093c:	4618      	mov	r0, r3
 800093e:	e7df      	b.n	8000900 <d_index_template_argument.part.8>
 8000940:	2201      	movs	r2, #1
 8000942:	f8c0 2118 	str.w	r2, [r0, #280]	; 0x118
 8000946:	4618      	mov	r0, r3
 8000948:	4770      	bx	lr
 800094a:	bf00      	nop

0800094c <d_find_pack>:
 800094c:	2900      	cmp	r1, #0
 800094e:	d043      	beq.n	80009d8 <d_find_pack+0x8c>
 8000950:	b538      	push	{r3, r4, r5, lr}
 8000952:	4605      	mov	r5, r0
 8000954:	460c      	mov	r4, r1
 8000956:	7823      	ldrb	r3, [r4, #0]
 8000958:	2b4b      	cmp	r3, #75	; 0x4b
 800095a:	d827      	bhi.n	80009ac <d_find_pack+0x60>
 800095c:	e8df f003 	tbb	[pc, r3]
 8000960:	2626262e 	.word	0x2626262e
 8000964:	2b2e3026 	.word	0x2b2e3026
 8000968:	2626262b 	.word	0x2626262b
 800096c:	26262626 	.word	0x26262626
 8000970:	26262626 	.word	0x26262626
 8000974:	26262626 	.word	0x26262626
 8000978:	2626262e 	.word	0x2626262e
 800097c:	26262626 	.word	0x26262626
 8000980:	26262626 	.word	0x26262626
 8000984:	2e262626 	.word	0x2e262626
 8000988:	26262626 	.word	0x26262626
 800098c:	2626262e 	.word	0x2626262e
 8000990:	262b2e26 	.word	0x262b2e26
 8000994:	26262626 	.word	0x26262626
 8000998:	26262626 	.word	0x26262626
 800099c:	26262626 	.word	0x26262626
 80009a0:	26262e2e 	.word	0x26262e2e
 80009a4:	2e2e2e26 	.word	0x2e2e2e26
 80009a8:	2e2e2626 	.word	0x2e2e2626
 80009ac:	68a1      	ldr	r1, [r4, #8]
 80009ae:	4628      	mov	r0, r5
 80009b0:	f7ff ffcc 	bl	800094c <d_find_pack>
 80009b4:	b918      	cbnz	r0, 80009be <d_find_pack+0x72>
 80009b6:	68e4      	ldr	r4, [r4, #12]
 80009b8:	2c00      	cmp	r4, #0
 80009ba:	d1cc      	bne.n	8000956 <d_find_pack+0xa>
 80009bc:	2000      	movs	r0, #0
 80009be:	bd38      	pop	{r3, r4, r5, pc}
 80009c0:	f104 0108 	add.w	r1, r4, #8
 80009c4:	4628      	mov	r0, r5
 80009c6:	f7ff ffb1 	bl	800092c <d_lookup_template_argument.isra.9>
 80009ca:	2800      	cmp	r0, #0
 80009cc:	d0f6      	beq.n	80009bc <d_find_pack+0x70>
 80009ce:	7803      	ldrb	r3, [r0, #0]
 80009d0:	2b2f      	cmp	r3, #47	; 0x2f
 80009d2:	d0f4      	beq.n	80009be <d_find_pack+0x72>
 80009d4:	2000      	movs	r0, #0
 80009d6:	e7f2      	b.n	80009be <d_find_pack+0x72>
 80009d8:	2000      	movs	r0, #0
 80009da:	4770      	bx	lr

080009dc <d_growable_string_callback_adapter>:
 80009dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80009e0:	4614      	mov	r4, r2
 80009e2:	e9d4 5702 	ldrd	r5, r7, [r4, #8]
 80009e6:	6852      	ldr	r2, [r2, #4]
 80009e8:	1c4b      	adds	r3, r1, #1
 80009ea:	4413      	add	r3, r2
 80009ec:	42ab      	cmp	r3, r5
 80009ee:	b082      	sub	sp, #8
 80009f0:	460e      	mov	r6, r1
 80009f2:	4680      	mov	r8, r0
 80009f4:	d811      	bhi.n	8000a1a <d_growable_string_callback_adapter+0x3e>
 80009f6:	b96f      	cbnz	r7, 8000a14 <d_growable_string_callback_adapter+0x38>
 80009f8:	e9d4 0300 	ldrd	r0, r3, [r4]
 80009fc:	4632      	mov	r2, r6
 80009fe:	4418      	add	r0, r3
 8000a00:	4641      	mov	r1, r8
 8000a02:	f007 f885 	bl	8007b10 <memcpy>
 8000a06:	e9d4 3200 	ldrd	r3, r2, [r4]
 8000a0a:	4433      	add	r3, r6
 8000a0c:	549f      	strb	r7, [r3, r2]
 8000a0e:	6863      	ldr	r3, [r4, #4]
 8000a10:	441e      	add	r6, r3
 8000a12:	6066      	str	r6, [r4, #4]
 8000a14:	b002      	add	sp, #8
 8000a16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a1a:	2f00      	cmp	r7, #0
 8000a1c:	d1fa      	bne.n	8000a14 <d_growable_string_callback_adapter+0x38>
 8000a1e:	b16d      	cbz	r5, 8000a3c <d_growable_string_callback_adapter+0x60>
 8000a20:	006d      	lsls	r5, r5, #1
 8000a22:	42ab      	cmp	r3, r5
 8000a24:	d8fc      	bhi.n	8000a20 <d_growable_string_callback_adapter+0x44>
 8000a26:	4629      	mov	r1, r5
 8000a28:	6820      	ldr	r0, [r4, #0]
 8000a2a:	f00d fa53 	bl	800ded4 <realloc>
 8000a2e:	b150      	cbz	r0, 8000a46 <d_growable_string_callback_adapter+0x6a>
 8000a30:	68e7      	ldr	r7, [r4, #12]
 8000a32:	6020      	str	r0, [r4, #0]
 8000a34:	60a5      	str	r5, [r4, #8]
 8000a36:	2f00      	cmp	r7, #0
 8000a38:	d0de      	beq.n	80009f8 <d_growable_string_callback_adapter+0x1c>
 8000a3a:	e7eb      	b.n	8000a14 <d_growable_string_callback_adapter+0x38>
 8000a3c:	2b02      	cmp	r3, #2
 8000a3e:	f04f 0502 	mov.w	r5, #2
 8000a42:	d8ed      	bhi.n	8000a20 <d_growable_string_callback_adapter+0x44>
 8000a44:	e7ef      	b.n	8000a26 <d_growable_string_callback_adapter+0x4a>
 8000a46:	9001      	str	r0, [sp, #4]
 8000a48:	6820      	ldr	r0, [r4, #0]
 8000a4a:	f00c fe55 	bl	800d6f8 <free>
 8000a4e:	9b01      	ldr	r3, [sp, #4]
 8000a50:	2201      	movs	r2, #1
 8000a52:	e9c4 3300 	strd	r3, r3, [r4]
 8000a56:	e9c4 3202 	strd	r3, r2, [r4, #8]
 8000a5a:	e7db      	b.n	8000a14 <d_growable_string_callback_adapter+0x38>

08000a5c <d_expr_primary>:
 8000a5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a5e:	68c2      	ldr	r2, [r0, #12]
 8000a60:	7813      	ldrb	r3, [r2, #0]
 8000a62:	2b4c      	cmp	r3, #76	; 0x4c
 8000a64:	d114      	bne.n	8000a90 <d_expr_primary+0x34>
 8000a66:	1c53      	adds	r3, r2, #1
 8000a68:	60c3      	str	r3, [r0, #12]
 8000a6a:	7851      	ldrb	r1, [r2, #1]
 8000a6c:	295f      	cmp	r1, #95	; 0x5f
 8000a6e:	4605      	mov	r5, r0
 8000a70:	d055      	beq.n	8000b1e <d_expr_primary+0xc2>
 8000a72:	295a      	cmp	r1, #90	; 0x5a
 8000a74:	d10e      	bne.n	8000a94 <d_expr_primary+0x38>
 8000a76:	3301      	adds	r3, #1
 8000a78:	60eb      	str	r3, [r5, #12]
 8000a7a:	2100      	movs	r1, #0
 8000a7c:	4628      	mov	r0, r5
 8000a7e:	f001 fbc5 	bl	800220c <d_encoding>
 8000a82:	68eb      	ldr	r3, [r5, #12]
 8000a84:	781a      	ldrb	r2, [r3, #0]
 8000a86:	2a45      	cmp	r2, #69	; 0x45
 8000a88:	d102      	bne.n	8000a90 <d_expr_primary+0x34>
 8000a8a:	3301      	adds	r3, #1
 8000a8c:	60eb      	str	r3, [r5, #12]
 8000a8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a90:	2000      	movs	r0, #0
 8000a92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a94:	f000 fca8 	bl	80013e8 <d_type>
 8000a98:	2800      	cmp	r0, #0
 8000a9a:	d0f9      	beq.n	8000a90 <d_expr_primary+0x34>
 8000a9c:	7803      	ldrb	r3, [r0, #0]
 8000a9e:	2b27      	cmp	r3, #39	; 0x27
 8000aa0:	d034      	beq.n	8000b0c <d_expr_primary+0xb0>
 8000aa2:	68ee      	ldr	r6, [r5, #12]
 8000aa4:	7833      	ldrb	r3, [r6, #0]
 8000aa6:	2b6e      	cmp	r3, #110	; 0x6e
 8000aa8:	d02a      	beq.n	8000b00 <d_expr_primary+0xa4>
 8000aaa:	213c      	movs	r1, #60	; 0x3c
 8000aac:	2b45      	cmp	r3, #69	; 0x45
 8000aae:	d040      	beq.n	8000b32 <d_expr_primary+0xd6>
 8000ab0:	2b00      	cmp	r3, #0
 8000ab2:	d0ed      	beq.n	8000a90 <d_expr_primary+0x34>
 8000ab4:	4633      	mov	r3, r6
 8000ab6:	e001      	b.n	8000abc <d_expr_primary+0x60>
 8000ab8:	2c00      	cmp	r4, #0
 8000aba:	d0e9      	beq.n	8000a90 <d_expr_primary+0x34>
 8000abc:	3301      	adds	r3, #1
 8000abe:	60eb      	str	r3, [r5, #12]
 8000ac0:	781c      	ldrb	r4, [r3, #0]
 8000ac2:	2c45      	cmp	r4, #69	; 0x45
 8000ac4:	d1f8      	bne.n	8000ab8 <d_expr_primary+0x5c>
 8000ac6:	1b9c      	subs	r4, r3, r6
 8000ac8:	e9d5 2305 	ldrd	r2, r3, [r5, #20]
 8000acc:	429a      	cmp	r2, r3
 8000ace:	da2e      	bge.n	8000b2e <d_expr_primary+0xd2>
 8000ad0:	f8d5 e010 	ldr.w	lr, [r5, #16]
 8000ad4:	ea4f 1c02 	mov.w	ip, r2, lsl #4
 8000ad8:	eb0e 030c 	add.w	r3, lr, ip
 8000adc:	3201      	adds	r2, #1
 8000ade:	2700      	movs	r7, #0
 8000ae0:	605f      	str	r7, [r3, #4]
 8000ae2:	616a      	str	r2, [r5, #20]
 8000ae4:	b31e      	cbz	r6, 8000b2e <d_expr_primary+0xd2>
 8000ae6:	b314      	cbz	r4, 8000b2e <d_expr_primary+0xd2>
 8000ae8:	605f      	str	r7, [r3, #4]
 8000aea:	f80e 700c 	strb.w	r7, [lr, ip]
 8000aee:	e9c3 6402 	strd	r6, r4, [r3, #8]
 8000af2:	4602      	mov	r2, r0
 8000af4:	4628      	mov	r0, r5
 8000af6:	f7ff fc07 	bl	8000308 <d_make_comp>
 8000afa:	68eb      	ldr	r3, [r5, #12]
 8000afc:	781a      	ldrb	r2, [r3, #0]
 8000afe:	e7c2      	b.n	8000a86 <d_expr_primary+0x2a>
 8000b00:	1c72      	adds	r2, r6, #1
 8000b02:	60ea      	str	r2, [r5, #12]
 8000b04:	7873      	ldrb	r3, [r6, #1]
 8000b06:	213d      	movs	r1, #61	; 0x3d
 8000b08:	4616      	mov	r6, r2
 8000b0a:	e7cf      	b.n	8000aac <d_expr_primary+0x50>
 8000b0c:	6883      	ldr	r3, [r0, #8]
 8000b0e:	7c1a      	ldrb	r2, [r3, #16]
 8000b10:	2a00      	cmp	r2, #0
 8000b12:	d0c6      	beq.n	8000aa2 <d_expr_primary+0x46>
 8000b14:	685a      	ldr	r2, [r3, #4]
 8000b16:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8000b18:	1a9b      	subs	r3, r3, r2
 8000b1a:	62eb      	str	r3, [r5, #44]	; 0x2c
 8000b1c:	e7c1      	b.n	8000aa2 <d_expr_primary+0x46>
 8000b1e:	1c93      	adds	r3, r2, #2
 8000b20:	60c3      	str	r3, [r0, #12]
 8000b22:	7892      	ldrb	r2, [r2, #2]
 8000b24:	2a5a      	cmp	r2, #90	; 0x5a
 8000b26:	bf18      	it	ne
 8000b28:	2000      	movne	r0, #0
 8000b2a:	d1ac      	bne.n	8000a86 <d_expr_primary+0x2a>
 8000b2c:	e7a3      	b.n	8000a76 <d_expr_primary+0x1a>
 8000b2e:	2300      	movs	r3, #0
 8000b30:	e7df      	b.n	8000af2 <d_expr_primary+0x96>
 8000b32:	2400      	movs	r4, #0
 8000b34:	e7c8      	b.n	8000ac8 <d_expr_primary+0x6c>
 8000b36:	bf00      	nop

08000b38 <d_expression_1>:
 8000b38:	68c1      	ldr	r1, [r0, #12]
 8000b3a:	780b      	ldrb	r3, [r1, #0]
 8000b3c:	2b4c      	cmp	r3, #76	; 0x4c
 8000b3e:	f000 8092 	beq.w	8000c66 <d_expression_1+0x12e>
 8000b42:	2b54      	cmp	r3, #84	; 0x54
 8000b44:	f000 8090 	beq.w	8000c68 <d_expression_1+0x130>
 8000b48:	2b73      	cmp	r3, #115	; 0x73
 8000b4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b4e:	4604      	mov	r4, r0
 8000b50:	d04e      	beq.n	8000bf0 <d_expression_1+0xb8>
 8000b52:	2b66      	cmp	r3, #102	; 0x66
 8000b54:	d02d      	beq.n	8000bb2 <d_expression_1+0x7a>
 8000b56:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8000b5a:	2a09      	cmp	r2, #9
 8000b5c:	d80c      	bhi.n	8000b78 <d_expression_1+0x40>
 8000b5e:	4620      	mov	r0, r4
 8000b60:	f001 f9ea 	bl	8001f38 <d_unqualified_name>
 8000b64:	4605      	mov	r5, r0
 8000b66:	2800      	cmp	r0, #0
 8000b68:	d079      	beq.n	8000c5e <d_expression_1+0x126>
 8000b6a:	68e3      	ldr	r3, [r4, #12]
 8000b6c:	781a      	ldrb	r2, [r3, #0]
 8000b6e:	2a49      	cmp	r2, #73	; 0x49
 8000b70:	d07b      	beq.n	8000c6a <d_expression_1+0x132>
 8000b72:	4628      	mov	r0, r5
 8000b74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b78:	2b6f      	cmp	r3, #111	; 0x6f
 8000b7a:	d04a      	beq.n	8000c12 <d_expression_1+0xda>
 8000b7c:	2b69      	cmp	r3, #105	; 0x69
 8000b7e:	d163      	bne.n	8000c48 <d_expression_1+0x110>
 8000b80:	784b      	ldrb	r3, [r1, #1]
 8000b82:	2b6c      	cmp	r3, #108	; 0x6c
 8000b84:	f000 8093 	beq.w	8000cae <d_expression_1+0x176>
 8000b88:	4620      	mov	r0, r4
 8000b8a:	f001 f821 	bl	8001bd0 <d_operator_name>
 8000b8e:	4605      	mov	r5, r0
 8000b90:	2800      	cmp	r0, #0
 8000b92:	d064      	beq.n	8000c5e <d_expression_1+0x126>
 8000b94:	7803      	ldrb	r3, [r0, #0]
 8000b96:	2b31      	cmp	r3, #49	; 0x31
 8000b98:	d041      	beq.n	8000c1e <d_expression_1+0xe6>
 8000b9a:	2b32      	cmp	r3, #50	; 0x32
 8000b9c:	f000 814a 	beq.w	8000e34 <d_expression_1+0x2fc>
 8000ba0:	2b33      	cmp	r3, #51	; 0x33
 8000ba2:	d15c      	bne.n	8000c5e <d_expression_1+0x126>
 8000ba4:	68e3      	ldr	r3, [r4, #12]
 8000ba6:	781a      	ldrb	r2, [r3, #0]
 8000ba8:	2a5f      	cmp	r2, #95	; 0x5f
 8000baa:	f000 813b 	beq.w	8000e24 <d_expression_1+0x2ec>
 8000bae:	2700      	movs	r7, #0
 8000bb0:	e09b      	b.n	8000cea <d_expression_1+0x1b2>
 8000bb2:	784b      	ldrb	r3, [r1, #1]
 8000bb4:	2b70      	cmp	r3, #112	; 0x70
 8000bb6:	d1e7      	bne.n	8000b88 <d_expression_1+0x50>
 8000bb8:	1c8b      	adds	r3, r1, #2
 8000bba:	60c3      	str	r3, [r0, #12]
 8000bbc:	788b      	ldrb	r3, [r1, #2]
 8000bbe:	2b54      	cmp	r3, #84	; 0x54
 8000bc0:	f000 814d 	beq.w	8000e5e <d_expression_1+0x326>
 8000bc4:	f7ff fce2 	bl	800058c <d_compact_number>
 8000bc8:	43c3      	mvns	r3, r0
 8000bca:	f033 4300 	bics.w	r3, r3, #2147483648	; 0x80000000
 8000bce:	d046      	beq.n	8000c5e <d_expression_1+0x126>
 8000bd0:	3001      	adds	r0, #1
 8000bd2:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000bd6:	4293      	cmp	r3, r2
 8000bd8:	da41      	bge.n	8000c5e <d_expression_1+0x126>
 8000bda:	6921      	ldr	r1, [r4, #16]
 8000bdc:	011a      	lsls	r2, r3, #4
 8000bde:	188d      	adds	r5, r1, r2
 8000be0:	3301      	adds	r3, #1
 8000be2:	2700      	movs	r7, #0
 8000be4:	2606      	movs	r6, #6
 8000be6:	606f      	str	r7, [r5, #4]
 8000be8:	6163      	str	r3, [r4, #20]
 8000bea:	548e      	strb	r6, [r1, r2]
 8000bec:	60a8      	str	r0, [r5, #8]
 8000bee:	e7c0      	b.n	8000b72 <d_expression_1+0x3a>
 8000bf0:	784b      	ldrb	r3, [r1, #1]
 8000bf2:	2b72      	cmp	r3, #114	; 0x72
 8000bf4:	d046      	beq.n	8000c84 <d_expression_1+0x14c>
 8000bf6:	2b70      	cmp	r3, #112	; 0x70
 8000bf8:	d1c6      	bne.n	8000b88 <d_expression_1+0x50>
 8000bfa:	3102      	adds	r1, #2
 8000bfc:	60c1      	str	r1, [r0, #12]
 8000bfe:	f7ff ff9b 	bl	8000b38 <d_expression_1>
 8000c02:	2300      	movs	r3, #0
 8000c04:	4602      	mov	r2, r0
 8000c06:	214a      	movs	r1, #74	; 0x4a
 8000c08:	4620      	mov	r0, r4
 8000c0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c0e:	f7ff bb7b 	b.w	8000308 <d_make_comp>
 8000c12:	784b      	ldrb	r3, [r1, #1]
 8000c14:	2b6e      	cmp	r3, #110	; 0x6e
 8000c16:	d1b7      	bne.n	8000b88 <d_expression_1+0x50>
 8000c18:	3102      	adds	r1, #2
 8000c1a:	60c1      	str	r1, [r0, #12]
 8000c1c:	e79f      	b.n	8000b5e <d_expression_1+0x26>
 8000c1e:	6887      	ldr	r7, [r0, #8]
 8000c20:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000c22:	68ba      	ldr	r2, [r7, #8]
 8000c24:	683e      	ldr	r6, [r7, #0]
 8000c26:	49c6      	ldr	r1, [pc, #792]	; (8000f40 <d_expression_1+0x408>)
 8000c28:	3a02      	subs	r2, #2
 8000c2a:	4413      	add	r3, r2
 8000c2c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000c2e:	4630      	mov	r0, r6
 8000c30:	f007 f81a 	bl	8007c68 <strcmp>
 8000c34:	2800      	cmp	r0, #0
 8000c36:	f000 812e 	beq.w	8000e96 <d_expression_1+0x35e>
 8000c3a:	68ff      	ldr	r7, [r7, #12]
 8000c3c:	2f03      	cmp	r7, #3
 8000c3e:	d80e      	bhi.n	8000c5e <d_expression_1+0x126>
 8000c40:	e8df f007 	tbb	[pc, r7]
 8000c44:	76b9446e 	.word	0x76b9446e
 8000c48:	2b74      	cmp	r3, #116	; 0x74
 8000c4a:	d19d      	bne.n	8000b88 <d_expression_1+0x50>
 8000c4c:	784b      	ldrb	r3, [r1, #1]
 8000c4e:	2b6c      	cmp	r3, #108	; 0x6c
 8000c50:	d19a      	bne.n	8000b88 <d_expression_1+0x50>
 8000c52:	f000 fbc9 	bl	80013e8 <d_type>
 8000c56:	68e1      	ldr	r1, [r4, #12]
 8000c58:	784b      	ldrb	r3, [r1, #1]
 8000c5a:	4605      	mov	r5, r0
 8000c5c:	bb43      	cbnz	r3, 8000cb0 <d_expression_1+0x178>
 8000c5e:	2500      	movs	r5, #0
 8000c60:	4628      	mov	r0, r5
 8000c62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c66:	e6f9      	b.n	8000a5c <d_expr_primary>
 8000c68:	e4aa      	b.n	80005c0 <d_template_param>
 8000c6a:	3301      	adds	r3, #1
 8000c6c:	60e3      	str	r3, [r4, #12]
 8000c6e:	4620      	mov	r0, r4
 8000c70:	f000 f9ac 	bl	8000fcc <d_template_args_1>
 8000c74:	462a      	mov	r2, r5
 8000c76:	4603      	mov	r3, r0
 8000c78:	2104      	movs	r1, #4
 8000c7a:	4620      	mov	r0, r4
 8000c7c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c80:	f7ff bb42 	b.w	8000308 <d_make_comp>
 8000c84:	3102      	adds	r1, #2
 8000c86:	60c1      	str	r1, [r0, #12]
 8000c88:	f000 fbae 	bl	80013e8 <d_type>
 8000c8c:	4605      	mov	r5, r0
 8000c8e:	4620      	mov	r0, r4
 8000c90:	f001 f952 	bl	8001f38 <d_unqualified_name>
 8000c94:	68e3      	ldr	r3, [r4, #12]
 8000c96:	781a      	ldrb	r2, [r3, #0]
 8000c98:	2a49      	cmp	r2, #73	; 0x49
 8000c9a:	4606      	mov	r6, r0
 8000c9c:	d033      	beq.n	8000d06 <d_expression_1+0x1ce>
 8000c9e:	4603      	mov	r3, r0
 8000ca0:	462a      	mov	r2, r5
 8000ca2:	4620      	mov	r0, r4
 8000ca4:	2101      	movs	r1, #1
 8000ca6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000caa:	f7ff bb2d 	b.w	8000308 <d_make_comp>
 8000cae:	2500      	movs	r5, #0
 8000cb0:	3102      	adds	r1, #2
 8000cb2:	60e1      	str	r1, [r4, #12]
 8000cb4:	4620      	mov	r0, r4
 8000cb6:	2145      	movs	r1, #69	; 0x45
 8000cb8:	f000 f94e 	bl	8000f58 <d_exprlist>
 8000cbc:	462a      	mov	r2, r5
 8000cbe:	4603      	mov	r3, r0
 8000cc0:	2130      	movs	r1, #48	; 0x30
 8000cc2:	4620      	mov	r0, r4
 8000cc4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000cc8:	f7ff bb1e 	b.w	8000308 <d_make_comp>
 8000ccc:	7833      	ldrb	r3, [r6, #0]
 8000cce:	2b70      	cmp	r3, #112	; 0x70
 8000cd0:	f000 80c9 	beq.w	8000e66 <d_expression_1+0x32e>
 8000cd4:	2b6d      	cmp	r3, #109	; 0x6d
 8000cd6:	f000 80c6 	beq.w	8000e66 <d_expression_1+0x32e>
 8000cda:	2700      	movs	r7, #0
 8000cdc:	4630      	mov	r0, r6
 8000cde:	4999      	ldr	r1, [pc, #612]	; (8000f44 <d_expression_1+0x40c>)
 8000ce0:	f006 ffc2 	bl	8007c68 <strcmp>
 8000ce4:	2800      	cmp	r0, #0
 8000ce6:	f000 80d1 	beq.w	8000e8c <d_expression_1+0x354>
 8000cea:	4620      	mov	r0, r4
 8000cec:	f7ff ff24 	bl	8000b38 <d_expression_1>
 8000cf0:	4603      	mov	r3, r0
 8000cf2:	2f00      	cmp	r7, #0
 8000cf4:	f040 80c3 	bne.w	8000e7e <d_expression_1+0x346>
 8000cf8:	462a      	mov	r2, r5
 8000cfa:	4620      	mov	r0, r4
 8000cfc:	2136      	movs	r1, #54	; 0x36
 8000cfe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000d02:	f7ff bb01 	b.w	8000308 <d_make_comp>
 8000d06:	3301      	adds	r3, #1
 8000d08:	60e3      	str	r3, [r4, #12]
 8000d0a:	4620      	mov	r0, r4
 8000d0c:	f000 f95e 	bl	8000fcc <d_template_args_1>
 8000d10:	4632      	mov	r2, r6
 8000d12:	4603      	mov	r3, r0
 8000d14:	2104      	movs	r1, #4
 8000d16:	4620      	mov	r0, r4
 8000d18:	f7ff faf6 	bl	8000308 <d_make_comp>
 8000d1c:	4603      	mov	r3, r0
 8000d1e:	e7bf      	b.n	8000ca0 <d_expression_1+0x168>
 8000d20:	462a      	mov	r2, r5
 8000d22:	4620      	mov	r0, r4
 8000d24:	2300      	movs	r3, #0
 8000d26:	2135      	movs	r1, #53	; 0x35
 8000d28:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000d2c:	f7ff baec 	b.w	8000308 <d_make_comp>
 8000d30:	2e00      	cmp	r6, #0
 8000d32:	d094      	beq.n	8000c5e <d_expression_1+0x126>
 8000d34:	4984      	ldr	r1, [pc, #528]	; (8000f48 <d_expression_1+0x410>)
 8000d36:	4630      	mov	r0, r6
 8000d38:	f006 ff96 	bl	8007c68 <strcmp>
 8000d3c:	2800      	cmp	r0, #0
 8000d3e:	f000 80af 	beq.w	8000ea0 <d_expression_1+0x368>
 8000d42:	7833      	ldrb	r3, [r6, #0]
 8000d44:	2b66      	cmp	r3, #102	; 0x66
 8000d46:	f000 80d9 	beq.w	8000efc <d_expression_1+0x3c4>
 8000d4a:	2b6e      	cmp	r3, #110	; 0x6e
 8000d4c:	d187      	bne.n	8000c5e <d_expression_1+0x126>
 8000d4e:	7873      	ldrb	r3, [r6, #1]
 8000d50:	2b77      	cmp	r3, #119	; 0x77
 8000d52:	d001      	beq.n	8000d58 <d_expression_1+0x220>
 8000d54:	2b61      	cmp	r3, #97	; 0x61
 8000d56:	d182      	bne.n	8000c5e <d_expression_1+0x126>
 8000d58:	215f      	movs	r1, #95	; 0x5f
 8000d5a:	4620      	mov	r0, r4
 8000d5c:	f000 f8fc 	bl	8000f58 <d_exprlist>
 8000d60:	4606      	mov	r6, r0
 8000d62:	4620      	mov	r0, r4
 8000d64:	f000 fb40 	bl	80013e8 <d_type>
 8000d68:	68e3      	ldr	r3, [r4, #12]
 8000d6a:	781a      	ldrb	r2, [r3, #0]
 8000d6c:	2a45      	cmp	r2, #69	; 0x45
 8000d6e:	4607      	mov	r7, r0
 8000d70:	f000 80e1 	beq.w	8000f36 <d_expression_1+0x3fe>
 8000d74:	2a70      	cmp	r2, #112	; 0x70
 8000d76:	f000 80d2 	beq.w	8000f1e <d_expression_1+0x3e6>
 8000d7a:	2a69      	cmp	r2, #105	; 0x69
 8000d7c:	f47f af6f 	bne.w	8000c5e <d_expression_1+0x126>
 8000d80:	785b      	ldrb	r3, [r3, #1]
 8000d82:	2b6c      	cmp	r3, #108	; 0x6c
 8000d84:	f47f af6b 	bne.w	8000c5e <d_expression_1+0x126>
 8000d88:	4620      	mov	r0, r4
 8000d8a:	f7ff fed5 	bl	8000b38 <d_expression_1>
 8000d8e:	4603      	mov	r3, r0
 8000d90:	463a      	mov	r2, r7
 8000d92:	213b      	movs	r1, #59	; 0x3b
 8000d94:	4620      	mov	r0, r4
 8000d96:	f7ff fab7 	bl	8000308 <d_make_comp>
 8000d9a:	4632      	mov	r2, r6
 8000d9c:	4603      	mov	r3, r0
 8000d9e:	213a      	movs	r1, #58	; 0x3a
 8000da0:	4620      	mov	r0, r4
 8000da2:	f7ff fab1 	bl	8000308 <d_make_comp>
 8000da6:	462a      	mov	r2, r5
 8000da8:	4603      	mov	r3, r0
 8000daa:	2139      	movs	r1, #57	; 0x39
 8000dac:	4620      	mov	r0, r4
 8000dae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000db2:	f7ff baa9 	b.w	8000308 <d_make_comp>
 8000db6:	2e00      	cmp	r6, #0
 8000db8:	f43f af51 	beq.w	8000c5e <d_expression_1+0x126>
 8000dbc:	68ab      	ldr	r3, [r5, #8]
 8000dbe:	681b      	ldr	r3, [r3, #0]
 8000dc0:	785a      	ldrb	r2, [r3, #1]
 8000dc2:	2a63      	cmp	r2, #99	; 0x63
 8000dc4:	d07c      	beq.n	8000ec0 <d_expression_1+0x388>
 8000dc6:	7833      	ldrb	r3, [r6, #0]
 8000dc8:	2b66      	cmp	r3, #102	; 0x66
 8000dca:	f000 808d 	beq.w	8000ee8 <d_expression_1+0x3b0>
 8000dce:	4620      	mov	r0, r4
 8000dd0:	f7ff feb2 	bl	8000b38 <d_expression_1>
 8000dd4:	4607      	mov	r7, r0
 8000dd6:	495d      	ldr	r1, [pc, #372]	; (8000f4c <d_expression_1+0x414>)
 8000dd8:	4630      	mov	r0, r6
 8000dda:	f006 ff45 	bl	8007c68 <strcmp>
 8000dde:	2800      	cmp	r0, #0
 8000de0:	d07c      	beq.n	8000edc <d_expression_1+0x3a4>
 8000de2:	495b      	ldr	r1, [pc, #364]	; (8000f50 <d_expression_1+0x418>)
 8000de4:	4630      	mov	r0, r6
 8000de6:	f006 ff3f 	bl	8007c68 <strcmp>
 8000dea:	b128      	cbz	r0, 8000df8 <d_expression_1+0x2c0>
 8000dec:	4630      	mov	r0, r6
 8000dee:	4959      	ldr	r1, [pc, #356]	; (8000f54 <d_expression_1+0x41c>)
 8000df0:	f006 ff3a 	bl	8007c68 <strcmp>
 8000df4:	2800      	cmp	r0, #0
 8000df6:	d17c      	bne.n	8000ef2 <d_expression_1+0x3ba>
 8000df8:	4620      	mov	r0, r4
 8000dfa:	f001 f89d 	bl	8001f38 <d_unqualified_name>
 8000dfe:	68e3      	ldr	r3, [r4, #12]
 8000e00:	781a      	ldrb	r2, [r3, #0]
 8000e02:	2a49      	cmp	r2, #73	; 0x49
 8000e04:	4606      	mov	r6, r0
 8000e06:	d07d      	beq.n	8000f04 <d_expression_1+0x3cc>
 8000e08:	4633      	mov	r3, r6
 8000e0a:	463a      	mov	r2, r7
 8000e0c:	2138      	movs	r1, #56	; 0x38
 8000e0e:	4620      	mov	r0, r4
 8000e10:	f7ff fa7a 	bl	8000308 <d_make_comp>
 8000e14:	462a      	mov	r2, r5
 8000e16:	4603      	mov	r3, r0
 8000e18:	2137      	movs	r1, #55	; 0x37
 8000e1a:	4620      	mov	r0, r4
 8000e1c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e20:	f7ff ba72 	b.w	8000308 <d_make_comp>
 8000e24:	3301      	adds	r3, #1
 8000e26:	60e3      	str	r3, [r4, #12]
 8000e28:	2145      	movs	r1, #69	; 0x45
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	f000 f894 	bl	8000f58 <d_exprlist>
 8000e30:	4603      	mov	r3, r0
 8000e32:	e761      	b.n	8000cf8 <d_expression_1+0x1c0>
 8000e34:	6883      	ldr	r3, [r0, #8]
 8000e36:	2b03      	cmp	r3, #3
 8000e38:	f63f af11 	bhi.w	8000c5e <d_expression_1+0x126>
 8000e3c:	a201      	add	r2, pc, #4	; (adr r2, 8000e44 <d_expression_1+0x30c>)
 8000e3e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e42:	bf00      	nop
 8000e44:	08000d21 	.word	0x08000d21
 8000e48:	08000e55 	.word	0x08000e55
 8000e4c:	08000c5f 	.word	0x08000c5f
 8000e50:	08000c5f 	.word	0x08000c5f
 8000e54:	4620      	mov	r0, r4
 8000e56:	f7ff fe6f 	bl	8000b38 <d_expression_1>
 8000e5a:	4603      	mov	r3, r0
 8000e5c:	e74c      	b.n	8000cf8 <d_expression_1+0x1c0>
 8000e5e:	3103      	adds	r1, #3
 8000e60:	60c1      	str	r1, [r0, #12]
 8000e62:	2000      	movs	r0, #0
 8000e64:	e6b5      	b.n	8000bd2 <d_expression_1+0x9a>
 8000e66:	7872      	ldrb	r2, [r6, #1]
 8000e68:	429a      	cmp	r2, r3
 8000e6a:	f47f af36 	bne.w	8000cda <d_expression_1+0x1a2>
 8000e6e:	68e3      	ldr	r3, [r4, #12]
 8000e70:	781a      	ldrb	r2, [r3, #0]
 8000e72:	2a5f      	cmp	r2, #95	; 0x5f
 8000e74:	f47f af32 	bne.w	8000cdc <d_expression_1+0x1a4>
 8000e78:	3301      	adds	r3, #1
 8000e7a:	60e3      	str	r3, [r4, #12]
 8000e7c:	e72d      	b.n	8000cda <d_expression_1+0x1a2>
 8000e7e:	461a      	mov	r2, r3
 8000e80:	2138      	movs	r1, #56	; 0x38
 8000e82:	4620      	mov	r0, r4
 8000e84:	f7ff fa40 	bl	8000308 <d_make_comp>
 8000e88:	4603      	mov	r3, r0
 8000e8a:	e735      	b.n	8000cf8 <d_expression_1+0x1c0>
 8000e8c:	4620      	mov	r0, r4
 8000e8e:	f000 f89d 	bl	8000fcc <d_template_args_1>
 8000e92:	4603      	mov	r3, r0
 8000e94:	e72d      	b.n	8000cf2 <d_expression_1+0x1ba>
 8000e96:	4620      	mov	r0, r4
 8000e98:	f000 faa6 	bl	80013e8 <d_type>
 8000e9c:	4603      	mov	r3, r0
 8000e9e:	e72b      	b.n	8000cf8 <d_expression_1+0x1c0>
 8000ea0:	4620      	mov	r0, r4
 8000ea2:	f7ff fe49 	bl	8000b38 <d_expression_1>
 8000ea6:	4606      	mov	r6, r0
 8000ea8:	4620      	mov	r0, r4
 8000eaa:	f7ff fe45 	bl	8000b38 <d_expression_1>
 8000eae:	4607      	mov	r7, r0
 8000eb0:	4620      	mov	r0, r4
 8000eb2:	f7ff fe41 	bl	8000b38 <d_expression_1>
 8000eb6:	4603      	mov	r3, r0
 8000eb8:	2800      	cmp	r0, #0
 8000eba:	f47f af69 	bne.w	8000d90 <d_expression_1+0x258>
 8000ebe:	e6ce      	b.n	8000c5e <d_expression_1+0x126>
 8000ec0:	781b      	ldrb	r3, [r3, #0]
 8000ec2:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 8000ec6:	2a01      	cmp	r2, #1
 8000ec8:	d903      	bls.n	8000ed2 <d_expression_1+0x39a>
 8000eca:	3b72      	subs	r3, #114	; 0x72
 8000ecc:	2b01      	cmp	r3, #1
 8000ece:	f63f af7a 	bhi.w	8000dc6 <d_expression_1+0x28e>
 8000ed2:	4620      	mov	r0, r4
 8000ed4:	f000 fa88 	bl	80013e8 <d_type>
 8000ed8:	4607      	mov	r7, r0
 8000eda:	e77c      	b.n	8000dd6 <d_expression_1+0x29e>
 8000edc:	2145      	movs	r1, #69	; 0x45
 8000ede:	4620      	mov	r0, r4
 8000ee0:	f000 f83a 	bl	8000f58 <d_exprlist>
 8000ee4:	4606      	mov	r6, r0
 8000ee6:	e78f      	b.n	8000e08 <d_expression_1+0x2d0>
 8000ee8:	4620      	mov	r0, r4
 8000eea:	f000 fe71 	bl	8001bd0 <d_operator_name>
 8000eee:	4607      	mov	r7, r0
 8000ef0:	e771      	b.n	8000dd6 <d_expression_1+0x29e>
 8000ef2:	4620      	mov	r0, r4
 8000ef4:	f7ff fe20 	bl	8000b38 <d_expression_1>
 8000ef8:	4606      	mov	r6, r0
 8000efa:	e785      	b.n	8000e08 <d_expression_1+0x2d0>
 8000efc:	4620      	mov	r0, r4
 8000efe:	f000 fe67 	bl	8001bd0 <d_operator_name>
 8000f02:	e7d0      	b.n	8000ea6 <d_expression_1+0x36e>
 8000f04:	3301      	adds	r3, #1
 8000f06:	60e3      	str	r3, [r4, #12]
 8000f08:	4620      	mov	r0, r4
 8000f0a:	f000 f85f 	bl	8000fcc <d_template_args_1>
 8000f0e:	4632      	mov	r2, r6
 8000f10:	4603      	mov	r3, r0
 8000f12:	2104      	movs	r1, #4
 8000f14:	4620      	mov	r0, r4
 8000f16:	f7ff f9f7 	bl	8000308 <d_make_comp>
 8000f1a:	4606      	mov	r6, r0
 8000f1c:	e774      	b.n	8000e08 <d_expression_1+0x2d0>
 8000f1e:	785a      	ldrb	r2, [r3, #1]
 8000f20:	2a69      	cmp	r2, #105	; 0x69
 8000f22:	f47f ae9c 	bne.w	8000c5e <d_expression_1+0x126>
 8000f26:	3302      	adds	r3, #2
 8000f28:	60e3      	str	r3, [r4, #12]
 8000f2a:	2145      	movs	r1, #69	; 0x45
 8000f2c:	4620      	mov	r0, r4
 8000f2e:	f000 f813 	bl	8000f58 <d_exprlist>
 8000f32:	4603      	mov	r3, r0
 8000f34:	e72c      	b.n	8000d90 <d_expression_1+0x258>
 8000f36:	3301      	adds	r3, #1
 8000f38:	60e3      	str	r3, [r4, #12]
 8000f3a:	2300      	movs	r3, #0
 8000f3c:	e728      	b.n	8000d90 <d_expression_1+0x258>
 8000f3e:	bf00      	nop
 8000f40:	080131a4 	.word	0x080131a4
 8000f44:	08012c84 	.word	0x08012c84
 8000f48:	08012c94 	.word	0x08012c94
 8000f4c:	08012c88 	.word	0x08012c88
 8000f50:	08012c8c 	.word	0x08012c8c
 8000f54:	08012c90 	.word	0x08012c90

08000f58 <d_exprlist>:
 8000f58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f5c:	68c2      	ldr	r2, [r0, #12]
 8000f5e:	7815      	ldrb	r5, [r2, #0]
 8000f60:	b082      	sub	sp, #8
 8000f62:	2300      	movs	r3, #0
 8000f64:	428d      	cmp	r5, r1
 8000f66:	4604      	mov	r4, r0
 8000f68:	9301      	str	r3, [sp, #4]
 8000f6a:	d025      	beq.n	8000fb8 <d_exprlist+0x60>
 8000f6c:	460f      	mov	r7, r1
 8000f6e:	ad01      	add	r5, sp, #4
 8000f70:	f04f 0801 	mov.w	r8, #1
 8000f74:	e00a      	b.n	8000f8c <d_exprlist+0x34>
 8000f76:	4620      	mov	r0, r4
 8000f78:	f7ff f9c6 	bl	8000308 <d_make_comp>
 8000f7c:	6028      	str	r0, [r5, #0]
 8000f7e:	f100 050c 	add.w	r5, r0, #12
 8000f82:	b178      	cbz	r0, 8000fa4 <d_exprlist+0x4c>
 8000f84:	68e3      	ldr	r3, [r4, #12]
 8000f86:	781a      	ldrb	r2, [r3, #0]
 8000f88:	42ba      	cmp	r2, r7
 8000f8a:	d00f      	beq.n	8000fac <d_exprlist+0x54>
 8000f8c:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8000f8e:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
 8000f92:	4620      	mov	r0, r4
 8000f94:	f7ff fdd0 	bl	8000b38 <d_expression_1>
 8000f98:	2300      	movs	r3, #0
 8000f9a:	212e      	movs	r1, #46	; 0x2e
 8000f9c:	6326      	str	r6, [r4, #48]	; 0x30
 8000f9e:	4602      	mov	r2, r0
 8000fa0:	2800      	cmp	r0, #0
 8000fa2:	d1e8      	bne.n	8000f76 <d_exprlist+0x1e>
 8000fa4:	2000      	movs	r0, #0
 8000fa6:	b002      	add	sp, #8
 8000fa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000fac:	9801      	ldr	r0, [sp, #4]
 8000fae:	3301      	adds	r3, #1
 8000fb0:	60e3      	str	r3, [r4, #12]
 8000fb2:	b002      	add	sp, #8
 8000fb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000fb8:	3201      	adds	r2, #1
 8000fba:	60c2      	str	r2, [r0, #12]
 8000fbc:	212e      	movs	r1, #46	; 0x2e
 8000fbe:	461a      	mov	r2, r3
 8000fc0:	b002      	add	sp, #8
 8000fc2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000fc6:	f7ff b99f 	b.w	8000308 <d_make_comp>
 8000fca:	bf00      	nop

08000fcc <d_template_args_1>:
 8000fcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000fd0:	68c2      	ldr	r2, [r0, #12]
 8000fd2:	f8d0 9028 	ldr.w	r9, [r0, #40]	; 0x28
 8000fd6:	7813      	ldrb	r3, [r2, #0]
 8000fd8:	2b45      	cmp	r3, #69	; 0x45
 8000fda:	b083      	sub	sp, #12
 8000fdc:	4604      	mov	r4, r0
 8000fde:	d04c      	beq.n	800107a <d_template_args_1+0xae>
 8000fe0:	2100      	movs	r1, #0
 8000fe2:	9101      	str	r1, [sp, #4]
 8000fe4:	ad01      	add	r5, sp, #4
 8000fe6:	2601      	movs	r6, #1
 8000fe8:	3b49      	subs	r3, #73	; 0x49
 8000fea:	2b0f      	cmp	r3, #15
 8000fec:	d83c      	bhi.n	8001068 <d_template_args_1+0x9c>
 8000fee:	e8df f003 	tbb	[pc, r3]
 8000ff2:	3636      	.short	0x3636
 8000ff4:	3b3b313b 	.word	0x3b3b313b
 8000ff8:	3b3b3b3b 	.word	0x3b3b3b3b
 8000ffc:	3b3b3b3b 	.word	0x3b3b3b3b
 8001000:	083b      	.short	0x083b
 8001002:	3201      	adds	r2, #1
 8001004:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
 8001008:	60e2      	str	r2, [r4, #12]
 800100a:	6326      	str	r6, [r4, #48]	; 0x30
 800100c:	4620      	mov	r0, r4
 800100e:	f7ff fd93 	bl	8000b38 <d_expression_1>
 8001012:	68e3      	ldr	r3, [r4, #12]
 8001014:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
 8001018:	781a      	ldrb	r2, [r3, #0]
 800101a:	2a45      	cmp	r2, #69	; 0x45
 800101c:	4607      	mov	r7, r0
 800101e:	f103 0301 	add.w	r3, r3, #1
 8001022:	d126      	bne.n	8001072 <d_template_args_1+0xa6>
 8001024:	60e3      	str	r3, [r4, #12]
 8001026:	2300      	movs	r3, #0
 8001028:	212f      	movs	r1, #47	; 0x2f
 800102a:	463a      	mov	r2, r7
 800102c:	4620      	mov	r0, r4
 800102e:	b307      	cbz	r7, 8001072 <d_template_args_1+0xa6>
 8001030:	f7ff f96a 	bl	8000308 <d_make_comp>
 8001034:	6028      	str	r0, [r5, #0]
 8001036:	f100 050c 	add.w	r5, r0, #12
 800103a:	b1d0      	cbz	r0, 8001072 <d_template_args_1+0xa6>
 800103c:	68e2      	ldr	r2, [r4, #12]
 800103e:	7813      	ldrb	r3, [r2, #0]
 8001040:	2b45      	cmp	r3, #69	; 0x45
 8001042:	d1d1      	bne.n	8000fe8 <d_template_args_1+0x1c>
 8001044:	9801      	ldr	r0, [sp, #4]
 8001046:	f8c4 9028 	str.w	r9, [r4, #40]	; 0x28
 800104a:	3201      	adds	r2, #1
 800104c:	60e2      	str	r2, [r4, #12]
 800104e:	b003      	add	sp, #12
 8001050:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001054:	4620      	mov	r0, r4
 8001056:	f7ff fd01 	bl	8000a5c <d_expr_primary>
 800105a:	4607      	mov	r7, r0
 800105c:	e7e3      	b.n	8001026 <d_template_args_1+0x5a>
 800105e:	4620      	mov	r0, r4
 8001060:	f000 f816 	bl	8001090 <d_template_args>
 8001064:	4607      	mov	r7, r0
 8001066:	e7de      	b.n	8001026 <d_template_args_1+0x5a>
 8001068:	4620      	mov	r0, r4
 800106a:	f000 f9bd 	bl	80013e8 <d_type>
 800106e:	4607      	mov	r7, r0
 8001070:	e7d9      	b.n	8001026 <d_template_args_1+0x5a>
 8001072:	2000      	movs	r0, #0
 8001074:	b003      	add	sp, #12
 8001076:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800107a:	3201      	adds	r2, #1
 800107c:	2300      	movs	r3, #0
 800107e:	60c2      	str	r2, [r0, #12]
 8001080:	212f      	movs	r1, #47	; 0x2f
 8001082:	461a      	mov	r2, r3
 8001084:	b003      	add	sp, #12
 8001086:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800108a:	f7ff b93d 	b.w	8000308 <d_make_comp>
 800108e:	bf00      	nop

08001090 <d_template_args>:
 8001090:	68c2      	ldr	r2, [r0, #12]
 8001092:	7813      	ldrb	r3, [r2, #0]
 8001094:	3b49      	subs	r3, #73	; 0x49
 8001096:	2b01      	cmp	r3, #1
 8001098:	d802      	bhi.n	80010a0 <d_template_args+0x10>
 800109a:	3201      	adds	r2, #1
 800109c:	60c2      	str	r2, [r0, #12]
 800109e:	e795      	b.n	8000fcc <d_template_args_1>
 80010a0:	2000      	movs	r0, #0
 80010a2:	4770      	bx	lr

080010a4 <d_name>:
 80010a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80010a8:	68c2      	ldr	r2, [r0, #12]
 80010aa:	7813      	ldrb	r3, [r2, #0]
 80010ac:	3b4e      	subs	r3, #78	; 0x4e
 80010ae:	b085      	sub	sp, #20
 80010b0:	4604      	mov	r4, r0
 80010b2:	2b0c      	cmp	r3, #12
 80010b4:	d846      	bhi.n	8001144 <d_name+0xa0>
 80010b6:	e8df f003 	tbb	[pc, r3]
 80010ba:	4564      	.short	0x4564
 80010bc:	0e454545 	.word	0x0e454545
 80010c0:	45450745 	.word	0x45450745
 80010c4:	4545      	.short	0x4545
 80010c6:	a6          	.byte	0xa6
 80010c7:	00          	.byte	0x00
 80010c8:	f000 ff36 	bl	8001f38 <d_unqualified_name>
 80010cc:	4605      	mov	r5, r0
 80010ce:	4628      	mov	r0, r5
 80010d0:	b005      	add	sp, #20
 80010d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80010d6:	7853      	ldrb	r3, [r2, #1]
 80010d8:	2b74      	cmp	r3, #116	; 0x74
 80010da:	f040 80c8 	bne.w	800126e <d_name+0x1ca>
 80010de:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
 80010e2:	3202      	adds	r2, #2
 80010e4:	428b      	cmp	r3, r1
 80010e6:	60c2      	str	r2, [r0, #12]
 80010e8:	f280 814c 	bge.w	8001384 <d_name+0x2e0>
 80010ec:	6901      	ldr	r1, [r0, #16]
 80010ee:	48b9      	ldr	r0, [pc, #740]	; (80013d4 <d_name+0x330>)
 80010f0:	011a      	lsls	r2, r3, #4
 80010f2:	188d      	adds	r5, r1, r2
 80010f4:	3301      	adds	r3, #1
 80010f6:	6163      	str	r3, [r4, #20]
 80010f8:	2300      	movs	r3, #0
 80010fa:	606b      	str	r3, [r5, #4]
 80010fc:	548b      	strb	r3, [r1, r2]
 80010fe:	2303      	movs	r3, #3
 8001100:	e9c5 0302 	strd	r0, r3, [r5, #8]
 8001104:	4620      	mov	r0, r4
 8001106:	f000 ff17 	bl	8001f38 <d_unqualified_name>
 800110a:	462a      	mov	r2, r5
 800110c:	4603      	mov	r3, r0
 800110e:	2101      	movs	r1, #1
 8001110:	4620      	mov	r0, r4
 8001112:	f7ff f8f9 	bl	8000308 <d_make_comp>
 8001116:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001118:	68e2      	ldr	r2, [r4, #12]
 800111a:	3303      	adds	r3, #3
 800111c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800111e:	7813      	ldrb	r3, [r2, #0]
 8001120:	2b49      	cmp	r3, #73	; 0x49
 8001122:	4605      	mov	r5, r0
 8001124:	d1d3      	bne.n	80010ce <d_name+0x2a>
 8001126:	2800      	cmp	r0, #0
 8001128:	f000 80ab 	beq.w	8001282 <d_name+0x1de>
 800112c:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8001130:	4293      	cmp	r3, r2
 8001132:	f280 80a6 	bge.w	8001282 <d_name+0x1de>
 8001136:	69e1      	ldr	r1, [r4, #28]
 8001138:	1c5a      	adds	r2, r3, #1
 800113a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800113e:	6222      	str	r2, [r4, #32]
 8001140:	4620      	mov	r0, r4
 8001142:	e014      	b.n	800116e <d_name+0xca>
 8001144:	f000 fef8 	bl	8001f38 <d_unqualified_name>
 8001148:	68e3      	ldr	r3, [r4, #12]
 800114a:	781b      	ldrb	r3, [r3, #0]
 800114c:	2b49      	cmp	r3, #73	; 0x49
 800114e:	4605      	mov	r5, r0
 8001150:	d1bd      	bne.n	80010ce <d_name+0x2a>
 8001152:	2800      	cmp	r0, #0
 8001154:	f000 8095 	beq.w	8001282 <d_name+0x1de>
 8001158:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 800115c:	4293      	cmp	r3, r2
 800115e:	f280 8090 	bge.w	8001282 <d_name+0x1de>
 8001162:	69e1      	ldr	r1, [r4, #28]
 8001164:	1c5a      	adds	r2, r3, #1
 8001166:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800116a:	4620      	mov	r0, r4
 800116c:	6222      	str	r2, [r4, #32]
 800116e:	f7ff ff8f 	bl	8001090 <d_template_args>
 8001172:	462a      	mov	r2, r5
 8001174:	4603      	mov	r3, r0
 8001176:	2104      	movs	r1, #4
 8001178:	4620      	mov	r0, r4
 800117a:	f7ff f8c5 	bl	8000308 <d_make_comp>
 800117e:	4605      	mov	r5, r0
 8001180:	e7a5      	b.n	80010ce <d_name+0x2a>
 8001182:	3201      	adds	r2, #1
 8001184:	60c2      	str	r2, [r0, #12]
 8001186:	a903      	add	r1, sp, #12
 8001188:	2201      	movs	r2, #1
 800118a:	f000 fddf 	bl	8001d4c <d_cv_qualifiers>
 800118e:	4607      	mov	r7, r0
 8001190:	2800      	cmp	r0, #0
 8001192:	d076      	beq.n	8001282 <d_name+0x1de>
 8001194:	2100      	movs	r1, #0
 8001196:	4620      	mov	r0, r4
 8001198:	f7ff f8fe 	bl	8000398 <d_ref_qualifier>
 800119c:	68e2      	ldr	r2, [r4, #12]
 800119e:	f8df 923c 	ldr.w	r9, [pc, #572]	; 80013dc <d_name+0x338>
 80011a2:	7815      	ldrb	r5, [r2, #0]
 80011a4:	4680      	mov	r8, r0
 80011a6:	2600      	movs	r6, #0
 80011a8:	2d00      	cmp	r5, #0
 80011aa:	f000 8089 	beq.w	80012c0 <d_name+0x21c>
 80011ae:	2d44      	cmp	r5, #68	; 0x44
 80011b0:	d078      	beq.n	80012a4 <d_name+0x200>
 80011b2:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 80011b6:	b2db      	uxtb	r3, r3
 80011b8:	2b1c      	cmp	r3, #28
 80011ba:	d867      	bhi.n	800128c <d_name+0x1e8>
 80011bc:	fa29 f303 	lsr.w	r3, r9, r3
 80011c0:	07db      	lsls	r3, r3, #31
 80011c2:	f140 8082 	bpl.w	80012ca <d_name+0x226>
 80011c6:	4620      	mov	r0, r4
 80011c8:	f000 feb6 	bl	8001f38 <d_unqualified_name>
 80011cc:	2e00      	cmp	r6, #0
 80011ce:	d073      	beq.n	80012b8 <d_name+0x214>
 80011d0:	2101      	movs	r1, #1
 80011d2:	4603      	mov	r3, r0
 80011d4:	4632      	mov	r2, r6
 80011d6:	4620      	mov	r0, r4
 80011d8:	f7ff f896 	bl	8000308 <d_make_comp>
 80011dc:	4606      	mov	r6, r0
 80011de:	68e2      	ldr	r2, [r4, #12]
 80011e0:	2d53      	cmp	r5, #83	; 0x53
 80011e2:	7811      	ldrb	r1, [r2, #0]
 80011e4:	d00d      	beq.n	8001202 <d_name+0x15e>
 80011e6:	2945      	cmp	r1, #69	; 0x45
 80011e8:	d06d      	beq.n	80012c6 <d_name+0x222>
 80011ea:	2e00      	cmp	r6, #0
 80011ec:	d068      	beq.n	80012c0 <d_name+0x21c>
 80011ee:	e9d4 3108 	ldrd	r3, r1, [r4, #32]
 80011f2:	428b      	cmp	r3, r1
 80011f4:	da64      	bge.n	80012c0 <d_name+0x21c>
 80011f6:	69e1      	ldr	r1, [r4, #28]
 80011f8:	f841 6023 	str.w	r6, [r1, r3, lsl #2]
 80011fc:	3301      	adds	r3, #1
 80011fe:	6223      	str	r3, [r4, #32]
 8001200:	7811      	ldrb	r1, [r2, #0]
 8001202:	460d      	mov	r5, r1
 8001204:	e7d0      	b.n	80011a8 <d_name+0x104>
 8001206:	3201      	adds	r2, #1
 8001208:	60c2      	str	r2, [r0, #12]
 800120a:	2100      	movs	r1, #0
 800120c:	f000 fffe 	bl	800220c <d_encoding>
 8001210:	4605      	mov	r5, r0
 8001212:	2800      	cmp	r0, #0
 8001214:	d035      	beq.n	8001282 <d_name+0x1de>
 8001216:	68e3      	ldr	r3, [r4, #12]
 8001218:	781a      	ldrb	r2, [r3, #0]
 800121a:	2a45      	cmp	r2, #69	; 0x45
 800121c:	d131      	bne.n	8001282 <d_name+0x1de>
 800121e:	1c5a      	adds	r2, r3, #1
 8001220:	60e2      	str	r2, [r4, #12]
 8001222:	785a      	ldrb	r2, [r3, #1]
 8001224:	2a73      	cmp	r2, #115	; 0x73
 8001226:	f000 80af 	beq.w	8001388 <d_name+0x2e4>
 800122a:	2a64      	cmp	r2, #100	; 0x64
 800122c:	d05e      	beq.n	80012ec <d_name+0x248>
 800122e:	4620      	mov	r0, r4
 8001230:	f7ff ff38 	bl	80010a4 <d_name>
 8001234:	4603      	mov	r3, r0
 8001236:	b150      	cbz	r0, 800124e <d_name+0x1aa>
 8001238:	7802      	ldrb	r2, [r0, #0]
 800123a:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
 800123e:	2a45      	cmp	r2, #69	; 0x45
 8001240:	d005      	beq.n	800124e <d_name+0x1aa>
 8001242:	9001      	str	r0, [sp, #4]
 8001244:	4620      	mov	r0, r4
 8001246:	f7ff fb35 	bl	80008b4 <d_discriminator>
 800124a:	9b01      	ldr	r3, [sp, #4]
 800124c:	b1c8      	cbz	r0, 8001282 <d_name+0x1de>
 800124e:	782a      	ldrb	r2, [r5, #0]
 8001250:	2a03      	cmp	r2, #3
 8001252:	d105      	bne.n	8001260 <d_name+0x1bc>
 8001254:	68ea      	ldr	r2, [r5, #12]
 8001256:	7811      	ldrb	r1, [r2, #0]
 8001258:	2929      	cmp	r1, #41	; 0x29
 800125a:	bf04      	itt	eq
 800125c:	2100      	moveq	r1, #0
 800125e:	6091      	streq	r1, [r2, #8]
 8001260:	462a      	mov	r2, r5
 8001262:	4620      	mov	r0, r4
 8001264:	2102      	movs	r1, #2
 8001266:	f7ff f84f 	bl	8000308 <d_make_comp>
 800126a:	4605      	mov	r5, r0
 800126c:	e72f      	b.n	80010ce <d_name+0x2a>
 800126e:	2100      	movs	r1, #0
 8001270:	f7ff fa44 	bl	80006fc <d_substitution>
 8001274:	68e3      	ldr	r3, [r4, #12]
 8001276:	781b      	ldrb	r3, [r3, #0]
 8001278:	2b49      	cmp	r3, #73	; 0x49
 800127a:	4605      	mov	r5, r0
 800127c:	f47f af27 	bne.w	80010ce <d_name+0x2a>
 8001280:	e75e      	b.n	8001140 <d_name+0x9c>
 8001282:	2500      	movs	r5, #0
 8001284:	4628      	mov	r0, r5
 8001286:	b005      	add	sp, #20
 8001288:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800128c:	f1a5 0361 	sub.w	r3, r5, #97	; 0x61
 8001290:	b2db      	uxtb	r3, r3
 8001292:	2b19      	cmp	r3, #25
 8001294:	d865      	bhi.n	8001362 <d_name+0x2be>
 8001296:	4620      	mov	r0, r4
 8001298:	f000 fe4e 	bl	8001f38 <d_unqualified_name>
 800129c:	2e00      	cmp	r6, #0
 800129e:	d197      	bne.n	80011d0 <d_name+0x12c>
 80012a0:	4606      	mov	r6, r0
 80012a2:	e79c      	b.n	80011de <d_name+0x13a>
 80012a4:	7853      	ldrb	r3, [r2, #1]
 80012a6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80012aa:	2b54      	cmp	r3, #84	; 0x54
 80012ac:	4620      	mov	r0, r4
 80012ae:	d18b      	bne.n	80011c8 <d_name+0x124>
 80012b0:	f000 f89a 	bl	80013e8 <d_type>
 80012b4:	2e00      	cmp	r6, #0
 80012b6:	d18b      	bne.n	80011d0 <d_name+0x12c>
 80012b8:	68e2      	ldr	r2, [r4, #12]
 80012ba:	4606      	mov	r6, r0
 80012bc:	7811      	ldrb	r1, [r2, #0]
 80012be:	e792      	b.n	80011e6 <d_name+0x142>
 80012c0:	2500      	movs	r5, #0
 80012c2:	603d      	str	r5, [r7, #0]
 80012c4:	e703      	b.n	80010ce <d_name+0x2a>
 80012c6:	460d      	mov	r5, r1
 80012c8:	e773      	b.n	80011b2 <d_name+0x10e>
 80012ca:	2d49      	cmp	r5, #73	; 0x49
 80012cc:	d077      	beq.n	80013be <d_name+0x31a>
 80012ce:	2d54      	cmp	r5, #84	; 0x54
 80012d0:	f000 8086 	beq.w	80013e0 <d_name+0x33c>
 80012d4:	2d45      	cmp	r5, #69	; 0x45
 80012d6:	d032      	beq.n	800133e <d_name+0x29a>
 80012d8:	2d4d      	cmp	r5, #77	; 0x4d
 80012da:	d1f1      	bne.n	80012c0 <d_name+0x21c>
 80012dc:	2e00      	cmp	r6, #0
 80012de:	d0ef      	beq.n	80012c0 <d_name+0x21c>
 80012e0:	1c53      	adds	r3, r2, #1
 80012e2:	60e3      	str	r3, [r4, #12]
 80012e4:	7851      	ldrb	r1, [r2, #1]
 80012e6:	461a      	mov	r2, r3
 80012e8:	460d      	mov	r5, r1
 80012ea:	e75d      	b.n	80011a8 <d_name+0x104>
 80012ec:	3302      	adds	r3, #2
 80012ee:	60e3      	str	r3, [r4, #12]
 80012f0:	4620      	mov	r0, r4
 80012f2:	f7ff f94b 	bl	800058c <d_compact_number>
 80012f6:	f1b0 0800 	subs.w	r8, r0, #0
 80012fa:	dbc2      	blt.n	8001282 <d_name+0x1de>
 80012fc:	4620      	mov	r0, r4
 80012fe:	f7ff fed1 	bl	80010a4 <d_name>
 8001302:	4606      	mov	r6, r0
 8001304:	b148      	cbz	r0, 800131a <d_name+0x276>
 8001306:	7803      	ldrb	r3, [r0, #0]
 8001308:	f003 03fd 	and.w	r3, r3, #253	; 0xfd
 800130c:	2b45      	cmp	r3, #69	; 0x45
 800130e:	d004      	beq.n	800131a <d_name+0x276>
 8001310:	4620      	mov	r0, r4
 8001312:	f7ff facf 	bl	80008b4 <d_discriminator>
 8001316:	2800      	cmp	r0, #0
 8001318:	d0b3      	beq.n	8001282 <d_name+0x1de>
 800131a:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 800131e:	429a      	cmp	r2, r3
 8001320:	da4b      	bge.n	80013ba <d_name+0x316>
 8001322:	6920      	ldr	r0, [r4, #16]
 8001324:	0111      	lsls	r1, r2, #4
 8001326:	1843      	adds	r3, r0, r1
 8001328:	3201      	adds	r2, #1
 800132a:	f04f 0c00 	mov.w	ip, #0
 800132e:	2746      	movs	r7, #70	; 0x46
 8001330:	f8c3 c004 	str.w	ip, [r3, #4]
 8001334:	6162      	str	r2, [r4, #20]
 8001336:	5447      	strb	r7, [r0, r1]
 8001338:	e9c3 6802 	strd	r6, r8, [r3, #8]
 800133c:	e787      	b.n	800124e <d_name+0x1aa>
 800133e:	603e      	str	r6, [r7, #0]
 8001340:	2e00      	cmp	r6, #0
 8001342:	d09e      	beq.n	8001282 <d_name+0x1de>
 8001344:	f1b8 0f00 	cmp.w	r8, #0
 8001348:	d004      	beq.n	8001354 <d_name+0x2b0>
 800134a:	9b03      	ldr	r3, [sp, #12]
 800134c:	f8c8 3008 	str.w	r3, [r8, #8]
 8001350:	f8cd 800c 	str.w	r8, [sp, #12]
 8001354:	7813      	ldrb	r3, [r2, #0]
 8001356:	2b45      	cmp	r3, #69	; 0x45
 8001358:	d193      	bne.n	8001282 <d_name+0x1de>
 800135a:	3201      	adds	r2, #1
 800135c:	60e2      	str	r2, [r4, #12]
 800135e:	9d03      	ldr	r5, [sp, #12]
 8001360:	e6b5      	b.n	80010ce <d_name+0x2a>
 8001362:	2d55      	cmp	r5, #85	; 0x55
 8001364:	f43f af2f 	beq.w	80011c6 <d_name+0x122>
 8001368:	2d53      	cmp	r5, #83	; 0x53
 800136a:	d1ae      	bne.n	80012ca <d_name+0x226>
 800136c:	2101      	movs	r1, #1
 800136e:	4620      	mov	r0, r4
 8001370:	f7ff f9c4 	bl	80006fc <d_substitution>
 8001374:	2e00      	cmp	r6, #0
 8001376:	f47f af2b 	bne.w	80011d0 <d_name+0x12c>
 800137a:	68e2      	ldr	r2, [r4, #12]
 800137c:	7811      	ldrb	r1, [r2, #0]
 800137e:	4606      	mov	r6, r0
 8001380:	460d      	mov	r5, r1
 8001382:	e711      	b.n	80011a8 <d_name+0x104>
 8001384:	2500      	movs	r5, #0
 8001386:	e6bd      	b.n	8001104 <d_name+0x60>
 8001388:	3302      	adds	r3, #2
 800138a:	60e3      	str	r3, [r4, #12]
 800138c:	4620      	mov	r0, r4
 800138e:	f7ff fa91 	bl	80008b4 <d_discriminator>
 8001392:	2800      	cmp	r0, #0
 8001394:	f43f af75 	beq.w	8001282 <d_name+0x1de>
 8001398:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 800139c:	429a      	cmp	r2, r3
 800139e:	da0c      	bge.n	80013ba <d_name+0x316>
 80013a0:	6920      	ldr	r0, [r4, #16]
 80013a2:	4e0d      	ldr	r6, [pc, #52]	; (80013d8 <d_name+0x334>)
 80013a4:	0111      	lsls	r1, r2, #4
 80013a6:	1843      	adds	r3, r0, r1
 80013a8:	3201      	adds	r2, #1
 80013aa:	6162      	str	r2, [r4, #20]
 80013ac:	2200      	movs	r2, #0
 80013ae:	605a      	str	r2, [r3, #4]
 80013b0:	5442      	strb	r2, [r0, r1]
 80013b2:	220e      	movs	r2, #14
 80013b4:	e9c3 6202 	strd	r6, r2, [r3, #8]
 80013b8:	e749      	b.n	800124e <d_name+0x1aa>
 80013ba:	2300      	movs	r3, #0
 80013bc:	e747      	b.n	800124e <d_name+0x1aa>
 80013be:	2e00      	cmp	r6, #0
 80013c0:	f43f af7e 	beq.w	80012c0 <d_name+0x21c>
 80013c4:	3201      	adds	r2, #1
 80013c6:	60e2      	str	r2, [r4, #12]
 80013c8:	4620      	mov	r0, r4
 80013ca:	f7ff fdff 	bl	8000fcc <d_template_args_1>
 80013ce:	2104      	movs	r1, #4
 80013d0:	e6ff      	b.n	80011d2 <d_name+0x12e>
 80013d2:	bf00      	nop
 80013d4:	08012ca8 	.word	0x08012ca8
 80013d8:	08012c98 	.word	0x08012c98
 80013dc:	100803ff 	.word	0x100803ff
 80013e0:	4620      	mov	r0, r4
 80013e2:	f7ff f8ed 	bl	80005c0 <d_template_param>
 80013e6:	e6f1      	b.n	80011cc <d_name+0x128>

080013e8 <d_type>:
 80013e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013ec:	68c2      	ldr	r2, [r0, #12]
 80013ee:	7813      	ldrb	r3, [r2, #0]
 80013f0:	2b72      	cmp	r3, #114	; 0x72
 80013f2:	b082      	sub	sp, #8
 80013f4:	4604      	mov	r4, r0
 80013f6:	d058      	beq.n	80014aa <d_type+0xc2>
 80013f8:	2b56      	cmp	r3, #86	; 0x56
 80013fa:	d056      	beq.n	80014aa <d_type+0xc2>
 80013fc:	2b4b      	cmp	r3, #75	; 0x4b
 80013fe:	d054      	beq.n	80014aa <d_type+0xc2>
 8001400:	2b44      	cmp	r3, #68	; 0x44
 8001402:	f000 809e 	beq.w	8001542 <d_type+0x15a>
 8001406:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 800140a:	294a      	cmp	r1, #74	; 0x4a
 800140c:	f200 8089 	bhi.w	8001522 <d_type+0x13a>
 8001410:	e8df f011 	tbh	[pc, r1, lsl #1]
 8001414:	01320132 	.word	0x01320132
 8001418:	01320132 	.word	0x01320132
 800141c:	01320132 	.word	0x01320132
 8001420:	01320132 	.word	0x01320132
 8001424:	01320132 	.word	0x01320132
 8001428:	00870087 	.word	0x00870087
 800142c:	00870087 	.word	0x00870087
 8001430:	00870087 	.word	0x00870087
 8001434:	021d0087 	.word	0x021d0087
 8001438:	01490087 	.word	0x01490087
 800143c:	00870087 	.word	0x00870087
 8001440:	016b0165 	.word	0x016b0165
 8001444:	00870087 	.word	0x00870087
 8001448:	00870087 	.word	0x00870087
 800144c:	02050087 	.word	0x02050087
 8001450:	01790132 	.word	0x01790132
 8001454:	00870187 	.word	0x00870187
 8001458:	01a30195 	.word	0x01a30195
 800145c:	01ed01c7 	.word	0x01ed01c7
 8001460:	00870087 	.word	0x00870087
 8001464:	00870087 	.word	0x00870087
 8001468:	00870132 	.word	0x00870132
 800146c:	00870087 	.word	0x00870087
 8001470:	00870087 	.word	0x00870087
 8001474:	01100087 	.word	0x01100087
 8001478:	01100110 	.word	0x01100110
 800147c:	01100110 	.word	0x01100110
 8001480:	01100110 	.word	0x01100110
 8001484:	01100110 	.word	0x01100110
 8001488:	00870110 	.word	0x00870110
 800148c:	01100110 	.word	0x01100110
 8001490:	01100110 	.word	0x01100110
 8001494:	00870087 	.word	0x00870087
 8001498:	01100087 	.word	0x01100087
 800149c:	01570110 	.word	0x01570110
 80014a0:	01100110 	.word	0x01100110
 80014a4:	01100110 	.word	0x01100110
 80014a8:	0110      	.short	0x0110
 80014aa:	2200      	movs	r2, #0
 80014ac:	a901      	add	r1, sp, #4
 80014ae:	4620      	mov	r0, r4
 80014b0:	f000 fc4c 	bl	8001d4c <d_cv_qualifiers>
 80014b4:	4606      	mov	r6, r0
 80014b6:	2800      	cmp	r0, #0
 80014b8:	d033      	beq.n	8001522 <d_type+0x13a>
 80014ba:	68e3      	ldr	r3, [r4, #12]
 80014bc:	781b      	ldrb	r3, [r3, #0]
 80014be:	2b46      	cmp	r3, #70	; 0x46
 80014c0:	4620      	mov	r0, r4
 80014c2:	d03a      	beq.n	800153a <d_type+0x152>
 80014c4:	f7ff ff90 	bl	80013e8 <d_type>
 80014c8:	6030      	str	r0, [r6, #0]
 80014ca:	b350      	cbz	r0, 8001522 <d_type+0x13a>
 80014cc:	7803      	ldrb	r3, [r0, #0]
 80014ce:	9d01      	ldr	r5, [sp, #4]
 80014d0:	3b1f      	subs	r3, #31
 80014d2:	2b01      	cmp	r3, #1
 80014d4:	d92a      	bls.n	800152c <d_type+0x144>
 80014d6:	b325      	cbz	r5, 8001522 <d_type+0x13a>
 80014d8:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 80014dc:	4293      	cmp	r3, r2
 80014de:	da20      	bge.n	8001522 <d_type+0x13a>
 80014e0:	69e1      	ldr	r1, [r4, #28]
 80014e2:	1c5a      	adds	r2, r3, #1
 80014e4:	4628      	mov	r0, r5
 80014e6:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 80014ea:	6222      	str	r2, [r4, #32]
 80014ec:	b002      	add	sp, #8
 80014ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80014f2:	2301      	movs	r3, #1
 80014f4:	6b05      	ldr	r5, [r0, #48]	; 0x30
 80014f6:	6303      	str	r3, [r0, #48]	; 0x30
 80014f8:	f7ff fb1e 	bl	8000b38 <d_expression_1>
 80014fc:	6325      	str	r5, [r4, #48]	; 0x30
 80014fe:	4602      	mov	r2, r0
 8001500:	2300      	movs	r3, #0
 8001502:	2142      	movs	r1, #66	; 0x42
 8001504:	4620      	mov	r0, r4
 8001506:	f7fe feff 	bl	8000308 <d_make_comp>
 800150a:	4605      	mov	r5, r0
 800150c:	9001      	str	r0, [sp, #4]
 800150e:	b140      	cbz	r0, 8001522 <d_type+0x13a>
 8001510:	68e3      	ldr	r3, [r4, #12]
 8001512:	781a      	ldrb	r2, [r3, #0]
 8001514:	b12a      	cbz	r2, 8001522 <d_type+0x13a>
 8001516:	1c5a      	adds	r2, r3, #1
 8001518:	60e2      	str	r2, [r4, #12]
 800151a:	781b      	ldrb	r3, [r3, #0]
 800151c:	2b45      	cmp	r3, #69	; 0x45
 800151e:	f000 80b3 	beq.w	8001688 <d_type+0x2a0>
 8001522:	2500      	movs	r5, #0
 8001524:	4628      	mov	r0, r5
 8001526:	b002      	add	sp, #8
 8001528:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800152c:	6883      	ldr	r3, [r0, #8]
 800152e:	6085      	str	r5, [r0, #8]
 8001530:	6832      	ldr	r2, [r6, #0]
 8001532:	9201      	str	r2, [sp, #4]
 8001534:	6033      	str	r3, [r6, #0]
 8001536:	9d01      	ldr	r5, [sp, #4]
 8001538:	e7cd      	b.n	80014d6 <d_type+0xee>
 800153a:	f000 fcdd 	bl	8001ef8 <d_function_type>
 800153e:	6030      	str	r0, [r6, #0]
 8001540:	e7c3      	b.n	80014ca <d_type+0xe2>
 8001542:	7853      	ldrb	r3, [r2, #1]
 8001544:	f003 01df 	and.w	r1, r3, #223	; 0xdf
 8001548:	294f      	cmp	r1, #79	; 0x4f
 800154a:	d0ae      	beq.n	80014aa <d_type+0xc2>
 800154c:	3b77      	subs	r3, #119	; 0x77
 800154e:	2b01      	cmp	r3, #1
 8001550:	d9ab      	bls.n	80014aa <d_type+0xc2>
 8001552:	1c53      	adds	r3, r2, #1
 8001554:	60c3      	str	r3, [r0, #12]
 8001556:	7853      	ldrb	r3, [r2, #1]
 8001558:	2b00      	cmp	r3, #0
 800155a:	d0e2      	beq.n	8001522 <d_type+0x13a>
 800155c:	1c93      	adds	r3, r2, #2
 800155e:	60c3      	str	r3, [r0, #12]
 8001560:	7853      	ldrb	r3, [r2, #1]
 8001562:	3b46      	subs	r3, #70	; 0x46
 8001564:	2b30      	cmp	r3, #48	; 0x30
 8001566:	d8dc      	bhi.n	8001522 <d_type+0x13a>
 8001568:	a101      	add	r1, pc, #4	; (adr r1, 8001570 <d_type+0x188>)
 800156a:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800156e:	bf00      	nop
 8001570:	08001a35 	.word	0x08001a35
 8001574:	08001523 	.word	0x08001523
 8001578:	08001523 	.word	0x08001523
 800157c:	08001523 	.word	0x08001523
 8001580:	08001523 	.word	0x08001523
 8001584:	08001523 	.word	0x08001523
 8001588:	08001523 	.word	0x08001523
 800158c:	08001523 	.word	0x08001523
 8001590:	08001523 	.word	0x08001523
 8001594:	08001523 	.word	0x08001523
 8001598:	08001523 	.word	0x08001523
 800159c:	08001523 	.word	0x08001523
 80015a0:	08001523 	.word	0x08001523
 80015a4:	08001523 	.word	0x08001523
 80015a8:	080014f3 	.word	0x080014f3
 80015ac:	08001523 	.word	0x08001523
 80015b0:	08001523 	.word	0x08001523
 80015b4:	08001523 	.word	0x08001523
 80015b8:	08001523 	.word	0x08001523
 80015bc:	08001523 	.word	0x08001523
 80015c0:	08001523 	.word	0x08001523
 80015c4:	08001523 	.word	0x08001523
 80015c8:	08001523 	.word	0x08001523
 80015cc:	08001523 	.word	0x08001523
 80015d0:	08001523 	.word	0x08001523
 80015d4:	08001523 	.word	0x08001523
 80015d8:	08001523 	.word	0x08001523
 80015dc:	08001a11 	.word	0x08001a11
 80015e0:	08001523 	.word	0x08001523
 80015e4:	080019ed 	.word	0x080019ed
 80015e8:	080019c5 	.word	0x080019c5
 80015ec:	0800199d 	.word	0x0800199d
 80015f0:	08001975 	.word	0x08001975
 80015f4:	08001523 	.word	0x08001523
 80015f8:	0800194d 	.word	0x0800194d
 80015fc:	08001acb 	.word	0x08001acb
 8001600:	08001523 	.word	0x08001523
 8001604:	08001523 	.word	0x08001523
 8001608:	08001523 	.word	0x08001523
 800160c:	08001523 	.word	0x08001523
 8001610:	08001aa5 	.word	0x08001aa5
 8001614:	08001523 	.word	0x08001523
 8001618:	0800192f 	.word	0x0800192f
 800161c:	08001523 	.word	0x08001523
 8001620:	08001523 	.word	0x08001523
 8001624:	08001907 	.word	0x08001907
 8001628:	080014f3 	.word	0x080014f3
 800162c:	08001523 	.word	0x08001523
 8001630:	080018cd 	.word	0x080018cd
 8001634:	e9d4 1005 	ldrd	r1, r0, [r4, #20]
 8001638:	3b61      	subs	r3, #97	; 0x61
 800163a:	4dc2      	ldr	r5, [pc, #776]	; (8001944 <d_type+0x55c>)
 800163c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001640:	4281      	cmp	r1, r0
 8001642:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8001646:	f280 82ab 	bge.w	8001ba0 <d_type+0x7b8>
 800164a:	6858      	ldr	r0, [r3, #4]
 800164c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800164e:	f8d4 c010 	ldr.w	ip, [r4, #16]
 8001652:	010f      	lsls	r7, r1, #4
 8001654:	eb0c 0507 	add.w	r5, ip, r7
 8001658:	4406      	add	r6, r0
 800165a:	4630      	mov	r0, r6
 800165c:	3201      	adds	r2, #1
 800165e:	3101      	adds	r1, #1
 8001660:	f04f 0e00 	mov.w	lr, #0
 8001664:	2627      	movs	r6, #39	; 0x27
 8001666:	f8c5 e004 	str.w	lr, [r5, #4]
 800166a:	6161      	str	r1, [r4, #20]
 800166c:	f80c 6007 	strb.w	r6, [ip, r7]
 8001670:	60ab      	str	r3, [r5, #8]
 8001672:	60e2      	str	r2, [r4, #12]
 8001674:	62e0      	str	r0, [r4, #44]	; 0x2c
 8001676:	e755      	b.n	8001524 <d_type+0x13c>
 8001678:	4620      	mov	r0, r4
 800167a:	f7ff fd13 	bl	80010a4 <d_name>
 800167e:	4605      	mov	r5, r0
 8001680:	9001      	str	r0, [sp, #4]
 8001682:	2d00      	cmp	r5, #0
 8001684:	f43f af4d 	beq.w	8001522 <d_type+0x13a>
 8001688:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 800168c:	4293      	cmp	r3, r2
 800168e:	f6bf af48 	bge.w	8001522 <d_type+0x13a>
 8001692:	69e1      	ldr	r1, [r4, #28]
 8001694:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 8001698:	9d01      	ldr	r5, [sp, #4]
 800169a:	1c5a      	adds	r2, r3, #1
 800169c:	4628      	mov	r0, r5
 800169e:	6222      	str	r2, [r4, #32]
 80016a0:	b002      	add	sp, #8
 80016a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80016a6:	3201      	adds	r2, #1
 80016a8:	60e2      	str	r2, [r4, #12]
 80016aa:	4620      	mov	r0, r4
 80016ac:	f7ff fe9c 	bl	80013e8 <d_type>
 80016b0:	2300      	movs	r3, #0
 80016b2:	4602      	mov	r2, r0
 80016b4:	2125      	movs	r1, #37	; 0x25
 80016b6:	4620      	mov	r0, r4
 80016b8:	f7fe fe26 	bl	8000308 <d_make_comp>
 80016bc:	4605      	mov	r5, r0
 80016be:	9001      	str	r0, [sp, #4]
 80016c0:	e7df      	b.n	8001682 <d_type+0x29a>
 80016c2:	3201      	adds	r2, #1
 80016c4:	60e2      	str	r2, [r4, #12]
 80016c6:	4620      	mov	r0, r4
 80016c8:	f7fe ff98 	bl	80005fc <d_source_name>
 80016cc:	2300      	movs	r3, #0
 80016ce:	4602      	mov	r2, r0
 80016d0:	2128      	movs	r1, #40	; 0x28
 80016d2:	4620      	mov	r0, r4
 80016d4:	f7fe fe18 	bl	8000308 <d_make_comp>
 80016d8:	4605      	mov	r5, r0
 80016da:	9001      	str	r0, [sp, #4]
 80016dc:	e7d1      	b.n	8001682 <d_type+0x29a>
 80016de:	4620      	mov	r0, r4
 80016e0:	f000 fc0a 	bl	8001ef8 <d_function_type>
 80016e4:	4605      	mov	r5, r0
 80016e6:	9001      	str	r0, [sp, #4]
 80016e8:	e7cb      	b.n	8001682 <d_type+0x29a>
 80016ea:	3201      	adds	r2, #1
 80016ec:	60e2      	str	r2, [r4, #12]
 80016ee:	4620      	mov	r0, r4
 80016f0:	f7ff fe7a 	bl	80013e8 <d_type>
 80016f4:	2300      	movs	r3, #0
 80016f6:	4602      	mov	r2, r0
 80016f8:	2126      	movs	r1, #38	; 0x26
 80016fa:	4620      	mov	r0, r4
 80016fc:	f7fe fe04 	bl	8000308 <d_make_comp>
 8001700:	4605      	mov	r5, r0
 8001702:	9001      	str	r0, [sp, #4]
 8001704:	e7bd      	b.n	8001682 <d_type+0x29a>
 8001706:	3201      	adds	r2, #1
 8001708:	60e2      	str	r2, [r4, #12]
 800170a:	4620      	mov	r0, r4
 800170c:	f7ff fe6c 	bl	80013e8 <d_type>
 8001710:	2300      	movs	r3, #0
 8001712:	4602      	mov	r2, r0
 8001714:	2124      	movs	r1, #36	; 0x24
 8001716:	4620      	mov	r0, r4
 8001718:	f7fe fdf6 	bl	8000308 <d_make_comp>
 800171c:	4605      	mov	r5, r0
 800171e:	9001      	str	r0, [sp, #4]
 8001720:	e7af      	b.n	8001682 <d_type+0x29a>
 8001722:	3201      	adds	r2, #1
 8001724:	60e2      	str	r2, [r4, #12]
 8001726:	4620      	mov	r0, r4
 8001728:	f7ff fe5e 	bl	80013e8 <d_type>
 800172c:	2300      	movs	r3, #0
 800172e:	4602      	mov	r2, r0
 8001730:	2122      	movs	r1, #34	; 0x22
 8001732:	4620      	mov	r0, r4
 8001734:	f7fe fde8 	bl	8000308 <d_make_comp>
 8001738:	4605      	mov	r5, r0
 800173a:	9001      	str	r0, [sp, #4]
 800173c:	e7a1      	b.n	8001682 <d_type+0x29a>
 800173e:	3201      	adds	r2, #1
 8001740:	60e2      	str	r2, [r4, #12]
 8001742:	4620      	mov	r0, r4
 8001744:	f7ff fe50 	bl	80013e8 <d_type>
 8001748:	2300      	movs	r3, #0
 800174a:	4602      	mov	r2, r0
 800174c:	2123      	movs	r1, #35	; 0x23
 800174e:	4620      	mov	r0, r4
 8001750:	f7fe fdda 	bl	8000308 <d_make_comp>
 8001754:	4605      	mov	r5, r0
 8001756:	9001      	str	r0, [sp, #4]
 8001758:	e793      	b.n	8001682 <d_type+0x29a>
 800175a:	7853      	ldrb	r3, [r2, #1]
 800175c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8001760:	2a09      	cmp	r2, #9
 8001762:	d905      	bls.n	8001770 <d_type+0x388>
 8001764:	2b5f      	cmp	r3, #95	; 0x5f
 8001766:	d003      	beq.n	8001770 <d_type+0x388>
 8001768:	3b41      	subs	r3, #65	; 0x41
 800176a:	2b19      	cmp	r3, #25
 800176c:	f200 81dd 	bhi.w	8001b2a <d_type+0x742>
 8001770:	2100      	movs	r1, #0
 8001772:	4620      	mov	r0, r4
 8001774:	f7fe ffc2 	bl	80006fc <d_substitution>
 8001778:	68e3      	ldr	r3, [r4, #12]
 800177a:	9001      	str	r0, [sp, #4]
 800177c:	781a      	ldrb	r2, [r3, #0]
 800177e:	2a49      	cmp	r2, #73	; 0x49
 8001780:	4605      	mov	r5, r0
 8001782:	f47f aecf 	bne.w	8001524 <d_type+0x13c>
 8001786:	3301      	adds	r3, #1
 8001788:	60e3      	str	r3, [r4, #12]
 800178a:	4620      	mov	r0, r4
 800178c:	f7ff fc1e 	bl	8000fcc <d_template_args_1>
 8001790:	4603      	mov	r3, r0
 8001792:	462a      	mov	r2, r5
 8001794:	2104      	movs	r1, #4
 8001796:	4620      	mov	r0, r4
 8001798:	f7fe fdb6 	bl	8000308 <d_make_comp>
 800179c:	4605      	mov	r5, r0
 800179e:	9001      	str	r0, [sp, #4]
 80017a0:	e76f      	b.n	8001682 <d_type+0x29a>
 80017a2:	4620      	mov	r0, r4
 80017a4:	f7fe ff0c 	bl	80005c0 <d_template_param>
 80017a8:	68e6      	ldr	r6, [r4, #12]
 80017aa:	9001      	str	r0, [sp, #4]
 80017ac:	7833      	ldrb	r3, [r6, #0]
 80017ae:	2b49      	cmp	r3, #73	; 0x49
 80017b0:	4605      	mov	r5, r0
 80017b2:	f47f af66 	bne.w	8001682 <d_type+0x29a>
 80017b6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80017b8:	2b00      	cmp	r3, #0
 80017ba:	f040 81c3 	bne.w	8001b44 <d_type+0x75c>
 80017be:	2800      	cmp	r0, #0
 80017c0:	f43f aeaf 	beq.w	8001522 <d_type+0x13a>
 80017c4:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
 80017c8:	428a      	cmp	r2, r1
 80017ca:	f6bf aeaa 	bge.w	8001522 <d_type+0x13a>
 80017ce:	69e1      	ldr	r1, [r4, #28]
 80017d0:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 80017d4:	3201      	adds	r2, #1
 80017d6:	6222      	str	r2, [r4, #32]
 80017d8:	7832      	ldrb	r2, [r6, #0]
 80017da:	3a49      	subs	r2, #73	; 0x49
 80017dc:	2a01      	cmp	r2, #1
 80017de:	d8d8      	bhi.n	8001792 <d_type+0x3aa>
 80017e0:	3601      	adds	r6, #1
 80017e2:	60e6      	str	r6, [r4, #12]
 80017e4:	4620      	mov	r0, r4
 80017e6:	f7ff fbf1 	bl	8000fcc <d_template_args_1>
 80017ea:	4603      	mov	r3, r0
 80017ec:	e7d1      	b.n	8001792 <d_type+0x3aa>
 80017ee:	3201      	adds	r2, #1
 80017f0:	60e2      	str	r2, [r4, #12]
 80017f2:	4620      	mov	r0, r4
 80017f4:	f7fe ff02 	bl	80005fc <d_source_name>
 80017f8:	68e3      	ldr	r3, [r4, #12]
 80017fa:	9001      	str	r0, [sp, #4]
 80017fc:	781a      	ldrb	r2, [r3, #0]
 80017fe:	2a49      	cmp	r2, #73	; 0x49
 8001800:	4605      	mov	r5, r0
 8001802:	f000 8177 	beq.w	8001af4 <d_type+0x70c>
 8001806:	4620      	mov	r0, r4
 8001808:	f7ff fdee 	bl	80013e8 <d_type>
 800180c:	9b01      	ldr	r3, [sp, #4]
 800180e:	4602      	mov	r2, r0
 8001810:	2121      	movs	r1, #33	; 0x21
 8001812:	4620      	mov	r0, r4
 8001814:	f7fe fd78 	bl	8000308 <d_make_comp>
 8001818:	4605      	mov	r5, r0
 800181a:	9001      	str	r0, [sp, #4]
 800181c:	e731      	b.n	8001682 <d_type+0x29a>
 800181e:	3201      	adds	r2, #1
 8001820:	60e2      	str	r2, [r4, #12]
 8001822:	4620      	mov	r0, r4
 8001824:	f7ff fde0 	bl	80013e8 <d_type>
 8001828:	4605      	mov	r5, r0
 800182a:	2800      	cmp	r0, #0
 800182c:	f43f ae79 	beq.w	8001522 <d_type+0x13a>
 8001830:	4620      	mov	r0, r4
 8001832:	f7ff fdd9 	bl	80013e8 <d_type>
 8001836:	4603      	mov	r3, r0
 8001838:	2800      	cmp	r0, #0
 800183a:	f43f ae72 	beq.w	8001522 <d_type+0x13a>
 800183e:	462a      	mov	r2, r5
 8001840:	212b      	movs	r1, #43	; 0x2b
 8001842:	4620      	mov	r0, r4
 8001844:	f7fe fd60 	bl	8000308 <d_make_comp>
 8001848:	4605      	mov	r5, r0
 800184a:	9001      	str	r0, [sp, #4]
 800184c:	e719      	b.n	8001682 <d_type+0x29a>
 800184e:	1c55      	adds	r5, r2, #1
 8001850:	60e5      	str	r5, [r4, #12]
 8001852:	7853      	ldrb	r3, [r2, #1]
 8001854:	2b5f      	cmp	r3, #95	; 0x5f
 8001856:	f000 814b 	beq.w	8001af0 <d_type+0x708>
 800185a:	3b30      	subs	r3, #48	; 0x30
 800185c:	2b09      	cmp	r3, #9
 800185e:	f200 8156 	bhi.w	8001b0e <d_type+0x726>
 8001862:	4628      	mov	r0, r5
 8001864:	e000      	b.n	8001868 <d_type+0x480>
 8001866:	4608      	mov	r0, r1
 8001868:	1c41      	adds	r1, r0, #1
 800186a:	60e1      	str	r1, [r4, #12]
 800186c:	7843      	ldrb	r3, [r0, #1]
 800186e:	3b30      	subs	r3, #48	; 0x30
 8001870:	2b09      	cmp	r3, #9
 8001872:	d9f8      	bls.n	8001866 <d_type+0x47e>
 8001874:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8001878:	4293      	cmp	r3, r2
 800187a:	eba1 0705 	sub.w	r7, r1, r5
 800187e:	f6bf ae50 	bge.w	8001522 <d_type+0x13a>
 8001882:	f8d4 e010 	ldr.w	lr, [r4, #16]
 8001886:	ea4f 1c03 	mov.w	ip, r3, lsl #4
 800188a:	eb0e 060c 	add.w	r6, lr, ip
 800188e:	3301      	adds	r3, #1
 8001890:	2200      	movs	r2, #0
 8001892:	6072      	str	r2, [r6, #4]
 8001894:	6163      	str	r3, [r4, #20]
 8001896:	2f00      	cmp	r7, #0
 8001898:	f43f ae43 	beq.w	8001522 <d_type+0x13a>
 800189c:	6072      	str	r2, [r6, #4]
 800189e:	f80e 200c 	strb.w	r2, [lr, ip]
 80018a2:	e9c6 5702 	strd	r5, r7, [r6, #8]
 80018a6:	7843      	ldrb	r3, [r0, #1]
 80018a8:	2b5f      	cmp	r3, #95	; 0x5f
 80018aa:	f47f ae3a 	bne.w	8001522 <d_type+0x13a>
 80018ae:	460d      	mov	r5, r1
 80018b0:	3501      	adds	r5, #1
 80018b2:	60e5      	str	r5, [r4, #12]
 80018b4:	4620      	mov	r0, r4
 80018b6:	f7ff fd97 	bl	80013e8 <d_type>
 80018ba:	4632      	mov	r2, r6
 80018bc:	4603      	mov	r3, r0
 80018be:	212a      	movs	r1, #42	; 0x2a
 80018c0:	4620      	mov	r0, r4
 80018c2:	f7fe fd21 	bl	8000308 <d_make_comp>
 80018c6:	4605      	mov	r5, r0
 80018c8:	9001      	str	r0, [sp, #4]
 80018ca:	e6da      	b.n	8001682 <d_type+0x29a>
 80018cc:	7893      	ldrb	r3, [r2, #2]
 80018ce:	2b5f      	cmp	r3, #95	; 0x5f
 80018d0:	f000 815c 	beq.w	8001b8c <d_type+0x7a4>
 80018d4:	f7fe fe42 	bl	800055c <d_number_component>
 80018d8:	4605      	mov	r5, r0
 80018da:	2d00      	cmp	r5, #0
 80018dc:	f43f ae21 	beq.w	8001522 <d_type+0x13a>
 80018e0:	68e3      	ldr	r3, [r4, #12]
 80018e2:	781a      	ldrb	r2, [r3, #0]
 80018e4:	2a5f      	cmp	r2, #95	; 0x5f
 80018e6:	f47f ae1c 	bne.w	8001522 <d_type+0x13a>
 80018ea:	3301      	adds	r3, #1
 80018ec:	60e3      	str	r3, [r4, #12]
 80018ee:	4620      	mov	r0, r4
 80018f0:	f7ff fd7a 	bl	80013e8 <d_type>
 80018f4:	462a      	mov	r2, r5
 80018f6:	4603      	mov	r3, r0
 80018f8:	212d      	movs	r1, #45	; 0x2d
 80018fa:	4620      	mov	r0, r4
 80018fc:	f7fe fd04 	bl	8000308 <d_make_comp>
 8001900:	4605      	mov	r5, r0
 8001902:	9001      	str	r0, [sp, #4]
 8001904:	e6bd      	b.n	8001682 <d_type+0x29a>
 8001906:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 800190a:	4293      	cmp	r3, r2
 800190c:	f280 8148 	bge.w	8001ba0 <d_type+0x7b8>
 8001910:	6900      	ldr	r0, [r0, #16]
 8001912:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8001914:	0119      	lsls	r1, r3, #4
 8001916:	1845      	adds	r5, r0, r1
 8001918:	3301      	adds	r3, #1
 800191a:	2600      	movs	r6, #0
 800191c:	606e      	str	r6, [r5, #4]
 800191e:	3208      	adds	r2, #8
 8001920:	6163      	str	r3, [r4, #20]
 8001922:	2627      	movs	r6, #39	; 0x27
 8001924:	4b08      	ldr	r3, [pc, #32]	; (8001948 <d_type+0x560>)
 8001926:	5446      	strb	r6, [r0, r1]
 8001928:	60ab      	str	r3, [r5, #8]
 800192a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800192c:	e5fa      	b.n	8001524 <d_type+0x13c>
 800192e:	f7ff fd5b 	bl	80013e8 <d_type>
 8001932:	2300      	movs	r3, #0
 8001934:	4602      	mov	r2, r0
 8001936:	214a      	movs	r1, #74	; 0x4a
 8001938:	4620      	mov	r0, r4
 800193a:	f7fe fce5 	bl	8000308 <d_make_comp>
 800193e:	4605      	mov	r5, r0
 8001940:	9001      	str	r0, [sp, #4]
 8001942:	e69e      	b.n	8001682 <d_type+0x29a>
 8001944:	08012084 	.word	0x08012084
 8001948:	080122dc 	.word	0x080122dc
 800194c:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001950:	4293      	cmp	r3, r2
 8001952:	f280 8125 	bge.w	8001ba0 <d_type+0x7b8>
 8001956:	6900      	ldr	r0, [r0, #16]
 8001958:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800195a:	0119      	lsls	r1, r3, #4
 800195c:	1845      	adds	r5, r0, r1
 800195e:	3301      	adds	r3, #1
 8001960:	2600      	movs	r6, #0
 8001962:	606e      	str	r6, [r5, #4]
 8001964:	3204      	adds	r2, #4
 8001966:	6163      	str	r3, [r4, #20]
 8001968:	2627      	movs	r6, #39	; 0x27
 800196a:	4b91      	ldr	r3, [pc, #580]	; (8001bb0 <d_type+0x7c8>)
 800196c:	5446      	strb	r6, [r0, r1]
 800196e:	60ab      	str	r3, [r5, #8]
 8001970:	62e2      	str	r2, [r4, #44]	; 0x2c
 8001972:	e5d7      	b.n	8001524 <d_type+0x13c>
 8001974:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001978:	4293      	cmp	r3, r2
 800197a:	f280 8111 	bge.w	8001ba0 <d_type+0x7b8>
 800197e:	6900      	ldr	r0, [r0, #16]
 8001980:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8001982:	0119      	lsls	r1, r3, #4
 8001984:	1845      	adds	r5, r0, r1
 8001986:	3301      	adds	r3, #1
 8001988:	2600      	movs	r6, #0
 800198a:	606e      	str	r6, [r5, #4]
 800198c:	3209      	adds	r2, #9
 800198e:	6163      	str	r3, [r4, #20]
 8001990:	2627      	movs	r6, #39	; 0x27
 8001992:	4b88      	ldr	r3, [pc, #544]	; (8001bb4 <d_type+0x7cc>)
 8001994:	5446      	strb	r6, [r0, r1]
 8001996:	60ab      	str	r3, [r5, #8]
 8001998:	62e2      	str	r2, [r4, #44]	; 0x2c
 800199a:	e5c3      	b.n	8001524 <d_type+0x13c>
 800199c:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 80019a0:	4293      	cmp	r3, r2
 80019a2:	f280 80fd 	bge.w	8001ba0 <d_type+0x7b8>
 80019a6:	6900      	ldr	r0, [r0, #16]
 80019a8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80019aa:	0119      	lsls	r1, r3, #4
 80019ac:	1845      	adds	r5, r0, r1
 80019ae:	3301      	adds	r3, #1
 80019b0:	2600      	movs	r6, #0
 80019b2:	606e      	str	r6, [r5, #4]
 80019b4:	320a      	adds	r2, #10
 80019b6:	6163      	str	r3, [r4, #20]
 80019b8:	2627      	movs	r6, #39	; 0x27
 80019ba:	4b7f      	ldr	r3, [pc, #508]	; (8001bb8 <d_type+0x7d0>)
 80019bc:	5446      	strb	r6, [r0, r1]
 80019be:	60ab      	str	r3, [r5, #8]
 80019c0:	62e2      	str	r2, [r4, #44]	; 0x2c
 80019c2:	e5af      	b.n	8001524 <d_type+0x13c>
 80019c4:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 80019c8:	4293      	cmp	r3, r2
 80019ca:	f280 80e9 	bge.w	8001ba0 <d_type+0x7b8>
 80019ce:	6900      	ldr	r0, [r0, #16]
 80019d0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80019d2:	0119      	lsls	r1, r3, #4
 80019d4:	1845      	adds	r5, r0, r1
 80019d6:	3301      	adds	r3, #1
 80019d8:	2600      	movs	r6, #0
 80019da:	606e      	str	r6, [r5, #4]
 80019dc:	3209      	adds	r2, #9
 80019de:	6163      	str	r3, [r4, #20]
 80019e0:	2627      	movs	r6, #39	; 0x27
 80019e2:	4b76      	ldr	r3, [pc, #472]	; (8001bbc <d_type+0x7d4>)
 80019e4:	5446      	strb	r6, [r0, r1]
 80019e6:	60ab      	str	r3, [r5, #8]
 80019e8:	62e2      	str	r2, [r4, #44]	; 0x2c
 80019ea:	e59b      	b.n	8001524 <d_type+0x13c>
 80019ec:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 80019f0:	4293      	cmp	r3, r2
 80019f2:	f6bf ad96 	bge.w	8001522 <d_type+0x13a>
 80019f6:	6901      	ldr	r1, [r0, #16]
 80019f8:	4e71      	ldr	r6, [pc, #452]	; (8001bc0 <d_type+0x7d8>)
 80019fa:	011a      	lsls	r2, r3, #4
 80019fc:	188d      	adds	r5, r1, r2
 80019fe:	3301      	adds	r3, #1
 8001a00:	6143      	str	r3, [r0, #20]
 8001a02:	2300      	movs	r3, #0
 8001a04:	200e      	movs	r0, #14
 8001a06:	606b      	str	r3, [r5, #4]
 8001a08:	548b      	strb	r3, [r1, r2]
 8001a0a:	e9c5 6002 	strd	r6, r0, [r5, #8]
 8001a0e:	e589      	b.n	8001524 <d_type+0x13c>
 8001a10:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001a14:	4293      	cmp	r3, r2
 8001a16:	f6bf ad84 	bge.w	8001522 <d_type+0x13a>
 8001a1a:	6901      	ldr	r1, [r0, #16]
 8001a1c:	4e69      	ldr	r6, [pc, #420]	; (8001bc4 <d_type+0x7dc>)
 8001a1e:	011a      	lsls	r2, r3, #4
 8001a20:	188d      	adds	r5, r1, r2
 8001a22:	3301      	adds	r3, #1
 8001a24:	6143      	str	r3, [r0, #20]
 8001a26:	2300      	movs	r3, #0
 8001a28:	2004      	movs	r0, #4
 8001a2a:	606b      	str	r3, [r5, #4]
 8001a2c:	548b      	strb	r3, [r1, r2]
 8001a2e:	e9c5 6002 	strd	r6, r0, [r5, #8]
 8001a32:	e577      	b.n	8001524 <d_type+0x13c>
 8001a34:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
 8001a38:	428b      	cmp	r3, r1
 8001a3a:	f280 80b5 	bge.w	8001ba8 <d_type+0x7c0>
 8001a3e:	6905      	ldr	r5, [r0, #16]
 8001a40:	0118      	lsls	r0, r3, #4
 8001a42:	1829      	adds	r1, r5, r0
 8001a44:	3301      	adds	r3, #1
 8001a46:	2700      	movs	r7, #0
 8001a48:	262c      	movs	r6, #44	; 0x2c
 8001a4a:	604f      	str	r7, [r1, #4]
 8001a4c:	9101      	str	r1, [sp, #4]
 8001a4e:	6163      	str	r3, [r4, #20]
 8001a50:	542e      	strb	r6, [r5, r0]
 8001a52:	7893      	ldrb	r3, [r2, #2]
 8001a54:	3b30      	subs	r3, #48	; 0x30
 8001a56:	b2db      	uxtb	r3, r3
 8001a58:	2b09      	cmp	r3, #9
 8001a5a:	bf94      	ite	ls
 8001a5c:	2301      	movls	r3, #1
 8001a5e:	463b      	movhi	r3, r7
 8001a60:	818b      	strh	r3, [r1, #12]
 8001a62:	d803      	bhi.n	8001a6c <d_type+0x684>
 8001a64:	f104 000c 	add.w	r0, r4, #12
 8001a68:	f7fe fd34 	bl	80004d4 <d_number.isra.0>
 8001a6c:	4620      	mov	r0, r4
 8001a6e:	9d01      	ldr	r5, [sp, #4]
 8001a70:	f7ff fcba 	bl	80013e8 <d_type>
 8001a74:	9b01      	ldr	r3, [sp, #4]
 8001a76:	60a8      	str	r0, [r5, #8]
 8001a78:	689b      	ldr	r3, [r3, #8]
 8001a7a:	2b00      	cmp	r3, #0
 8001a7c:	f43f ad51 	beq.w	8001522 <d_type+0x13a>
 8001a80:	f104 000c 	add.w	r0, r4, #12
 8001a84:	f7fe fd26 	bl	80004d4 <d_number.isra.0>
 8001a88:	68e2      	ldr	r2, [r4, #12]
 8001a8a:	7813      	ldrb	r3, [r2, #0]
 8001a8c:	b113      	cbz	r3, 8001a94 <d_type+0x6ac>
 8001a8e:	1c53      	adds	r3, r2, #1
 8001a90:	60e3      	str	r3, [r4, #12]
 8001a92:	7813      	ldrb	r3, [r2, #0]
 8001a94:	9d01      	ldr	r5, [sp, #4]
 8001a96:	f1a3 0373 	sub.w	r3, r3, #115	; 0x73
 8001a9a:	fab3 f383 	clz	r3, r3
 8001a9e:	095b      	lsrs	r3, r3, #5
 8001aa0:	81eb      	strh	r3, [r5, #14]
 8001aa2:	e53f      	b.n	8001524 <d_type+0x13c>
 8001aa4:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001aa8:	4293      	cmp	r3, r2
 8001aaa:	da79      	bge.n	8001ba0 <d_type+0x7b8>
 8001aac:	6900      	ldr	r0, [r0, #16]
 8001aae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8001ab0:	0119      	lsls	r1, r3, #4
 8001ab2:	1845      	adds	r5, r0, r1
 8001ab4:	3301      	adds	r3, #1
 8001ab6:	2600      	movs	r6, #0
 8001ab8:	606e      	str	r6, [r5, #4]
 8001aba:	3211      	adds	r2, #17
 8001abc:	6163      	str	r3, [r4, #20]
 8001abe:	2627      	movs	r6, #39	; 0x27
 8001ac0:	4b41      	ldr	r3, [pc, #260]	; (8001bc8 <d_type+0x7e0>)
 8001ac2:	5446      	strb	r6, [r0, r1]
 8001ac4:	60ab      	str	r3, [r5, #8]
 8001ac6:	62e2      	str	r2, [r4, #44]	; 0x2c
 8001ac8:	e52c      	b.n	8001524 <d_type+0x13c>
 8001aca:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001ace:	4293      	cmp	r3, r2
 8001ad0:	da66      	bge.n	8001ba0 <d_type+0x7b8>
 8001ad2:	6900      	ldr	r0, [r0, #16]
 8001ad4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8001ad6:	0119      	lsls	r1, r3, #4
 8001ad8:	1845      	adds	r5, r0, r1
 8001ada:	3301      	adds	r3, #1
 8001adc:	2600      	movs	r6, #0
 8001ade:	606e      	str	r6, [r5, #4]
 8001ae0:	3208      	adds	r2, #8
 8001ae2:	6163      	str	r3, [r4, #20]
 8001ae4:	2627      	movs	r6, #39	; 0x27
 8001ae6:	4b39      	ldr	r3, [pc, #228]	; (8001bcc <d_type+0x7e4>)
 8001ae8:	5446      	strb	r6, [r0, r1]
 8001aea:	60ab      	str	r3, [r5, #8]
 8001aec:	62e2      	str	r2, [r4, #44]	; 0x2c
 8001aee:	e519      	b.n	8001524 <d_type+0x13c>
 8001af0:	2600      	movs	r6, #0
 8001af2:	e6dd      	b.n	80018b0 <d_type+0x4c8>
 8001af4:	3301      	adds	r3, #1
 8001af6:	60e3      	str	r3, [r4, #12]
 8001af8:	4620      	mov	r0, r4
 8001afa:	f7ff fa67 	bl	8000fcc <d_template_args_1>
 8001afe:	462a      	mov	r2, r5
 8001b00:	4603      	mov	r3, r0
 8001b02:	2104      	movs	r1, #4
 8001b04:	4620      	mov	r0, r4
 8001b06:	f7fe fbff 	bl	8000308 <d_make_comp>
 8001b0a:	9001      	str	r0, [sp, #4]
 8001b0c:	e67b      	b.n	8001806 <d_type+0x41e>
 8001b0e:	2301      	movs	r3, #1
 8001b10:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8001b12:	6323      	str	r3, [r4, #48]	; 0x30
 8001b14:	4620      	mov	r0, r4
 8001b16:	f7ff f80f 	bl	8000b38 <d_expression_1>
 8001b1a:	6325      	str	r5, [r4, #48]	; 0x30
 8001b1c:	4606      	mov	r6, r0
 8001b1e:	2800      	cmp	r0, #0
 8001b20:	f43f acff 	beq.w	8001522 <d_type+0x13a>
 8001b24:	68e1      	ldr	r1, [r4, #12]
 8001b26:	780b      	ldrb	r3, [r1, #0]
 8001b28:	e6be      	b.n	80018a8 <d_type+0x4c0>
 8001b2a:	4620      	mov	r0, r4
 8001b2c:	f7ff faba 	bl	80010a4 <d_name>
 8001b30:	4605      	mov	r5, r0
 8001b32:	9001      	str	r0, [sp, #4]
 8001b34:	2800      	cmp	r0, #0
 8001b36:	f43f acf4 	beq.w	8001522 <d_type+0x13a>
 8001b3a:	7803      	ldrb	r3, [r0, #0]
 8001b3c:	2b18      	cmp	r3, #24
 8001b3e:	f47f ada3 	bne.w	8001688 <d_type+0x2a0>
 8001b42:	e4ef      	b.n	8001524 <d_type+0x13c>
 8001b44:	1c73      	adds	r3, r6, #1
 8001b46:	60e3      	str	r3, [r4, #12]
 8001b48:	4620      	mov	r0, r4
 8001b4a:	f8d4 8014 	ldr.w	r8, [r4, #20]
 8001b4e:	6a27      	ldr	r7, [r4, #32]
 8001b50:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 8001b52:	f7ff fa3b 	bl	8000fcc <d_template_args_1>
 8001b56:	68e2      	ldr	r2, [r4, #12]
 8001b58:	7812      	ldrb	r2, [r2, #0]
 8001b5a:	2a49      	cmp	r2, #73	; 0x49
 8001b5c:	d006      	beq.n	8001b6c <d_type+0x784>
 8001b5e:	62e5      	str	r5, [r4, #44]	; 0x2c
 8001b60:	60e6      	str	r6, [r4, #12]
 8001b62:	f8c4 8014 	str.w	r8, [r4, #20]
 8001b66:	6227      	str	r7, [r4, #32]
 8001b68:	9d01      	ldr	r5, [sp, #4]
 8001b6a:	e58a      	b.n	8001682 <d_type+0x29a>
 8001b6c:	9a01      	ldr	r2, [sp, #4]
 8001b6e:	2a00      	cmp	r2, #0
 8001b70:	f43f acd7 	beq.w	8001522 <d_type+0x13a>
 8001b74:	e9d4 1308 	ldrd	r1, r3, [r4, #32]
 8001b78:	4299      	cmp	r1, r3
 8001b7a:	f6bf acd2 	bge.w	8001522 <d_type+0x13a>
 8001b7e:	69e6      	ldr	r6, [r4, #28]
 8001b80:	1c4d      	adds	r5, r1, #1
 8001b82:	f846 2021 	str.w	r2, [r6, r1, lsl #2]
 8001b86:	4603      	mov	r3, r0
 8001b88:	6225      	str	r5, [r4, #32]
 8001b8a:	e603      	b.n	8001794 <d_type+0x3ac>
 8001b8c:	3203      	adds	r2, #3
 8001b8e:	2301      	movs	r3, #1
 8001b90:	6b06      	ldr	r6, [r0, #48]	; 0x30
 8001b92:	60c2      	str	r2, [r0, #12]
 8001b94:	6303      	str	r3, [r0, #48]	; 0x30
 8001b96:	f7fe ffcf 	bl	8000b38 <d_expression_1>
 8001b9a:	6326      	str	r6, [r4, #48]	; 0x30
 8001b9c:	4605      	mov	r5, r0
 8001b9e:	e69c      	b.n	80018da <d_type+0x4f2>
 8001ba0:	2300      	movs	r3, #0
 8001ba2:	9301      	str	r3, [sp, #4]
 8001ba4:	689b      	ldr	r3, [r3, #8]
 8001ba6:	deff      	udf	#255	; 0xff
 8001ba8:	2300      	movs	r3, #0
 8001baa:	701b      	strb	r3, [r3, #0]
 8001bac:	deff      	udf	#255	; 0xff
 8001bae:	bf00      	nop
 8001bb0:	080122c8 	.word	0x080122c8
 8001bb4:	0801228c 	.word	0x0801228c
 8001bb8:	080122b4 	.word	0x080122b4
 8001bbc:	080122a0 	.word	0x080122a0
 8001bc0:	08012cb4 	.word	0x08012cb4
 8001bc4:	08012cac 	.word	0x08012cac
 8001bc8:	08012304 	.word	0x08012304
 8001bcc:	080122f0 	.word	0x080122f0

08001bd0 <d_operator_name>:
 8001bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001bd2:	68c3      	ldr	r3, [r0, #12]
 8001bd4:	781e      	ldrb	r6, [r3, #0]
 8001bd6:	4686      	mov	lr, r0
 8001bd8:	bb56      	cbnz	r6, 8001c30 <d_operator_name+0x60>
 8001bda:	f04f 0c00 	mov.w	ip, #0
 8001bde:	4c39      	ldr	r4, [pc, #228]	; (8001cc4 <d_operator_name+0xf4>)
 8001be0:	2043      	movs	r0, #67	; 0x43
 8001be2:	2200      	movs	r2, #0
 8001be4:	1a83      	subs	r3, r0, r2
 8001be6:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8001bea:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8001bee:	0119      	lsls	r1, r3, #4
 8001bf0:	1867      	adds	r7, r4, r1
 8001bf2:	5861      	ldr	r1, [r4, r1]
 8001bf4:	780d      	ldrb	r5, [r1, #0]
 8001bf6:	42b5      	cmp	r5, r6
 8001bf8:	d006      	beq.n	8001c08 <d_operator_name+0x38>
 8001bfa:	bf94      	ite	ls
 8001bfc:	1c5a      	addls	r2, r3, #1
 8001bfe:	4618      	movhi	r0, r3
 8001c00:	4282      	cmp	r2, r0
 8001c02:	d1ef      	bne.n	8001be4 <d_operator_name+0x14>
 8001c04:	2000      	movs	r0, #0
 8001c06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001c08:	7849      	ldrb	r1, [r1, #1]
 8001c0a:	4561      	cmp	r1, ip
 8001c0c:	d1f5      	bne.n	8001bfa <d_operator_name+0x2a>
 8001c0e:	e9de 3205 	ldrd	r3, r2, [lr, #20]
 8001c12:	4293      	cmp	r3, r2
 8001c14:	daf6      	bge.n	8001c04 <d_operator_name+0x34>
 8001c16:	f8de 1010 	ldr.w	r1, [lr, #16]
 8001c1a:	011a      	lsls	r2, r3, #4
 8001c1c:	1888      	adds	r0, r1, r2
 8001c1e:	3301      	adds	r3, #1
 8001c20:	2500      	movs	r5, #0
 8001c22:	2431      	movs	r4, #49	; 0x31
 8001c24:	6045      	str	r5, [r0, #4]
 8001c26:	f8ce 3014 	str.w	r3, [lr, #20]
 8001c2a:	548c      	strb	r4, [r1, r2]
 8001c2c:	6087      	str	r7, [r0, #8]
 8001c2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001c30:	1c5a      	adds	r2, r3, #1
 8001c32:	60c2      	str	r2, [r0, #12]
 8001c34:	f893 c001 	ldrb.w	ip, [r3, #1]
 8001c38:	781e      	ldrb	r6, [r3, #0]
 8001c3a:	f1bc 0f00 	cmp.w	ip, #0
 8001c3e:	d021      	beq.n	8001c84 <d_operator_name+0xb4>
 8001c40:	1c9a      	adds	r2, r3, #2
 8001c42:	60c2      	str	r2, [r0, #12]
 8001c44:	2e76      	cmp	r6, #118	; 0x76
 8001c46:	4604      	mov	r4, r0
 8001c48:	f893 c001 	ldrb.w	ip, [r3, #1]
 8001c4c:	d11d      	bne.n	8001c8a <d_operator_name+0xba>
 8001c4e:	f1ac 0530 	sub.w	r5, ip, #48	; 0x30
 8001c52:	b2eb      	uxtb	r3, r5
 8001c54:	2b09      	cmp	r3, #9
 8001c56:	d8c2      	bhi.n	8001bde <d_operator_name+0xe>
 8001c58:	f7fe fcd0 	bl	80005fc <d_source_name>
 8001c5c:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8001c60:	428b      	cmp	r3, r1
 8001c62:	4602      	mov	r2, r0
 8001c64:	dace      	bge.n	8001c04 <d_operator_name+0x34>
 8001c66:	6926      	ldr	r6, [r4, #16]
 8001c68:	0119      	lsls	r1, r3, #4
 8001c6a:	1870      	adds	r0, r6, r1
 8001c6c:	3301      	adds	r3, #1
 8001c6e:	2700      	movs	r7, #0
 8001c70:	6047      	str	r7, [r0, #4]
 8001c72:	6163      	str	r3, [r4, #20]
 8001c74:	2a00      	cmp	r2, #0
 8001c76:	d0c5      	beq.n	8001c04 <d_operator_name+0x34>
 8001c78:	2332      	movs	r3, #50	; 0x32
 8001c7a:	6047      	str	r7, [r0, #4]
 8001c7c:	5473      	strb	r3, [r6, r1]
 8001c7e:	e9c0 5202 	strd	r5, r2, [r0, #8]
 8001c82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001c84:	2e76      	cmp	r6, #118	; 0x76
 8001c86:	d0aa      	beq.n	8001bde <d_operator_name+0xe>
 8001c88:	e7a7      	b.n	8001bda <d_operator_name+0xa>
 8001c8a:	2e63      	cmp	r6, #99	; 0x63
 8001c8c:	d1a7      	bne.n	8001bde <d_operator_name+0xe>
 8001c8e:	f1bc 0f76 	cmp.w	ip, #118	; 0x76
 8001c92:	d1a4      	bne.n	8001bde <d_operator_name+0xe>
 8001c94:	e9d0 350c 	ldrd	r3, r5, [r0, #48]	; 0x30
 8001c98:	fab3 f383 	clz	r3, r3
 8001c9c:	095b      	lsrs	r3, r3, #5
 8001c9e:	6343      	str	r3, [r0, #52]	; 0x34
 8001ca0:	f7ff fba2 	bl	80013e8 <d_type>
 8001ca4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001ca6:	4602      	mov	r2, r0
 8001ca8:	b133      	cbz	r3, 8001cb8 <d_operator_name+0xe8>
 8001caa:	2300      	movs	r3, #0
 8001cac:	2134      	movs	r1, #52	; 0x34
 8001cae:	4620      	mov	r0, r4
 8001cb0:	f7fe fb2a 	bl	8000308 <d_make_comp>
 8001cb4:	6365      	str	r5, [r4, #52]	; 0x34
 8001cb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001cb8:	2133      	movs	r1, #51	; 0x33
 8001cba:	4620      	mov	r0, r4
 8001cbc:	f7fe fb24 	bl	8000308 <d_make_comp>
 8001cc0:	e7f8      	b.n	8001cb4 <d_operator_name+0xe4>
 8001cc2:	bf00      	nop
 8001cc4:	08012318 	.word	0x08012318

08001cc8 <d_parmlist>:
 8001cc8:	b530      	push	{r4, r5, lr}
 8001cca:	68c2      	ldr	r2, [r0, #12]
 8001ccc:	b083      	sub	sp, #12
 8001cce:	2300      	movs	r3, #0
 8001cd0:	9301      	str	r3, [sp, #4]
 8001cd2:	7813      	ldrb	r3, [r2, #0]
 8001cd4:	b343      	cbz	r3, 8001d28 <d_parmlist+0x60>
 8001cd6:	2b45      	cmp	r3, #69	; 0x45
 8001cd8:	d026      	beq.n	8001d28 <d_parmlist+0x60>
 8001cda:	2b2e      	cmp	r3, #46	; 0x2e
 8001cdc:	d024      	beq.n	8001d28 <d_parmlist+0x60>
 8001cde:	4604      	mov	r4, r0
 8001ce0:	ad01      	add	r5, sp, #4
 8001ce2:	e015      	b.n	8001d10 <d_parmlist+0x48>
 8001ce4:	2b4f      	cmp	r3, #79	; 0x4f
 8001ce6:	d016      	beq.n	8001d16 <d_parmlist+0x4e>
 8001ce8:	f7ff fb7e 	bl	80013e8 <d_type>
 8001cec:	2300      	movs	r3, #0
 8001cee:	4602      	mov	r2, r0
 8001cf0:	212e      	movs	r1, #46	; 0x2e
 8001cf2:	b1c8      	cbz	r0, 8001d28 <d_parmlist+0x60>
 8001cf4:	4620      	mov	r0, r4
 8001cf6:	f7fe fb07 	bl	8000308 <d_make_comp>
 8001cfa:	6028      	str	r0, [r5, #0]
 8001cfc:	b1a0      	cbz	r0, 8001d28 <d_parmlist+0x60>
 8001cfe:	68e2      	ldr	r2, [r4, #12]
 8001d00:	7813      	ldrb	r3, [r2, #0]
 8001d02:	f100 050c 	add.w	r5, r0, #12
 8001d06:	b14b      	cbz	r3, 8001d1c <d_parmlist+0x54>
 8001d08:	2b45      	cmp	r3, #69	; 0x45
 8001d0a:	d007      	beq.n	8001d1c <d_parmlist+0x54>
 8001d0c:	2b2e      	cmp	r3, #46	; 0x2e
 8001d0e:	d005      	beq.n	8001d1c <d_parmlist+0x54>
 8001d10:	2b52      	cmp	r3, #82	; 0x52
 8001d12:	4620      	mov	r0, r4
 8001d14:	d1e6      	bne.n	8001ce4 <d_parmlist+0x1c>
 8001d16:	7853      	ldrb	r3, [r2, #1]
 8001d18:	2b45      	cmp	r3, #69	; 0x45
 8001d1a:	d1e5      	bne.n	8001ce8 <d_parmlist+0x20>
 8001d1c:	9801      	ldr	r0, [sp, #4]
 8001d1e:	b118      	cbz	r0, 8001d28 <d_parmlist+0x60>
 8001d20:	68c3      	ldr	r3, [r0, #12]
 8001d22:	b123      	cbz	r3, 8001d2e <d_parmlist+0x66>
 8001d24:	b003      	add	sp, #12
 8001d26:	bd30      	pop	{r4, r5, pc}
 8001d28:	2000      	movs	r0, #0
 8001d2a:	b003      	add	sp, #12
 8001d2c:	bd30      	pop	{r4, r5, pc}
 8001d2e:	6882      	ldr	r2, [r0, #8]
 8001d30:	7811      	ldrb	r1, [r2, #0]
 8001d32:	2927      	cmp	r1, #39	; 0x27
 8001d34:	d1f6      	bne.n	8001d24 <d_parmlist+0x5c>
 8001d36:	6892      	ldr	r2, [r2, #8]
 8001d38:	7c11      	ldrb	r1, [r2, #16]
 8001d3a:	2909      	cmp	r1, #9
 8001d3c:	d1f2      	bne.n	8001d24 <d_parmlist+0x5c>
 8001d3e:	6851      	ldr	r1, [r2, #4]
 8001d40:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8001d42:	1a52      	subs	r2, r2, r1
 8001d44:	62e2      	str	r2, [r4, #44]	; 0x2c
 8001d46:	6083      	str	r3, [r0, #8]
 8001d48:	e7ec      	b.n	8001d24 <d_parmlist+0x5c>
 8001d4a:	bf00      	nop

08001d4c <d_cv_qualifiers>:
 8001d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001d50:	460c      	mov	r4, r1
 8001d52:	68c1      	ldr	r1, [r0, #12]
 8001d54:	1e17      	subs	r7, r2, #0
 8001d56:	780b      	ldrb	r3, [r1, #0]
 8001d58:	b083      	sub	sp, #12
 8001d5a:	4605      	mov	r5, r0
 8001d5c:	bf15      	itete	ne
 8001d5e:	f04f 0a1e 	movne.w	sl, #30
 8001d62:	f04f 0a1b 	moveq.w	sl, #27
 8001d66:	f04f 091d 	movne.w	r9, #29
 8001d6a:	f04f 091a 	moveq.w	r9, #26
 8001d6e:	bf14      	ite	ne
 8001d70:	f04f 081c 	movne.w	r8, #28
 8001d74:	f04f 0819 	moveq.w	r8, #25
 8001d78:	4626      	mov	r6, r4
 8001d7a:	f04f 0b01 	mov.w	fp, #1
 8001d7e:	2b72      	cmp	r3, #114	; 0x72
 8001d80:	d014      	beq.n	8001dac <d_cv_qualifiers+0x60>
 8001d82:	2b56      	cmp	r3, #86	; 0x56
 8001d84:	d012      	beq.n	8001dac <d_cv_qualifiers+0x60>
 8001d86:	2b4b      	cmp	r3, #75	; 0x4b
 8001d88:	d010      	beq.n	8001dac <d_cv_qualifiers+0x60>
 8001d8a:	2b44      	cmp	r3, #68	; 0x44
 8001d8c:	d006      	beq.n	8001d9c <d_cv_qualifiers+0x50>
 8001d8e:	b90f      	cbnz	r7, 8001d94 <d_cv_qualifiers+0x48>
 8001d90:	2b46      	cmp	r3, #70	; 0x46
 8001d92:	d054      	beq.n	8001e3e <d_cv_qualifiers+0xf2>
 8001d94:	4630      	mov	r0, r6
 8001d96:	b003      	add	sp, #12
 8001d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001d9c:	784a      	ldrb	r2, [r1, #1]
 8001d9e:	f002 00df 	and.w	r0, r2, #223	; 0xdf
 8001da2:	284f      	cmp	r0, #79	; 0x4f
 8001da4:	d002      	beq.n	8001dac <d_cv_qualifiers+0x60>
 8001da6:	3a77      	subs	r2, #119	; 0x77
 8001da8:	2a01      	cmp	r2, #1
 8001daa:	d8f0      	bhi.n	8001d8e <d_cv_qualifiers+0x42>
 8001dac:	1c4a      	adds	r2, r1, #1
 8001dae:	2b72      	cmp	r3, #114	; 0x72
 8001db0:	60ea      	str	r2, [r5, #12]
 8001db2:	d013      	beq.n	8001ddc <d_cv_qualifiers+0x90>
 8001db4:	2b56      	cmp	r3, #86	; 0x56
 8001db6:	d027      	beq.n	8001e08 <d_cv_qualifiers+0xbc>
 8001db8:	2b4b      	cmp	r3, #75	; 0x4b
 8001dba:	d01f      	beq.n	8001dfc <d_cv_qualifiers+0xb0>
 8001dbc:	784b      	ldrb	r3, [r1, #1]
 8001dbe:	2b00      	cmp	r3, #0
 8001dc0:	d038      	beq.n	8001e34 <d_cv_qualifiers+0xe8>
 8001dc2:	1c8b      	adds	r3, r1, #2
 8001dc4:	60eb      	str	r3, [r5, #12]
 8001dc6:	784b      	ldrb	r3, [r1, #1]
 8001dc8:	2b78      	cmp	r3, #120	; 0x78
 8001dca:	d04b      	beq.n	8001e64 <d_cv_qualifiers+0x118>
 8001dcc:	2b6f      	cmp	r3, #111	; 0x6f
 8001dce:	d121      	bne.n	8001e14 <d_cv_qualifiers+0xc8>
 8001dd0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001dd2:	3309      	adds	r3, #9
 8001dd4:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001dd6:	214e      	movs	r1, #78	; 0x4e
 8001dd8:	2300      	movs	r3, #0
 8001dda:	e004      	b.n	8001de6 <d_cv_qualifiers+0x9a>
 8001ddc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001dde:	3309      	adds	r3, #9
 8001de0:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001de2:	4641      	mov	r1, r8
 8001de4:	2300      	movs	r3, #0
 8001de6:	2200      	movs	r2, #0
 8001de8:	4628      	mov	r0, r5
 8001dea:	f7fe fa8d 	bl	8000308 <d_make_comp>
 8001dee:	6030      	str	r0, [r6, #0]
 8001df0:	b300      	cbz	r0, 8001e34 <d_cv_qualifiers+0xe8>
 8001df2:	68e9      	ldr	r1, [r5, #12]
 8001df4:	f100 0608 	add.w	r6, r0, #8
 8001df8:	780b      	ldrb	r3, [r1, #0]
 8001dfa:	e7c0      	b.n	8001d7e <d_cv_qualifiers+0x32>
 8001dfc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001dfe:	3306      	adds	r3, #6
 8001e00:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001e02:	4651      	mov	r1, sl
 8001e04:	2300      	movs	r3, #0
 8001e06:	e7ee      	b.n	8001de6 <d_cv_qualifiers+0x9a>
 8001e08:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001e0a:	3309      	adds	r3, #9
 8001e0c:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001e0e:	4649      	mov	r1, r9
 8001e10:	2300      	movs	r3, #0
 8001e12:	e7e8      	b.n	8001de6 <d_cv_qualifiers+0x9a>
 8001e14:	2b4f      	cmp	r3, #79	; 0x4f
 8001e16:	d137      	bne.n	8001e88 <d_cv_qualifiers+0x13c>
 8001e18:	e9d5 320b 	ldrd	r3, r2, [r5, #44]	; 0x2c
 8001e1c:	3309      	adds	r3, #9
 8001e1e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001e20:	f8c5 b030 	str.w	fp, [r5, #48]	; 0x30
 8001e24:	4628      	mov	r0, r5
 8001e26:	9201      	str	r2, [sp, #4]
 8001e28:	f7fe fe86 	bl	8000b38 <d_expression_1>
 8001e2c:	9a01      	ldr	r2, [sp, #4]
 8001e2e:	632a      	str	r2, [r5, #48]	; 0x30
 8001e30:	4603      	mov	r3, r0
 8001e32:	bb08      	cbnz	r0, 8001e78 <d_cv_qualifiers+0x12c>
 8001e34:	2600      	movs	r6, #0
 8001e36:	4630      	mov	r0, r6
 8001e38:	b003      	add	sp, #12
 8001e3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001e3e:	42a6      	cmp	r6, r4
 8001e40:	d0a8      	beq.n	8001d94 <d_cv_qualifiers+0x48>
 8001e42:	201d      	movs	r0, #29
 8001e44:	211e      	movs	r1, #30
 8001e46:	221c      	movs	r2, #28
 8001e48:	e004      	b.n	8001e54 <d_cv_qualifiers+0x108>
 8001e4a:	2b19      	cmp	r3, #25
 8001e4c:	d012      	beq.n	8001e74 <d_cv_qualifiers+0x128>
 8001e4e:	3408      	adds	r4, #8
 8001e50:	42a6      	cmp	r6, r4
 8001e52:	d09f      	beq.n	8001d94 <d_cv_qualifiers+0x48>
 8001e54:	6824      	ldr	r4, [r4, #0]
 8001e56:	7823      	ldrb	r3, [r4, #0]
 8001e58:	2b1a      	cmp	r3, #26
 8001e5a:	d009      	beq.n	8001e70 <d_cv_qualifiers+0x124>
 8001e5c:	2b1b      	cmp	r3, #27
 8001e5e:	d1f4      	bne.n	8001e4a <d_cv_qualifiers+0xfe>
 8001e60:	7021      	strb	r1, [r4, #0]
 8001e62:	e7f4      	b.n	8001e4e <d_cv_qualifiers+0x102>
 8001e64:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001e66:	3311      	adds	r3, #17
 8001e68:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001e6a:	214c      	movs	r1, #76	; 0x4c
 8001e6c:	2300      	movs	r3, #0
 8001e6e:	e7ba      	b.n	8001de6 <d_cv_qualifiers+0x9a>
 8001e70:	7020      	strb	r0, [r4, #0]
 8001e72:	e7ec      	b.n	8001e4e <d_cv_qualifiers+0x102>
 8001e74:	7022      	strb	r2, [r4, #0]
 8001e76:	e7ea      	b.n	8001e4e <d_cv_qualifiers+0x102>
 8001e78:	68ea      	ldr	r2, [r5, #12]
 8001e7a:	7811      	ldrb	r1, [r2, #0]
 8001e7c:	2945      	cmp	r1, #69	; 0x45
 8001e7e:	d1d9      	bne.n	8001e34 <d_cv_qualifiers+0xe8>
 8001e80:	3201      	adds	r2, #1
 8001e82:	60ea      	str	r2, [r5, #12]
 8001e84:	214e      	movs	r1, #78	; 0x4e
 8001e86:	e7ae      	b.n	8001de6 <d_cv_qualifiers+0x9a>
 8001e88:	2b77      	cmp	r3, #119	; 0x77
 8001e8a:	d1d3      	bne.n	8001e34 <d_cv_qualifiers+0xe8>
 8001e8c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001e8e:	3306      	adds	r3, #6
 8001e90:	62eb      	str	r3, [r5, #44]	; 0x2c
 8001e92:	4628      	mov	r0, r5
 8001e94:	f7ff ff18 	bl	8001cc8 <d_parmlist>
 8001e98:	4603      	mov	r3, r0
 8001e9a:	2800      	cmp	r0, #0
 8001e9c:	d0ca      	beq.n	8001e34 <d_cv_qualifiers+0xe8>
 8001e9e:	68ea      	ldr	r2, [r5, #12]
 8001ea0:	7811      	ldrb	r1, [r2, #0]
 8001ea2:	2945      	cmp	r1, #69	; 0x45
 8001ea4:	d1c6      	bne.n	8001e34 <d_cv_qualifiers+0xe8>
 8001ea6:	3201      	adds	r2, #1
 8001ea8:	60ea      	str	r2, [r5, #12]
 8001eaa:	214f      	movs	r1, #79	; 0x4f
 8001eac:	e79b      	b.n	8001de6 <d_cv_qualifiers+0x9a>
 8001eae:	bf00      	nop

08001eb0 <d_bare_function_type>:
 8001eb0:	b570      	push	{r4, r5, r6, lr}
 8001eb2:	68c3      	ldr	r3, [r0, #12]
 8001eb4:	781a      	ldrb	r2, [r3, #0]
 8001eb6:	2a4a      	cmp	r2, #74	; 0x4a
 8001eb8:	4604      	mov	r4, r0
 8001eba:	d019      	beq.n	8001ef0 <d_bare_function_type+0x40>
 8001ebc:	b181      	cbz	r1, 8001ee0 <d_bare_function_type+0x30>
 8001ebe:	4620      	mov	r0, r4
 8001ec0:	f7ff fa92 	bl	80013e8 <d_type>
 8001ec4:	4605      	mov	r5, r0
 8001ec6:	b188      	cbz	r0, 8001eec <d_bare_function_type+0x3c>
 8001ec8:	4620      	mov	r0, r4
 8001eca:	f7ff fefd 	bl	8001cc8 <d_parmlist>
 8001ece:	b168      	cbz	r0, 8001eec <d_bare_function_type+0x3c>
 8001ed0:	4603      	mov	r3, r0
 8001ed2:	462a      	mov	r2, r5
 8001ed4:	4620      	mov	r0, r4
 8001ed6:	2129      	movs	r1, #41	; 0x29
 8001ed8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001edc:	f7fe ba14 	b.w	8000308 <d_make_comp>
 8001ee0:	4620      	mov	r0, r4
 8001ee2:	460d      	mov	r5, r1
 8001ee4:	f7ff fef0 	bl	8001cc8 <d_parmlist>
 8001ee8:	2800      	cmp	r0, #0
 8001eea:	d1f1      	bne.n	8001ed0 <d_bare_function_type+0x20>
 8001eec:	2000      	movs	r0, #0
 8001eee:	bd70      	pop	{r4, r5, r6, pc}
 8001ef0:	3301      	adds	r3, #1
 8001ef2:	60c3      	str	r3, [r0, #12]
 8001ef4:	e7e3      	b.n	8001ebe <d_bare_function_type+0xe>
 8001ef6:	bf00      	nop

08001ef8 <d_function_type>:
 8001ef8:	68c3      	ldr	r3, [r0, #12]
 8001efa:	781a      	ldrb	r2, [r3, #0]
 8001efc:	2a46      	cmp	r2, #70	; 0x46
 8001efe:	d118      	bne.n	8001f32 <d_function_type+0x3a>
 8001f00:	b510      	push	{r4, lr}
 8001f02:	1c5a      	adds	r2, r3, #1
 8001f04:	60c2      	str	r2, [r0, #12]
 8001f06:	785a      	ldrb	r2, [r3, #1]
 8001f08:	2a59      	cmp	r2, #89	; 0x59
 8001f0a:	bf04      	itt	eq
 8001f0c:	3302      	addeq	r3, #2
 8001f0e:	60c3      	streq	r3, [r0, #12]
 8001f10:	2101      	movs	r1, #1
 8001f12:	4604      	mov	r4, r0
 8001f14:	f7ff ffcc 	bl	8001eb0 <d_bare_function_type>
 8001f18:	4601      	mov	r1, r0
 8001f1a:	4620      	mov	r0, r4
 8001f1c:	f7fe fa3c 	bl	8000398 <d_ref_qualifier>
 8001f20:	68e3      	ldr	r3, [r4, #12]
 8001f22:	781a      	ldrb	r2, [r3, #0]
 8001f24:	2a45      	cmp	r2, #69	; 0x45
 8001f26:	d102      	bne.n	8001f2e <d_function_type+0x36>
 8001f28:	3301      	adds	r3, #1
 8001f2a:	60e3      	str	r3, [r4, #12]
 8001f2c:	bd10      	pop	{r4, pc}
 8001f2e:	2000      	movs	r0, #0
 8001f30:	bd10      	pop	{r4, pc}
 8001f32:	2000      	movs	r0, #0
 8001f34:	4770      	bx	lr
 8001f36:	bf00      	nop

08001f38 <d_unqualified_name>:
 8001f38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f3c:	68c1      	ldr	r1, [r0, #12]
 8001f3e:	780b      	ldrb	r3, [r1, #0]
 8001f40:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8001f44:	2a09      	cmp	r2, #9
 8001f46:	4604      	mov	r4, r0
 8001f48:	d951      	bls.n	8001fee <d_unqualified_name+0xb6>
 8001f4a:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8001f4e:	2a19      	cmp	r2, #25
 8001f50:	d815      	bhi.n	8001f7e <d_unqualified_name+0x46>
 8001f52:	2b6f      	cmp	r3, #111	; 0x6f
 8001f54:	d104      	bne.n	8001f60 <d_unqualified_name+0x28>
 8001f56:	784b      	ldrb	r3, [r1, #1]
 8001f58:	2b6e      	cmp	r3, #110	; 0x6e
 8001f5a:	bf04      	itt	eq
 8001f5c:	3102      	addeq	r1, #2
 8001f5e:	60c1      	streq	r1, [r0, #12]
 8001f60:	4620      	mov	r0, r4
 8001f62:	f7ff fe35 	bl	8001bd0 <d_operator_name>
 8001f66:	4605      	mov	r5, r0
 8001f68:	b110      	cbz	r0, 8001f70 <d_unqualified_name+0x38>
 8001f6a:	7803      	ldrb	r3, [r0, #0]
 8001f6c:	2b31      	cmp	r3, #49	; 0x31
 8001f6e:	d04b      	beq.n	8002008 <d_unqualified_name+0xd0>
 8001f70:	68e3      	ldr	r3, [r4, #12]
 8001f72:	781b      	ldrb	r3, [r3, #0]
 8001f74:	2b42      	cmp	r3, #66	; 0x42
 8001f76:	d041      	beq.n	8001ffc <d_unqualified_name+0xc4>
 8001f78:	4628      	mov	r0, r5
 8001f7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001f7e:	f1a3 0243 	sub.w	r2, r3, #67	; 0x43
 8001f82:	2a01      	cmp	r2, #1
 8001f84:	d968      	bls.n	8002058 <d_unqualified_name+0x120>
 8001f86:	2b4c      	cmp	r3, #76	; 0x4c
 8001f88:	d055      	beq.n	8002036 <d_unqualified_name+0xfe>
 8001f8a:	2b55      	cmp	r3, #85	; 0x55
 8001f8c:	d15e      	bne.n	800204c <d_unqualified_name+0x114>
 8001f8e:	784b      	ldrb	r3, [r1, #1]
 8001f90:	2b6c      	cmp	r3, #108	; 0x6c
 8001f92:	f000 80d0 	beq.w	8002136 <d_unqualified_name+0x1fe>
 8001f96:	2b74      	cmp	r3, #116	; 0x74
 8001f98:	d158      	bne.n	800204c <d_unqualified_name+0x114>
 8001f9a:	1c4b      	adds	r3, r1, #1
 8001f9c:	60c3      	str	r3, [r0, #12]
 8001f9e:	784b      	ldrb	r3, [r1, #1]
 8001fa0:	2b74      	cmp	r3, #116	; 0x74
 8001fa2:	d157      	bne.n	8002054 <d_unqualified_name+0x11c>
 8001fa4:	3102      	adds	r1, #2
 8001fa6:	60c1      	str	r1, [r0, #12]
 8001fa8:	f7fe faf0 	bl	800058c <d_compact_number>
 8001fac:	2800      	cmp	r0, #0
 8001fae:	f2c0 810d 	blt.w	80021cc <d_unqualified_name+0x294>
 8001fb2:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8001fb6:	4293      	cmp	r3, r2
 8001fb8:	f280 8108 	bge.w	80021cc <d_unqualified_name+0x294>
 8001fbc:	6926      	ldr	r6, [r4, #16]
 8001fbe:	6a22      	ldr	r2, [r4, #32]
 8001fc0:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
 8001fc4:	0119      	lsls	r1, r3, #4
 8001fc6:	1875      	adds	r5, r6, r1
 8001fc8:	3301      	adds	r3, #1
 8001fca:	2700      	movs	r7, #0
 8001fcc:	606f      	str	r7, [r5, #4]
 8001fce:	4562      	cmp	r2, ip
 8001fd0:	6163      	str	r3, [r4, #20]
 8001fd2:	f04f 0347 	mov.w	r3, #71	; 0x47
 8001fd6:	5473      	strb	r3, [r6, r1]
 8001fd8:	68e3      	ldr	r3, [r4, #12]
 8001fda:	60a8      	str	r0, [r5, #8]
 8001fdc:	f280 80fa 	bge.w	80021d4 <d_unqualified_name+0x29c>
 8001fe0:	69e1      	ldr	r1, [r4, #28]
 8001fe2:	f841 5022 	str.w	r5, [r1, r2, lsl #2]
 8001fe6:	3201      	adds	r2, #1
 8001fe8:	6222      	str	r2, [r4, #32]
 8001fea:	781b      	ldrb	r3, [r3, #0]
 8001fec:	e7c2      	b.n	8001f74 <d_unqualified_name+0x3c>
 8001fee:	f7fe fb05 	bl	80005fc <d_source_name>
 8001ff2:	68e3      	ldr	r3, [r4, #12]
 8001ff4:	781b      	ldrb	r3, [r3, #0]
 8001ff6:	2b42      	cmp	r3, #66	; 0x42
 8001ff8:	4605      	mov	r5, r0
 8001ffa:	d1bd      	bne.n	8001f78 <d_unqualified_name+0x40>
 8001ffc:	4629      	mov	r1, r5
 8001ffe:	4620      	mov	r0, r4
 8002000:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002004:	f7fe bb5e 	b.w	80006c4 <d_abi_tags>
 8002008:	6882      	ldr	r2, [r0, #8]
 800200a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800200c:	6896      	ldr	r6, [r2, #8]
 800200e:	6810      	ldr	r0, [r2, #0]
 8002010:	497c      	ldr	r1, [pc, #496]	; (8002204 <d_unqualified_name+0x2cc>)
 8002012:	3307      	adds	r3, #7
 8002014:	4433      	add	r3, r6
 8002016:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002018:	f005 fe26 	bl	8007c68 <strcmp>
 800201c:	2800      	cmp	r0, #0
 800201e:	d1a7      	bne.n	8001f70 <d_unqualified_name+0x38>
 8002020:	4620      	mov	r0, r4
 8002022:	f7fe faeb 	bl	80005fc <d_source_name>
 8002026:	462a      	mov	r2, r5
 8002028:	4603      	mov	r3, r0
 800202a:	2136      	movs	r1, #54	; 0x36
 800202c:	4620      	mov	r0, r4
 800202e:	f7fe f96b 	bl	8000308 <d_make_comp>
 8002032:	4605      	mov	r5, r0
 8002034:	e79c      	b.n	8001f70 <d_unqualified_name+0x38>
 8002036:	3101      	adds	r1, #1
 8002038:	60c1      	str	r1, [r0, #12]
 800203a:	f7fe fadf 	bl	80005fc <d_source_name>
 800203e:	4605      	mov	r5, r0
 8002040:	b120      	cbz	r0, 800204c <d_unqualified_name+0x114>
 8002042:	4620      	mov	r0, r4
 8002044:	f7fe fc36 	bl	80008b4 <d_discriminator>
 8002048:	2800      	cmp	r0, #0
 800204a:	d191      	bne.n	8001f70 <d_unqualified_name+0x38>
 800204c:	2500      	movs	r5, #0
 800204e:	4628      	mov	r0, r5
 8002050:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002054:	2500      	movs	r5, #0
 8002056:	e78d      	b.n	8001f74 <d_unqualified_name+0x3c>
 8002058:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800205a:	b11a      	cbz	r2, 8002064 <d_unqualified_name+0x12c>
 800205c:	7810      	ldrb	r0, [r2, #0]
 800205e:	b340      	cbz	r0, 80020b2 <d_unqualified_name+0x17a>
 8002060:	2818      	cmp	r0, #24
 8002062:	d026      	beq.n	80020b2 <d_unqualified_name+0x17a>
 8002064:	2b44      	cmp	r3, #68	; 0x44
 8002066:	d02d      	beq.n	80020c4 <d_unqualified_name+0x18c>
 8002068:	784b      	ldrb	r3, [r1, #1]
 800206a:	2b49      	cmp	r3, #73	; 0x49
 800206c:	f000 809b 	beq.w	80021a6 <d_unqualified_name+0x26e>
 8002070:	3b31      	subs	r3, #49	; 0x31
 8002072:	b2db      	uxtb	r3, r3
 8002074:	2b04      	cmp	r3, #4
 8002076:	d8e9      	bhi.n	800204c <d_unqualified_name+0x114>
 8002078:	4863      	ldr	r0, [pc, #396]	; (8002208 <d_unqualified_name+0x2d0>)
 800207a:	4403      	add	r3, r0
 800207c:	3102      	adds	r1, #2
 800207e:	f893 8798 	ldrb.w	r8, [r3, #1944]	; 0x798
 8002082:	60e1      	str	r1, [r4, #12]
 8002084:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8002088:	4283      	cmp	r3, r0
 800208a:	f280 80ac 	bge.w	80021e6 <d_unqualified_name+0x2ae>
 800208e:	6926      	ldr	r6, [r4, #16]
 8002090:	0118      	lsls	r0, r3, #4
 8002092:	1835      	adds	r5, r6, r0
 8002094:	3301      	adds	r3, #1
 8002096:	2700      	movs	r7, #0
 8002098:	606f      	str	r7, [r5, #4]
 800209a:	6163      	str	r3, [r4, #20]
 800209c:	2a00      	cmp	r2, #0
 800209e:	f000 80a8 	beq.w	80021f2 <d_unqualified_name+0x2ba>
 80020a2:	2307      	movs	r3, #7
 80020a4:	606f      	str	r7, [r5, #4]
 80020a6:	5433      	strb	r3, [r6, r0]
 80020a8:	f885 8008 	strb.w	r8, [r5, #8]
 80020ac:	60ea      	str	r2, [r5, #12]
 80020ae:	780b      	ldrb	r3, [r1, #0]
 80020b0:	e760      	b.n	8001f74 <d_unqualified_name+0x3c>
 80020b2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80020b4:	68d0      	ldr	r0, [r2, #12]
 80020b6:	4403      	add	r3, r0
 80020b8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80020ba:	780b      	ldrb	r3, [r1, #0]
 80020bc:	2b43      	cmp	r3, #67	; 0x43
 80020be:	d0d3      	beq.n	8002068 <d_unqualified_name+0x130>
 80020c0:	2b44      	cmp	r3, #68	; 0x44
 80020c2:	d1c7      	bne.n	8002054 <d_unqualified_name+0x11c>
 80020c4:	784b      	ldrb	r3, [r1, #1]
 80020c6:	3b30      	subs	r3, #48	; 0x30
 80020c8:	2b05      	cmp	r3, #5
 80020ca:	d8bf      	bhi.n	800204c <d_unqualified_name+0x114>
 80020cc:	a001      	add	r0, pc, #4	; (adr r0, 80020d4 <d_unqualified_name+0x19c>)
 80020ce:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80020d2:	bf00      	nop
 80020d4:	080020ed 	.word	0x080020ed
 80020d8:	08002131 	.word	0x08002131
 80020dc:	0800212b 	.word	0x0800212b
 80020e0:	0800204d 	.word	0x0800204d
 80020e4:	08002125 	.word	0x08002125
 80020e8:	0800211f 	.word	0x0800211f
 80020ec:	f04f 0c01 	mov.w	ip, #1
 80020f0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80020f4:	1c8d      	adds	r5, r1, #2
 80020f6:	4283      	cmp	r3, r0
 80020f8:	60e5      	str	r5, [r4, #12]
 80020fa:	da6e      	bge.n	80021da <d_unqualified_name+0x2a2>
 80020fc:	6926      	ldr	r6, [r4, #16]
 80020fe:	0118      	lsls	r0, r3, #4
 8002100:	1835      	adds	r5, r6, r0
 8002102:	3301      	adds	r3, #1
 8002104:	2700      	movs	r7, #0
 8002106:	606f      	str	r7, [r5, #4]
 8002108:	6163      	str	r3, [r4, #20]
 800210a:	2a00      	cmp	r2, #0
 800210c:	d068      	beq.n	80021e0 <d_unqualified_name+0x2a8>
 800210e:	2308      	movs	r3, #8
 8002110:	606f      	str	r7, [r5, #4]
 8002112:	5433      	strb	r3, [r6, r0]
 8002114:	f885 c008 	strb.w	ip, [r5, #8]
 8002118:	60ea      	str	r2, [r5, #12]
 800211a:	788b      	ldrb	r3, [r1, #2]
 800211c:	e72a      	b.n	8001f74 <d_unqualified_name+0x3c>
 800211e:	f04f 0c05 	mov.w	ip, #5
 8002122:	e7e5      	b.n	80020f0 <d_unqualified_name+0x1b8>
 8002124:	f04f 0c04 	mov.w	ip, #4
 8002128:	e7e2      	b.n	80020f0 <d_unqualified_name+0x1b8>
 800212a:	f04f 0c03 	mov.w	ip, #3
 800212e:	e7df      	b.n	80020f0 <d_unqualified_name+0x1b8>
 8002130:	f04f 0c02 	mov.w	ip, #2
 8002134:	e7dc      	b.n	80020f0 <d_unqualified_name+0x1b8>
 8002136:	1c4b      	adds	r3, r1, #1
 8002138:	60c3      	str	r3, [r0, #12]
 800213a:	784b      	ldrb	r3, [r1, #1]
 800213c:	2b6c      	cmp	r3, #108	; 0x6c
 800213e:	d189      	bne.n	8002054 <d_unqualified_name+0x11c>
 8002140:	3102      	adds	r1, #2
 8002142:	60c1      	str	r1, [r0, #12]
 8002144:	f7ff fdc0 	bl	8001cc8 <d_parmlist>
 8002148:	4606      	mov	r6, r0
 800214a:	2800      	cmp	r0, #0
 800214c:	d03e      	beq.n	80021cc <d_unqualified_name+0x294>
 800214e:	68e2      	ldr	r2, [r4, #12]
 8002150:	7813      	ldrb	r3, [r2, #0]
 8002152:	2b45      	cmp	r3, #69	; 0x45
 8002154:	f47f af7e 	bne.w	8002054 <d_unqualified_name+0x11c>
 8002158:	3201      	adds	r2, #1
 800215a:	60e2      	str	r2, [r4, #12]
 800215c:	4620      	mov	r0, r4
 800215e:	f7fe fa15 	bl	800058c <d_compact_number>
 8002162:	f1b0 0c00 	subs.w	ip, r0, #0
 8002166:	db31      	blt.n	80021cc <d_unqualified_name+0x294>
 8002168:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 800216c:	4293      	cmp	r3, r2
 800216e:	68e0      	ldr	r0, [r4, #12]
 8002170:	da45      	bge.n	80021fe <d_unqualified_name+0x2c6>
 8002172:	6927      	ldr	r7, [r4, #16]
 8002174:	6a22      	ldr	r2, [r4, #32]
 8002176:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
 800217a:	0119      	lsls	r1, r3, #4
 800217c:	187d      	adds	r5, r7, r1
 800217e:	3301      	adds	r3, #1
 8002180:	f04f 0e00 	mov.w	lr, #0
 8002184:	f8c5 e004 	str.w	lr, [r5, #4]
 8002188:	4542      	cmp	r2, r8
 800218a:	6163      	str	r3, [r4, #20]
 800218c:	f04f 0345 	mov.w	r3, #69	; 0x45
 8002190:	547b      	strb	r3, [r7, r1]
 8002192:	e9c5 6c02 	strd	r6, ip, [r5, #8]
 8002196:	da2f      	bge.n	80021f8 <d_unqualified_name+0x2c0>
 8002198:	69e3      	ldr	r3, [r4, #28]
 800219a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 800219e:	3201      	adds	r2, #1
 80021a0:	6222      	str	r2, [r4, #32]
 80021a2:	7803      	ldrb	r3, [r0, #0]
 80021a4:	e6e6      	b.n	8001f74 <d_unqualified_name+0x3c>
 80021a6:	1c4b      	adds	r3, r1, #1
 80021a8:	60e3      	str	r3, [r4, #12]
 80021aa:	788b      	ldrb	r3, [r1, #2]
 80021ac:	3b31      	subs	r3, #49	; 0x31
 80021ae:	b2db      	uxtb	r3, r3
 80021b0:	2b04      	cmp	r3, #4
 80021b2:	d81b      	bhi.n	80021ec <d_unqualified_name+0x2b4>
 80021b4:	4a14      	ldr	r2, [pc, #80]	; (8002208 <d_unqualified_name+0x2d0>)
 80021b6:	3103      	adds	r1, #3
 80021b8:	4413      	add	r3, r2
 80021ba:	60e1      	str	r1, [r4, #12]
 80021bc:	4620      	mov	r0, r4
 80021be:	f893 8798 	ldrb.w	r8, [r3, #1944]	; 0x798
 80021c2:	f7ff f911 	bl	80013e8 <d_type>
 80021c6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80021c8:	68e1      	ldr	r1, [r4, #12]
 80021ca:	e75b      	b.n	8002084 <d_unqualified_name+0x14c>
 80021cc:	68e3      	ldr	r3, [r4, #12]
 80021ce:	2500      	movs	r5, #0
 80021d0:	781b      	ldrb	r3, [r3, #0]
 80021d2:	e6cf      	b.n	8001f74 <d_unqualified_name+0x3c>
 80021d4:	781b      	ldrb	r3, [r3, #0]
 80021d6:	463d      	mov	r5, r7
 80021d8:	e6cc      	b.n	8001f74 <d_unqualified_name+0x3c>
 80021da:	788b      	ldrb	r3, [r1, #2]
 80021dc:	2500      	movs	r5, #0
 80021de:	e6c9      	b.n	8001f74 <d_unqualified_name+0x3c>
 80021e0:	788b      	ldrb	r3, [r1, #2]
 80021e2:	4615      	mov	r5, r2
 80021e4:	e6c6      	b.n	8001f74 <d_unqualified_name+0x3c>
 80021e6:	780b      	ldrb	r3, [r1, #0]
 80021e8:	2500      	movs	r5, #0
 80021ea:	e6c3      	b.n	8001f74 <d_unqualified_name+0x3c>
 80021ec:	784b      	ldrb	r3, [r1, #1]
 80021ee:	2500      	movs	r5, #0
 80021f0:	e6c0      	b.n	8001f74 <d_unqualified_name+0x3c>
 80021f2:	780b      	ldrb	r3, [r1, #0]
 80021f4:	4615      	mov	r5, r2
 80021f6:	e6bd      	b.n	8001f74 <d_unqualified_name+0x3c>
 80021f8:	7803      	ldrb	r3, [r0, #0]
 80021fa:	4675      	mov	r5, lr
 80021fc:	e6ba      	b.n	8001f74 <d_unqualified_name+0x3c>
 80021fe:	7803      	ldrb	r3, [r0, #0]
 8002200:	2500      	movs	r5, #0
 8002202:	e6b7      	b.n	8001f74 <d_unqualified_name+0x3c>
 8002204:	08012cc4 	.word	0x08012cc4
 8002208:	08011fc0 	.word	0x08011fc0

0800220c <d_encoding>:
 800220c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002210:	68c3      	ldr	r3, [r0, #12]
 8002212:	781a      	ldrb	r2, [r3, #0]
 8002214:	2a47      	cmp	r2, #71	; 0x47
 8002216:	4604      	mov	r4, r0
 8002218:	d001      	beq.n	800221e <d_encoding+0x12>
 800221a:	2a54      	cmp	r2, #84	; 0x54
 800221c:	d14a      	bne.n	80022b4 <d_encoding+0xa8>
 800221e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8002220:	f101 0214 	add.w	r2, r1, #20
 8002224:	62e2      	str	r2, [r4, #44]	; 0x2c
 8002226:	781a      	ldrb	r2, [r3, #0]
 8002228:	2a54      	cmp	r2, #84	; 0x54
 800222a:	d05e      	beq.n	80022ea <d_encoding+0xde>
 800222c:	2a47      	cmp	r2, #71	; 0x47
 800222e:	f040 80c2 	bne.w	80023b6 <d_encoding+0x1aa>
 8002232:	1c5a      	adds	r2, r3, #1
 8002234:	60e2      	str	r2, [r4, #12]
 8002236:	785a      	ldrb	r2, [r3, #1]
 8002238:	2a00      	cmp	r2, #0
 800223a:	f000 80bc 	beq.w	80023b6 <d_encoding+0x1aa>
 800223e:	1c9a      	adds	r2, r3, #2
 8002240:	60e2      	str	r2, [r4, #12]
 8002242:	785a      	ldrb	r2, [r3, #1]
 8002244:	3a41      	subs	r2, #65	; 0x41
 8002246:	2a31      	cmp	r2, #49	; 0x31
 8002248:	f200 80b5 	bhi.w	80023b6 <d_encoding+0x1aa>
 800224c:	e8df f012 	tbh	[pc, r2, lsl #1]
 8002250:	00b300eb 	.word	0x00b300eb
 8002254:	00b300b3 	.word	0x00b300b3
 8002258:	00b300b3 	.word	0x00b300b3
 800225c:	00b300b3 	.word	0x00b300b3
 8002260:	00b300b3 	.word	0x00b300b3
 8002264:	00b300b3 	.word	0x00b300b3
 8002268:	00b300b3 	.word	0x00b300b3
 800226c:	00b300b3 	.word	0x00b300b3
 8002270:	00dc00b3 	.word	0x00dc00b3
 8002274:	015000b3 	.word	0x015000b3
 8002278:	00f700b3 	.word	0x00f700b3
 800227c:	00b300b3 	.word	0x00b300b3
 8002280:	00b300b3 	.word	0x00b300b3
 8002284:	00b300b3 	.word	0x00b300b3
 8002288:	00b300b3 	.word	0x00b300b3
 800228c:	00b300b3 	.word	0x00b300b3
 8002290:	00b300b3 	.word	0x00b300b3
 8002294:	00b300b3 	.word	0x00b300b3
 8002298:	00b300b3 	.word	0x00b300b3
 800229c:	00b300b3 	.word	0x00b300b3
 80022a0:	00b300b3 	.word	0x00b300b3
 80022a4:	00b300b3 	.word	0x00b300b3
 80022a8:	00b300b3 	.word	0x00b300b3
 80022ac:	00b300b3 	.word	0x00b300b3
 80022b0:	010200b3 	.word	0x010200b3
 80022b4:	460e      	mov	r6, r1
 80022b6:	f7fe fef5 	bl	80010a4 <d_name>
 80022ba:	4605      	mov	r5, r0
 80022bc:	2800      	cmp	r0, #0
 80022be:	d07a      	beq.n	80023b6 <d_encoding+0x1aa>
 80022c0:	2e00      	cmp	r6, #0
 80022c2:	d053      	beq.n	800236c <d_encoding+0x160>
 80022c4:	68a3      	ldr	r3, [r4, #8]
 80022c6:	07db      	lsls	r3, r3, #31
 80022c8:	d450      	bmi.n	800236c <d_encoding+0x160>
 80022ca:	782b      	ldrb	r3, [r5, #0]
 80022cc:	2b4c      	cmp	r3, #76	; 0x4c
 80022ce:	f1a3 011c 	sub.w	r1, r3, #28
 80022d2:	f1a3 024e 	sub.w	r2, r3, #78	; 0x4e
 80022d6:	d074      	beq.n	80023c2 <d_encoding+0x1b6>
 80022d8:	d871      	bhi.n	80023be <d_encoding+0x1b2>
 80022da:	2904      	cmp	r1, #4
 80022dc:	d971      	bls.n	80023c2 <d_encoding+0x1b6>
 80022de:	2b02      	cmp	r3, #2
 80022e0:	f000 811a 	beq.w	8002518 <d_encoding+0x30c>
 80022e4:	4628      	mov	r0, r5
 80022e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80022ea:	1c5a      	adds	r2, r3, #1
 80022ec:	60e2      	str	r2, [r4, #12]
 80022ee:	785a      	ldrb	r2, [r3, #1]
 80022f0:	2a00      	cmp	r2, #0
 80022f2:	d060      	beq.n	80023b6 <d_encoding+0x1aa>
 80022f4:	1c9a      	adds	r2, r3, #2
 80022f6:	60e2      	str	r2, [r4, #12]
 80022f8:	785b      	ldrb	r3, [r3, #1]
 80022fa:	3b43      	subs	r3, #67	; 0x43
 80022fc:	2b33      	cmp	r3, #51	; 0x33
 80022fe:	d85a      	bhi.n	80023b6 <d_encoding+0x1aa>
 8002300:	e8df f013 	tbh	[pc, r3, lsl #1]
 8002304:	00590134 	.word	0x00590134
 8002308:	015f0059 	.word	0x015f0059
 800230c:	01540059 	.word	0x01540059
 8002310:	01c701d2 	.word	0x01c701d2
 8002314:	00590059 	.word	0x00590059
 8002318:	00590059 	.word	0x00590059
 800231c:	00590059 	.word	0x00590059
 8002320:	00590059 	.word	0x00590059
 8002324:	01af01bc 	.word	0x01af01bc
 8002328:	01a20059 	.word	0x01a20059
 800232c:	00590197 	.word	0x00590197
 8002330:	00590059 	.word	0x00590059
 8002334:	00590059 	.word	0x00590059
 8002338:	00590059 	.word	0x00590059
 800233c:	00590059 	.word	0x00590059
 8002340:	00590059 	.word	0x00590059
 8002344:	0059017d 	.word	0x0059017d
 8002348:	00590059 	.word	0x00590059
 800234c:	016a0059 	.word	0x016a0059
 8002350:	00590059 	.word	0x00590059
 8002354:	00590059 	.word	0x00590059
 8002358:	00590059 	.word	0x00590059
 800235c:	00590059 	.word	0x00590059
 8002360:	00590059 	.word	0x00590059
 8002364:	00590059 	.word	0x00590059
 8002368:	01210059 	.word	0x01210059
 800236c:	68e3      	ldr	r3, [r4, #12]
 800236e:	781b      	ldrb	r3, [r3, #0]
 8002370:	2b00      	cmp	r3, #0
 8002372:	d0b7      	beq.n	80022e4 <d_encoding+0xd8>
 8002374:	2b45      	cmp	r3, #69	; 0x45
 8002376:	d0b5      	beq.n	80022e4 <d_encoding+0xd8>
 8002378:	4629      	mov	r1, r5
 800237a:	780b      	ldrb	r3, [r1, #0]
 800237c:	2b20      	cmp	r3, #32
 800237e:	d838      	bhi.n	80023f2 <d_encoding+0x1e6>
 8002380:	2b1c      	cmp	r3, #28
 8002382:	d23d      	bcs.n	8002400 <d_encoding+0x1f4>
 8002384:	2b02      	cmp	r3, #2
 8002386:	f000 81c6 	beq.w	8002716 <d_encoding+0x50a>
 800238a:	2b04      	cmp	r3, #4
 800238c:	d11b      	bne.n	80023c6 <d_encoding+0x1ba>
 800238e:	688b      	ldr	r3, [r1, #8]
 8002390:	b163      	cbz	r3, 80023ac <d_encoding+0x1a0>
 8002392:	7819      	ldrb	r1, [r3, #0]
 8002394:	2908      	cmp	r1, #8
 8002396:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
 800239a:	f200 81b8 	bhi.w	800270e <d_encoding+0x502>
 800239e:	2907      	cmp	r1, #7
 80023a0:	d211      	bcs.n	80023c6 <d_encoding+0x1ba>
 80023a2:	2a01      	cmp	r2, #1
 80023a4:	d802      	bhi.n	80023ac <d_encoding+0x1a0>
 80023a6:	68db      	ldr	r3, [r3, #12]
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d1f2      	bne.n	8002392 <d_encoding+0x186>
 80023ac:	2101      	movs	r1, #1
 80023ae:	e00b      	b.n	80023c8 <d_encoding+0x1bc>
 80023b0:	68e3      	ldr	r3, [r4, #12]
 80023b2:	440b      	add	r3, r1
 80023b4:	60e3      	str	r3, [r4, #12]
 80023b6:	2500      	movs	r5, #0
 80023b8:	4628      	mov	r0, r5
 80023ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80023be:	2a01      	cmp	r2, #1
 80023c0:	d88d      	bhi.n	80022de <d_encoding+0xd2>
 80023c2:	68ad      	ldr	r5, [r5, #8]
 80023c4:	e781      	b.n	80022ca <d_encoding+0xbe>
 80023c6:	2100      	movs	r1, #0
 80023c8:	4620      	mov	r0, r4
 80023ca:	f7ff fd71 	bl	8001eb0 <d_bare_function_type>
 80023ce:	2800      	cmp	r0, #0
 80023d0:	d0f1      	beq.n	80023b6 <d_encoding+0x1aa>
 80023d2:	b936      	cbnz	r6, 80023e2 <d_encoding+0x1d6>
 80023d4:	782b      	ldrb	r3, [r5, #0]
 80023d6:	2b02      	cmp	r3, #2
 80023d8:	d103      	bne.n	80023e2 <d_encoding+0x1d6>
 80023da:	7803      	ldrb	r3, [r0, #0]
 80023dc:	2b29      	cmp	r3, #41	; 0x29
 80023de:	bf08      	it	eq
 80023e0:	6086      	streq	r6, [r0, #8]
 80023e2:	4603      	mov	r3, r0
 80023e4:	462a      	mov	r2, r5
 80023e6:	4620      	mov	r0, r4
 80023e8:	2103      	movs	r1, #3
 80023ea:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80023ee:	f7fd bf8b 	b.w	8000308 <d_make_comp>
 80023f2:	2b4c      	cmp	r3, #76	; 0x4c
 80023f4:	f1a3 024e 	sub.w	r2, r3, #78	; 0x4e
 80023f8:	d002      	beq.n	8002400 <d_encoding+0x1f4>
 80023fa:	d3e4      	bcc.n	80023c6 <d_encoding+0x1ba>
 80023fc:	2a01      	cmp	r2, #1
 80023fe:	d8e2      	bhi.n	80023c6 <d_encoding+0x1ba>
 8002400:	6889      	ldr	r1, [r1, #8]
 8002402:	2900      	cmp	r1, #0
 8002404:	d1b9      	bne.n	800237a <d_encoding+0x16e>
 8002406:	e7df      	b.n	80023c8 <d_encoding+0x1bc>
 8002408:	4620      	mov	r0, r4
 800240a:	f7fe fe4b 	bl	80010a4 <d_name>
 800240e:	4605      	mov	r5, r0
 8002410:	4620      	mov	r0, r4
 8002412:	f7fe f8a3 	bl	800055c <d_number_component>
 8002416:	462a      	mov	r2, r5
 8002418:	4603      	mov	r3, r0
 800241a:	2116      	movs	r1, #22
 800241c:	4620      	mov	r0, r4
 800241e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002422:	f7fd bf71 	b.w	8000308 <d_make_comp>
 8002426:	2100      	movs	r1, #0
 8002428:	4620      	mov	r0, r4
 800242a:	f7ff feef 	bl	800220c <d_encoding>
 800242e:	2300      	movs	r3, #0
 8002430:	4602      	mov	r2, r0
 8002432:	2117      	movs	r1, #23
 8002434:	4620      	mov	r0, r4
 8002436:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800243a:	f7fd bf65 	b.w	8000308 <d_make_comp>
 800243e:	4620      	mov	r0, r4
 8002440:	f7fe fe30 	bl	80010a4 <d_name>
 8002444:	2300      	movs	r3, #0
 8002446:	4602      	mov	r2, r0
 8002448:	2113      	movs	r1, #19
 800244a:	4620      	mov	r0, r4
 800244c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002450:	f7fd bf5a 	b.w	8000308 <d_make_comp>
 8002454:	f104 000c 	add.w	r0, r4, #12
 8002458:	f7fe f83c 	bl	80004d4 <d_number.isra.0>
 800245c:	2801      	cmp	r0, #1
 800245e:	ddaa      	ble.n	80023b6 <d_encoding+0x1aa>
 8002460:	68e3      	ldr	r3, [r4, #12]
 8002462:	781a      	ldrb	r2, [r3, #0]
 8002464:	2a00      	cmp	r2, #0
 8002466:	d0a6      	beq.n	80023b6 <d_encoding+0x1aa>
 8002468:	1c5f      	adds	r7, r3, #1
 800246a:	60e7      	str	r7, [r4, #12]
 800246c:	781b      	ldrb	r3, [r3, #0]
 800246e:	2b5f      	cmp	r3, #95	; 0x5f
 8002470:	d1a1      	bne.n	80023b6 <d_encoding+0x1aa>
 8002472:	2200      	movs	r2, #0
 8002474:	1e46      	subs	r6, r0, #1
 8002476:	4690      	mov	r8, r2
 8002478:	f04f 0940 	mov.w	r9, #64	; 0x40
 800247c:	783b      	ldrb	r3, [r7, #0]
 800247e:	2b00      	cmp	r3, #0
 8002480:	d099      	beq.n	80023b6 <d_encoding+0x1aa>
 8002482:	2b24      	cmp	r3, #36	; 0x24
 8002484:	f040 811f 	bne.w	80026c6 <d_encoding+0x4ba>
 8002488:	787b      	ldrb	r3, [r7, #1]
 800248a:	2b53      	cmp	r3, #83	; 0x53
 800248c:	f000 814a 	beq.w	8002724 <d_encoding+0x518>
 8002490:	2b5f      	cmp	r3, #95	; 0x5f
 8002492:	f000 8145 	beq.w	8002720 <d_encoding+0x514>
 8002496:	2b24      	cmp	r3, #36	; 0x24
 8002498:	d18d      	bne.n	80023b6 <d_encoding+0x1aa>
 800249a:	4619      	mov	r1, r3
 800249c:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
 80024a0:	68e7      	ldr	r7, [r4, #12]
 80024a2:	4298      	cmp	r0, r3
 80024a4:	f107 0702 	add.w	r7, r7, #2
 80024a8:	f280 813e 	bge.w	8002728 <d_encoding+0x51c>
 80024ac:	f8d4 c010 	ldr.w	ip, [r4, #16]
 80024b0:	0105      	lsls	r5, r0, #4
 80024b2:	eb0c 0305 	add.w	r3, ip, r5
 80024b6:	3001      	adds	r0, #1
 80024b8:	f8c3 8004 	str.w	r8, [r3, #4]
 80024bc:	3e02      	subs	r6, #2
 80024be:	6160      	str	r0, [r4, #20]
 80024c0:	f80c 9005 	strb.w	r9, [ip, r5]
 80024c4:	6099      	str	r1, [r3, #8]
 80024c6:	60e7      	str	r7, [r4, #12]
 80024c8:	2a00      	cmp	r2, #0
 80024ca:	f000 811e 	beq.w	800270a <d_encoding+0x4fe>
 80024ce:	213f      	movs	r1, #63	; 0x3f
 80024d0:	4620      	mov	r0, r4
 80024d2:	f7fd ff19 	bl	8000308 <d_make_comp>
 80024d6:	4602      	mov	r2, r0
 80024d8:	2800      	cmp	r0, #0
 80024da:	f43f af6c 	beq.w	80023b6 <d_encoding+0x1aa>
 80024de:	2e00      	cmp	r6, #0
 80024e0:	dccc      	bgt.n	800247c <d_encoding+0x270>
 80024e2:	4620      	mov	r0, r4
 80024e4:	2300      	movs	r3, #0
 80024e6:	213e      	movs	r1, #62	; 0x3e
 80024e8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80024ec:	f7fd bf0c 	b.w	8000308 <d_make_comp>
 80024f0:	789a      	ldrb	r2, [r3, #2]
 80024f2:	2100      	movs	r1, #0
 80024f4:	4620      	mov	r0, r4
 80024f6:	b12a      	cbz	r2, 8002504 <d_encoding+0x2f8>
 80024f8:	1cda      	adds	r2, r3, #3
 80024fa:	60e2      	str	r2, [r4, #12]
 80024fc:	789b      	ldrb	r3, [r3, #2]
 80024fe:	2b6e      	cmp	r3, #110	; 0x6e
 8002500:	f000 8115 	beq.w	800272e <d_encoding+0x522>
 8002504:	f7ff fe82 	bl	800220c <d_encoding>
 8002508:	2300      	movs	r3, #0
 800250a:	4602      	mov	r2, r0
 800250c:	2148      	movs	r1, #72	; 0x48
 800250e:	4620      	mov	r0, r4
 8002510:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002514:	f7fd bef8 	b.w	8000308 <d_make_comp>
 8002518:	68ea      	ldr	r2, [r5, #12]
 800251a:	7813      	ldrb	r3, [r2, #0]
 800251c:	2b4c      	cmp	r3, #76	; 0x4c
 800251e:	f1a3 001c 	sub.w	r0, r3, #28
 8002522:	f1a3 014e 	sub.w	r1, r3, #78	; 0x4e
 8002526:	d004      	beq.n	8002532 <d_encoding+0x326>
 8002528:	f200 80c9 	bhi.w	80026be <d_encoding+0x4b2>
 800252c:	2804      	cmp	r0, #4
 800252e:	f63f aed9 	bhi.w	80022e4 <d_encoding+0xd8>
 8002532:	6892      	ldr	r2, [r2, #8]
 8002534:	60ea      	str	r2, [r5, #12]
 8002536:	7813      	ldrb	r3, [r2, #0]
 8002538:	2b4c      	cmp	r3, #76	; 0x4c
 800253a:	f1a3 001c 	sub.w	r0, r3, #28
 800253e:	f1a3 014e 	sub.w	r1, r3, #78	; 0x4e
 8002542:	d1f1      	bne.n	8002528 <d_encoding+0x31c>
 8002544:	e7f5      	b.n	8002532 <d_encoding+0x326>
 8002546:	2176      	movs	r1, #118	; 0x76
 8002548:	4620      	mov	r0, r4
 800254a:	f7fe f989 	bl	8000860 <d_call_offset>
 800254e:	2800      	cmp	r0, #0
 8002550:	f43f af31 	beq.w	80023b6 <d_encoding+0x1aa>
 8002554:	2100      	movs	r1, #0
 8002556:	4620      	mov	r0, r4
 8002558:	f7ff fe58 	bl	800220c <d_encoding>
 800255c:	2300      	movs	r3, #0
 800255e:	4602      	mov	r2, r0
 8002560:	2110      	movs	r1, #16
 8002562:	4620      	mov	r0, r4
 8002564:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002568:	f7fd bece 	b.w	8000308 <d_make_comp>
 800256c:	4620      	mov	r0, r4
 800256e:	f7fe ff3b 	bl	80013e8 <d_type>
 8002572:	4605      	mov	r5, r0
 8002574:	f104 000c 	add.w	r0, r4, #12
 8002578:	f7fd ffac 	bl	80004d4 <d_number.isra.0>
 800257c:	2800      	cmp	r0, #0
 800257e:	f6ff af1a 	blt.w	80023b6 <d_encoding+0x1aa>
 8002582:	68e3      	ldr	r3, [r4, #12]
 8002584:	781a      	ldrb	r2, [r3, #0]
 8002586:	2a5f      	cmp	r2, #95	; 0x5f
 8002588:	f47f af15 	bne.w	80023b6 <d_encoding+0x1aa>
 800258c:	3301      	adds	r3, #1
 800258e:	60e3      	str	r3, [r4, #12]
 8002590:	4620      	mov	r0, r4
 8002592:	f7fe ff29 	bl	80013e8 <d_type>
 8002596:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002598:	1d59      	adds	r1, r3, #5
 800259a:	62e1      	str	r1, [r4, #44]	; 0x2c
 800259c:	4602      	mov	r2, r0
 800259e:	462b      	mov	r3, r5
 80025a0:	4620      	mov	r0, r4
 80025a2:	210b      	movs	r1, #11
 80025a4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80025a8:	f7fd beae 	b.w	8000308 <d_make_comp>
 80025ac:	4620      	mov	r0, r4
 80025ae:	f7fe fd79 	bl	80010a4 <d_name>
 80025b2:	2300      	movs	r3, #0
 80025b4:	4602      	mov	r2, r0
 80025b6:	2114      	movs	r1, #20
 80025b8:	4620      	mov	r0, r4
 80025ba:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80025be:	f7fd bea3 	b.w	8000308 <d_make_comp>
 80025c2:	4620      	mov	r0, r4
 80025c4:	f7fe ff10 	bl	80013e8 <d_type>
 80025c8:	2300      	movs	r3, #0
 80025ca:	4602      	mov	r2, r0
 80025cc:	210e      	movs	r1, #14
 80025ce:	4620      	mov	r0, r4
 80025d0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80025d4:	f7fd be98 	b.w	8000308 <d_make_comp>
 80025d8:	2168      	movs	r1, #104	; 0x68
 80025da:	4620      	mov	r0, r4
 80025dc:	f7fe f940 	bl	8000860 <d_call_offset>
 80025e0:	2800      	cmp	r0, #0
 80025e2:	f43f aee8 	beq.w	80023b6 <d_encoding+0x1aa>
 80025e6:	2100      	movs	r1, #0
 80025e8:	4620      	mov	r0, r4
 80025ea:	f7ff fe0f 	bl	800220c <d_encoding>
 80025ee:	2300      	movs	r3, #0
 80025f0:	4602      	mov	r2, r0
 80025f2:	210f      	movs	r1, #15
 80025f4:	4620      	mov	r0, r4
 80025f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80025fa:	f7fd be85 	b.w	8000308 <d_make_comp>
 80025fe:	2100      	movs	r1, #0
 8002600:	4620      	mov	r0, r4
 8002602:	f7fe f92d 	bl	8000860 <d_call_offset>
 8002606:	2800      	cmp	r0, #0
 8002608:	f43f aed5 	beq.w	80023b6 <d_encoding+0x1aa>
 800260c:	2100      	movs	r1, #0
 800260e:	4620      	mov	r0, r4
 8002610:	f7fe f926 	bl	8000860 <d_call_offset>
 8002614:	2800      	cmp	r0, #0
 8002616:	f43f aece 	beq.w	80023b6 <d_encoding+0x1aa>
 800261a:	2100      	movs	r1, #0
 800261c:	4620      	mov	r0, r4
 800261e:	f7ff fdf5 	bl	800220c <d_encoding>
 8002622:	2300      	movs	r3, #0
 8002624:	4602      	mov	r2, r0
 8002626:	2111      	movs	r1, #17
 8002628:	4620      	mov	r0, r4
 800262a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800262e:	f7fd be6b 	b.w	8000308 <d_make_comp>
 8002632:	4620      	mov	r0, r4
 8002634:	f7fe fd36 	bl	80010a4 <d_name>
 8002638:	2300      	movs	r3, #0
 800263a:	4602      	mov	r2, r0
 800263c:	2115      	movs	r1, #21
 800263e:	4620      	mov	r0, r4
 8002640:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002644:	f7fd be60 	b.w	8000308 <d_make_comp>
 8002648:	310f      	adds	r1, #15
 800264a:	62e1      	str	r1, [r4, #44]	; 0x2c
 800264c:	4620      	mov	r0, r4
 800264e:	f7fe fecb 	bl	80013e8 <d_type>
 8002652:	2300      	movs	r3, #0
 8002654:	4602      	mov	r2, r0
 8002656:	2109      	movs	r1, #9
 8002658:	4620      	mov	r0, r4
 800265a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800265e:	f7fd be53 	b.w	8000308 <d_make_comp>
 8002662:	310a      	adds	r1, #10
 8002664:	62e1      	str	r1, [r4, #44]	; 0x2c
 8002666:	4620      	mov	r0, r4
 8002668:	f7fe febe 	bl	80013e8 <d_type>
 800266c:	2300      	movs	r3, #0
 800266e:	4602      	mov	r2, r0
 8002670:	210a      	movs	r1, #10
 8002672:	4620      	mov	r0, r4
 8002674:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002678:	f7fd be46 	b.w	8000308 <d_make_comp>
 800267c:	4620      	mov	r0, r4
 800267e:	f7fe feb3 	bl	80013e8 <d_type>
 8002682:	2300      	movs	r3, #0
 8002684:	4602      	mov	r2, r0
 8002686:	210d      	movs	r1, #13
 8002688:	4620      	mov	r0, r4
 800268a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800268e:	f7fd be3b 	b.w	8000308 <d_make_comp>
 8002692:	4620      	mov	r0, r4
 8002694:	f7fe fea8 	bl	80013e8 <d_type>
 8002698:	2300      	movs	r3, #0
 800269a:	4602      	mov	r2, r0
 800269c:	2112      	movs	r1, #18
 800269e:	4620      	mov	r0, r4
 80026a0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80026a4:	f7fd be30 	b.w	8000308 <d_make_comp>
 80026a8:	4620      	mov	r0, r4
 80026aa:	f7fe fe9d 	bl	80013e8 <d_type>
 80026ae:	2300      	movs	r3, #0
 80026b0:	4602      	mov	r2, r0
 80026b2:	210c      	movs	r1, #12
 80026b4:	4620      	mov	r0, r4
 80026b6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80026ba:	f7fd be25 	b.w	8000308 <d_make_comp>
 80026be:	2901      	cmp	r1, #1
 80026c0:	f63f ae10 	bhi.w	80022e4 <d_encoding+0xd8>
 80026c4:	e735      	b.n	8002532 <d_encoding+0x326>
 80026c6:	463d      	mov	r5, r7
 80026c8:	2100      	movs	r1, #0
 80026ca:	e004      	b.n	80026d6 <d_encoding+0x4ca>
 80026cc:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 80026d0:	b123      	cbz	r3, 80026dc <d_encoding+0x4d0>
 80026d2:	2b24      	cmp	r3, #36	; 0x24
 80026d4:	d002      	beq.n	80026dc <d_encoding+0x4d0>
 80026d6:	3101      	adds	r1, #1
 80026d8:	42b1      	cmp	r1, r6
 80026da:	dbf7      	blt.n	80026cc <d_encoding+0x4c0>
 80026dc:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
 80026e0:	4298      	cmp	r0, r3
 80026e2:	f6bf ae65 	bge.w	80023b0 <d_encoding+0x1a4>
 80026e6:	6923      	ldr	r3, [r4, #16]
 80026e8:	eb03 1300 	add.w	r3, r3, r0, lsl #4
 80026ec:	3001      	adds	r0, #1
 80026ee:	f8c3 8004 	str.w	r8, [r3, #4]
 80026f2:	6160      	str	r0, [r4, #20]
 80026f4:	68e0      	ldr	r0, [r4, #12]
 80026f6:	609f      	str	r7, [r3, #8]
 80026f8:	1847      	adds	r7, r0, r1
 80026fa:	f8c3 8004 	str.w	r8, [r3, #4]
 80026fe:	f883 8000 	strb.w	r8, [r3]
 8002702:	60d9      	str	r1, [r3, #12]
 8002704:	1a76      	subs	r6, r6, r1
 8002706:	60e7      	str	r7, [r4, #12]
 8002708:	e6de      	b.n	80024c8 <d_encoding+0x2bc>
 800270a:	461a      	mov	r2, r3
 800270c:	e6e7      	b.n	80024de <d_encoding+0x2d2>
 800270e:	3934      	subs	r1, #52	; 0x34
 8002710:	bf18      	it	ne
 8002712:	2101      	movne	r1, #1
 8002714:	e658      	b.n	80023c8 <d_encoding+0x1bc>
 8002716:	68c9      	ldr	r1, [r1, #12]
 8002718:	2900      	cmp	r1, #0
 800271a:	f47f ae2e 	bne.w	800237a <d_encoding+0x16e>
 800271e:	e653      	b.n	80023c8 <d_encoding+0x1bc>
 8002720:	212e      	movs	r1, #46	; 0x2e
 8002722:	e6bb      	b.n	800249c <d_encoding+0x290>
 8002724:	212f      	movs	r1, #47	; 0x2f
 8002726:	e6b9      	b.n	800249c <d_encoding+0x290>
 8002728:	60e7      	str	r7, [r4, #12]
 800272a:	2500      	movs	r5, #0
 800272c:	e5da      	b.n	80022e4 <d_encoding+0xd8>
 800272e:	f7ff fd6d 	bl	800220c <d_encoding>
 8002732:	2300      	movs	r3, #0
 8002734:	4602      	mov	r2, r0
 8002736:	2149      	movs	r1, #73	; 0x49
 8002738:	4620      	mov	r0, r4
 800273a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800273e:	f7fd bde3 	b.w	8000308 <d_make_comp>
 8002742:	bf00      	nop

08002744 <d_print_comp>:
 8002744:	2a00      	cmp	r2, #0
 8002746:	d075      	beq.n	8002834 <d_print_comp+0xf0>
 8002748:	6853      	ldr	r3, [r2, #4]
 800274a:	2b01      	cmp	r3, #1
 800274c:	dc72      	bgt.n	8002834 <d_print_comp+0xf0>
 800274e:	f8d0 c11c 	ldr.w	ip, [r0, #284]	; 0x11c
 8002752:	f5bc 6f80 	cmp.w	ip, #1024	; 0x400
 8002756:	dc6d      	bgt.n	8002834 <d_print_comp+0xf0>
 8002758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800275c:	4615      	mov	r5, r2
 800275e:	1c5a      	adds	r2, r3, #1
 8002760:	606a      	str	r2, [r5, #4]
 8002762:	b097      	sub	sp, #92	; 0x5c
 8002764:	4604      	mov	r4, r0
 8002766:	f8d0 7118 	ldr.w	r7, [r0, #280]	; 0x118
 800276a:	f8d0 212c 	ldr.w	r2, [r0, #300]	; 0x12c
 800276e:	9502      	str	r5, [sp, #8]
 8002770:	460e      	mov	r6, r1
 8002772:	f10c 0001 	add.w	r0, ip, #1
 8002776:	a902      	add	r1, sp, #8
 8002778:	f8c4 011c 	str.w	r0, [r4, #284]	; 0x11c
 800277c:	9203      	str	r2, [sp, #12]
 800277e:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 8002782:	2f00      	cmp	r7, #0
 8002784:	f040 80d3 	bne.w	800292e <d_print_comp+0x1ea>
 8002788:	7828      	ldrb	r0, [r5, #0]
 800278a:	284f      	cmp	r0, #79	; 0x4f
 800278c:	f201 82ef 	bhi.w	8003d6e <d_print_comp+0x162a>
 8002790:	e8df f010 	tbh	[pc, r0, lsl #1]
 8002794:	090409a4 	.word	0x090409a4
 8002798:	088b0904 	.word	0x088b0904
 800279c:	0861093d 	.word	0x0861093d
 80027a0:	08280836 	.word	0x08280836
 80027a4:	0a2c0a52 	.word	0x0a2c0a52
 80027a8:	09d209f8 	.word	0x09d209f8
 80027ac:	0a7b0ac7 	.word	0x0a7b0ac7
 80027b0:	05d50aa1 	.word	0x05d50aa1
 80027b4:	06f20718 	.word	0x06f20718
 80027b8:	069306cc 	.word	0x069306cc
 80027bc:	0647066d 	.word	0x0647066d
 80027c0:	05fb0621 	.word	0x05fb0621
 80027c4:	078c07a3 	.word	0x078c07a3
 80027c8:	078c078c 	.word	0x078c078c
 80027cc:	07670767 	.word	0x07670767
 80027d0:	07670767 	.word	0x07670767
 80027d4:	07670767 	.word	0x07670767
 80027d8:	073e0767 	.word	0x073e0767
 80027dc:	0767073e 	.word	0x0767073e
 80027e0:	07dc0767 	.word	0x07dc0767
 80027e4:	080a07ce 	.word	0x080a07ce
 80027e8:	054a0569 	.word	0x054a0569
 80027ec:	054a04f9 	.word	0x054a04f9
 80027f0:	04b504b5 	.word	0x04b504b5
 80027f4:	043b0470 	.word	0x043b0470
 80027f8:	0aed0415 	.word	0x0aed0415
 80027fc:	03e203ef 	.word	0x03e203ef
 8002800:	0382038d 	.word	0x0382038d
 8002804:	036d037c 	.word	0x036d037c
 8002808:	03670367 	.word	0x03670367
 800280c:	03200320 	.word	0x03200320
 8002810:	02e802fa 	.word	0x02e802fa
 8002814:	029802c7 	.word	0x029802c7
 8002818:	024c0272 	.word	0x024c0272
 800281c:	01eb0211 	.word	0x01eb0211
 8002820:	01c60aed 	.word	0x01c60aed
 8002824:	014f01a0 	.word	0x014f01a0
 8002828:	01750100 	.word	0x01750100
 800282c:	00d50767 	.word	0x00d50767
 8002830:	07670767 	.word	0x07670767
 8002834:	2301      	movs	r3, #1
 8002836:	f8c0 3118 	str.w	r3, [r0, #280]	; 0x118
 800283a:	4770      	bx	lr
 800283c:	68aa      	ldr	r2, [r5, #8]
 800283e:	6893      	ldr	r3, [r2, #8]
 8002840:	681b      	ldr	r3, [r3, #0]
 8002842:	7859      	ldrb	r1, [r3, #1]
 8002844:	2963      	cmp	r1, #99	; 0x63
 8002846:	f002 821e 	beq.w	8004c86 <d_print_comp+0x2542>
 800284a:	f105 030c 	add.w	r3, r5, #12
 800284e:	4631      	mov	r1, r6
 8002850:	4620      	mov	r0, r4
 8002852:	f003 fe5f 	bl	8006514 <d_maybe_print_fold_expression.isra.19>
 8002856:	4607      	mov	r7, r0
 8002858:	2800      	cmp	r0, #0
 800285a:	f042 83b5 	bne.w	8004fc8 <d_print_comp+0x2884>
 800285e:	68ab      	ldr	r3, [r5, #8]
 8002860:	781a      	ldrb	r2, [r3, #0]
 8002862:	2a31      	cmp	r2, #49	; 0x31
 8002864:	f002 858b 	beq.w	800537e <d_print_comp+0x2c3a>
 8002868:	689b      	ldr	r3, [r3, #8]
 800286a:	49d8      	ldr	r1, [pc, #864]	; (8002bcc <d_print_comp+0x488>)
 800286c:	6818      	ldr	r0, [r3, #0]
 800286e:	f005 f9fb 	bl	8007c68 <strcmp>
 8002872:	68eb      	ldr	r3, [r5, #12]
 8002874:	689a      	ldr	r2, [r3, #8]
 8002876:	b918      	cbnz	r0, 8002880 <d_print_comp+0x13c>
 8002878:	7813      	ldrb	r3, [r2, #0]
 800287a:	2b03      	cmp	r3, #3
 800287c:	f002 85df 	beq.w	800543e <d_print_comp+0x2cfa>
 8002880:	4631      	mov	r1, r6
 8002882:	4620      	mov	r0, r4
 8002884:	f003 fdf8 	bl	8006478 <d_print_subexpr>
 8002888:	68af      	ldr	r7, [r5, #8]
 800288a:	49d1      	ldr	r1, [pc, #836]	; (8002bd0 <d_print_comp+0x48c>)
 800288c:	68bb      	ldr	r3, [r7, #8]
 800288e:	f8d3 8000 	ldr.w	r8, [r3]
 8002892:	4640      	mov	r0, r8
 8002894:	f005 f9e8 	bl	8007c68 <strcmp>
 8002898:	4681      	mov	r9, r0
 800289a:	2800      	cmp	r0, #0
 800289c:	f042 84a0 	bne.w	80051e0 <d_print_comp+0x2a9c>
 80028a0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80028a4:	2bff      	cmp	r3, #255	; 0xff
 80028a6:	d10e      	bne.n	80028c6 <d_print_comp+0x182>
 80028a8:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 80028ac:	4619      	mov	r1, r3
 80028ae:	4620      	mov	r0, r4
 80028b0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80028b4:	4798      	blx	r3
 80028b6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80028ba:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 80028be:	1c5a      	adds	r2, r3, #1
 80028c0:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80028c4:	464b      	mov	r3, r9
 80028c6:	1c59      	adds	r1, r3, #1
 80028c8:	225b      	movs	r2, #91	; 0x5b
 80028ca:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80028ce:	54e2      	strb	r2, [r4, r3]
 80028d0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80028d4:	68eb      	ldr	r3, [r5, #12]
 80028d6:	4631      	mov	r1, r6
 80028d8:	68da      	ldr	r2, [r3, #12]
 80028da:	4620      	mov	r0, r4
 80028dc:	f7ff ff32 	bl	8002744 <d_print_comp>
 80028e0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80028e4:	2bff      	cmp	r3, #255	; 0xff
 80028e6:	d10f      	bne.n	8002908 <d_print_comp+0x1c4>
 80028e8:	2600      	movs	r6, #0
 80028ea:	4619      	mov	r1, r3
 80028ec:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80028f0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80028f4:	4620      	mov	r0, r4
 80028f6:	4798      	blx	r3
 80028f8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80028fc:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8002900:	1c5a      	adds	r2, r3, #1
 8002902:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8002906:	4633      	mov	r3, r6
 8002908:	225d      	movs	r2, #93	; 0x5d
 800290a:	1c59      	adds	r1, r3, #1
 800290c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002910:	54e2      	strb	r2, [r4, r3]
 8002912:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8002916:	68ab      	ldr	r3, [r5, #8]
 8002918:	781a      	ldrb	r2, [r3, #0]
 800291a:	2a31      	cmp	r2, #49	; 0x31
 800291c:	f002 84c3 	beq.w	80052a6 <d_print_comp+0x2b62>
 8002920:	686b      	ldr	r3, [r5, #4]
 8002922:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8002926:	9a03      	ldr	r2, [sp, #12]
 8002928:	3b01      	subs	r3, #1
 800292a:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800292e:	f8c4 212c 	str.w	r2, [r4, #300]	; 0x12c
 8002932:	606b      	str	r3, [r5, #4]
 8002934:	f8c4 c11c 	str.w	ip, [r4, #284]	; 0x11c
 8002938:	b017      	add	sp, #92	; 0x5c
 800293a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800293e:	f8df 829c 	ldr.w	r8, [pc, #668]	; 8002bdc <d_print_comp+0x498>
 8002942:	68aa      	ldr	r2, [r5, #8]
 8002944:	4631      	mov	r1, r6
 8002946:	4620      	mov	r0, r4
 8002948:	f7ff fefc 	bl	8002744 <d_print_comp>
 800294c:	f108 0a07 	add.w	sl, r8, #7
 8002950:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002954:	2720      	movs	r7, #32
 8002956:	f04f 0900 	mov.w	r9, #0
 800295a:	e00b      	b.n	8002974 <d_print_comp+0x230>
 800295c:	460b      	mov	r3, r1
 800295e:	3101      	adds	r1, #1
 8002960:	45c2      	cmp	sl, r8
 8002962:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002966:	54e7      	strb	r7, [r4, r3]
 8002968:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800296c:	f001 838d 	beq.w	800408a <d_print_comp+0x1946>
 8002970:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8002974:	29ff      	cmp	r1, #255	; 0xff
 8002976:	d1f1      	bne.n	800295c <d_print_comp+0x218>
 8002978:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800297c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002980:	4620      	mov	r0, r4
 8002982:	4798      	blx	r3
 8002984:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002988:	3301      	adds	r3, #1
 800298a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800298e:	2101      	movs	r1, #1
 8002990:	2300      	movs	r3, #0
 8002992:	e7e5      	b.n	8002960 <d_print_comp+0x21c>
 8002994:	68a9      	ldr	r1, [r5, #8]
 8002996:	4620      	mov	r0, r4
 8002998:	f7fd ffd8 	bl	800094c <d_find_pack>
 800299c:	f04f 0a00 	mov.w	sl, #0
 80029a0:	2800      	cmp	r0, #0
 80029a2:	f002 8513 	beq.w	80053cc <d_print_comp+0x2c88>
 80029a6:	7803      	ldrb	r3, [r0, #0]
 80029a8:	2b2f      	cmp	r3, #47	; 0x2f
 80029aa:	f041 8576 	bne.w	800449a <d_print_comp+0x1d56>
 80029ae:	6883      	ldr	r3, [r0, #8]
 80029b0:	2b00      	cmp	r3, #0
 80029b2:	f001 8572 	beq.w	800449a <d_print_comp+0x1d56>
 80029b6:	68c0      	ldr	r0, [r0, #12]
 80029b8:	f10a 0a01 	add.w	sl, sl, #1
 80029bc:	2800      	cmp	r0, #0
 80029be:	d1f2      	bne.n	80029a6 <d_print_comp+0x262>
 80029c0:	68ab      	ldr	r3, [r5, #8]
 80029c2:	9300      	str	r3, [sp, #0]
 80029c4:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
 80029c8:	4698      	mov	r8, r3
 80029ca:	46b1      	mov	r9, r6
 80029cc:	9501      	str	r5, [sp, #4]
 80029ce:	e003      	b.n	80029d8 <d_print_comp+0x294>
 80029d0:	3701      	adds	r7, #1
 80029d2:	45ba      	cmp	sl, r7
 80029d4:	f341 8541 	ble.w	800445a <d_print_comp+0x1d16>
 80029d8:	f8c4 7124 	str.w	r7, [r4, #292]	; 0x124
 80029dc:	9a00      	ldr	r2, [sp, #0]
 80029de:	4649      	mov	r1, r9
 80029e0:	4620      	mov	r0, r4
 80029e2:	f7ff feaf 	bl	8002744 <d_print_comp>
 80029e6:	4547      	cmp	r7, r8
 80029e8:	daf2      	bge.n	80029d0 <d_print_comp+0x28c>
 80029ea:	4e7a      	ldr	r6, [pc, #488]	; (8002bd4 <d_print_comp+0x490>)
 80029ec:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80029f0:	f106 0b01 	add.w	fp, r6, #1
 80029f4:	252c      	movs	r5, #44	; 0x2c
 80029f6:	e00a      	b.n	8002a0e <d_print_comp+0x2ca>
 80029f8:	460b      	mov	r3, r1
 80029fa:	3101      	adds	r1, #1
 80029fc:	45b3      	cmp	fp, r6
 80029fe:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002a02:	54e5      	strb	r5, [r4, r3]
 8002a04:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8002a08:	d0e2      	beq.n	80029d0 <d_print_comp+0x28c>
 8002a0a:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8002a0e:	29ff      	cmp	r1, #255	; 0xff
 8002a10:	d1f2      	bne.n	80029f8 <d_print_comp+0x2b4>
 8002a12:	f04f 0300 	mov.w	r3, #0
 8002a16:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 8002a1a:	4620      	mov	r0, r4
 8002a1c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002a20:	4798      	blx	r3
 8002a22:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002a26:	3301      	adds	r3, #1
 8002a28:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002a2c:	2101      	movs	r1, #1
 8002a2e:	2300      	movs	r3, #0
 8002a30:	e7e4      	b.n	80029fc <d_print_comp+0x2b8>
 8002a32:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 8002be0 <d_print_comp+0x49c>
 8002a36:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002a3a:	f108 0a19 	add.w	sl, r8, #25
 8002a3e:	276e      	movs	r7, #110	; 0x6e
 8002a40:	f04f 0900 	mov.w	r9, #0
 8002a44:	e00b      	b.n	8002a5e <d_print_comp+0x31a>
 8002a46:	460b      	mov	r3, r1
 8002a48:	3101      	adds	r1, #1
 8002a4a:	45c2      	cmp	sl, r8
 8002a4c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002a50:	54e7      	strb	r7, [r4, r3]
 8002a52:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002a56:	f001 81a4 	beq.w	8003da2 <d_print_comp+0x165e>
 8002a5a:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8002a5e:	29ff      	cmp	r1, #255	; 0xff
 8002a60:	d1f1      	bne.n	8002a46 <d_print_comp+0x302>
 8002a62:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002a66:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002a6a:	4620      	mov	r0, r4
 8002a6c:	4798      	blx	r3
 8002a6e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002a72:	3301      	adds	r3, #1
 8002a74:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002a78:	2101      	movs	r1, #1
 8002a7a:	2300      	movs	r3, #0
 8002a7c:	e7e5      	b.n	8002a4a <d_print_comp+0x306>
 8002a7e:	f8df 8164 	ldr.w	r8, [pc, #356]	; 8002be4 <d_print_comp+0x4a0>
 8002a82:	68aa      	ldr	r2, [r5, #8]
 8002a84:	4631      	mov	r1, r6
 8002a86:	4620      	mov	r0, r4
 8002a88:	f7ff fe5c 	bl	8002744 <d_print_comp>
 8002a8c:	f108 0a04 	add.w	sl, r8, #4
 8002a90:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002a94:	275b      	movs	r7, #91	; 0x5b
 8002a96:	f04f 0900 	mov.w	r9, #0
 8002a9a:	e00b      	b.n	8002ab4 <d_print_comp+0x370>
 8002a9c:	460b      	mov	r3, r1
 8002a9e:	3101      	adds	r1, #1
 8002aa0:	45c2      	cmp	sl, r8
 8002aa2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002aa6:	54e7      	strb	r7, [r4, r3]
 8002aa8:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002aac:	f001 8313 	beq.w	80040d6 <d_print_comp+0x1992>
 8002ab0:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8002ab4:	29ff      	cmp	r1, #255	; 0xff
 8002ab6:	d1f1      	bne.n	8002a9c <d_print_comp+0x358>
 8002ab8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002abc:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002ac0:	4620      	mov	r0, r4
 8002ac2:	4798      	blx	r3
 8002ac4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002ac8:	3301      	adds	r3, #1
 8002aca:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002ace:	2101      	movs	r1, #1
 8002ad0:	2300      	movs	r3, #0
 8002ad2:	e7e5      	b.n	8002aa0 <d_print_comp+0x35c>
 8002ad4:	f8df 8110 	ldr.w	r8, [pc, #272]	; 8002be8 <d_print_comp+0x4a4>
 8002ad8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002adc:	f108 0a15 	add.w	sl, r8, #21
 8002ae0:	2774      	movs	r7, #116	; 0x74
 8002ae2:	f04f 0900 	mov.w	r9, #0
 8002ae6:	e00b      	b.n	8002b00 <d_print_comp+0x3bc>
 8002ae8:	460b      	mov	r3, r1
 8002aea:	3101      	adds	r1, #1
 8002aec:	45c2      	cmp	sl, r8
 8002aee:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002af2:	54e7      	strb	r7, [r4, r3]
 8002af4:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002af8:	f001 826b 	beq.w	8003fd2 <d_print_comp+0x188e>
 8002afc:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8002b00:	29ff      	cmp	r1, #255	; 0xff
 8002b02:	d1f1      	bne.n	8002ae8 <d_print_comp+0x3a4>
 8002b04:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002b08:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002b0c:	4620      	mov	r0, r4
 8002b0e:	4798      	blx	r3
 8002b10:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002b14:	3301      	adds	r3, #1
 8002b16:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002b1a:	2101      	movs	r1, #1
 8002b1c:	2300      	movs	r3, #0
 8002b1e:	e7e5      	b.n	8002aec <d_print_comp+0x3a8>
 8002b20:	4f2d      	ldr	r7, [pc, #180]	; (8002bd8 <d_print_comp+0x494>)
 8002b22:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002b26:	f107 090d 	add.w	r9, r7, #13
 8002b2a:	267b      	movs	r6, #123	; 0x7b
 8002b2c:	f04f 0800 	mov.w	r8, #0
 8002b30:	e00b      	b.n	8002b4a <d_print_comp+0x406>
 8002b32:	460b      	mov	r3, r1
 8002b34:	3101      	adds	r1, #1
 8002b36:	45b9      	cmp	r9, r7
 8002b38:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002b3c:	54e6      	strb	r6, [r4, r3]
 8002b3e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8002b42:	f001 8254 	beq.w	8003fee <d_print_comp+0x18aa>
 8002b46:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8002b4a:	29ff      	cmp	r1, #255	; 0xff
 8002b4c:	d1f1      	bne.n	8002b32 <d_print_comp+0x3ee>
 8002b4e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002b52:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002b56:	4620      	mov	r0, r4
 8002b58:	4798      	blx	r3
 8002b5a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002b5e:	3301      	adds	r3, #1
 8002b60:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002b64:	2101      	movs	r1, #1
 8002b66:	2300      	movs	r3, #0
 8002b68:	e7e5      	b.n	8002b36 <d_print_comp+0x3f2>
 8002b6a:	f8df 8080 	ldr.w	r8, [pc, #128]	; 8002bec <d_print_comp+0x4a8>
 8002b6e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002b72:	f108 0a07 	add.w	sl, r8, #7
 8002b76:	277b      	movs	r7, #123	; 0x7b
 8002b78:	f04f 0900 	mov.w	r9, #0
 8002b7c:	e00b      	b.n	8002b96 <d_print_comp+0x452>
 8002b7e:	460b      	mov	r3, r1
 8002b80:	3101      	adds	r1, #1
 8002b82:	45c2      	cmp	sl, r8
 8002b84:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002b88:	54e7      	strb	r7, [r4, r3]
 8002b8a:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002b8e:	f001 8191 	beq.w	8003eb4 <d_print_comp+0x1770>
 8002b92:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8002b96:	29ff      	cmp	r1, #255	; 0xff
 8002b98:	d1f1      	bne.n	8002b7e <d_print_comp+0x43a>
 8002b9a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002b9e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002ba2:	4620      	mov	r0, r4
 8002ba4:	4798      	blx	r3
 8002ba6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002baa:	3301      	adds	r3, #1
 8002bac:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002bb0:	2101      	movs	r1, #1
 8002bb2:	2300      	movs	r3, #0
 8002bb4:	e7e5      	b.n	8002b82 <d_print_comp+0x43e>
 8002bb6:	f8df 8038 	ldr.w	r8, [pc, #56]	; 8002bf0 <d_print_comp+0x4ac>
 8002bba:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002bbe:	f108 0a1b 	add.w	sl, r8, #27
 8002bc2:	2767      	movs	r7, #103	; 0x67
 8002bc4:	f04f 0900 	mov.w	r9, #0
 8002bc8:	e020      	b.n	8002c0c <d_print_comp+0x4c8>
 8002bca:	bf00      	nop
 8002bcc:	08012c88 	.word	0x08012c88
 8002bd0:	08012e8c 	.word	0x08012e8c
 8002bd4:	08012e60 	.word	0x08012e60
 8002bd8:	08012f38 	.word	0x08012f38
 8002bdc:	08012f48 	.word	0x08012f48
 8002be0:	08012e2c 	.word	0x08012e2c
 8002be4:	08012cc8 	.word	0x08012cc8
 8002be8:	08012e30 	.word	0x08012e30
 8002bec:	08012f28 	.word	0x08012f28
 8002bf0:	08012f08 	.word	0x08012f08
 8002bf4:	460b      	mov	r3, r1
 8002bf6:	3101      	adds	r1, #1
 8002bf8:	45c2      	cmp	sl, r8
 8002bfa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002bfe:	54e7      	strb	r7, [r4, r3]
 8002c00:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002c04:	f001 81d7 	beq.w	8003fb6 <d_print_comp+0x1872>
 8002c08:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8002c0c:	29ff      	cmp	r1, #255	; 0xff
 8002c0e:	d1f1      	bne.n	8002bf4 <d_print_comp+0x4b0>
 8002c10:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002c14:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002c18:	4620      	mov	r0, r4
 8002c1a:	4798      	blx	r3
 8002c1c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002c20:	3301      	adds	r3, #1
 8002c22:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002c26:	2101      	movs	r1, #1
 8002c28:	2300      	movs	r3, #0
 8002c2a:	e7e5      	b.n	8002bf8 <d_print_comp+0x4b4>
 8002c2c:	f8df 83fc 	ldr.w	r8, [pc, #1020]	; 800302c <d_print_comp+0x8e8>
 8002c30:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002c34:	f108 0a1c 	add.w	sl, r8, #28
 8002c38:	2767      	movs	r7, #103	; 0x67
 8002c3a:	f04f 0900 	mov.w	r9, #0
 8002c3e:	e00b      	b.n	8002c58 <d_print_comp+0x514>
 8002c40:	460b      	mov	r3, r1
 8002c42:	3101      	adds	r1, #1
 8002c44:	45c2      	cmp	sl, r8
 8002c46:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002c4a:	54e7      	strb	r7, [r4, r3]
 8002c4c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002c50:	f001 80fc 	beq.w	8003e4c <d_print_comp+0x1708>
 8002c54:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8002c58:	29ff      	cmp	r1, #255	; 0xff
 8002c5a:	d1f1      	bne.n	8002c40 <d_print_comp+0x4fc>
 8002c5c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002c60:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002c64:	4620      	mov	r0, r4
 8002c66:	4798      	blx	r3
 8002c68:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002c6c:	3301      	adds	r3, #1
 8002c6e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002c72:	2101      	movs	r1, #1
 8002c74:	2300      	movs	r3, #0
 8002c76:	e7e5      	b.n	8002c44 <d_print_comp+0x500>
 8002c78:	f8df 83b4 	ldr.w	r8, [pc, #948]	; 8003030 <d_print_comp+0x8ec>
 8002c7c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002c80:	f108 0a09 	add.w	sl, r8, #9
 8002c84:	2764      	movs	r7, #100	; 0x64
 8002c86:	f04f 0900 	mov.w	r9, #0
 8002c8a:	e00b      	b.n	8002ca4 <d_print_comp+0x560>
 8002c8c:	460b      	mov	r3, r1
 8002c8e:	3101      	adds	r1, #1
 8002c90:	45c2      	cmp	sl, r8
 8002c92:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002c96:	54e7      	strb	r7, [r4, r3]
 8002c98:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002c9c:	f001 80e4 	beq.w	8003e68 <d_print_comp+0x1724>
 8002ca0:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8002ca4:	29ff      	cmp	r1, #255	; 0xff
 8002ca6:	d1f1      	bne.n	8002c8c <d_print_comp+0x548>
 8002ca8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002cac:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002cb0:	4620      	mov	r0, r4
 8002cb2:	4798      	blx	r3
 8002cb4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002cb8:	3301      	adds	r3, #1
 8002cba:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002cbe:	2101      	movs	r1, #1
 8002cc0:	2300      	movs	r3, #0
 8002cc2:	e7e5      	b.n	8002c90 <d_print_comp+0x54c>
 8002cc4:	a806      	add	r0, sp, #24
 8002cc6:	68aa      	ldr	r2, [r5, #8]
 8002cc8:	49d6      	ldr	r1, [pc, #856]	; (8003024 <d_print_comp+0x8e0>)
 8002cca:	f00b fb0b 	bl	800e2e4 <sprintf>
 8002cce:	a806      	add	r0, sp, #24
 8002cd0:	f005 f936 	bl	8007f40 <strlen>
 8002cd4:	2800      	cmp	r0, #0
 8002cd6:	f001 8072 	beq.w	8003dbe <d_print_comp+0x167a>
 8002cda:	ae06      	add	r6, sp, #24
 8002cdc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002ce0:	eb06 0900 	add.w	r9, r6, r0
 8002ce4:	f04f 0800 	mov.w	r8, #0
 8002ce8:	e009      	b.n	8002cfe <d_print_comp+0x5ba>
 8002cea:	460b      	mov	r3, r1
 8002cec:	3101      	adds	r1, #1
 8002cee:	45b1      	cmp	r9, r6
 8002cf0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002cf4:	54e7      	strb	r7, [r4, r3]
 8002cf6:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002cfa:	f001 8060 	beq.w	8003dbe <d_print_comp+0x167a>
 8002cfe:	29ff      	cmp	r1, #255	; 0xff
 8002d00:	f816 7b01 	ldrb.w	r7, [r6], #1
 8002d04:	d1f1      	bne.n	8002cea <d_print_comp+0x5a6>
 8002d06:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002d0a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002d0e:	4620      	mov	r0, r4
 8002d10:	4798      	blx	r3
 8002d12:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002d16:	3301      	adds	r3, #1
 8002d18:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002d1c:	2101      	movs	r1, #1
 8002d1e:	2300      	movs	r3, #0
 8002d20:	e7e5      	b.n	8002cee <d_print_comp+0x5aa>
 8002d22:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002d26:	7a2e      	ldrb	r6, [r5, #8]
 8002d28:	29ff      	cmp	r1, #255	; 0xff
 8002d2a:	d114      	bne.n	8002d56 <d_print_comp+0x612>
 8002d2c:	f04f 0800 	mov.w	r8, #0
 8002d30:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002d34:	4620      	mov	r0, r4
 8002d36:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002d3a:	4798      	blx	r3
 8002d3c:	f8d4 1128 	ldr.w	r1, [r4, #296]	; 0x128
 8002d40:	686b      	ldr	r3, [r5, #4]
 8002d42:	f8d4 011c 	ldr.w	r0, [r4, #284]	; 0x11c
 8002d46:	9a03      	ldr	r2, [sp, #12]
 8002d48:	1c4f      	adds	r7, r1, #1
 8002d4a:	f8c4 7128 	str.w	r7, [r4, #296]	; 0x128
 8002d4e:	4641      	mov	r1, r8
 8002d50:	3b01      	subs	r3, #1
 8002d52:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8002d56:	1c48      	adds	r0, r1, #1
 8002d58:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8002d5c:	5466      	strb	r6, [r4, r1]
 8002d5e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8002d62:	e5e4      	b.n	800292e <d_print_comp+0x1ea>
 8002d64:	68aa      	ldr	r2, [r5, #8]
 8002d66:	4631      	mov	r1, r6
 8002d68:	4620      	mov	r0, r4
 8002d6a:	f7ff fceb 	bl	8002744 <d_print_comp>
 8002d6e:	4631      	mov	r1, r6
 8002d70:	68ea      	ldr	r2, [r5, #12]
 8002d72:	4620      	mov	r0, r4
 8002d74:	f7ff fce6 	bl	8002744 <d_print_comp>
 8002d78:	686b      	ldr	r3, [r5, #4]
 8002d7a:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8002d7e:	9a03      	ldr	r2, [sp, #12]
 8002d80:	3b01      	subs	r3, #1
 8002d82:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8002d86:	e5d2      	b.n	800292e <d_print_comp+0x1ea>
 8002d88:	f8df 82a8 	ldr.w	r8, [pc, #680]	; 8003034 <d_print_comp+0x8f0>
 8002d8c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002d90:	f108 0a0d 	add.w	sl, r8, #13
 8002d94:	276a      	movs	r7, #106	; 0x6a
 8002d96:	f04f 0900 	mov.w	r9, #0
 8002d9a:	e00b      	b.n	8002db4 <d_print_comp+0x670>
 8002d9c:	460b      	mov	r3, r1
 8002d9e:	3101      	adds	r1, #1
 8002da0:	45c2      	cmp	sl, r8
 8002da2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002da6:	54e7      	strb	r7, [r4, r3]
 8002da8:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002dac:	f001 8010 	beq.w	8003dd0 <d_print_comp+0x168c>
 8002db0:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8002db4:	29ff      	cmp	r1, #255	; 0xff
 8002db6:	d1f1      	bne.n	8002d9c <d_print_comp+0x658>
 8002db8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002dbc:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002dc0:	4620      	mov	r0, r4
 8002dc2:	4798      	blx	r3
 8002dc4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002dc8:	3301      	adds	r3, #1
 8002dca:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002dce:	2101      	movs	r1, #1
 8002dd0:	2300      	movs	r3, #0
 8002dd2:	e7e5      	b.n	8002da0 <d_print_comp+0x65c>
 8002dd4:	68ab      	ldr	r3, [r5, #8]
 8002dd6:	781a      	ldrb	r2, [r3, #0]
 8002dd8:	2a27      	cmp	r2, #39	; 0x27
 8002dda:	f001 851c 	beq.w	8004816 <d_print_comp+0x20d2>
 8002dde:	2700      	movs	r7, #0
 8002de0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002de4:	2bff      	cmp	r3, #255	; 0xff
 8002de6:	d110      	bne.n	8002e0a <d_print_comp+0x6c6>
 8002de8:	f04f 0800 	mov.w	r8, #0
 8002dec:	4619      	mov	r1, r3
 8002dee:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002df2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002df6:	4620      	mov	r0, r4
 8002df8:	4798      	blx	r3
 8002dfa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002dfe:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8002e02:	1c5a      	adds	r2, r3, #1
 8002e04:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8002e08:	4643      	mov	r3, r8
 8002e0a:	1c59      	adds	r1, r3, #1
 8002e0c:	2228      	movs	r2, #40	; 0x28
 8002e0e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002e12:	54e2      	strb	r2, [r4, r3]
 8002e14:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8002e18:	68aa      	ldr	r2, [r5, #8]
 8002e1a:	4631      	mov	r1, r6
 8002e1c:	4620      	mov	r0, r4
 8002e1e:	f7ff fc91 	bl	8002744 <d_print_comp>
 8002e22:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002e26:	2bff      	cmp	r3, #255	; 0xff
 8002e28:	f001 863d 	beq.w	8004aa6 <d_print_comp+0x2362>
 8002e2c:	1c59      	adds	r1, r3, #1
 8002e2e:	2229      	movs	r2, #41	; 0x29
 8002e30:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002e34:	54e2      	strb	r2, [r4, r3]
 8002e36:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8002e3a:	782b      	ldrb	r3, [r5, #0]
 8002e3c:	2b3d      	cmp	r3, #61	; 0x3d
 8002e3e:	f002 8010 	beq.w	8004e62 <d_print_comp+0x271e>
 8002e42:	2f08      	cmp	r7, #8
 8002e44:	f001 8514 	beq.w	8004870 <d_print_comp+0x212c>
 8002e48:	4631      	mov	r1, r6
 8002e4a:	68ea      	ldr	r2, [r5, #12]
 8002e4c:	4620      	mov	r0, r4
 8002e4e:	f7ff fc79 	bl	8002744 <d_print_comp>
 8002e52:	686b      	ldr	r3, [r5, #4]
 8002e54:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8002e58:	9a03      	ldr	r2, [sp, #12]
 8002e5a:	3b01      	subs	r3, #1
 8002e5c:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8002e60:	e565      	b.n	800292e <d_print_comp+0x1ea>
 8002e62:	2301      	movs	r3, #1
 8002e64:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8002e68:	686b      	ldr	r3, [r5, #4]
 8002e6a:	3b01      	subs	r3, #1
 8002e6c:	e55f      	b.n	800292e <d_print_comp+0x1ea>
 8002e6e:	68eb      	ldr	r3, [r5, #12]
 8002e70:	7819      	ldrb	r1, [r3, #0]
 8002e72:	293a      	cmp	r1, #58	; 0x3a
 8002e74:	d104      	bne.n	8002e80 <d_print_comp+0x73c>
 8002e76:	68db      	ldr	r3, [r3, #12]
 8002e78:	781b      	ldrb	r3, [r3, #0]
 8002e7a:	2b3b      	cmp	r3, #59	; 0x3b
 8002e7c:	f002 815b 	beq.w	8005136 <d_print_comp+0x29f2>
 8002e80:	2301      	movs	r3, #1
 8002e82:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8002e86:	686b      	ldr	r3, [r5, #4]
 8002e88:	3b01      	subs	r3, #1
 8002e8a:	e550      	b.n	800292e <d_print_comp+0x1ea>
 8002e8c:	2301      	movs	r3, #1
 8002e8e:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8002e92:	686b      	ldr	r3, [r5, #4]
 8002e94:	3b01      	subs	r3, #1
 8002e96:	e54a      	b.n	800292e <d_print_comp+0x1ea>
 8002e98:	68eb      	ldr	r3, [r5, #12]
 8002e9a:	781b      	ldrb	r3, [r3, #0]
 8002e9c:	2b38      	cmp	r3, #56	; 0x38
 8002e9e:	f43f accd 	beq.w	800283c <d_print_comp+0xf8>
 8002ea2:	2301      	movs	r3, #1
 8002ea4:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8002ea8:	686b      	ldr	r3, [r5, #4]
 8002eaa:	3b01      	subs	r3, #1
 8002eac:	e53f      	b.n	800292e <d_print_comp+0x1ea>
 8002eae:	e9d5 8702 	ldrd	r8, r7, [r5, #8]
 8002eb2:	f898 3000 	ldrb.w	r3, [r8]
 8002eb6:	2b31      	cmp	r3, #49	; 0x31
 8002eb8:	f001 857d 	beq.w	80049b6 <d_print_comp+0x2272>
 8002ebc:	2b33      	cmp	r3, #51	; 0x33
 8002ebe:	f042 83ed 	bne.w	800569c <d_print_comp+0x2f58>
 8002ec2:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002ec6:	2bff      	cmp	r3, #255	; 0xff
 8002ec8:	d110      	bne.n	8002eec <d_print_comp+0x7a8>
 8002eca:	f04f 0900 	mov.w	r9, #0
 8002ece:	4619      	mov	r1, r3
 8002ed0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002ed4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002ed8:	4620      	mov	r0, r4
 8002eda:	4798      	blx	r3
 8002edc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002ee0:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 8002ee4:	1c5a      	adds	r2, r3, #1
 8002ee6:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8002eea:	464b      	mov	r3, r9
 8002eec:	1c59      	adds	r1, r3, #1
 8002eee:	2228      	movs	r2, #40	; 0x28
 8002ef0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002ef4:	54e2      	strb	r2, [r4, r3]
 8002ef6:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8002efa:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8002efe:	4631      	mov	r1, r6
 8002f00:	4620      	mov	r0, r4
 8002f02:	f7ff fc1f 	bl	8002744 <d_print_comp>
 8002f06:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002f0a:	2bff      	cmp	r3, #255	; 0xff
 8002f0c:	d110      	bne.n	8002f30 <d_print_comp+0x7ec>
 8002f0e:	f04f 0800 	mov.w	r8, #0
 8002f12:	4619      	mov	r1, r3
 8002f14:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002f18:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002f1c:	4620      	mov	r0, r4
 8002f1e:	4798      	blx	r3
 8002f20:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002f24:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8002f28:	1c5a      	adds	r2, r3, #1
 8002f2a:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8002f2e:	4643      	mov	r3, r8
 8002f30:	2229      	movs	r2, #41	; 0x29
 8002f32:	1c59      	adds	r1, r3, #1
 8002f34:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002f38:	54e2      	strb	r2, [r4, r3]
 8002f3a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8002f3e:	463a      	mov	r2, r7
 8002f40:	4631      	mov	r1, r6
 8002f42:	4620      	mov	r0, r4
 8002f44:	f003 fa98 	bl	8006478 <d_print_subexpr>
 8002f48:	686b      	ldr	r3, [r5, #4]
 8002f4a:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8002f4e:	9a03      	ldr	r2, [sp, #12]
 8002f50:	3b01      	subs	r3, #1
 8002f52:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8002f56:	e4ea      	b.n	800292e <d_print_comp+0x1ea>
 8002f58:	4631      	mov	r1, r6
 8002f5a:	68aa      	ldr	r2, [r5, #8]
 8002f5c:	4620      	mov	r0, r4
 8002f5e:	f003 fa4f 	bl	8006400 <d_print_expr_op>
 8002f62:	686b      	ldr	r3, [r5, #4]
 8002f64:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8002f68:	9a03      	ldr	r2, [sp, #12]
 8002f6a:	3b01      	subs	r3, #1
 8002f6c:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8002f70:	e4dd      	b.n	800292e <d_print_comp+0x1ea>
 8002f72:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003038 <d_print_comp+0x8f4>
 8002f76:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002f7a:	f108 0a08 	add.w	sl, r8, #8
 8002f7e:	276f      	movs	r7, #111	; 0x6f
 8002f80:	f04f 0900 	mov.w	r9, #0
 8002f84:	e00b      	b.n	8002f9e <d_print_comp+0x85a>
 8002f86:	460b      	mov	r3, r1
 8002f88:	3101      	adds	r1, #1
 8002f8a:	45c2      	cmp	sl, r8
 8002f8c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002f90:	54e7      	strb	r7, [r4, r3]
 8002f92:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002f96:	f000 8737 	beq.w	8003e08 <d_print_comp+0x16c4>
 8002f9a:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8002f9e:	29ff      	cmp	r1, #255	; 0xff
 8002fa0:	d1f1      	bne.n	8002f86 <d_print_comp+0x842>
 8002fa2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002fa6:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002faa:	4620      	mov	r0, r4
 8002fac:	4798      	blx	r3
 8002fae:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002fb2:	3301      	adds	r3, #1
 8002fb4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002fb8:	2101      	movs	r1, #1
 8002fba:	2300      	movs	r3, #0
 8002fbc:	e7e5      	b.n	8002f8a <d_print_comp+0x846>
 8002fbe:	f8df 8078 	ldr.w	r8, [pc, #120]	; 8003038 <d_print_comp+0x8f4>
 8002fc2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002fc6:	f108 0a08 	add.w	sl, r8, #8
 8002fca:	276f      	movs	r7, #111	; 0x6f
 8002fcc:	f04f 0900 	mov.w	r9, #0
 8002fd0:	e00b      	b.n	8002fea <d_print_comp+0x8a6>
 8002fd2:	460b      	mov	r3, r1
 8002fd4:	3101      	adds	r1, #1
 8002fd6:	45c2      	cmp	sl, r8
 8002fd8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002fdc:	54e7      	strb	r7, [r4, r3]
 8002fde:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002fe2:	f000 8703 	beq.w	8003dec <d_print_comp+0x16a8>
 8002fe6:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8002fea:	29ff      	cmp	r1, #255	; 0xff
 8002fec:	d1f1      	bne.n	8002fd2 <d_print_comp+0x88e>
 8002fee:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002ff2:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002ff6:	4620      	mov	r0, r4
 8002ff8:	4798      	blx	r3
 8002ffa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002ffe:	3301      	adds	r3, #1
 8003000:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003004:	2101      	movs	r1, #1
 8003006:	2300      	movs	r3, #0
 8003008:	e7e5      	b.n	8002fd6 <d_print_comp+0x892>
 800300a:	f8d5 9008 	ldr.w	r9, [r5, #8]
 800300e:	4f06      	ldr	r7, [pc, #24]	; (8003028 <d_print_comp+0x8e4>)
 8003010:	f8d9 8008 	ldr.w	r8, [r9, #8]
 8003014:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003018:	f107 0b07 	add.w	fp, r7, #7
 800301c:	266f      	movs	r6, #111	; 0x6f
 800301e:	f04f 0a00 	mov.w	sl, #0
 8003022:	e017      	b.n	8003054 <d_print_comp+0x910>
 8003024:	08012ce4 	.word	0x08012ce4
 8003028:	08012e64 	.word	0x08012e64
 800302c:	08012ee8 	.word	0x08012ee8
 8003030:	08012ec8 	.word	0x08012ec8
 8003034:	08012eb8 	.word	0x08012eb8
 8003038:	08012e70 	.word	0x08012e70
 800303c:	460b      	mov	r3, r1
 800303e:	3101      	adds	r1, #1
 8003040:	45bb      	cmp	fp, r7
 8003042:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003046:	54e6      	strb	r6, [r4, r3]
 8003048:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800304c:	f001 8069 	beq.w	8004122 <d_print_comp+0x19de>
 8003050:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8003054:	29ff      	cmp	r1, #255	; 0xff
 8003056:	d1f1      	bne.n	800303c <d_print_comp+0x8f8>
 8003058:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800305c:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8003060:	4620      	mov	r0, r4
 8003062:	4798      	blx	r3
 8003064:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003068:	3301      	adds	r3, #1
 800306a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800306e:	2101      	movs	r1, #1
 8003070:	2300      	movs	r3, #0
 8003072:	e7e5      	b.n	8003040 <d_print_comp+0x8fc>
 8003074:	e9d5 2802 	ldrd	r2, r8, [r5, #8]
 8003078:	b11a      	cbz	r2, 8003082 <d_print_comp+0x93e>
 800307a:	4631      	mov	r1, r6
 800307c:	4620      	mov	r0, r4
 800307e:	f7ff fb61 	bl	8002744 <d_print_comp>
 8003082:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003086:	2bff      	cmp	r3, #255	; 0xff
 8003088:	d10d      	bne.n	80030a6 <d_print_comp+0x962>
 800308a:	2700      	movs	r7, #0
 800308c:	4619      	mov	r1, r3
 800308e:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8003092:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003096:	4620      	mov	r0, r4
 8003098:	4798      	blx	r3
 800309a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800309e:	1c5a      	adds	r2, r3, #1
 80030a0:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80030a4:	463b      	mov	r3, r7
 80030a6:	1c58      	adds	r0, r3, #1
 80030a8:	277b      	movs	r7, #123	; 0x7b
 80030aa:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 80030ae:	4631      	mov	r1, r6
 80030b0:	54e7      	strb	r7, [r4, r3]
 80030b2:	4642      	mov	r2, r8
 80030b4:	4620      	mov	r0, r4
 80030b6:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80030ba:	f7ff fb43 	bl	8002744 <d_print_comp>
 80030be:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80030c2:	29ff      	cmp	r1, #255	; 0xff
 80030c4:	d10c      	bne.n	80030e0 <d_print_comp+0x99c>
 80030c6:	2600      	movs	r6, #0
 80030c8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80030cc:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80030d0:	4620      	mov	r0, r4
 80030d2:	4798      	blx	r3
 80030d4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80030d8:	3301      	adds	r3, #1
 80030da:	4631      	mov	r1, r6
 80030dc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80030e0:	1c4a      	adds	r2, r1, #1
 80030e2:	237d      	movs	r3, #125	; 0x7d
 80030e4:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80030e8:	5463      	strb	r3, [r4, r1]
 80030ea:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80030ee:	686b      	ldr	r3, [r5, #4]
 80030f0:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80030f4:	9a03      	ldr	r2, [sp, #12]
 80030f6:	3b01      	subs	r3, #1
 80030f8:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80030fc:	e417      	b.n	800292e <d_print_comp+0x1ea>
 80030fe:	68aa      	ldr	r2, [r5, #8]
 8003100:	b11a      	cbz	r2, 800310a <d_print_comp+0x9c6>
 8003102:	4631      	mov	r1, r6
 8003104:	4620      	mov	r0, r4
 8003106:	f7ff fb1d 	bl	8002744 <d_print_comp>
 800310a:	68eb      	ldr	r3, [r5, #12]
 800310c:	2b00      	cmp	r3, #0
 800310e:	f001 858e 	beq.w	8004c2e <d_print_comp+0x24ea>
 8003112:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003116:	2bfd      	cmp	r3, #253	; 0xfd
 8003118:	d90e      	bls.n	8003138 <d_print_comp+0x9f4>
 800311a:	2700      	movs	r7, #0
 800311c:	54e7      	strb	r7, [r4, r3]
 800311e:	4619      	mov	r1, r3
 8003120:	4620      	mov	r0, r4
 8003122:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003126:	4798      	blx	r3
 8003128:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800312c:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8003130:	1c5a      	adds	r2, r3, #1
 8003132:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8003136:	463b      	mov	r3, r7
 8003138:	f8df 939c 	ldr.w	r9, [pc, #924]	; 80034d8 <d_print_comp+0xd94>
 800313c:	f04f 082c 	mov.w	r8, #44	; 0x2c
 8003140:	f109 0b01 	add.w	fp, r9, #1
 8003144:	f04f 0a00 	mov.w	sl, #0
 8003148:	4619      	mov	r1, r3
 800314a:	e00c      	b.n	8003166 <d_print_comp+0xa22>
 800314c:	460b      	mov	r3, r1
 800314e:	3101      	adds	r1, #1
 8003150:	45cb      	cmp	fp, r9
 8003152:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003156:	f804 8003 	strb.w	r8, [r4, r3]
 800315a:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800315e:	f001 8186 	beq.w	800446e <d_print_comp+0x1d2a>
 8003162:	f819 8f01 	ldrb.w	r8, [r9, #1]!
 8003166:	29ff      	cmp	r1, #255	; 0xff
 8003168:	d1f0      	bne.n	800314c <d_print_comp+0xa08>
 800316a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800316e:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8003172:	4620      	mov	r0, r4
 8003174:	4798      	blx	r3
 8003176:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800317a:	3301      	adds	r3, #1
 800317c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003180:	2101      	movs	r1, #1
 8003182:	2300      	movs	r3, #0
 8003184:	e7e4      	b.n	8003150 <d_print_comp+0xa0c>
 8003186:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800318a:	2b00      	cmp	r3, #0
 800318c:	f041 852a 	bne.w	8004be4 <d_print_comp+0x24a0>
 8003190:	68aa      	ldr	r2, [r5, #8]
 8003192:	4bcf      	ldr	r3, [pc, #828]	; (80034d0 <d_print_comp+0xd8c>)
 8003194:	6891      	ldr	r1, [r2, #8]
 8003196:	4299      	cmp	r1, r3
 8003198:	f001 8286 	beq.w	80046a8 <d_print_comp+0x1f64>
 800319c:	4631      	mov	r1, r6
 800319e:	4620      	mov	r0, r4
 80031a0:	f7ff fad0 	bl	8002744 <d_print_comp>
 80031a4:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80031a8:	2bff      	cmp	r3, #255	; 0xff
 80031aa:	d10f      	bne.n	80031cc <d_print_comp+0xa88>
 80031ac:	2600      	movs	r6, #0
 80031ae:	4619      	mov	r1, r3
 80031b0:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80031b4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80031b8:	4620      	mov	r0, r4
 80031ba:	4798      	blx	r3
 80031bc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80031c0:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80031c4:	1c5a      	adds	r2, r3, #1
 80031c6:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80031ca:	4633      	mov	r3, r6
 80031cc:	2220      	movs	r2, #32
 80031ce:	1c59      	adds	r1, r3, #1
 80031d0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80031d4:	54e2      	strb	r2, [r4, r3]
 80031d6:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80031da:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
 80031de:	2b00      	cmp	r3, #0
 80031e0:	f041 820e 	bne.w	8004600 <d_print_comp+0x1ebc>
 80031e4:	4fbb      	ldr	r7, [pc, #748]	; (80034d4 <d_print_comp+0xd90>)
 80031e6:	4698      	mov	r8, r3
 80031e8:	f107 0905 	add.w	r9, r7, #5
 80031ec:	265f      	movs	r6, #95	; 0x5f
 80031ee:	e00b      	b.n	8003208 <d_print_comp+0xac4>
 80031f0:	460b      	mov	r3, r1
 80031f2:	3101      	adds	r1, #1
 80031f4:	45b9      	cmp	r9, r7
 80031f6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80031fa:	54e6      	strb	r6, [r4, r3]
 80031fc:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003200:	f001 8256 	beq.w	80046b0 <d_print_comp+0x1f6c>
 8003204:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8003208:	29ff      	cmp	r1, #255	; 0xff
 800320a:	d1f1      	bne.n	80031f0 <d_print_comp+0xaac>
 800320c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003210:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003214:	4620      	mov	r0, r4
 8003216:	4798      	blx	r3
 8003218:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800321c:	3301      	adds	r3, #1
 800321e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003222:	2101      	movs	r1, #1
 8003224:	2300      	movs	r3, #0
 8003226:	e7e5      	b.n	80031f4 <d_print_comp+0xab0>
 8003228:	e9d4 3144 	ldrd	r3, r1, [r4, #272]	; 0x110
 800322c:	aa06      	add	r2, sp, #24
 800322e:	2000      	movs	r0, #0
 8003230:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 8003234:	e9cd 1506 	strd	r1, r5, [sp, #24]
 8003238:	9008      	str	r0, [sp, #32]
 800323a:	68ea      	ldr	r2, [r5, #12]
 800323c:	9309      	str	r3, [sp, #36]	; 0x24
 800323e:	4631      	mov	r1, r6
 8003240:	4620      	mov	r0, r4
 8003242:	f7ff fa7f 	bl	8002744 <d_print_comp>
 8003246:	9b08      	ldr	r3, [sp, #32]
 8003248:	2b00      	cmp	r3, #0
 800324a:	f001 8466 	beq.w	8004b1a <d_print_comp+0x23d6>
 800324e:	686b      	ldr	r3, [r5, #4]
 8003250:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8003254:	9906      	ldr	r1, [sp, #24]
 8003256:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
 800325a:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 800325e:	3b01      	subs	r3, #1
 8003260:	9a03      	ldr	r2, [sp, #12]
 8003262:	f7ff bb64 	b.w	800292e <d_print_comp+0x1ea>
 8003266:	e9d4 3a44 	ldrd	r3, sl, [r4, #272]	; 0x110
 800326a:	f10d 0918 	add.w	r9, sp, #24
 800326e:	2200      	movs	r2, #0
 8003270:	4657      	mov	r7, sl
 8003272:	9507      	str	r5, [sp, #28]
 8003274:	f8cd a000 	str.w	sl, [sp]
 8003278:	f8cd a018 	str.w	sl, [sp, #24]
 800327c:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8003280:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8003284:	2f00      	cmp	r7, #0
 8003286:	f002 8149 	beq.w	800551c <d_print_comp+0x2dd8>
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	781b      	ldrb	r3, [r3, #0]
 800328e:	3b19      	subs	r3, #25
 8003290:	2b02      	cmp	r3, #2
 8003292:	f202 8143 	bhi.w	800551c <d_print_comp+0x2dd8>
 8003296:	46b6      	mov	lr, r6
 8003298:	f04f 0801 	mov.w	r8, #1
 800329c:	464e      	mov	r6, r9
 800329e:	e004      	b.n	80032aa <d_print_comp+0xb66>
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	781b      	ldrb	r3, [r3, #0]
 80032a4:	3b19      	subs	r3, #25
 80032a6:	2b02      	cmp	r3, #2
 80032a8:	d81d      	bhi.n	80032e6 <d_print_comp+0xba2>
 80032aa:	68bb      	ldr	r3, [r7, #8]
 80032ac:	ea4f 1c08 	mov.w	ip, r8, lsl #4
 80032b0:	aa16      	add	r2, sp, #88	; 0x58
 80032b2:	eb02 0b0c 	add.w	fp, r2, ip
 80032b6:	b99b      	cbnz	r3, 80032e0 <d_print_comp+0xb9c>
 80032b8:	f1b8 0f03 	cmp.w	r8, #3
 80032bc:	f201 867f 	bhi.w	8004fbe <d_print_comp+0x287a>
 80032c0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80032c4:	f1ab 0a40 	sub.w	sl, fp, #64	; 0x40
 80032c8:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
 80032cc:	f84b 6c40 	str.w	r6, [fp, #-64]
 80032d0:	2301      	movs	r3, #1
 80032d2:	eb09 060c 	add.w	r6, r9, ip
 80032d6:	f8c4 6114 	str.w	r6, [r4, #276]	; 0x114
 80032da:	f108 0801 	add.w	r8, r8, #1
 80032de:	60bb      	str	r3, [r7, #8]
 80032e0:	683f      	ldr	r7, [r7, #0]
 80032e2:	2f00      	cmp	r7, #0
 80032e4:	d1dc      	bne.n	80032a0 <d_print_comp+0xb5c>
 80032e6:	68ea      	ldr	r2, [r5, #12]
 80032e8:	4671      	mov	r1, lr
 80032ea:	4620      	mov	r0, r4
 80032ec:	4676      	mov	r6, lr
 80032ee:	f7ff fa29 	bl	8002744 <d_print_comp>
 80032f2:	9b08      	ldr	r3, [sp, #32]
 80032f4:	9a00      	ldr	r2, [sp, #0]
 80032f6:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 80032fa:	b9bb      	cbnz	r3, 800332c <d_print_comp+0xbe8>
 80032fc:	f1b8 0f01 	cmp.w	r8, #1
 8003300:	d00c      	beq.n	800331c <d_print_comp+0xbd8>
 8003302:	eb09 1808 	add.w	r8, r9, r8, lsl #4
 8003306:	af0a      	add	r7, sp, #40	; 0x28
 8003308:	f858 2c0c 	ldr.w	r2, [r8, #-12]
 800330c:	4631      	mov	r1, r6
 800330e:	f1a8 0810 	sub.w	r8, r8, #16
 8003312:	4620      	mov	r0, r4
 8003314:	f002 fa60 	bl	80057d8 <d_print_mod>
 8003318:	4547      	cmp	r7, r8
 800331a:	d1f5      	bne.n	8003308 <d_print_comp+0xbc4>
 800331c:	4631      	mov	r1, r6
 800331e:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8003322:	f105 0208 	add.w	r2, r5, #8
 8003326:	4620      	mov	r0, r4
 8003328:	f002 ff8c 	bl	8006244 <d_print_array_type.isra.13>
 800332c:	686b      	ldr	r3, [r5, #4]
 800332e:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003332:	9a03      	ldr	r2, [sp, #12]
 8003334:	3b01      	subs	r3, #1
 8003336:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800333a:	f7ff baf8 	b.w	800292e <d_print_comp+0x1ea>
 800333e:	f8df 819c 	ldr.w	r8, [pc, #412]	; 80034dc <d_print_comp+0xd98>
 8003342:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003346:	f108 0a14 	add.w	sl, r8, #20
 800334a:	276e      	movs	r7, #110	; 0x6e
 800334c:	f04f 0900 	mov.w	r9, #0
 8003350:	e00b      	b.n	800336a <d_print_comp+0xc26>
 8003352:	460b      	mov	r3, r1
 8003354:	3101      	adds	r1, #1
 8003356:	45c2      	cmp	sl, r8
 8003358:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800335c:	54e7      	strb	r7, [r4, r3]
 800335e:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003362:	f001 8045 	beq.w	80043f0 <d_print_comp+0x1cac>
 8003366:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 800336a:	29ff      	cmp	r1, #255	; 0xff
 800336c:	d1f1      	bne.n	8003352 <d_print_comp+0xc0e>
 800336e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003372:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003376:	4620      	mov	r0, r4
 8003378:	4798      	blx	r3
 800337a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800337e:	3301      	adds	r3, #1
 8003380:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003384:	2101      	movs	r1, #1
 8003386:	2300      	movs	r3, #0
 8003388:	e7e5      	b.n	8003356 <d_print_comp+0xc12>
 800338a:	f8df 8154 	ldr.w	r8, [pc, #340]	; 80034e0 <d_print_comp+0xd9c>
 800338e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003392:	f108 0a10 	add.w	sl, r8, #16
 8003396:	2768      	movs	r7, #104	; 0x68
 8003398:	f04f 0900 	mov.w	r9, #0
 800339c:	e00b      	b.n	80033b6 <d_print_comp+0xc72>
 800339e:	460b      	mov	r3, r1
 80033a0:	3101      	adds	r1, #1
 80033a2:	45c2      	cmp	sl, r8
 80033a4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80033a8:	54e7      	strb	r7, [r4, r3]
 80033aa:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80033ae:	f000 87e7 	beq.w	8004380 <d_print_comp+0x1c3c>
 80033b2:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80033b6:	29ff      	cmp	r1, #255	; 0xff
 80033b8:	d1f1      	bne.n	800339e <d_print_comp+0xc5a>
 80033ba:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80033be:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80033c2:	4620      	mov	r0, r4
 80033c4:	4798      	blx	r3
 80033c6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80033ca:	3301      	adds	r3, #1
 80033cc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80033d0:	2101      	movs	r1, #1
 80033d2:	2300      	movs	r3, #0
 80033d4:	e7e5      	b.n	80033a2 <d_print_comp+0xc5e>
 80033d6:	f8df 810c 	ldr.w	r8, [pc, #268]	; 80034e4 <d_print_comp+0xda0>
 80033da:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80033de:	f108 0a14 	add.w	sl, r8, #20
 80033e2:	2772      	movs	r7, #114	; 0x72
 80033e4:	f04f 0900 	mov.w	r9, #0
 80033e8:	e00b      	b.n	8003402 <d_print_comp+0xcbe>
 80033ea:	460b      	mov	r3, r1
 80033ec:	3101      	adds	r1, #1
 80033ee:	45c2      	cmp	sl, r8
 80033f0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80033f4:	54e7      	strb	r7, [r4, r3]
 80033f6:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80033fa:	f000 87cf 	beq.w	800439c <d_print_comp+0x1c58>
 80033fe:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003402:	29ff      	cmp	r1, #255	; 0xff
 8003404:	d1f1      	bne.n	80033ea <d_print_comp+0xca6>
 8003406:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800340a:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800340e:	4620      	mov	r0, r4
 8003410:	4798      	blx	r3
 8003412:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003416:	3301      	adds	r3, #1
 8003418:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800341c:	2101      	movs	r1, #1
 800341e:	2300      	movs	r3, #0
 8003420:	e7e5      	b.n	80033ee <d_print_comp+0xcaa>
 8003422:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80034e8 <d_print_comp+0xda4>
 8003426:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800342a:	f108 0a18 	add.w	sl, r8, #24
 800342e:	2754      	movs	r7, #84	; 0x54
 8003430:	f04f 0900 	mov.w	r9, #0
 8003434:	e00b      	b.n	800344e <d_print_comp+0xd0a>
 8003436:	460b      	mov	r3, r1
 8003438:	3101      	adds	r1, #1
 800343a:	45c2      	cmp	sl, r8
 800343c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003440:	54e7      	strb	r7, [r4, r3]
 8003442:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003446:	f000 877f 	beq.w	8004348 <d_print_comp+0x1c04>
 800344a:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 800344e:	29ff      	cmp	r1, #255	; 0xff
 8003450:	d1f1      	bne.n	8003436 <d_print_comp+0xcf2>
 8003452:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003456:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800345a:	4620      	mov	r0, r4
 800345c:	4798      	blx	r3
 800345e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003462:	3301      	adds	r3, #1
 8003464:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003468:	2101      	movs	r1, #1
 800346a:	2300      	movs	r3, #0
 800346c:	e7e5      	b.n	800343a <d_print_comp+0xcf6>
 800346e:	f8df 807c 	ldr.w	r8, [pc, #124]	; 80034ec <d_print_comp+0xda8>
 8003472:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003476:	f108 0a15 	add.w	sl, r8, #21
 800347a:	2754      	movs	r7, #84	; 0x54
 800347c:	f04f 0900 	mov.w	r9, #0
 8003480:	e00b      	b.n	800349a <d_print_comp+0xd56>
 8003482:	460b      	mov	r3, r1
 8003484:	3101      	adds	r1, #1
 8003486:	45c2      	cmp	sl, r8
 8003488:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800348c:	54e7      	strb	r7, [r4, r3]
 800348e:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003492:	f000 8767 	beq.w	8004364 <d_print_comp+0x1c20>
 8003496:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 800349a:	29ff      	cmp	r1, #255	; 0xff
 800349c:	d1f1      	bne.n	8003482 <d_print_comp+0xd3e>
 800349e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80034a2:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80034a6:	4620      	mov	r0, r4
 80034a8:	4798      	blx	r3
 80034aa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80034ae:	3301      	adds	r3, #1
 80034b0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80034b4:	2101      	movs	r1, #1
 80034b6:	2300      	movs	r3, #0
 80034b8:	e7e5      	b.n	8003486 <d_print_comp+0xd42>
 80034ba:	f8df 8034 	ldr.w	r8, [pc, #52]	; 80034f0 <d_print_comp+0xdac>
 80034be:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80034c2:	f108 0a12 	add.w	sl, r8, #18
 80034c6:	2767      	movs	r7, #103	; 0x67
 80034c8:	f04f 0900 	mov.w	r9, #0
 80034cc:	e01e      	b.n	800350c <d_print_comp+0xdc8>
 80034ce:	bf00      	nop
 80034d0:	08012124 	.word	0x08012124
 80034d4:	08012e50 	.word	0x08012e50
 80034d8:	08012e60 	.word	0x08012e60
 80034dc:	08012d74 	.word	0x08012d74
 80034e0:	08012e18 	.word	0x08012e18
 80034e4:	08012e00 	.word	0x08012e00
 80034e8:	08012de4 	.word	0x08012de4
 80034ec:	08012dcc 	.word	0x08012dcc
 80034f0:	08012db8 	.word	0x08012db8
 80034f4:	460b      	mov	r3, r1
 80034f6:	3101      	adds	r1, #1
 80034f8:	45c2      	cmp	sl, r8
 80034fa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80034fe:	54e7      	strb	r7, [r4, r3]
 8003500:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003504:	f000 8704 	beq.w	8004310 <d_print_comp+0x1bcc>
 8003508:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 800350c:	29ff      	cmp	r1, #255	; 0xff
 800350e:	d1f1      	bne.n	80034f4 <d_print_comp+0xdb0>
 8003510:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003514:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003518:	4620      	mov	r0, r4
 800351a:	4798      	blx	r3
 800351c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003520:	3301      	adds	r3, #1
 8003522:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003526:	2101      	movs	r1, #1
 8003528:	2300      	movs	r3, #0
 800352a:	e7e5      	b.n	80034f8 <d_print_comp+0xdb4>
 800352c:	f8df 8670 	ldr.w	r8, [pc, #1648]	; 8003ba0 <d_print_comp+0x145c>
 8003530:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003534:	f108 0a0e 	add.w	sl, r8, #14
 8003538:	276a      	movs	r7, #106	; 0x6a
 800353a:	f04f 0900 	mov.w	r9, #0
 800353e:	e00b      	b.n	8003558 <d_print_comp+0xe14>
 8003540:	460b      	mov	r3, r1
 8003542:	3101      	adds	r1, #1
 8003544:	45c2      	cmp	sl, r8
 8003546:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800354a:	54e7      	strb	r7, [r4, r3]
 800354c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003550:	f000 86ec 	beq.w	800432c <d_print_comp+0x1be8>
 8003554:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003558:	29ff      	cmp	r1, #255	; 0xff
 800355a:	d1f1      	bne.n	8003540 <d_print_comp+0xdfc>
 800355c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003560:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003564:	4620      	mov	r0, r4
 8003566:	4798      	blx	r3
 8003568:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800356c:	3301      	adds	r3, #1
 800356e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003572:	2101      	movs	r1, #1
 8003574:	2300      	movs	r3, #0
 8003576:	e7e5      	b.n	8003544 <d_print_comp+0xe00>
 8003578:	f8df 8628 	ldr.w	r8, [pc, #1576]	; 8003ba4 <d_print_comp+0x1460>
 800357c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003580:	f108 0a19 	add.w	sl, r8, #25
 8003584:	2763      	movs	r7, #99	; 0x63
 8003586:	f04f 0900 	mov.w	r9, #0
 800358a:	e00b      	b.n	80035a4 <d_print_comp+0xe60>
 800358c:	460b      	mov	r3, r1
 800358e:	3101      	adds	r1, #1
 8003590:	45c2      	cmp	sl, r8
 8003592:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003596:	54e7      	strb	r7, [r4, r3]
 8003598:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800359c:	f000 869c 	beq.w	80042d8 <d_print_comp+0x1b94>
 80035a0:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80035a4:	29ff      	cmp	r1, #255	; 0xff
 80035a6:	d1f1      	bne.n	800358c <d_print_comp+0xe48>
 80035a8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80035ac:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80035b0:	4620      	mov	r0, r4
 80035b2:	4798      	blx	r3
 80035b4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80035b8:	3301      	adds	r3, #1
 80035ba:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80035be:	2101      	movs	r1, #1
 80035c0:	2300      	movs	r3, #0
 80035c2:	e7e5      	b.n	8003590 <d_print_comp+0xe4c>
 80035c4:	f8df 85e0 	ldr.w	r8, [pc, #1504]	; 8003ba8 <d_print_comp+0x1464>
 80035c8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80035cc:	f108 0a10 	add.w	sl, r8, #16
 80035d0:	2776      	movs	r7, #118	; 0x76
 80035d2:	f04f 0900 	mov.w	r9, #0
 80035d6:	e00b      	b.n	80035f0 <d_print_comp+0xeac>
 80035d8:	460b      	mov	r3, r1
 80035da:	3101      	adds	r1, #1
 80035dc:	45c2      	cmp	sl, r8
 80035de:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80035e2:	54e7      	strb	r7, [r4, r3]
 80035e4:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80035e8:	f000 8684 	beq.w	80042f4 <d_print_comp+0x1bb0>
 80035ec:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80035f0:	29ff      	cmp	r1, #255	; 0xff
 80035f2:	d1f1      	bne.n	80035d8 <d_print_comp+0xe94>
 80035f4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80035f8:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80035fc:	4620      	mov	r0, r4
 80035fe:	4798      	blx	r3
 8003600:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003604:	3301      	adds	r3, #1
 8003606:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800360a:	2101      	movs	r1, #1
 800360c:	2300      	movs	r3, #0
 800360e:	e7e5      	b.n	80035dc <d_print_comp+0xe98>
 8003610:	f8d4 0120 	ldr.w	r0, [r4, #288]	; 0x120
 8003614:	f8d5 9008 	ldr.w	r9, [r5, #8]
 8003618:	b928      	cbnz	r0, 8003626 <d_print_comp+0xee2>
 800361a:	f899 3000 	ldrb.w	r3, [r9]
 800361e:	2b05      	cmp	r3, #5
 8003620:	f001 8494 	beq.w	8004f4c <d_print_comp+0x2808>
 8003624:	4607      	mov	r7, r0
 8003626:	f899 3000 	ldrb.w	r3, [r9]
 800362a:	2b23      	cmp	r3, #35	; 0x23
 800362c:	f000 8748 	beq.w	80044c0 <d_print_comp+0x1d7c>
 8003630:	782a      	ldrb	r2, [r5, #0]
 8003632:	429a      	cmp	r2, r3
 8003634:	f000 8744 	beq.w	80044c0 <d_print_comp+0x1d7c>
 8003638:	2b24      	cmp	r3, #36	; 0x24
 800363a:	f001 85b9 	beq.w	80051b0 <d_print_comp+0x2a6c>
 800363e:	f8d4 a114 	ldr.w	sl, [r4, #276]	; 0x114
 8003642:	46a9      	mov	r9, r5
 8003644:	ab06      	add	r3, sp, #24
 8003646:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 800364a:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 800364e:	f8cd a018 	str.w	sl, [sp, #24]
 8003652:	2200      	movs	r2, #0
 8003654:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8003658:	f8cd 901c 	str.w	r9, [sp, #28]
 800365c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8003660:	e00d      	b.n	800367e <d_print_comp+0xf3a>
 8003662:	2200      	movs	r2, #0
 8003664:	e9d4 3144 	ldrd	r3, r1, [r4, #272]	; 0x110
 8003668:	e9cd 1506 	strd	r1, r5, [sp, #24]
 800366c:	a906      	add	r1, sp, #24
 800366e:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
 8003672:	2100      	movs	r1, #0
 8003674:	e9cd 1308 	strd	r1, r3, [sp, #32]
 8003678:	46a9      	mov	r9, r5
 800367a:	2a00      	cmp	r2, #0
 800367c:	d0ee      	beq.n	800365c <d_print_comp+0xf18>
 800367e:	4631      	mov	r1, r6
 8003680:	4620      	mov	r0, r4
 8003682:	f7ff f85f 	bl	8002744 <d_print_comp>
 8003686:	9b08      	ldr	r3, [sp, #32]
 8003688:	2b00      	cmp	r3, #0
 800368a:	f000 86cd 	beq.w	8004428 <d_print_comp+0x1ce4>
 800368e:	9b06      	ldr	r3, [sp, #24]
 8003690:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003694:	b10f      	cbz	r7, 800369a <d_print_comp+0xf56>
 8003696:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
 800369a:	686b      	ldr	r3, [r5, #4]
 800369c:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80036a0:	9a03      	ldr	r2, [sp, #12]
 80036a2:	3b01      	subs	r3, #1
 80036a4:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80036a8:	f7ff b941 	b.w	800292e <d_print_comp+0x1ea>
 80036ac:	f8d4 a114 	ldr.w	sl, [r4, #276]	; 0x114
 80036b0:	4653      	mov	r3, sl
 80036b2:	f1ba 0f00 	cmp.w	sl, #0
 80036b6:	d0c4      	beq.n	8003642 <d_print_comp+0xefe>
 80036b8:	6899      	ldr	r1, [r3, #8]
 80036ba:	b951      	cbnz	r1, 80036d2 <d_print_comp+0xf8e>
 80036bc:	685a      	ldr	r2, [r3, #4]
 80036be:	7812      	ldrb	r2, [r2, #0]
 80036c0:	f1a2 0c19 	sub.w	ip, r2, #25
 80036c4:	f1bc 0f02 	cmp.w	ip, #2
 80036c8:	f201 82c8 	bhi.w	8004c5c <d_print_comp+0x2518>
 80036cc:	4290      	cmp	r0, r2
 80036ce:	f001 82b7 	beq.w	8004c40 <d_print_comp+0x24fc>
 80036d2:	681b      	ldr	r3, [r3, #0]
 80036d4:	2b00      	cmp	r3, #0
 80036d6:	d1ef      	bne.n	80036b8 <d_print_comp+0xf74>
 80036d8:	e7b3      	b.n	8003642 <d_print_comp+0xefe>
 80036da:	e9d5 6102 	ldrd	r6, r1, [r5, #8]
 80036de:	2900      	cmp	r1, #0
 80036e0:	f43f a925 	beq.w	800292e <d_print_comp+0x1ea>
 80036e4:	eb06 0901 	add.w	r9, r6, r1
 80036e8:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80036ec:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80036f0:	3e01      	subs	r6, #1
 80036f2:	f04f 0800 	mov.w	r8, #0
 80036f6:	e009      	b.n	800370c <d_print_comp+0xfc8>
 80036f8:	460b      	mov	r3, r1
 80036fa:	3101      	adds	r1, #1
 80036fc:	45b1      	cmp	r9, r6
 80036fe:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003702:	54e7      	strb	r7, [r4, r3]
 8003704:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003708:	f000 8695 	beq.w	8004436 <d_print_comp+0x1cf2>
 800370c:	29ff      	cmp	r1, #255	; 0xff
 800370e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8003712:	d1f1      	bne.n	80036f8 <d_print_comp+0xfb4>
 8003714:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003718:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800371c:	4620      	mov	r0, r4
 800371e:	4798      	blx	r3
 8003720:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003724:	3301      	adds	r3, #1
 8003726:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800372a:	2101      	movs	r1, #1
 800372c:	2300      	movs	r3, #0
 800372e:	e7e5      	b.n	80036fc <d_print_comp+0xfb8>
 8003730:	4631      	mov	r1, r6
 8003732:	68aa      	ldr	r2, [r5, #8]
 8003734:	4620      	mov	r0, r4
 8003736:	f7ff f805 	bl	8002744 <d_print_comp>
 800373a:	686b      	ldr	r3, [r5, #4]
 800373c:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003740:	9a03      	ldr	r2, [sp, #12]
 8003742:	3b01      	subs	r3, #1
 8003744:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003748:	f7ff b8f1 	b.w	800292e <d_print_comp+0x1ea>
 800374c:	f016 0604 	ands.w	r6, r6, #4
 8003750:	68a9      	ldr	r1, [r5, #8]
 8003752:	f040 86b9 	bne.w	80044c8 <d_print_comp+0x1d84>
 8003756:	e9d1 7000 	ldrd	r7, r0, [r1]
 800375a:	2800      	cmp	r0, #0
 800375c:	f43f a8e7 	beq.w	800292e <d_print_comp+0x1ea>
 8003760:	4438      	add	r0, r7
 8003762:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003766:	f100 39ff 	add.w	r9, r0, #4294967295	; 0xffffffff
 800376a:	3f01      	subs	r7, #1
 800376c:	46b0      	mov	r8, r6
 800376e:	e009      	b.n	8003784 <d_print_comp+0x1040>
 8003770:	460b      	mov	r3, r1
 8003772:	3101      	adds	r1, #1
 8003774:	45b9      	cmp	r9, r7
 8003776:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800377a:	54e6      	strb	r6, [r4, r3]
 800377c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003780:	f001 8040 	beq.w	8004804 <d_print_comp+0x20c0>
 8003784:	29ff      	cmp	r1, #255	; 0xff
 8003786:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 800378a:	d1f1      	bne.n	8003770 <d_print_comp+0x102c>
 800378c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003790:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003794:	4620      	mov	r0, r4
 8003796:	4798      	blx	r3
 8003798:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800379c:	3301      	adds	r3, #1
 800379e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80037a2:	2101      	movs	r1, #1
 80037a4:	2300      	movs	r3, #0
 80037a6:	e7e5      	b.n	8003774 <d_print_comp+0x1030>
 80037a8:	06b2      	lsls	r2, r6, #26
 80037aa:	f026 0760 	bic.w	r7, r6, #96	; 0x60
 80037ae:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80037b2:	f101 819b 	bmi.w	8004aec <d_print_comp+0x23a8>
 80037b6:	68aa      	ldr	r2, [r5, #8]
 80037b8:	b11a      	cbz	r2, 80037c2 <d_print_comp+0x107e>
 80037ba:	f016 0640 	ands.w	r6, r6, #64	; 0x40
 80037be:	f001 8363 	beq.w	8004e88 <d_print_comp+0x2744>
 80037c2:	4639      	mov	r1, r7
 80037c4:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80037c8:	f105 020c 	add.w	r2, r5, #12
 80037cc:	4620      	mov	r0, r4
 80037ce:	f002 fb0b 	bl	8005de8 <d_print_function_type.isra.14>
 80037d2:	686b      	ldr	r3, [r5, #4]
 80037d4:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80037d8:	9a03      	ldr	r2, [sp, #12]
 80037da:	3b01      	subs	r3, #1
 80037dc:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80037e0:	f7ff b8a5 	b.w	800292e <d_print_comp+0x1ea>
 80037e4:	4631      	mov	r1, r6
 80037e6:	68ea      	ldr	r2, [r5, #12]
 80037e8:	4620      	mov	r0, r4
 80037ea:	f7fe ffab 	bl	8002744 <d_print_comp>
 80037ee:	686b      	ldr	r3, [r5, #4]
 80037f0:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80037f4:	9a03      	ldr	r2, [sp, #12]
 80037f6:	3b01      	subs	r3, #1
 80037f8:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80037fc:	f7ff b897 	b.w	800292e <d_print_comp+0x1ea>
 8003800:	f8d5 8008 	ldr.w	r8, [r5, #8]
 8003804:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003808:	f1b8 0f00 	cmp.w	r8, #0
 800380c:	f000 8723 	beq.w	8004656 <d_print_comp+0x1f12>
 8003810:	4ee1      	ldr	r6, [pc, #900]	; (8003b98 <d_print_comp+0x1454>)
 8003812:	277b      	movs	r7, #123	; 0x7b
 8003814:	f106 0a05 	add.w	sl, r6, #5
 8003818:	f04f 0900 	mov.w	r9, #0
 800381c:	e00b      	b.n	8003836 <d_print_comp+0x10f2>
 800381e:	460b      	mov	r3, r1
 8003820:	3101      	adds	r1, #1
 8003822:	45b2      	cmp	sl, r6
 8003824:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003828:	54e7      	strb	r7, [r4, r3]
 800382a:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800382e:	f000 877e 	beq.w	800472e <d_print_comp+0x1fea>
 8003832:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8003836:	29ff      	cmp	r1, #255	; 0xff
 8003838:	d1f1      	bne.n	800381e <d_print_comp+0x10da>
 800383a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800383e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003842:	4620      	mov	r0, r4
 8003844:	4798      	blx	r3
 8003846:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800384a:	3301      	adds	r3, #1
 800384c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003850:	2101      	movs	r1, #1
 8003852:	2300      	movs	r3, #0
 8003854:	e7e5      	b.n	8003822 <d_print_comp+0x10de>
 8003856:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800385a:	2b00      	cmp	r3, #0
 800385c:	f000 865e 	beq.w	800451c <d_print_comp+0x1dd8>
 8003860:	4fce      	ldr	r7, [pc, #824]	; (8003b9c <d_print_comp+0x1458>)
 8003862:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003866:	f107 0904 	add.w	r9, r7, #4
 800386a:	2661      	movs	r6, #97	; 0x61
 800386c:	f04f 0800 	mov.w	r8, #0
 8003870:	e00b      	b.n	800388a <d_print_comp+0x1146>
 8003872:	460b      	mov	r3, r1
 8003874:	3101      	adds	r1, #1
 8003876:	45b9      	cmp	r9, r7
 8003878:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800387c:	54e6      	strb	r6, [r4, r3]
 800387e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003882:	f000 871e 	beq.w	80046c2 <d_print_comp+0x1f7e>
 8003886:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 800388a:	29ff      	cmp	r1, #255	; 0xff
 800388c:	d1f1      	bne.n	8003872 <d_print_comp+0x112e>
 800388e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003892:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003896:	4620      	mov	r0, r4
 8003898:	4798      	blx	r3
 800389a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800389e:	3301      	adds	r3, #1
 80038a0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80038a4:	2101      	movs	r1, #1
 80038a6:	2300      	movs	r3, #0
 80038a8:	e7e5      	b.n	8003876 <d_print_comp+0x1132>
 80038aa:	f8d5 8008 	ldr.w	r8, [r5, #8]
 80038ae:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80038b2:	9300      	str	r3, [sp, #0]
 80038b4:	2200      	movs	r2, #0
 80038b6:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 80038ba:	f1b8 0f00 	cmp.w	r8, #0
 80038be:	f001 8435 	beq.w	800512c <d_print_comp+0x29e8>
 80038c2:	f10d 0918 	add.w	r9, sp, #24
 80038c6:	f8d4 e110 	ldr.w	lr, [r4, #272]	; 0x110
 80038ca:	4617      	mov	r7, r2
 80038cc:	4610      	mov	r0, r2
 80038ce:	464b      	mov	r3, r9
 80038d0:	f898 1000 	ldrb.w	r1, [r8]
 80038d4:	601a      	str	r2, [r3, #0]
 80038d6:	294c      	cmp	r1, #76	; 0x4c
 80038d8:	f1a1 0a1c 	sub.w	sl, r1, #28
 80038dc:	f1a1 024e 	sub.w	r2, r1, #78	; 0x4e
 80038e0:	e9c3 8001 	strd	r8, r0, [r3, #4]
 80038e4:	f8c3 e00c 	str.w	lr, [r3, #12]
 80038e8:	f107 0701 	add.w	r7, r7, #1
 80038ec:	469c      	mov	ip, r3
 80038ee:	f000 8248 	beq.w	8003d82 <d_print_comp+0x163e>
 80038f2:	f200 8243 	bhi.w	8003d7c <d_print_comp+0x1638>
 80038f6:	f1ba 0f04 	cmp.w	sl, #4
 80038fa:	f240 8242 	bls.w	8003d82 <d_print_comp+0x163e>
 80038fe:	2902      	cmp	r1, #2
 8003900:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003904:	f001 82f0 	beq.w	8004ee8 <d_print_comp+0x27a4>
 8003908:	f898 3000 	ldrb.w	r3, [r8]
 800390c:	2b04      	cmp	r3, #4
 800390e:	d104      	bne.n	800391a <d_print_comp+0x11d6>
 8003910:	e9cd e804 	strd	lr, r8, [sp, #16]
 8003914:	ab04      	add	r3, sp, #16
 8003916:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800391a:	68ea      	ldr	r2, [r5, #12]
 800391c:	4631      	mov	r1, r6
 800391e:	4620      	mov	r0, r4
 8003920:	f7fe ff10 	bl	8002744 <d_print_comp>
 8003924:	f898 3000 	ldrb.w	r3, [r8]
 8003928:	2b04      	cmp	r3, #4
 800392a:	d102      	bne.n	8003932 <d_print_comp+0x11ee>
 800392c:	9b04      	ldr	r3, [sp, #16]
 800392e:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8003932:	eb09 1707 	add.w	r7, r9, r7, lsl #4
 8003936:	f04f 0820 	mov.w	r8, #32
 800393a:	46aa      	mov	sl, r5
 800393c:	f857 5c08 	ldr.w	r5, [r7, #-8]
 8003940:	b9e5      	cbnz	r5, 800397c <d_print_comp+0x1238>
 8003942:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003946:	29ff      	cmp	r1, #255	; 0xff
 8003948:	d10b      	bne.n	8003962 <d_print_comp+0x121e>
 800394a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800394e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8003952:	4620      	mov	r0, r4
 8003954:	4798      	blx	r3
 8003956:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800395a:	3301      	adds	r3, #1
 800395c:	4629      	mov	r1, r5
 800395e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003962:	1c4b      	adds	r3, r1, #1
 8003964:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003968:	f857 2c0c 	ldr.w	r2, [r7, #-12]
 800396c:	f804 8001 	strb.w	r8, [r4, r1]
 8003970:	4620      	mov	r0, r4
 8003972:	4631      	mov	r1, r6
 8003974:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8003978:	f001 ff2e 	bl	80057d8 <d_print_mod>
 800397c:	3f10      	subs	r7, #16
 800397e:	45b9      	cmp	r9, r7
 8003980:	d1dc      	bne.n	800393c <d_print_comp+0x11f8>
 8003982:	9b00      	ldr	r3, [sp, #0]
 8003984:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003988:	4655      	mov	r5, sl
 800398a:	686b      	ldr	r3, [r5, #4]
 800398c:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003990:	9a03      	ldr	r2, [sp, #12]
 8003992:	3b01      	subs	r3, #1
 8003994:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003998:	f7fe bfc9 	b.w	800292e <d_print_comp+0x1ea>
 800399c:	68aa      	ldr	r2, [r5, #8]
 800399e:	4631      	mov	r1, r6
 80039a0:	4620      	mov	r0, r4
 80039a2:	f7fe fecf 	bl	8002744 <d_print_comp>
 80039a6:	f016 0a04 	ands.w	sl, r6, #4
 80039aa:	f001 80f8 	beq.w	8004b9e <d_print_comp+0x245a>
 80039ae:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80039b2:	2bff      	cmp	r3, #255	; 0xff
 80039b4:	d10f      	bne.n	80039d6 <d_print_comp+0x1292>
 80039b6:	2700      	movs	r7, #0
 80039b8:	4619      	mov	r1, r3
 80039ba:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 80039be:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80039c2:	4620      	mov	r0, r4
 80039c4:	4798      	blx	r3
 80039c6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80039ca:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 80039ce:	1c5a      	adds	r2, r3, #1
 80039d0:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80039d4:	463b      	mov	r3, r7
 80039d6:	222e      	movs	r2, #46	; 0x2e
 80039d8:	1c59      	adds	r1, r3, #1
 80039da:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80039de:	54e2      	strb	r2, [r4, r3]
 80039e0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80039e4:	f8d5 800c 	ldr.w	r8, [r5, #12]
 80039e8:	f898 3000 	ldrb.w	r3, [r8]
 80039ec:	2b46      	cmp	r3, #70	; 0x46
 80039ee:	f001 819c 	beq.w	8004d2a <d_print_comp+0x25e6>
 80039f2:	4642      	mov	r2, r8
 80039f4:	4631      	mov	r1, r6
 80039f6:	4620      	mov	r0, r4
 80039f8:	f7fe fea4 	bl	8002744 <d_print_comp>
 80039fc:	686b      	ldr	r3, [r5, #4]
 80039fe:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003a02:	9a03      	ldr	r2, [sp, #12]
 8003a04:	3b01      	subs	r3, #1
 8003a06:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003a0a:	f7fe bf90 	b.w	800292e <d_print_comp+0x1ea>
 8003a0e:	2300      	movs	r3, #0
 8003a10:	0771      	lsls	r1, r6, #29
 8003a12:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 8003a16:	f8d4 7148 	ldr.w	r7, [r4, #328]	; 0x148
 8003a1a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003a1e:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8003a22:	f8d5 9008 	ldr.w	r9, [r5, #8]
 8003a26:	d507      	bpl.n	8003a38 <d_print_comp+0x12f4>
 8003a28:	f899 3000 	ldrb.w	r3, [r9]
 8003a2c:	b923      	cbnz	r3, 8003a38 <d_print_comp+0x12f4>
 8003a2e:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8003a32:	2a06      	cmp	r2, #6
 8003a34:	f001 83c0 	beq.w	80051b8 <d_print_comp+0x2a74>
 8003a38:	464a      	mov	r2, r9
 8003a3a:	4631      	mov	r1, r6
 8003a3c:	4620      	mov	r0, r4
 8003a3e:	f7fe fe81 	bl	8002744 <d_print_comp>
 8003a42:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003a46:	2b3c      	cmp	r3, #60	; 0x3c
 8003a48:	f001 808b 	beq.w	8004b62 <d_print_comp+0x241e>
 8003a4c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003a50:	29ff      	cmp	r1, #255	; 0xff
 8003a52:	d10d      	bne.n	8003a70 <d_print_comp+0x132c>
 8003a54:	f04f 0900 	mov.w	r9, #0
 8003a58:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003a5c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003a60:	4620      	mov	r0, r4
 8003a62:	4798      	blx	r3
 8003a64:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003a68:	3301      	adds	r3, #1
 8003a6a:	4649      	mov	r1, r9
 8003a6c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003a70:	233c      	movs	r3, #60	; 0x3c
 8003a72:	1c4a      	adds	r2, r1, #1
 8003a74:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003a78:	5463      	strb	r3, [r4, r1]
 8003a7a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003a7e:	4631      	mov	r1, r6
 8003a80:	68ea      	ldr	r2, [r5, #12]
 8003a82:	4620      	mov	r0, r4
 8003a84:	f7fe fe5e 	bl	8002744 <d_print_comp>
 8003a88:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003a8c:	2b3e      	cmp	r3, #62	; 0x3e
 8003a8e:	f001 804b 	beq.w	8004b28 <d_print_comp+0x23e4>
 8003a92:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003a96:	29ff      	cmp	r1, #255	; 0xff
 8003a98:	d10c      	bne.n	8003ab4 <d_print_comp+0x1370>
 8003a9a:	2600      	movs	r6, #0
 8003a9c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003aa0:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8003aa4:	4620      	mov	r0, r4
 8003aa6:	4798      	blx	r3
 8003aa8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003aac:	3301      	adds	r3, #1
 8003aae:	4631      	mov	r1, r6
 8003ab0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003ab4:	233e      	movs	r3, #62	; 0x3e
 8003ab6:	1c4a      	adds	r2, r1, #1
 8003ab8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003abc:	5463      	strb	r3, [r4, r1]
 8003abe:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003ac2:	686b      	ldr	r3, [r5, #4]
 8003ac4:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8003ac8:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
 8003acc:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 8003ad0:	f8c4 7148 	str.w	r7, [r4, #328]	; 0x148
 8003ad4:	3b01      	subs	r3, #1
 8003ad6:	9a03      	ldr	r2, [sp, #12]
 8003ad8:	f7fe bf29 	b.w	800292e <d_print_comp+0x1ea>
 8003adc:	f016 0604 	ands.w	r6, r6, #4
 8003ae0:	68af      	ldr	r7, [r5, #8]
 8003ae2:	f040 853c 	bne.w	800455e <d_print_comp+0x1e1a>
 8003ae6:	68e9      	ldr	r1, [r5, #12]
 8003ae8:	2900      	cmp	r1, #0
 8003aea:	f43e af20 	beq.w	800292e <d_print_comp+0x1ea>
 8003aee:	eb07 0801 	add.w	r8, r7, r1
 8003af2:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8003af6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003afa:	3f01      	subs	r7, #1
 8003afc:	46b1      	mov	r9, r6
 8003afe:	e009      	b.n	8003b14 <d_print_comp+0x13d0>
 8003b00:	460b      	mov	r3, r1
 8003b02:	3101      	adds	r1, #1
 8003b04:	45b8      	cmp	r8, r7
 8003b06:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003b0a:	54e6      	strb	r6, [r4, r3]
 8003b0c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003b10:	f000 866f 	beq.w	80047f2 <d_print_comp+0x20ae>
 8003b14:	29ff      	cmp	r1, #255	; 0xff
 8003b16:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8003b1a:	d1f1      	bne.n	8003b00 <d_print_comp+0x13bc>
 8003b1c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003b20:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003b24:	4620      	mov	r0, r4
 8003b26:	4798      	blx	r3
 8003b28:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003b2c:	3301      	adds	r3, #1
 8003b2e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003b32:	2101      	movs	r1, #1
 8003b34:	2300      	movs	r3, #0
 8003b36:	e7e5      	b.n	8003b04 <d_print_comp+0x13c0>
 8003b38:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8003bac <d_print_comp+0x1468>
 8003b3c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003b40:	f108 0a17 	add.w	sl, r8, #23
 8003b44:	2763      	movs	r7, #99	; 0x63
 8003b46:	f04f 0900 	mov.w	r9, #0
 8003b4a:	e00b      	b.n	8003b64 <d_print_comp+0x1420>
 8003b4c:	460b      	mov	r3, r1
 8003b4e:	3101      	adds	r1, #1
 8003b50:	45c2      	cmp	sl, r8
 8003b52:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003b56:	54e7      	strb	r7, [r4, r3]
 8003b58:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003b5c:	f000 8384 	beq.w	8004268 <d_print_comp+0x1b24>
 8003b60:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003b64:	29ff      	cmp	r1, #255	; 0xff
 8003b66:	d1f1      	bne.n	8003b4c <d_print_comp+0x1408>
 8003b68:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003b6c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003b70:	4620      	mov	r0, r4
 8003b72:	4798      	blx	r3
 8003b74:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003b78:	3301      	adds	r3, #1
 8003b7a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003b7e:	2101      	movs	r1, #1
 8003b80:	2300      	movs	r3, #0
 8003b82:	e7e5      	b.n	8003b50 <d_print_comp+0x140c>
 8003b84:	f8df 8028 	ldr.w	r8, [pc, #40]	; 8003bb0 <d_print_comp+0x146c>
 8003b88:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003b8c:	f108 0a07 	add.w	sl, r8, #7
 8003b90:	2756      	movs	r7, #86	; 0x56
 8003b92:	f04f 0900 	mov.w	r9, #0
 8003b96:	e019      	b.n	8003bcc <d_print_comp+0x1488>
 8003b98:	08012ed8 	.word	0x08012ed8
 8003b9c:	08012cf8 	.word	0x08012cf8
 8003ba0:	08012da8 	.word	0x08012da8
 8003ba4:	08012d8c 	.word	0x08012d8c
 8003ba8:	08012d78 	.word	0x08012d78
 8003bac:	08012d18 	.word	0x08012d18
 8003bb0:	08012d0c 	.word	0x08012d0c
 8003bb4:	460b      	mov	r3, r1
 8003bb6:	3101      	adds	r1, #1
 8003bb8:	45c2      	cmp	sl, r8
 8003bba:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003bbe:	54e7      	strb	r7, [r4, r3]
 8003bc0:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003bc4:	f000 8342 	beq.w	800424c <d_print_comp+0x1b08>
 8003bc8:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003bcc:	29ff      	cmp	r1, #255	; 0xff
 8003bce:	d1f1      	bne.n	8003bb4 <d_print_comp+0x1470>
 8003bd0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003bd4:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003bd8:	4620      	mov	r0, r4
 8003bda:	4798      	blx	r3
 8003bdc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003be0:	3301      	adds	r3, #1
 8003be2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003be6:	2101      	movs	r1, #1
 8003be8:	2300      	movs	r3, #0
 8003bea:	e7e5      	b.n	8003bb8 <d_print_comp+0x1474>
 8003bec:	f8df 8630 	ldr.w	r8, [pc, #1584]	; 8004220 <d_print_comp+0x1adc>
 8003bf0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003bf4:	f108 0a0a 	add.w	sl, r8, #10
 8003bf8:	2776      	movs	r7, #118	; 0x76
 8003bfa:	f04f 0900 	mov.w	r9, #0
 8003bfe:	e00b      	b.n	8003c18 <d_print_comp+0x14d4>
 8003c00:	460b      	mov	r3, r1
 8003c02:	3101      	adds	r1, #1
 8003c04:	45c2      	cmp	sl, r8
 8003c06:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003c0a:	54e7      	strb	r7, [r4, r3]
 8003c0c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003c10:	f000 830e 	beq.w	8004230 <d_print_comp+0x1aec>
 8003c14:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003c18:	29ff      	cmp	r1, #255	; 0xff
 8003c1a:	d1f1      	bne.n	8003c00 <d_print_comp+0x14bc>
 8003c1c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003c20:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003c24:	4620      	mov	r0, r4
 8003c26:	4798      	blx	r3
 8003c28:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003c2c:	3301      	adds	r3, #1
 8003c2e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003c32:	2101      	movs	r1, #1
 8003c34:	2300      	movs	r3, #0
 8003c36:	e7e5      	b.n	8003c04 <d_print_comp+0x14c0>
 8003c38:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003c3c:	2bff      	cmp	r3, #255	; 0xff
 8003c3e:	d10f      	bne.n	8003c60 <d_print_comp+0x151c>
 8003c40:	2700      	movs	r7, #0
 8003c42:	4619      	mov	r1, r3
 8003c44:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8003c48:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003c4c:	4620      	mov	r0, r4
 8003c4e:	4798      	blx	r3
 8003c50:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003c54:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8003c58:	1c5a      	adds	r2, r3, #1
 8003c5a:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8003c5e:	463b      	mov	r3, r7
 8003c60:	1c59      	adds	r1, r3, #1
 8003c62:	227e      	movs	r2, #126	; 0x7e
 8003c64:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003c68:	54e2      	strb	r2, [r4, r3]
 8003c6a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8003c6e:	4631      	mov	r1, r6
 8003c70:	68ea      	ldr	r2, [r5, #12]
 8003c72:	4620      	mov	r0, r4
 8003c74:	f7fe fd66 	bl	8002744 <d_print_comp>
 8003c78:	686b      	ldr	r3, [r5, #4]
 8003c7a:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003c7e:	9a03      	ldr	r2, [sp, #12]
 8003c80:	3b01      	subs	r3, #1
 8003c82:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003c86:	f7fe be52 	b.w	800292e <d_print_comp+0x1ea>
 8003c8a:	f8df 8598 	ldr.w	r8, [pc, #1432]	; 8004224 <d_print_comp+0x1ae0>
 8003c8e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003c92:	f108 0a11 	add.w	sl, r8, #17
 8003c96:	2774      	movs	r7, #116	; 0x74
 8003c98:	f04f 0900 	mov.w	r9, #0
 8003c9c:	e00b      	b.n	8003cb6 <d_print_comp+0x1572>
 8003c9e:	460b      	mov	r3, r1
 8003ca0:	3101      	adds	r1, #1
 8003ca2:	45c2      	cmp	sl, r8
 8003ca4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003ca8:	54e7      	strb	r7, [r4, r3]
 8003caa:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003cae:	f000 8296 	beq.w	80041de <d_print_comp+0x1a9a>
 8003cb2:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003cb6:	29ff      	cmp	r1, #255	; 0xff
 8003cb8:	d1f1      	bne.n	8003c9e <d_print_comp+0x155a>
 8003cba:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003cbe:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003cc2:	4620      	mov	r0, r4
 8003cc4:	4798      	blx	r3
 8003cc6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003cca:	3301      	adds	r3, #1
 8003ccc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003cd0:	2101      	movs	r1, #1
 8003cd2:	2300      	movs	r3, #0
 8003cd4:	e7e5      	b.n	8003ca2 <d_print_comp+0x155e>
 8003cd6:	f8df 8550 	ldr.w	r8, [pc, #1360]	; 8004228 <d_print_comp+0x1ae4>
 8003cda:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003cde:	f108 0a0f 	add.w	sl, r8, #15
 8003ce2:	2774      	movs	r7, #116	; 0x74
 8003ce4:	f04f 0900 	mov.w	r9, #0
 8003ce8:	e00b      	b.n	8003d02 <d_print_comp+0x15be>
 8003cea:	460b      	mov	r3, r1
 8003cec:	3101      	adds	r1, #1
 8003cee:	45c2      	cmp	sl, r8
 8003cf0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003cf4:	54e7      	strb	r7, [r4, r3]
 8003cf6:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003cfa:	f000 8262 	beq.w	80041c2 <d_print_comp+0x1a7e>
 8003cfe:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003d02:	29ff      	cmp	r1, #255	; 0xff
 8003d04:	d1f1      	bne.n	8003cea <d_print_comp+0x15a6>
 8003d06:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003d0a:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003d0e:	4620      	mov	r0, r4
 8003d10:	4798      	blx	r3
 8003d12:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003d16:	3301      	adds	r3, #1
 8003d18:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003d1c:	2101      	movs	r1, #1
 8003d1e:	2300      	movs	r3, #0
 8003d20:	e7e5      	b.n	8003cee <d_print_comp+0x15aa>
 8003d22:	f8df 8508 	ldr.w	r8, [pc, #1288]	; 800422c <d_print_comp+0x1ae8>
 8003d26:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003d2a:	f108 0a0c 	add.w	sl, r8, #12
 8003d2e:	2774      	movs	r7, #116	; 0x74
 8003d30:	f04f 0900 	mov.w	r9, #0
 8003d34:	e00b      	b.n	8003d4e <d_print_comp+0x160a>
 8003d36:	460b      	mov	r3, r1
 8003d38:	3101      	adds	r1, #1
 8003d3a:	45c2      	cmp	sl, r8
 8003d3c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003d40:	54e7      	strb	r7, [r4, r3]
 8003d42:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003d46:	f000 8258 	beq.w	80041fa <d_print_comp+0x1ab6>
 8003d4a:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003d4e:	29ff      	cmp	r1, #255	; 0xff
 8003d50:	d1f1      	bne.n	8003d36 <d_print_comp+0x15f2>
 8003d52:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003d56:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003d5a:	4620      	mov	r0, r4
 8003d5c:	4798      	blx	r3
 8003d5e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003d62:	3301      	adds	r3, #1
 8003d64:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003d68:	2101      	movs	r1, #1
 8003d6a:	2300      	movs	r3, #0
 8003d6c:	e7e5      	b.n	8003d3a <d_print_comp+0x15f6>
 8003d6e:	2301      	movs	r3, #1
 8003d70:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8003d74:	686b      	ldr	r3, [r5, #4]
 8003d76:	3b01      	subs	r3, #1
 8003d78:	f7fe bdd9 	b.w	800292e <d_print_comp+0x1ea>
 8003d7c:	2a01      	cmp	r2, #1
 8003d7e:	f63f adbe 	bhi.w	80038fe <d_print_comp+0x11ba>
 8003d82:	f8d8 8008 	ldr.w	r8, [r8, #8]
 8003d86:	4662      	mov	r2, ip
 8003d88:	f1b8 0f00 	cmp.w	r8, #0
 8003d8c:	f001 81cc 	beq.w	8005128 <d_print_comp+0x29e4>
 8003d90:	2f04      	cmp	r7, #4
 8003d92:	f103 0310 	add.w	r3, r3, #16
 8003d96:	f47f ad9b 	bne.w	80038d0 <d_print_comp+0x118c>
 8003d9a:	2301      	movs	r3, #1
 8003d9c:	e9c4 c345 	strd	ip, r3, [r4, #276]	; 0x114
 8003da0:	e5f3      	b.n	800398a <d_print_comp+0x1246>
 8003da2:	4631      	mov	r1, r6
 8003da4:	68aa      	ldr	r2, [r5, #8]
 8003da6:	4620      	mov	r0, r4
 8003da8:	f7fe fccc 	bl	8002744 <d_print_comp>
 8003dac:	686b      	ldr	r3, [r5, #4]
 8003dae:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003db2:	9a03      	ldr	r2, [sp, #12]
 8003db4:	3b01      	subs	r3, #1
 8003db6:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003dba:	f7fe bdb8 	b.w	800292e <d_print_comp+0x1ea>
 8003dbe:	686b      	ldr	r3, [r5, #4]
 8003dc0:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003dc4:	9a03      	ldr	r2, [sp, #12]
 8003dc6:	3b01      	subs	r3, #1
 8003dc8:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003dcc:	f7fe bdaf 	b.w	800292e <d_print_comp+0x1ea>
 8003dd0:	4631      	mov	r1, r6
 8003dd2:	68aa      	ldr	r2, [r5, #8]
 8003dd4:	4620      	mov	r0, r4
 8003dd6:	f7fe fcb5 	bl	8002744 <d_print_comp>
 8003dda:	686b      	ldr	r3, [r5, #4]
 8003ddc:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003de0:	9a03      	ldr	r2, [sp, #12]
 8003de2:	3b01      	subs	r3, #1
 8003de4:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003de8:	f7fe bda1 	b.w	800292e <d_print_comp+0x1ea>
 8003dec:	4631      	mov	r1, r6
 8003dee:	68ea      	ldr	r2, [r5, #12]
 8003df0:	4620      	mov	r0, r4
 8003df2:	f7fe fca7 	bl	8002744 <d_print_comp>
 8003df6:	686b      	ldr	r3, [r5, #4]
 8003df8:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003dfc:	9a03      	ldr	r2, [sp, #12]
 8003dfe:	3b01      	subs	r3, #1
 8003e00:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003e04:	f7fe bd93 	b.w	800292e <d_print_comp+0x1ea>
 8003e08:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8003e0c:	b133      	cbz	r3, 8003e1c <d_print_comp+0x16d8>
 8003e0e:	f8d4 2110 	ldr.w	r2, [r4, #272]	; 0x110
 8003e12:	9307      	str	r3, [sp, #28]
 8003e14:	ab06      	add	r3, sp, #24
 8003e16:	9206      	str	r2, [sp, #24]
 8003e18:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8003e1c:	68aa      	ldr	r2, [r5, #8]
 8003e1e:	7813      	ldrb	r3, [r2, #0]
 8003e20:	2b04      	cmp	r3, #4
 8003e22:	f000 8575 	beq.w	8004910 <d_print_comp+0x21cc>
 8003e26:	4631      	mov	r1, r6
 8003e28:	4620      	mov	r0, r4
 8003e2a:	f7fe fc8b 	bl	8002744 <d_print_comp>
 8003e2e:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8003e32:	b113      	cbz	r3, 8003e3a <d_print_comp+0x16f6>
 8003e34:	9b06      	ldr	r3, [sp, #24]
 8003e36:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8003e3a:	686b      	ldr	r3, [r5, #4]
 8003e3c:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003e40:	9a03      	ldr	r2, [sp, #12]
 8003e42:	3b01      	subs	r3, #1
 8003e44:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003e48:	f7fe bd71 	b.w	800292e <d_print_comp+0x1ea>
 8003e4c:	4631      	mov	r1, r6
 8003e4e:	68aa      	ldr	r2, [r5, #8]
 8003e50:	4620      	mov	r0, r4
 8003e52:	f7fe fc77 	bl	8002744 <d_print_comp>
 8003e56:	686b      	ldr	r3, [r5, #4]
 8003e58:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003e5c:	9a03      	ldr	r2, [sp, #12]
 8003e5e:	3b01      	subs	r3, #1
 8003e60:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003e64:	f7fe bd63 	b.w	800292e <d_print_comp+0x1ea>
 8003e68:	4631      	mov	r1, r6
 8003e6a:	68aa      	ldr	r2, [r5, #8]
 8003e6c:	4620      	mov	r0, r4
 8003e6e:	f7fe fc69 	bl	8002744 <d_print_comp>
 8003e72:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003e76:	29ff      	cmp	r1, #255	; 0xff
 8003e78:	d10c      	bne.n	8003e94 <d_print_comp+0x1750>
 8003e7a:	2600      	movs	r6, #0
 8003e7c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003e80:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8003e84:	4620      	mov	r0, r4
 8003e86:	4798      	blx	r3
 8003e88:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003e8c:	3301      	adds	r3, #1
 8003e8e:	4631      	mov	r1, r6
 8003e90:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003e94:	1c4a      	adds	r2, r1, #1
 8003e96:	2329      	movs	r3, #41	; 0x29
 8003e98:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003e9c:	5463      	strb	r3, [r4, r1]
 8003e9e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003ea2:	686b      	ldr	r3, [r5, #4]
 8003ea4:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003ea8:	9a03      	ldr	r2, [sp, #12]
 8003eaa:	3b01      	subs	r3, #1
 8003eac:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003eb0:	f7fe bd3d 	b.w	800292e <d_print_comp+0x1ea>
 8003eb4:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003eb8:	68aa      	ldr	r2, [r5, #8]
 8003eba:	4fd7      	ldr	r7, [pc, #860]	; (8004218 <d_print_comp+0x1ad4>)
 8003ebc:	3301      	adds	r3, #1
 8003ebe:	4631      	mov	r1, r6
 8003ec0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003ec4:	4620      	mov	r0, r4
 8003ec6:	f7fe fc3d 	bl	8002744 <d_print_comp>
 8003eca:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003ece:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003ed2:	3b01      	subs	r3, #1
 8003ed4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003ed8:	f107 0901 	add.w	r9, r7, #1
 8003edc:	2629      	movs	r6, #41	; 0x29
 8003ede:	f04f 0800 	mov.w	r8, #0
 8003ee2:	e00a      	b.n	8003efa <d_print_comp+0x17b6>
 8003ee4:	460b      	mov	r3, r1
 8003ee6:	3101      	adds	r1, #1
 8003ee8:	45b9      	cmp	r9, r7
 8003eea:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003eee:	54e6      	strb	r6, [r4, r3]
 8003ef0:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003ef4:	d011      	beq.n	8003f1a <d_print_comp+0x17d6>
 8003ef6:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8003efa:	29ff      	cmp	r1, #255	; 0xff
 8003efc:	d1f2      	bne.n	8003ee4 <d_print_comp+0x17a0>
 8003efe:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003f02:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003f06:	4620      	mov	r0, r4
 8003f08:	4798      	blx	r3
 8003f0a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003f0e:	3301      	adds	r3, #1
 8003f10:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003f14:	2101      	movs	r1, #1
 8003f16:	2300      	movs	r3, #0
 8003f18:	e7e6      	b.n	8003ee8 <d_print_comp+0x17a4>
 8003f1a:	68ea      	ldr	r2, [r5, #12]
 8003f1c:	49bf      	ldr	r1, [pc, #764]	; (800421c <d_print_comp+0x1ad8>)
 8003f1e:	3201      	adds	r2, #1
 8003f20:	a806      	add	r0, sp, #24
 8003f22:	f00a f9df 	bl	800e2e4 <sprintf>
 8003f26:	a806      	add	r0, sp, #24
 8003f28:	f004 f80a 	bl	8007f40 <strlen>
 8003f2c:	b310      	cbz	r0, 8003f74 <d_print_comp+0x1830>
 8003f2e:	ae06      	add	r6, sp, #24
 8003f30:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003f34:	eb06 0900 	add.w	r9, r6, r0
 8003f38:	f04f 0800 	mov.w	r8, #0
 8003f3c:	e008      	b.n	8003f50 <d_print_comp+0x180c>
 8003f3e:	460b      	mov	r3, r1
 8003f40:	3101      	adds	r1, #1
 8003f42:	45b1      	cmp	r9, r6
 8003f44:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003f48:	54e7      	strb	r7, [r4, r3]
 8003f4a:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003f4e:	d013      	beq.n	8003f78 <d_print_comp+0x1834>
 8003f50:	29ff      	cmp	r1, #255	; 0xff
 8003f52:	f816 7b01 	ldrb.w	r7, [r6], #1
 8003f56:	d1f2      	bne.n	8003f3e <d_print_comp+0x17fa>
 8003f58:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003f5c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003f60:	4620      	mov	r0, r4
 8003f62:	4798      	blx	r3
 8003f64:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003f68:	3301      	adds	r3, #1
 8003f6a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003f6e:	2101      	movs	r1, #1
 8003f70:	2300      	movs	r3, #0
 8003f72:	e7e6      	b.n	8003f42 <d_print_comp+0x17fe>
 8003f74:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003f78:	29ff      	cmp	r1, #255	; 0xff
 8003f7a:	d10c      	bne.n	8003f96 <d_print_comp+0x1852>
 8003f7c:	2600      	movs	r6, #0
 8003f7e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003f82:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8003f86:	4620      	mov	r0, r4
 8003f88:	4798      	blx	r3
 8003f8a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003f8e:	3301      	adds	r3, #1
 8003f90:	4631      	mov	r1, r6
 8003f92:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003f96:	1c4a      	adds	r2, r1, #1
 8003f98:	237d      	movs	r3, #125	; 0x7d
 8003f9a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003f9e:	5463      	strb	r3, [r4, r1]
 8003fa0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003fa4:	686b      	ldr	r3, [r5, #4]
 8003fa6:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003faa:	9a03      	ldr	r2, [sp, #12]
 8003fac:	3b01      	subs	r3, #1
 8003fae:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003fb2:	f7fe bcbc 	b.w	800292e <d_print_comp+0x1ea>
 8003fb6:	4631      	mov	r1, r6
 8003fb8:	68aa      	ldr	r2, [r5, #8]
 8003fba:	4620      	mov	r0, r4
 8003fbc:	f7fe fbc2 	bl	8002744 <d_print_comp>
 8003fc0:	686b      	ldr	r3, [r5, #4]
 8003fc2:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003fc6:	9a03      	ldr	r2, [sp, #12]
 8003fc8:	3b01      	subs	r3, #1
 8003fca:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003fce:	f7fe bcae 	b.w	800292e <d_print_comp+0x1ea>
 8003fd2:	4631      	mov	r1, r6
 8003fd4:	68aa      	ldr	r2, [r5, #8]
 8003fd6:	4620      	mov	r0, r4
 8003fd8:	f7fe fbb4 	bl	8002744 <d_print_comp>
 8003fdc:	686b      	ldr	r3, [r5, #4]
 8003fde:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8003fe2:	9a03      	ldr	r2, [sp, #12]
 8003fe4:	3b01      	subs	r3, #1
 8003fe6:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8003fea:	f7fe bca0 	b.w	800292e <d_print_comp+0x1ea>
 8003fee:	68aa      	ldr	r2, [r5, #8]
 8003ff0:	498a      	ldr	r1, [pc, #552]	; (800421c <d_print_comp+0x1ad8>)
 8003ff2:	3201      	adds	r2, #1
 8003ff4:	a806      	add	r0, sp, #24
 8003ff6:	f00a f975 	bl	800e2e4 <sprintf>
 8003ffa:	a806      	add	r0, sp, #24
 8003ffc:	f003 ffa0 	bl	8007f40 <strlen>
 8004000:	b310      	cbz	r0, 8004048 <d_print_comp+0x1904>
 8004002:	ae06      	add	r6, sp, #24
 8004004:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004008:	eb06 0900 	add.w	r9, r6, r0
 800400c:	f04f 0800 	mov.w	r8, #0
 8004010:	e008      	b.n	8004024 <d_print_comp+0x18e0>
 8004012:	460b      	mov	r3, r1
 8004014:	3101      	adds	r1, #1
 8004016:	45b1      	cmp	r9, r6
 8004018:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800401c:	54e7      	strb	r7, [r4, r3]
 800401e:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004022:	d013      	beq.n	800404c <d_print_comp+0x1908>
 8004024:	29ff      	cmp	r1, #255	; 0xff
 8004026:	f816 7b01 	ldrb.w	r7, [r6], #1
 800402a:	d1f2      	bne.n	8004012 <d_print_comp+0x18ce>
 800402c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004030:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004034:	4620      	mov	r0, r4
 8004036:	4798      	blx	r3
 8004038:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800403c:	3301      	adds	r3, #1
 800403e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004042:	2101      	movs	r1, #1
 8004044:	2300      	movs	r3, #0
 8004046:	e7e6      	b.n	8004016 <d_print_comp+0x18d2>
 8004048:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800404c:	29ff      	cmp	r1, #255	; 0xff
 800404e:	d10c      	bne.n	800406a <d_print_comp+0x1926>
 8004050:	2600      	movs	r6, #0
 8004052:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004056:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800405a:	4620      	mov	r0, r4
 800405c:	4798      	blx	r3
 800405e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004062:	3301      	adds	r3, #1
 8004064:	4631      	mov	r1, r6
 8004066:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800406a:	1c4a      	adds	r2, r1, #1
 800406c:	237d      	movs	r3, #125	; 0x7d
 800406e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004072:	5463      	strb	r3, [r4, r1]
 8004074:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004078:	686b      	ldr	r3, [r5, #4]
 800407a:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800407e:	9a03      	ldr	r2, [sp, #12]
 8004080:	3b01      	subs	r3, #1
 8004082:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004086:	f7fe bc52 	b.w	800292e <d_print_comp+0x1ea>
 800408a:	4631      	mov	r1, r6
 800408c:	68ea      	ldr	r2, [r5, #12]
 800408e:	4620      	mov	r0, r4
 8004090:	f7fe fb58 	bl	8002744 <d_print_comp>
 8004094:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004098:	29ff      	cmp	r1, #255	; 0xff
 800409a:	d10c      	bne.n	80040b6 <d_print_comp+0x1972>
 800409c:	2600      	movs	r6, #0
 800409e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80040a2:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80040a6:	4620      	mov	r0, r4
 80040a8:	4798      	blx	r3
 80040aa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80040ae:	3301      	adds	r3, #1
 80040b0:	4631      	mov	r1, r6
 80040b2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80040b6:	1c4a      	adds	r2, r1, #1
 80040b8:	235d      	movs	r3, #93	; 0x5d
 80040ba:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80040be:	5463      	strb	r3, [r4, r1]
 80040c0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80040c4:	686b      	ldr	r3, [r5, #4]
 80040c6:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80040ca:	9a03      	ldr	r2, [sp, #12]
 80040cc:	3b01      	subs	r3, #1
 80040ce:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80040d2:	f7fe bc2c 	b.w	800292e <d_print_comp+0x1ea>
 80040d6:	4631      	mov	r1, r6
 80040d8:	68ea      	ldr	r2, [r5, #12]
 80040da:	4620      	mov	r0, r4
 80040dc:	f7fe fb32 	bl	8002744 <d_print_comp>
 80040e0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80040e4:	29ff      	cmp	r1, #255	; 0xff
 80040e6:	d10c      	bne.n	8004102 <d_print_comp+0x19be>
 80040e8:	2600      	movs	r6, #0
 80040ea:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80040ee:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80040f2:	4620      	mov	r0, r4
 80040f4:	4798      	blx	r3
 80040f6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80040fa:	3301      	adds	r3, #1
 80040fc:	4631      	mov	r1, r6
 80040fe:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004102:	1c4a      	adds	r2, r1, #1
 8004104:	235d      	movs	r3, #93	; 0x5d
 8004106:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800410a:	5463      	strb	r3, [r4, r1]
 800410c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004110:	686b      	ldr	r3, [r5, #4]
 8004112:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004116:	9a03      	ldr	r2, [sp, #12]
 8004118:	3b01      	subs	r3, #1
 800411a:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800411e:	f7fe bc06 	b.w	800292e <d_print_comp+0x1ea>
 8004122:	f8d9 6004 	ldr.w	r6, [r9, #4]
 8004126:	7833      	ldrb	r3, [r6, #0]
 8004128:	3b61      	subs	r3, #97	; 0x61
 800412a:	2b19      	cmp	r3, #25
 800412c:	d81a      	bhi.n	8004164 <d_print_comp+0x1a20>
 800412e:	29ff      	cmp	r1, #255	; 0xff
 8004130:	d10d      	bne.n	800414e <d_print_comp+0x1a0a>
 8004132:	2600      	movs	r6, #0
 8004134:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004138:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800413c:	4620      	mov	r0, r4
 800413e:	4798      	blx	r3
 8004140:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004144:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004148:	3301      	adds	r3, #1
 800414a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800414e:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 8004152:	2320      	movs	r3, #32
 8004154:	1c51      	adds	r1, r2, #1
 8004156:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800415a:	54a3      	strb	r3, [r4, r2]
 800415c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004160:	f8d9 6004 	ldr.w	r6, [r9, #4]
 8004164:	4643      	mov	r3, r8
 8004166:	18f2      	adds	r2, r6, r3
 8004168:	f812 2c01 	ldrb.w	r2, [r2, #-1]
 800416c:	2a20      	cmp	r2, #32
 800416e:	bf08      	it	eq
 8004170:	f108 33ff 	addeq.w	r3, r8, #4294967295	; 0xffffffff
 8004174:	2b00      	cmp	r3, #0
 8004176:	f001 813c 	beq.w	80053f2 <d_print_comp+0x2cae>
 800417a:	3e01      	subs	r6, #1
 800417c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004180:	eb06 0903 	add.w	r9, r6, r3
 8004184:	f04f 0800 	mov.w	r8, #0
 8004188:	e009      	b.n	800419e <d_print_comp+0x1a5a>
 800418a:	460b      	mov	r3, r1
 800418c:	3101      	adds	r1, #1
 800418e:	45b1      	cmp	r9, r6
 8004190:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004194:	54e7      	strb	r7, [r4, r3]
 8004196:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800419a:	f000 8155 	beq.w	8004448 <d_print_comp+0x1d04>
 800419e:	29ff      	cmp	r1, #255	; 0xff
 80041a0:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 80041a4:	d1f1      	bne.n	800418a <d_print_comp+0x1a46>
 80041a6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80041aa:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80041ae:	4620      	mov	r0, r4
 80041b0:	4798      	blx	r3
 80041b2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80041b6:	3301      	adds	r3, #1
 80041b8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80041bc:	2101      	movs	r1, #1
 80041be:	2300      	movs	r3, #0
 80041c0:	e7e5      	b.n	800418e <d_print_comp+0x1a4a>
 80041c2:	4631      	mov	r1, r6
 80041c4:	68aa      	ldr	r2, [r5, #8]
 80041c6:	4620      	mov	r0, r4
 80041c8:	f7fe fabc 	bl	8002744 <d_print_comp>
 80041cc:	686b      	ldr	r3, [r5, #4]
 80041ce:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80041d2:	9a03      	ldr	r2, [sp, #12]
 80041d4:	3b01      	subs	r3, #1
 80041d6:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80041da:	f7fe bba8 	b.w	800292e <d_print_comp+0x1ea>
 80041de:	4631      	mov	r1, r6
 80041e0:	68aa      	ldr	r2, [r5, #8]
 80041e2:	4620      	mov	r0, r4
 80041e4:	f7fe faae 	bl	8002744 <d_print_comp>
 80041e8:	686b      	ldr	r3, [r5, #4]
 80041ea:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80041ee:	9a03      	ldr	r2, [sp, #12]
 80041f0:	3b01      	subs	r3, #1
 80041f2:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80041f6:	f7fe bb9a 	b.w	800292e <d_print_comp+0x1ea>
 80041fa:	4631      	mov	r1, r6
 80041fc:	68aa      	ldr	r2, [r5, #8]
 80041fe:	4620      	mov	r0, r4
 8004200:	f7fe faa0 	bl	8002744 <d_print_comp>
 8004204:	686b      	ldr	r3, [r5, #4]
 8004206:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800420a:	9a03      	ldr	r2, [sp, #12]
 800420c:	3b01      	subs	r3, #1
 800420e:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004212:	f7fe bb8c 	b.w	800292e <d_print_comp+0x1ea>
 8004216:	bf00      	nop
 8004218:	08012f34 	.word	0x08012f34
 800421c:	08012ce4 	.word	0x08012ce4
 8004220:	08012d00 	.word	0x08012d00
 8004224:	08012d4c 	.word	0x08012d4c
 8004228:	08012d60 	.word	0x08012d60
 800422c:	08012d3c 	.word	0x08012d3c
 8004230:	4631      	mov	r1, r6
 8004232:	68aa      	ldr	r2, [r5, #8]
 8004234:	4620      	mov	r0, r4
 8004236:	f7fe fa85 	bl	8002744 <d_print_comp>
 800423a:	686b      	ldr	r3, [r5, #4]
 800423c:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004240:	9a03      	ldr	r2, [sp, #12]
 8004242:	3b01      	subs	r3, #1
 8004244:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004248:	f7fe bb71 	b.w	800292e <d_print_comp+0x1ea>
 800424c:	4631      	mov	r1, r6
 800424e:	68aa      	ldr	r2, [r5, #8]
 8004250:	4620      	mov	r0, r4
 8004252:	f7fe fa77 	bl	8002744 <d_print_comp>
 8004256:	686b      	ldr	r3, [r5, #4]
 8004258:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800425c:	9a03      	ldr	r2, [sp, #12]
 800425e:	3b01      	subs	r3, #1
 8004260:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004264:	f7fe bb63 	b.w	800292e <d_print_comp+0x1ea>
 8004268:	f8df 869c 	ldr.w	r8, [pc, #1692]	; 8004908 <d_print_comp+0x21c4>
 800426c:	68aa      	ldr	r2, [r5, #8]
 800426e:	4631      	mov	r1, r6
 8004270:	4620      	mov	r0, r4
 8004272:	f7fe fa67 	bl	8002744 <d_print_comp>
 8004276:	f108 0a03 	add.w	sl, r8, #3
 800427a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800427e:	272d      	movs	r7, #45	; 0x2d
 8004280:	f04f 0900 	mov.w	r9, #0
 8004284:	e00a      	b.n	800429c <d_print_comp+0x1b58>
 8004286:	460b      	mov	r3, r1
 8004288:	3101      	adds	r1, #1
 800428a:	45c2      	cmp	sl, r8
 800428c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004290:	54e7      	strb	r7, [r4, r3]
 8004292:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004296:	d011      	beq.n	80042bc <d_print_comp+0x1b78>
 8004298:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 800429c:	29ff      	cmp	r1, #255	; 0xff
 800429e:	d1f2      	bne.n	8004286 <d_print_comp+0x1b42>
 80042a0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80042a4:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80042a8:	4620      	mov	r0, r4
 80042aa:	4798      	blx	r3
 80042ac:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80042b0:	3301      	adds	r3, #1
 80042b2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80042b6:	2101      	movs	r1, #1
 80042b8:	2300      	movs	r3, #0
 80042ba:	e7e6      	b.n	800428a <d_print_comp+0x1b46>
 80042bc:	4631      	mov	r1, r6
 80042be:	68ea      	ldr	r2, [r5, #12]
 80042c0:	4620      	mov	r0, r4
 80042c2:	f7fe fa3f 	bl	8002744 <d_print_comp>
 80042c6:	686b      	ldr	r3, [r5, #4]
 80042c8:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80042cc:	9a03      	ldr	r2, [sp, #12]
 80042ce:	3b01      	subs	r3, #1
 80042d0:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80042d4:	f7fe bb2b 	b.w	800292e <d_print_comp+0x1ea>
 80042d8:	4631      	mov	r1, r6
 80042da:	68aa      	ldr	r2, [r5, #8]
 80042dc:	4620      	mov	r0, r4
 80042de:	f7fe fa31 	bl	8002744 <d_print_comp>
 80042e2:	686b      	ldr	r3, [r5, #4]
 80042e4:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80042e8:	9a03      	ldr	r2, [sp, #12]
 80042ea:	3b01      	subs	r3, #1
 80042ec:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80042f0:	f7fe bb1d 	b.w	800292e <d_print_comp+0x1ea>
 80042f4:	4631      	mov	r1, r6
 80042f6:	68aa      	ldr	r2, [r5, #8]
 80042f8:	4620      	mov	r0, r4
 80042fa:	f7fe fa23 	bl	8002744 <d_print_comp>
 80042fe:	686b      	ldr	r3, [r5, #4]
 8004300:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004304:	9a03      	ldr	r2, [sp, #12]
 8004306:	3b01      	subs	r3, #1
 8004308:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800430c:	f7fe bb0f 	b.w	800292e <d_print_comp+0x1ea>
 8004310:	4631      	mov	r1, r6
 8004312:	68aa      	ldr	r2, [r5, #8]
 8004314:	4620      	mov	r0, r4
 8004316:	f7fe fa15 	bl	8002744 <d_print_comp>
 800431a:	686b      	ldr	r3, [r5, #4]
 800431c:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004320:	9a03      	ldr	r2, [sp, #12]
 8004322:	3b01      	subs	r3, #1
 8004324:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004328:	f7fe bb01 	b.w	800292e <d_print_comp+0x1ea>
 800432c:	4631      	mov	r1, r6
 800432e:	68aa      	ldr	r2, [r5, #8]
 8004330:	4620      	mov	r0, r4
 8004332:	f7fe fa07 	bl	8002744 <d_print_comp>
 8004336:	686b      	ldr	r3, [r5, #4]
 8004338:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800433c:	9a03      	ldr	r2, [sp, #12]
 800433e:	3b01      	subs	r3, #1
 8004340:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004344:	f7fe baf3 	b.w	800292e <d_print_comp+0x1ea>
 8004348:	4631      	mov	r1, r6
 800434a:	68aa      	ldr	r2, [r5, #8]
 800434c:	4620      	mov	r0, r4
 800434e:	f7fe f9f9 	bl	8002744 <d_print_comp>
 8004352:	686b      	ldr	r3, [r5, #4]
 8004354:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004358:	9a03      	ldr	r2, [sp, #12]
 800435a:	3b01      	subs	r3, #1
 800435c:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004360:	f7fe bae5 	b.w	800292e <d_print_comp+0x1ea>
 8004364:	4631      	mov	r1, r6
 8004366:	68aa      	ldr	r2, [r5, #8]
 8004368:	4620      	mov	r0, r4
 800436a:	f7fe f9eb 	bl	8002744 <d_print_comp>
 800436e:	686b      	ldr	r3, [r5, #4]
 8004370:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004374:	9a03      	ldr	r2, [sp, #12]
 8004376:	3b01      	subs	r3, #1
 8004378:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800437c:	f7fe bad7 	b.w	800292e <d_print_comp+0x1ea>
 8004380:	4631      	mov	r1, r6
 8004382:	68aa      	ldr	r2, [r5, #8]
 8004384:	4620      	mov	r0, r4
 8004386:	f7fe f9dd 	bl	8002744 <d_print_comp>
 800438a:	686b      	ldr	r3, [r5, #4]
 800438c:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004390:	9a03      	ldr	r2, [sp, #12]
 8004392:	3b01      	subs	r3, #1
 8004394:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004398:	f7fe bac9 	b.w	800292e <d_print_comp+0x1ea>
 800439c:	f8df 856c 	ldr.w	r8, [pc, #1388]	; 800490c <d_print_comp+0x21c8>
 80043a0:	68ea      	ldr	r2, [r5, #12]
 80043a2:	4631      	mov	r1, r6
 80043a4:	4620      	mov	r0, r4
 80043a6:	f7fe f9cd 	bl	8002744 <d_print_comp>
 80043aa:	f108 0a04 	add.w	sl, r8, #4
 80043ae:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80043b2:	2720      	movs	r7, #32
 80043b4:	f04f 0900 	mov.w	r9, #0
 80043b8:	e00a      	b.n	80043d0 <d_print_comp+0x1c8c>
 80043ba:	460b      	mov	r3, r1
 80043bc:	3101      	adds	r1, #1
 80043be:	45c2      	cmp	sl, r8
 80043c0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80043c4:	54e7      	strb	r7, [r4, r3]
 80043c6:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80043ca:	d01f      	beq.n	800440c <d_print_comp+0x1cc8>
 80043cc:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80043d0:	29ff      	cmp	r1, #255	; 0xff
 80043d2:	d1f2      	bne.n	80043ba <d_print_comp+0x1c76>
 80043d4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80043d8:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80043dc:	4620      	mov	r0, r4
 80043de:	4798      	blx	r3
 80043e0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80043e4:	3301      	adds	r3, #1
 80043e6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80043ea:	2101      	movs	r1, #1
 80043ec:	2300      	movs	r3, #0
 80043ee:	e7e6      	b.n	80043be <d_print_comp+0x1c7a>
 80043f0:	4631      	mov	r1, r6
 80043f2:	68aa      	ldr	r2, [r5, #8]
 80043f4:	4620      	mov	r0, r4
 80043f6:	f7fe f9a5 	bl	8002744 <d_print_comp>
 80043fa:	686b      	ldr	r3, [r5, #4]
 80043fc:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004400:	9a03      	ldr	r2, [sp, #12]
 8004402:	3b01      	subs	r3, #1
 8004404:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004408:	f7fe ba91 	b.w	800292e <d_print_comp+0x1ea>
 800440c:	4631      	mov	r1, r6
 800440e:	68aa      	ldr	r2, [r5, #8]
 8004410:	4620      	mov	r0, r4
 8004412:	f7fe f997 	bl	8002744 <d_print_comp>
 8004416:	686b      	ldr	r3, [r5, #4]
 8004418:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800441c:	9a03      	ldr	r2, [sp, #12]
 800441e:	3b01      	subs	r3, #1
 8004420:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004424:	f7fe ba83 	b.w	800292e <d_print_comp+0x1ea>
 8004428:	464a      	mov	r2, r9
 800442a:	4631      	mov	r1, r6
 800442c:	4620      	mov	r0, r4
 800442e:	f001 f9d3 	bl	80057d8 <d_print_mod>
 8004432:	f7ff b92c 	b.w	800368e <d_print_comp+0xf4a>
 8004436:	686b      	ldr	r3, [r5, #4]
 8004438:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800443c:	9a03      	ldr	r2, [sp, #12]
 800443e:	3b01      	subs	r3, #1
 8004440:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004444:	f7fe ba73 	b.w	800292e <d_print_comp+0x1ea>
 8004448:	686b      	ldr	r3, [r5, #4]
 800444a:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800444e:	9a03      	ldr	r2, [sp, #12]
 8004450:	3b01      	subs	r3, #1
 8004452:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004456:	f7fe ba6a 	b.w	800292e <d_print_comp+0x1ea>
 800445a:	9d01      	ldr	r5, [sp, #4]
 800445c:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004460:	686b      	ldr	r3, [r5, #4]
 8004462:	9a03      	ldr	r2, [sp, #12]
 8004464:	3b01      	subs	r3, #1
 8004466:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800446a:	f7fe ba60 	b.w	800292e <d_print_comp+0x1ea>
 800446e:	460f      	mov	r7, r1
 8004470:	68ea      	ldr	r2, [r5, #12]
 8004472:	4631      	mov	r1, r6
 8004474:	4620      	mov	r0, r4
 8004476:	f8d4 6128 	ldr.w	r6, [r4, #296]	; 0x128
 800447a:	f7fe f963 	bl	8002744 <d_print_comp>
 800447e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004482:	429e      	cmp	r6, r3
 8004484:	686b      	ldr	r3, [r5, #4]
 8004486:	f000 83ed 	beq.w	8004c64 <d_print_comp+0x2520>
 800448a:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800448e:	9a03      	ldr	r2, [sp, #12]
 8004490:	3b01      	subs	r3, #1
 8004492:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004496:	f7fe ba4a 	b.w	800292e <d_print_comp+0x1ea>
 800449a:	68ab      	ldr	r3, [r5, #8]
 800449c:	9300      	str	r3, [sp, #0]
 800449e:	f1ba 0f00 	cmp.w	sl, #0
 80044a2:	f47e aa8f 	bne.w	80029c4 <d_print_comp+0x280>
 80044a6:	686b      	ldr	r3, [r5, #4]
 80044a8:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80044ac:	9a03      	ldr	r2, [sp, #12]
 80044ae:	3b01      	subs	r3, #1
 80044b0:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80044b4:	f7fe ba3b 	b.w	800292e <d_print_comp+0x1ea>
 80044b8:	782b      	ldrb	r3, [r5, #0]
 80044ba:	2b2f      	cmp	r3, #47	; 0x2f
 80044bc:	d000      	beq.n	80044c0 <d_print_comp+0x1d7c>
 80044be:	46a9      	mov	r9, r5
 80044c0:	f8d4 a114 	ldr.w	sl, [r4, #276]	; 0x114
 80044c4:	f7ff b8be 	b.w	8003644 <d_print_comp+0xf00>
 80044c8:	e9d1 6002 	ldrd	r6, r0, [r1, #8]
 80044cc:	2800      	cmp	r0, #0
 80044ce:	f43e aa2e 	beq.w	800292e <d_print_comp+0x1ea>
 80044d2:	4430      	add	r0, r6
 80044d4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80044d8:	f100 39ff 	add.w	r9, r0, #4294967295	; 0xffffffff
 80044dc:	3e01      	subs	r6, #1
 80044de:	f04f 0800 	mov.w	r8, #0
 80044e2:	e009      	b.n	80044f8 <d_print_comp+0x1db4>
 80044e4:	460b      	mov	r3, r1
 80044e6:	3101      	adds	r1, #1
 80044e8:	45b1      	cmp	r9, r6
 80044ea:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80044ee:	54e7      	strb	r7, [r4, r3]
 80044f0:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80044f4:	f000 816b 	beq.w	80047ce <d_print_comp+0x208a>
 80044f8:	29ff      	cmp	r1, #255	; 0xff
 80044fa:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 80044fe:	d1f1      	bne.n	80044e4 <d_print_comp+0x1da0>
 8004500:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004504:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004508:	4620      	mov	r0, r4
 800450a:	4798      	blx	r3
 800450c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004510:	3301      	adds	r3, #1
 8004512:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004516:	2101      	movs	r1, #1
 8004518:	2300      	movs	r3, #0
 800451a:	e7e5      	b.n	80044e8 <d_print_comp+0x1da4>
 800451c:	f105 0108 	add.w	r1, r5, #8
 8004520:	4620      	mov	r0, r4
 8004522:	f7fc fa03 	bl	800092c <d_lookup_template_argument.isra.9>
 8004526:	4602      	mov	r2, r0
 8004528:	2800      	cmp	r0, #0
 800452a:	f000 858b 	beq.w	8005044 <d_print_comp+0x2900>
 800452e:	7803      	ldrb	r3, [r0, #0]
 8004530:	2b2f      	cmp	r3, #47	; 0x2f
 8004532:	f000 857c 	beq.w	800502e <d_print_comp+0x28ea>
 8004536:	f8d4 7110 	ldr.w	r7, [r4, #272]	; 0x110
 800453a:	683b      	ldr	r3, [r7, #0]
 800453c:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004540:	4631      	mov	r1, r6
 8004542:	4620      	mov	r0, r4
 8004544:	f7fe f8fe 	bl	8002744 <d_print_comp>
 8004548:	686b      	ldr	r3, [r5, #4]
 800454a:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800454e:	f8c4 7110 	str.w	r7, [r4, #272]	; 0x110
 8004552:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
 8004556:	3b01      	subs	r3, #1
 8004558:	9a03      	ldr	r2, [sp, #12]
 800455a:	f7fe b9e8 	b.w	800292e <d_print_comp+0x1ea>
 800455e:	68ee      	ldr	r6, [r5, #12]
 8004560:	443e      	add	r6, r7
 8004562:	42be      	cmp	r6, r7
 8004564:	f67e a9e3 	bls.w	800292e <d_print_comp+0x1ea>
 8004568:	f04f 0800 	mov.w	r8, #0
 800456c:	e00a      	b.n	8004584 <d_print_comp+0x1e40>
 800456e:	1c4b      	adds	r3, r1, #1
 8004570:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004574:	f804 9001 	strb.w	r9, [r4, r1]
 8004578:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 800457c:	3701      	adds	r7, #1
 800457e:	42be      	cmp	r6, r7
 8004580:	f240 812e 	bls.w	80047e0 <d_print_comp+0x209c>
 8004584:	1bf3      	subs	r3, r6, r7
 8004586:	2b03      	cmp	r3, #3
 8004588:	f897 9000 	ldrb.w	r9, [r7]
 800458c:	dd02      	ble.n	8004594 <d_print_comp+0x1e50>
 800458e:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
 8004592:	d011      	beq.n	80045b8 <d_print_comp+0x1e74>
 8004594:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004598:	29ff      	cmp	r1, #255	; 0xff
 800459a:	d1e8      	bne.n	800456e <d_print_comp+0x1e2a>
 800459c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80045a0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80045a4:	4620      	mov	r0, r4
 80045a6:	4798      	blx	r3
 80045a8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80045ac:	3301      	adds	r3, #1
 80045ae:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80045b2:	2100      	movs	r1, #0
 80045b4:	2301      	movs	r3, #1
 80045b6:	e7db      	b.n	8004570 <d_print_comp+0x1e2c>
 80045b8:	787b      	ldrb	r3, [r7, #1]
 80045ba:	2b5f      	cmp	r3, #95	; 0x5f
 80045bc:	d1ea      	bne.n	8004594 <d_print_comp+0x1e50>
 80045be:	78bb      	ldrb	r3, [r7, #2]
 80045c0:	2b55      	cmp	r3, #85	; 0x55
 80045c2:	d1e7      	bne.n	8004594 <d_print_comp+0x1e50>
 80045c4:	1cfa      	adds	r2, r7, #3
 80045c6:	4296      	cmp	r6, r2
 80045c8:	d9e4      	bls.n	8004594 <d_print_comp+0x1e50>
 80045ca:	2000      	movs	r0, #0
 80045cc:	e004      	b.n	80045d8 <d_print_comp+0x1e94>
 80045ce:	460b      	mov	r3, r1
 80045d0:	4296      	cmp	r6, r2
 80045d2:	eb03 1000 	add.w	r0, r3, r0, lsl #4
 80045d6:	d0dd      	beq.n	8004594 <d_print_comp+0x1e50>
 80045d8:	4692      	mov	sl, r2
 80045da:	f812 3b01 	ldrb.w	r3, [r2], #1
 80045de:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80045e2:	fa5f fe81 	uxtb.w	lr, r1
 80045e6:	f1be 0f09 	cmp.w	lr, #9
 80045ea:	f1a3 0c41 	sub.w	ip, r3, #65	; 0x41
 80045ee:	d9ee      	bls.n	80045ce <d_print_comp+0x1e8a>
 80045f0:	f1bc 0f05 	cmp.w	ip, #5
 80045f4:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80045f8:	f200 8530 	bhi.w	800505c <d_print_comp+0x2918>
 80045fc:	3b37      	subs	r3, #55	; 0x37
 80045fe:	e7e7      	b.n	80045d0 <d_print_comp+0x1e8c>
 8004600:	4ebd      	ldr	r6, [pc, #756]	; (80048f8 <d_print_comp+0x21b4>)
 8004602:	275f      	movs	r7, #95	; 0x5f
 8004604:	f106 0905 	add.w	r9, r6, #5
 8004608:	f04f 0800 	mov.w	r8, #0
 800460c:	e00a      	b.n	8004624 <d_print_comp+0x1ee0>
 800460e:	460b      	mov	r3, r1
 8004610:	3101      	adds	r1, #1
 8004612:	45b1      	cmp	r9, r6
 8004614:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004618:	54e7      	strb	r7, [r4, r3]
 800461a:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800461e:	d011      	beq.n	8004644 <d_print_comp+0x1f00>
 8004620:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8004624:	29ff      	cmp	r1, #255	; 0xff
 8004626:	d1f2      	bne.n	800460e <d_print_comp+0x1eca>
 8004628:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800462c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004630:	4620      	mov	r0, r4
 8004632:	4798      	blx	r3
 8004634:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004638:	3301      	adds	r3, #1
 800463a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800463e:	2101      	movs	r1, #1
 8004640:	2300      	movs	r3, #0
 8004642:	e7e6      	b.n	8004612 <d_print_comp+0x1ece>
 8004644:	686b      	ldr	r3, [r5, #4]
 8004646:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800464a:	9a03      	ldr	r2, [sp, #12]
 800464c:	3b01      	subs	r3, #1
 800464e:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004652:	f7fe b96c 	b.w	800292e <d_print_comp+0x1ea>
 8004656:	4fa9      	ldr	r7, [pc, #676]	; (80048fc <d_print_comp+0x21b8>)
 8004658:	2674      	movs	r6, #116	; 0x74
 800465a:	f107 0903 	add.w	r9, r7, #3
 800465e:	e00a      	b.n	8004676 <d_print_comp+0x1f32>
 8004660:	460b      	mov	r3, r1
 8004662:	3101      	adds	r1, #1
 8004664:	45b9      	cmp	r9, r7
 8004666:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800466a:	54e6      	strb	r6, [r4, r3]
 800466c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004670:	d011      	beq.n	8004696 <d_print_comp+0x1f52>
 8004672:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8004676:	29ff      	cmp	r1, #255	; 0xff
 8004678:	d1f2      	bne.n	8004660 <d_print_comp+0x1f1c>
 800467a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800467e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004682:	4620      	mov	r0, r4
 8004684:	4798      	blx	r3
 8004686:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800468a:	3301      	adds	r3, #1
 800468c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004690:	2101      	movs	r1, #1
 8004692:	2300      	movs	r3, #0
 8004694:	e7e6      	b.n	8004664 <d_print_comp+0x1f20>
 8004696:	686b      	ldr	r3, [r5, #4]
 8004698:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800469c:	9a03      	ldr	r2, [sp, #12]
 800469e:	3b01      	subs	r3, #1
 80046a0:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80046a4:	f7fe b943 	b.w	800292e <d_print_comp+0x1ea>
 80046a8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80046ac:	f7fe bd95 	b.w	80031da <d_print_comp+0xa96>
 80046b0:	686b      	ldr	r3, [r5, #4]
 80046b2:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80046b6:	9a03      	ldr	r2, [sp, #12]
 80046b8:	3b01      	subs	r3, #1
 80046ba:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80046be:	f7fe b936 	b.w	800292e <d_print_comp+0x1ea>
 80046c2:	68aa      	ldr	r2, [r5, #8]
 80046c4:	498e      	ldr	r1, [pc, #568]	; (8004900 <d_print_comp+0x21bc>)
 80046c6:	3201      	adds	r2, #1
 80046c8:	a806      	add	r0, sp, #24
 80046ca:	f009 fe0b 	bl	800e2e4 <sprintf>
 80046ce:	a806      	add	r0, sp, #24
 80046d0:	f003 fc36 	bl	8007f40 <strlen>
 80046d4:	b310      	cbz	r0, 800471c <d_print_comp+0x1fd8>
 80046d6:	ae06      	add	r6, sp, #24
 80046d8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80046dc:	eb06 0900 	add.w	r9, r6, r0
 80046e0:	f04f 0800 	mov.w	r8, #0
 80046e4:	e008      	b.n	80046f8 <d_print_comp+0x1fb4>
 80046e6:	460b      	mov	r3, r1
 80046e8:	3101      	adds	r1, #1
 80046ea:	45b1      	cmp	r9, r6
 80046ec:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80046f0:	54e7      	strb	r7, [r4, r3]
 80046f2:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80046f6:	d011      	beq.n	800471c <d_print_comp+0x1fd8>
 80046f8:	29ff      	cmp	r1, #255	; 0xff
 80046fa:	f816 7b01 	ldrb.w	r7, [r6], #1
 80046fe:	d1f2      	bne.n	80046e6 <d_print_comp+0x1fa2>
 8004700:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004704:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004708:	4620      	mov	r0, r4
 800470a:	4798      	blx	r3
 800470c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004710:	3301      	adds	r3, #1
 8004712:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004716:	2101      	movs	r1, #1
 8004718:	2300      	movs	r3, #0
 800471a:	e7e6      	b.n	80046ea <d_print_comp+0x1fa6>
 800471c:	686b      	ldr	r3, [r5, #4]
 800471e:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004722:	9a03      	ldr	r2, [sp, #12]
 8004724:	3b01      	subs	r3, #1
 8004726:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800472a:	f7fe b900 	b.w	800292e <d_print_comp+0x1ea>
 800472e:	4642      	mov	r2, r8
 8004730:	a806      	add	r0, sp, #24
 8004732:	4973      	ldr	r1, [pc, #460]	; (8004900 <d_print_comp+0x21bc>)
 8004734:	f009 fdd6 	bl	800e2e4 <sprintf>
 8004738:	a806      	add	r0, sp, #24
 800473a:	f003 fc01 	bl	8007f40 <strlen>
 800473e:	b310      	cbz	r0, 8004786 <d_print_comp+0x2042>
 8004740:	ae06      	add	r6, sp, #24
 8004742:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004746:	eb06 0900 	add.w	r9, r6, r0
 800474a:	f04f 0800 	mov.w	r8, #0
 800474e:	e008      	b.n	8004762 <d_print_comp+0x201e>
 8004750:	460b      	mov	r3, r1
 8004752:	3101      	adds	r1, #1
 8004754:	45b1      	cmp	r9, r6
 8004756:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800475a:	54e7      	strb	r7, [r4, r3]
 800475c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004760:	d011      	beq.n	8004786 <d_print_comp+0x2042>
 8004762:	29ff      	cmp	r1, #255	; 0xff
 8004764:	f816 7b01 	ldrb.w	r7, [r6], #1
 8004768:	d1f2      	bne.n	8004750 <d_print_comp+0x200c>
 800476a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800476e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004772:	4620      	mov	r0, r4
 8004774:	4798      	blx	r3
 8004776:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800477a:	3301      	adds	r3, #1
 800477c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004780:	2101      	movs	r1, #1
 8004782:	2300      	movs	r3, #0
 8004784:	e7e6      	b.n	8004754 <d_print_comp+0x2010>
 8004786:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800478a:	2bff      	cmp	r3, #255	; 0xff
 800478c:	d10f      	bne.n	80047ae <d_print_comp+0x206a>
 800478e:	2600      	movs	r6, #0
 8004790:	4619      	mov	r1, r3
 8004792:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004796:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800479a:	4620      	mov	r0, r4
 800479c:	4798      	blx	r3
 800479e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80047a2:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80047a6:	1c5a      	adds	r2, r3, #1
 80047a8:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80047ac:	4633      	mov	r3, r6
 80047ae:	1c59      	adds	r1, r3, #1
 80047b0:	227d      	movs	r2, #125	; 0x7d
 80047b2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80047b6:	54e2      	strb	r2, [r4, r3]
 80047b8:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80047bc:	686b      	ldr	r3, [r5, #4]
 80047be:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80047c2:	9a03      	ldr	r2, [sp, #12]
 80047c4:	3b01      	subs	r3, #1
 80047c6:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80047ca:	f7fe b8b0 	b.w	800292e <d_print_comp+0x1ea>
 80047ce:	686b      	ldr	r3, [r5, #4]
 80047d0:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80047d4:	9a03      	ldr	r2, [sp, #12]
 80047d6:	3b01      	subs	r3, #1
 80047d8:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80047dc:	f7fe b8a7 	b.w	800292e <d_print_comp+0x1ea>
 80047e0:	686b      	ldr	r3, [r5, #4]
 80047e2:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80047e6:	9a03      	ldr	r2, [sp, #12]
 80047e8:	3b01      	subs	r3, #1
 80047ea:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80047ee:	f7fe b89e 	b.w	800292e <d_print_comp+0x1ea>
 80047f2:	686b      	ldr	r3, [r5, #4]
 80047f4:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80047f8:	9a03      	ldr	r2, [sp, #12]
 80047fa:	3b01      	subs	r3, #1
 80047fc:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004800:	f7fe b895 	b.w	800292e <d_print_comp+0x1ea>
 8004804:	686b      	ldr	r3, [r5, #4]
 8004806:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800480a:	9a03      	ldr	r2, [sp, #12]
 800480c:	3b01      	subs	r3, #1
 800480e:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004812:	f7fe b88c 	b.w	800292e <d_print_comp+0x1ea>
 8004816:	689b      	ldr	r3, [r3, #8]
 8004818:	7c1f      	ldrb	r7, [r3, #16]
 800481a:	2f00      	cmp	r7, #0
 800481c:	f43e aae0 	beq.w	8002de0 <d_print_comp+0x69c>
 8004820:	2f06      	cmp	r7, #6
 8004822:	f240 84ec 	bls.w	80051fe <d_print_comp+0x2aba>
 8004826:	2f07      	cmp	r7, #7
 8004828:	f47e aada 	bne.w	8002de0 <d_print_comp+0x69c>
 800482c:	68eb      	ldr	r3, [r5, #12]
 800482e:	781a      	ldrb	r2, [r3, #0]
 8004830:	2a00      	cmp	r2, #0
 8004832:	f47e aad5 	bne.w	8002de0 <d_print_comp+0x69c>
 8004836:	68da      	ldr	r2, [r3, #12]
 8004838:	2a01      	cmp	r2, #1
 800483a:	f47e aad1 	bne.w	8002de0 <d_print_comp+0x69c>
 800483e:	283c      	cmp	r0, #60	; 0x3c
 8004840:	f47e aace 	bne.w	8002de0 <d_print_comp+0x69c>
 8004844:	689b      	ldr	r3, [r3, #8]
 8004846:	781b      	ldrb	r3, [r3, #0]
 8004848:	2b30      	cmp	r3, #48	; 0x30
 800484a:	f000 86da 	beq.w	8005602 <d_print_comp+0x2ebe>
 800484e:	2b31      	cmp	r3, #49	; 0x31
 8004850:	f47e aac6 	bne.w	8002de0 <d_print_comp+0x69c>
 8004854:	2204      	movs	r2, #4
 8004856:	492b      	ldr	r1, [pc, #172]	; (8004904 <d_print_comp+0x21c0>)
 8004858:	4620      	mov	r0, r4
 800485a:	f7fb fe09 	bl	8000470 <d_append_buffer>
 800485e:	686b      	ldr	r3, [r5, #4]
 8004860:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004864:	9a03      	ldr	r2, [sp, #12]
 8004866:	3b01      	subs	r3, #1
 8004868:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800486c:	f7fe b85f 	b.w	800292e <d_print_comp+0x1ea>
 8004870:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004874:	2bff      	cmp	r3, #255	; 0xff
 8004876:	d10f      	bne.n	8004898 <d_print_comp+0x2154>
 8004878:	2700      	movs	r7, #0
 800487a:	4619      	mov	r1, r3
 800487c:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8004880:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004884:	4620      	mov	r0, r4
 8004886:	4798      	blx	r3
 8004888:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800488c:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8004890:	1c5a      	adds	r2, r3, #1
 8004892:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004896:	463b      	mov	r3, r7
 8004898:	1c59      	adds	r1, r3, #1
 800489a:	225b      	movs	r2, #91	; 0x5b
 800489c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80048a0:	54e2      	strb	r2, [r4, r3]
 80048a2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80048a6:	4631      	mov	r1, r6
 80048a8:	68ea      	ldr	r2, [r5, #12]
 80048aa:	4620      	mov	r0, r4
 80048ac:	f7fd ff4a 	bl	8002744 <d_print_comp>
 80048b0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80048b4:	2bff      	cmp	r3, #255	; 0xff
 80048b6:	d10f      	bne.n	80048d8 <d_print_comp+0x2194>
 80048b8:	2600      	movs	r6, #0
 80048ba:	4619      	mov	r1, r3
 80048bc:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80048c0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80048c4:	4620      	mov	r0, r4
 80048c6:	4798      	blx	r3
 80048c8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80048cc:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80048d0:	1c5a      	adds	r2, r3, #1
 80048d2:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80048d6:	4633      	mov	r3, r6
 80048d8:	1c59      	adds	r1, r3, #1
 80048da:	225d      	movs	r2, #93	; 0x5d
 80048dc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80048e0:	54e2      	strb	r2, [r4, r3]
 80048e2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80048e6:	686b      	ldr	r3, [r5, #4]
 80048e8:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80048ec:	9a03      	ldr	r2, [sp, #12]
 80048ee:	3b01      	subs	r3, #1
 80048f0:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80048f4:	f7fe b81b 	b.w	800292e <d_print_comp+0x1ea>
 80048f8:	08012e58 	.word	0x08012e58
 80048fc:	08012ee0 	.word	0x08012ee0
 8004900:	08012ce4 	.word	0x08012ce4
 8004904:	08012eb0 	.word	0x08012eb0
 8004908:	08012d34 	.word	0x08012d34
 800490c:	08012df8 	.word	0x08012df8
 8004910:	6892      	ldr	r2, [r2, #8]
 8004912:	4631      	mov	r1, r6
 8004914:	4620      	mov	r0, r4
 8004916:	f7fd ff15 	bl	8002744 <d_print_comp>
 800491a:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800491e:	b113      	cbz	r3, 8004926 <d_print_comp+0x21e2>
 8004920:	9b06      	ldr	r3, [sp, #24]
 8004922:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004926:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 800492a:	2b3c      	cmp	r3, #60	; 0x3c
 800492c:	f000 849e 	beq.w	800526c <d_print_comp+0x2b28>
 8004930:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004934:	2bff      	cmp	r3, #255	; 0xff
 8004936:	d10f      	bne.n	8004958 <d_print_comp+0x2214>
 8004938:	2700      	movs	r7, #0
 800493a:	4619      	mov	r1, r3
 800493c:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8004940:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004944:	4620      	mov	r0, r4
 8004946:	4798      	blx	r3
 8004948:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800494c:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8004950:	1c5a      	adds	r2, r3, #1
 8004952:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004956:	463b      	mov	r3, r7
 8004958:	1c59      	adds	r1, r3, #1
 800495a:	223c      	movs	r2, #60	; 0x3c
 800495c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004960:	54e2      	strb	r2, [r4, r3]
 8004962:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004966:	68ab      	ldr	r3, [r5, #8]
 8004968:	4631      	mov	r1, r6
 800496a:	68da      	ldr	r2, [r3, #12]
 800496c:	4620      	mov	r0, r4
 800496e:	f7fd fee9 	bl	8002744 <d_print_comp>
 8004972:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8004976:	2b3e      	cmp	r3, #62	; 0x3e
 8004978:	f000 845b 	beq.w	8005232 <d_print_comp+0x2aee>
 800497c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004980:	2bff      	cmp	r3, #255	; 0xff
 8004982:	d10f      	bne.n	80049a4 <d_print_comp+0x2260>
 8004984:	2600      	movs	r6, #0
 8004986:	4619      	mov	r1, r3
 8004988:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800498c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004990:	4620      	mov	r0, r4
 8004992:	4798      	blx	r3
 8004994:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004998:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800499c:	1c5a      	adds	r2, r3, #1
 800499e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80049a2:	4633      	mov	r3, r6
 80049a4:	223e      	movs	r2, #62	; 0x3e
 80049a6:	1c59      	adds	r1, r3, #1
 80049a8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80049ac:	54e2      	strb	r2, [r4, r3]
 80049ae:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80049b2:	f7ff ba42 	b.w	8003e3a <d_print_comp+0x16f6>
 80049b6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80049ba:	49e0      	ldr	r1, [pc, #896]	; (8004d3c <d_print_comp+0x25f8>)
 80049bc:	f8d3 9000 	ldr.w	r9, [r3]
 80049c0:	4648      	mov	r0, r9
 80049c2:	f003 f951 	bl	8007c68 <strcmp>
 80049c6:	783b      	ldrb	r3, [r7, #0]
 80049c8:	b910      	cbnz	r0, 80049d0 <d_print_comp+0x228c>
 80049ca:	2b03      	cmp	r3, #3
 80049cc:	f000 859a 	beq.w	8005504 <d_print_comp+0x2dc0>
 80049d0:	2b38      	cmp	r3, #56	; 0x38
 80049d2:	f000 8584 	beq.w	80054de <d_print_comp+0x2d9a>
 80049d6:	49da      	ldr	r1, [pc, #872]	; (8004d40 <d_print_comp+0x25fc>)
 80049d8:	4648      	mov	r0, r9
 80049da:	f003 f945 	bl	8007c68 <strcmp>
 80049de:	4682      	mov	sl, r0
 80049e0:	2800      	cmp	r0, #0
 80049e2:	f000 853a 	beq.w	800545a <d_print_comp+0x2d16>
 80049e6:	49d7      	ldr	r1, [pc, #860]	; (8004d44 <d_print_comp+0x2600>)
 80049e8:	4648      	mov	r0, r9
 80049ea:	f003 f93d 	bl	8007c68 <strcmp>
 80049ee:	2800      	cmp	r0, #0
 80049f0:	f000 833a 	beq.w	8005068 <d_print_comp+0x2924>
 80049f4:	4631      	mov	r1, r6
 80049f6:	4620      	mov	r0, r4
 80049f8:	4642      	mov	r2, r8
 80049fa:	f001 fd01 	bl	8006400 <d_print_expr_op>
 80049fe:	49d2      	ldr	r1, [pc, #840]	; (8004d48 <d_print_comp+0x2604>)
 8004a00:	4648      	mov	r0, r9
 8004a02:	f003 f931 	bl	8007c68 <strcmp>
 8004a06:	2800      	cmp	r0, #0
 8004a08:	f000 821d 	beq.w	8004e46 <d_print_comp+0x2702>
 8004a0c:	4648      	mov	r0, r9
 8004a0e:	49cf      	ldr	r1, [pc, #828]	; (8004d4c <d_print_comp+0x2608>)
 8004a10:	f003 f92a 	bl	8007c68 <strcmp>
 8004a14:	4680      	mov	r8, r0
 8004a16:	2800      	cmp	r0, #0
 8004a18:	f47e aa91 	bne.w	8002f3e <d_print_comp+0x7fa>
 8004a1c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004a20:	2bff      	cmp	r3, #255	; 0xff
 8004a22:	d10e      	bne.n	8004a42 <d_print_comp+0x22fe>
 8004a24:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 8004a28:	4619      	mov	r1, r3
 8004a2a:	4620      	mov	r0, r4
 8004a2c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004a30:	4798      	blx	r3
 8004a32:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004a36:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8004a3a:	1c5a      	adds	r2, r3, #1
 8004a3c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004a40:	4643      	mov	r3, r8
 8004a42:	1c58      	adds	r0, r3, #1
 8004a44:	f04f 0c28 	mov.w	ip, #40	; 0x28
 8004a48:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8004a4c:	463a      	mov	r2, r7
 8004a4e:	f804 c003 	strb.w	ip, [r4, r3]
 8004a52:	4631      	mov	r1, r6
 8004a54:	4620      	mov	r0, r4
 8004a56:	f884 c104 	strb.w	ip, [r4, #260]	; 0x104
 8004a5a:	f7fd fe73 	bl	8002744 <d_print_comp>
 8004a5e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004a62:	2bff      	cmp	r3, #255	; 0xff
 8004a64:	d10f      	bne.n	8004a86 <d_print_comp+0x2342>
 8004a66:	2600      	movs	r6, #0
 8004a68:	4619      	mov	r1, r3
 8004a6a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004a6e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004a72:	4620      	mov	r0, r4
 8004a74:	4798      	blx	r3
 8004a76:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004a7a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004a7e:	1c5a      	adds	r2, r3, #1
 8004a80:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004a84:	4633      	mov	r3, r6
 8004a86:	1c59      	adds	r1, r3, #1
 8004a88:	2229      	movs	r2, #41	; 0x29
 8004a8a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004a8e:	54e2      	strb	r2, [r4, r3]
 8004a90:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004a94:	686b      	ldr	r3, [r5, #4]
 8004a96:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004a9a:	9a03      	ldr	r2, [sp, #12]
 8004a9c:	3b01      	subs	r3, #1
 8004a9e:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004aa2:	f7fd bf44 	b.w	800292e <d_print_comp+0x1ea>
 8004aa6:	2200      	movs	r2, #0
 8004aa8:	4619      	mov	r1, r3
 8004aaa:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 8004aae:	4620      	mov	r0, r4
 8004ab0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004ab4:	4798      	blx	r3
 8004ab6:	2329      	movs	r3, #41	; 0x29
 8004ab8:	7023      	strb	r3, [r4, #0]
 8004aba:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004abe:	782a      	ldrb	r2, [r5, #0]
 8004ac0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004ac4:	2101      	movs	r1, #1
 8004ac6:	3301      	adds	r3, #1
 8004ac8:	2a3d      	cmp	r2, #61	; 0x3d
 8004aca:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004ace:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004ad2:	f47e a9b6 	bne.w	8002e42 <d_print_comp+0x6fe>
 8004ad6:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 8004ada:	232d      	movs	r3, #45	; 0x2d
 8004adc:	1c51      	adds	r1, r2, #1
 8004ade:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004ae2:	54a3      	strb	r3, [r4, r2]
 8004ae4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004ae8:	f7fe b9ab 	b.w	8002e42 <d_print_comp+0x6fe>
 8004aec:	f105 020c 	add.w	r2, r5, #12
 8004af0:	4639      	mov	r1, r7
 8004af2:	4620      	mov	r0, r4
 8004af4:	f001 f978 	bl	8005de8 <d_print_function_type.isra.14>
 8004af8:	68aa      	ldr	r2, [r5, #8]
 8004afa:	2a00      	cmp	r2, #0
 8004afc:	f000 8401 	beq.w	8005302 <d_print_comp+0x2bbe>
 8004b00:	4639      	mov	r1, r7
 8004b02:	4620      	mov	r0, r4
 8004b04:	f7fd fe1e 	bl	8002744 <d_print_comp>
 8004b08:	686b      	ldr	r3, [r5, #4]
 8004b0a:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004b0e:	9a03      	ldr	r2, [sp, #12]
 8004b10:	3b01      	subs	r3, #1
 8004b12:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004b16:	f7fd bf0a 	b.w	800292e <d_print_comp+0x1ea>
 8004b1a:	4631      	mov	r1, r6
 8004b1c:	462a      	mov	r2, r5
 8004b1e:	4620      	mov	r0, r4
 8004b20:	f000 fe5a 	bl	80057d8 <d_print_mod>
 8004b24:	f7fe bb93 	b.w	800324e <d_print_comp+0xb0a>
 8004b28:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004b2c:	2bff      	cmp	r3, #255	; 0xff
 8004b2e:	d10f      	bne.n	8004b50 <d_print_comp+0x240c>
 8004b30:	2600      	movs	r6, #0
 8004b32:	4619      	mov	r1, r3
 8004b34:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004b38:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004b3c:	4620      	mov	r0, r4
 8004b3e:	4798      	blx	r3
 8004b40:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004b44:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004b48:	1c5a      	adds	r2, r3, #1
 8004b4a:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004b4e:	4633      	mov	r3, r6
 8004b50:	2220      	movs	r2, #32
 8004b52:	1c59      	adds	r1, r3, #1
 8004b54:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004b58:	54e2      	strb	r2, [r4, r3]
 8004b5a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004b5e:	f7fe bf98 	b.w	8003a92 <d_print_comp+0x134e>
 8004b62:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004b66:	2bff      	cmp	r3, #255	; 0xff
 8004b68:	d110      	bne.n	8004b8c <d_print_comp+0x2448>
 8004b6a:	f04f 0900 	mov.w	r9, #0
 8004b6e:	4619      	mov	r1, r3
 8004b70:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004b74:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004b78:	4620      	mov	r0, r4
 8004b7a:	4798      	blx	r3
 8004b7c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004b80:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 8004b84:	1c5a      	adds	r2, r3, #1
 8004b86:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004b8a:	464b      	mov	r3, r9
 8004b8c:	2220      	movs	r2, #32
 8004b8e:	1c59      	adds	r1, r3, #1
 8004b90:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004b94:	54e2      	strb	r2, [r4, r3]
 8004b96:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004b9a:	f7fe bf57 	b.w	8003a4c <d_print_comp+0x1308>
 8004b9e:	4f6c      	ldr	r7, [pc, #432]	; (8004d50 <d_print_comp+0x260c>)
 8004ba0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004ba4:	f107 0902 	add.w	r9, r7, #2
 8004ba8:	e00a      	b.n	8004bc0 <d_print_comp+0x247c>
 8004baa:	460b      	mov	r3, r1
 8004bac:	3101      	adds	r1, #1
 8004bae:	45b9      	cmp	r9, r7
 8004bb0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004bb4:	f804 8003 	strb.w	r8, [r4, r3]
 8004bb8:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8004bbc:	f43e af12 	beq.w	80039e4 <d_print_comp+0x12a0>
 8004bc0:	29ff      	cmp	r1, #255	; 0xff
 8004bc2:	f817 8b01 	ldrb.w	r8, [r7], #1
 8004bc6:	d1f0      	bne.n	8004baa <d_print_comp+0x2466>
 8004bc8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004bcc:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8004bd0:	4620      	mov	r0, r4
 8004bd2:	4798      	blx	r3
 8004bd4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004bd8:	3301      	adds	r3, #1
 8004bda:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004bde:	2101      	movs	r1, #1
 8004be0:	2300      	movs	r3, #0
 8004be2:	e7e4      	b.n	8004bae <d_print_comp+0x246a>
 8004be4:	4f5b      	ldr	r7, [pc, #364]	; (8004d54 <d_print_comp+0x2610>)
 8004be6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004bea:	f107 0905 	add.w	r9, r7, #5
 8004bee:	f04f 0a00 	mov.w	sl, #0
 8004bf2:	e00a      	b.n	8004c0a <d_print_comp+0x24c6>
 8004bf4:	460b      	mov	r3, r1
 8004bf6:	3101      	adds	r1, #1
 8004bf8:	45b9      	cmp	r9, r7
 8004bfa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004bfe:	f804 8003 	strb.w	r8, [r4, r3]
 8004c02:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8004c06:	f43e aac3 	beq.w	8003190 <d_print_comp+0xa4c>
 8004c0a:	29ff      	cmp	r1, #255	; 0xff
 8004c0c:	f817 8b01 	ldrb.w	r8, [r7], #1
 8004c10:	d1f0      	bne.n	8004bf4 <d_print_comp+0x24b0>
 8004c12:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004c16:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8004c1a:	4620      	mov	r0, r4
 8004c1c:	4798      	blx	r3
 8004c1e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004c22:	3301      	adds	r3, #1
 8004c24:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004c28:	2101      	movs	r1, #1
 8004c2a:	2300      	movs	r3, #0
 8004c2c:	e7e4      	b.n	8004bf8 <d_print_comp+0x24b4>
 8004c2e:	686b      	ldr	r3, [r5, #4]
 8004c30:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004c34:	9a03      	ldr	r2, [sp, #12]
 8004c36:	3b01      	subs	r3, #1
 8004c38:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004c3c:	f7fd be77 	b.w	800292e <d_print_comp+0x1ea>
 8004c40:	4631      	mov	r1, r6
 8004c42:	68aa      	ldr	r2, [r5, #8]
 8004c44:	4620      	mov	r0, r4
 8004c46:	f7fd fd7d 	bl	8002744 <d_print_comp>
 8004c4a:	686b      	ldr	r3, [r5, #4]
 8004c4c:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004c50:	9a03      	ldr	r2, [sp, #12]
 8004c52:	3b01      	subs	r3, #1
 8004c54:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004c58:	f7fd be69 	b.w	800292e <d_print_comp+0x1ea>
 8004c5c:	460f      	mov	r7, r1
 8004c5e:	46a9      	mov	r9, r5
 8004c60:	f7fe bcf0 	b.w	8003644 <d_print_comp+0xf00>
 8004c64:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004c68:	f8d4 011c 	ldr.w	r0, [r4, #284]	; 0x11c
 8004c6c:	9a03      	ldr	r2, [sp, #12]
 8004c6e:	42b9      	cmp	r1, r7
 8004c70:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8004c74:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8004c78:	f47d ae59 	bne.w	800292e <d_print_comp+0x1ea>
 8004c7c:	3f02      	subs	r7, #2
 8004c7e:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8004c82:	f7fd be54 	b.w	800292e <d_print_comp+0x1ea>
 8004c86:	781b      	ldrb	r3, [r3, #0]
 8004c88:	f1a3 0163 	sub.w	r1, r3, #99	; 0x63
 8004c8c:	2901      	cmp	r1, #1
 8004c8e:	d903      	bls.n	8004c98 <d_print_comp+0x2554>
 8004c90:	3b72      	subs	r3, #114	; 0x72
 8004c92:	2b01      	cmp	r3, #1
 8004c94:	f63d add9 	bhi.w	800284a <d_print_comp+0x106>
 8004c98:	4631      	mov	r1, r6
 8004c9a:	4620      	mov	r0, r4
 8004c9c:	f001 fbb0 	bl	8006400 <d_print_expr_op>
 8004ca0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004ca4:	2bff      	cmp	r3, #255	; 0xff
 8004ca6:	d10f      	bne.n	8004cc8 <d_print_comp+0x2584>
 8004ca8:	2700      	movs	r7, #0
 8004caa:	4619      	mov	r1, r3
 8004cac:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8004cb0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004cb4:	4620      	mov	r0, r4
 8004cb6:	4798      	blx	r3
 8004cb8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004cbc:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8004cc0:	1c5a      	adds	r2, r3, #1
 8004cc2:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004cc6:	463b      	mov	r3, r7
 8004cc8:	1c59      	adds	r1, r3, #1
 8004cca:	223c      	movs	r2, #60	; 0x3c
 8004ccc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004cd0:	54e2      	strb	r2, [r4, r3]
 8004cd2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004cd6:	68eb      	ldr	r3, [r5, #12]
 8004cd8:	4f1f      	ldr	r7, [pc, #124]	; (8004d58 <d_print_comp+0x2614>)
 8004cda:	689a      	ldr	r2, [r3, #8]
 8004cdc:	4631      	mov	r1, r6
 8004cde:	4620      	mov	r0, r4
 8004ce0:	f7fd fd30 	bl	8002744 <d_print_comp>
 8004ce4:	f107 0902 	add.w	r9, r7, #2
 8004ce8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004cec:	f04f 0a00 	mov.w	sl, #0
 8004cf0:	e00a      	b.n	8004d08 <d_print_comp+0x25c4>
 8004cf2:	460b      	mov	r3, r1
 8004cf4:	1c59      	adds	r1, r3, #1
 8004cf6:	45b9      	cmp	r9, r7
 8004cf8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004cfc:	f804 8003 	strb.w	r8, [r4, r3]
 8004d00:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8004d04:	f000 8169 	beq.w	8004fda <d_print_comp+0x2896>
 8004d08:	29ff      	cmp	r1, #255	; 0xff
 8004d0a:	f817 8b01 	ldrb.w	r8, [r7], #1
 8004d0e:	d1f0      	bne.n	8004cf2 <d_print_comp+0x25ae>
 8004d10:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004d14:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8004d18:	4620      	mov	r0, r4
 8004d1a:	4798      	blx	r3
 8004d1c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004d20:	3301      	adds	r3, #1
 8004d22:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004d26:	2300      	movs	r3, #0
 8004d28:	e7e4      	b.n	8004cf4 <d_print_comp+0x25b0>
 8004d2a:	4f0c      	ldr	r7, [pc, #48]	; (8004d5c <d_print_comp+0x2618>)
 8004d2c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004d30:	f107 0a0d 	add.w	sl, r7, #13
 8004d34:	f04f 0b00 	mov.w	fp, #0
 8004d38:	e01c      	b.n	8004d74 <d_print_comp+0x2630>
 8004d3a:	bf00      	nop
 8004d3c:	08012e7c 	.word	0x08012e7c
 8004d40:	08012e80 	.word	0x08012e80
 8004d44:	08012c84 	.word	0x08012c84
 8004d48:	08012e84 	.word	0x08012e84
 8004d4c:	080131a4 	.word	0x080131a4
 8004d50:	08012cd0 	.word	0x08012cd0
 8004d54:	08012e48 	.word	0x08012e48
 8004d58:	08012e88 	.word	0x08012e88
 8004d5c:	08012cd4 	.word	0x08012cd4
 8004d60:	460b      	mov	r3, r1
 8004d62:	3101      	adds	r1, #1
 8004d64:	45ba      	cmp	sl, r7
 8004d66:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004d6a:	f804 9003 	strb.w	r9, [r4, r3]
 8004d6e:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8004d72:	d011      	beq.n	8004d98 <d_print_comp+0x2654>
 8004d74:	29ff      	cmp	r1, #255	; 0xff
 8004d76:	f817 9b01 	ldrb.w	r9, [r7], #1
 8004d7a:	d1f1      	bne.n	8004d60 <d_print_comp+0x261c>
 8004d7c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004d80:	f884 b0ff 	strb.w	fp, [r4, #255]	; 0xff
 8004d84:	4620      	mov	r0, r4
 8004d86:	4798      	blx	r3
 8004d88:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004d8c:	3301      	adds	r3, #1
 8004d8e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004d92:	2101      	movs	r1, #1
 8004d94:	2300      	movs	r3, #0
 8004d96:	e7e5      	b.n	8004d64 <d_print_comp+0x2620>
 8004d98:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8004d9c:	49c6      	ldr	r1, [pc, #792]	; (80050b8 <d_print_comp+0x2974>)
 8004d9e:	3201      	adds	r2, #1
 8004da0:	a806      	add	r0, sp, #24
 8004da2:	f009 fa9f 	bl	800e2e4 <sprintf>
 8004da6:	a806      	add	r0, sp, #24
 8004da8:	f003 f8ca 	bl	8007f40 <strlen>
 8004dac:	b318      	cbz	r0, 8004df6 <d_print_comp+0x26b2>
 8004dae:	af06      	add	r7, sp, #24
 8004db0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004db4:	eb07 0a00 	add.w	sl, r7, r0
 8004db8:	f04f 0b00 	mov.w	fp, #0
 8004dbc:	e009      	b.n	8004dd2 <d_print_comp+0x268e>
 8004dbe:	460b      	mov	r3, r1
 8004dc0:	3101      	adds	r1, #1
 8004dc2:	45ba      	cmp	sl, r7
 8004dc4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004dc8:	f804 9003 	strb.w	r9, [r4, r3]
 8004dcc:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8004dd0:	d011      	beq.n	8004df6 <d_print_comp+0x26b2>
 8004dd2:	29ff      	cmp	r1, #255	; 0xff
 8004dd4:	f817 9b01 	ldrb.w	r9, [r7], #1
 8004dd8:	d1f1      	bne.n	8004dbe <d_print_comp+0x267a>
 8004dda:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004dde:	f884 b0ff 	strb.w	fp, [r4, #255]	; 0xff
 8004de2:	4620      	mov	r0, r4
 8004de4:	4798      	blx	r3
 8004de6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004dea:	3301      	adds	r3, #1
 8004dec:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004df0:	2101      	movs	r1, #1
 8004df2:	2300      	movs	r3, #0
 8004df4:	e7e5      	b.n	8004dc2 <d_print_comp+0x267e>
 8004df6:	4fb1      	ldr	r7, [pc, #708]	; (80050bc <d_print_comp+0x2978>)
 8004df8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004dfc:	f107 0a03 	add.w	sl, r7, #3
 8004e00:	f04f 0b00 	mov.w	fp, #0
 8004e04:	e009      	b.n	8004e1a <d_print_comp+0x26d6>
 8004e06:	460b      	mov	r3, r1
 8004e08:	3101      	adds	r1, #1
 8004e0a:	45ba      	cmp	sl, r7
 8004e0c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004e10:	f804 9003 	strb.w	r9, [r4, r3]
 8004e14:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8004e18:	d011      	beq.n	8004e3e <d_print_comp+0x26fa>
 8004e1a:	29ff      	cmp	r1, #255	; 0xff
 8004e1c:	f817 9b01 	ldrb.w	r9, [r7], #1
 8004e20:	d1f1      	bne.n	8004e06 <d_print_comp+0x26c2>
 8004e22:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004e26:	f884 b0ff 	strb.w	fp, [r4, #255]	; 0xff
 8004e2a:	4620      	mov	r0, r4
 8004e2c:	4798      	blx	r3
 8004e2e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004e32:	3301      	adds	r3, #1
 8004e34:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004e38:	2101      	movs	r1, #1
 8004e3a:	2300      	movs	r3, #0
 8004e3c:	e7e5      	b.n	8004e0a <d_print_comp+0x26c6>
 8004e3e:	f8d8 8008 	ldr.w	r8, [r8, #8]
 8004e42:	f7fe bdd6 	b.w	80039f2 <d_print_comp+0x12ae>
 8004e46:	463a      	mov	r2, r7
 8004e48:	4631      	mov	r1, r6
 8004e4a:	4620      	mov	r0, r4
 8004e4c:	f7fd fc7a 	bl	8002744 <d_print_comp>
 8004e50:	686b      	ldr	r3, [r5, #4]
 8004e52:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004e56:	9a03      	ldr	r2, [sp, #12]
 8004e58:	3b01      	subs	r3, #1
 8004e5a:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004e5e:	f7fd bd66 	b.w	800292e <d_print_comp+0x1ea>
 8004e62:	29ff      	cmp	r1, #255	; 0xff
 8004e64:	f47f ae37 	bne.w	8004ad6 <d_print_comp+0x2392>
 8004e68:	f04f 0800 	mov.w	r8, #0
 8004e6c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004e70:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004e74:	4620      	mov	r0, r4
 8004e76:	4798      	blx	r3
 8004e78:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004e7c:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8004e80:	3301      	adds	r3, #1
 8004e82:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004e86:	e626      	b.n	8004ad6 <d_print_comp+0x2392>
 8004e88:	a906      	add	r1, sp, #24
 8004e8a:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
 8004e8e:	9306      	str	r3, [sp, #24]
 8004e90:	4639      	mov	r1, r7
 8004e92:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8004e96:	9309      	str	r3, [sp, #36]	; 0x24
 8004e98:	4620      	mov	r0, r4
 8004e9a:	e9cd 5607 	strd	r5, r6, [sp, #28]
 8004e9e:	f7fd fc51 	bl	8002744 <d_print_comp>
 8004ea2:	9e08      	ldr	r6, [sp, #32]
 8004ea4:	9b06      	ldr	r3, [sp, #24]
 8004ea6:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8004eaa:	2e00      	cmp	r6, #0
 8004eac:	f040 8344 	bne.w	8005538 <d_print_comp+0x2df4>
 8004eb0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004eb4:	2bff      	cmp	r3, #255	; 0xff
 8004eb6:	d10e      	bne.n	8004ed6 <d_print_comp+0x2792>
 8004eb8:	4619      	mov	r1, r3
 8004eba:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004ebe:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004ec2:	4620      	mov	r0, r4
 8004ec4:	4798      	blx	r3
 8004ec6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004eca:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004ece:	1c5a      	adds	r2, r3, #1
 8004ed0:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004ed4:	4633      	mov	r3, r6
 8004ed6:	2220      	movs	r2, #32
 8004ed8:	1c59      	adds	r1, r3, #1
 8004eda:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004ede:	54e2      	strb	r2, [r4, r3]
 8004ee0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004ee4:	f7fe bc6d 	b.w	80037c2 <d_print_comp+0x107e>
 8004ee8:	f8d8 800c 	ldr.w	r8, [r8, #12]
 8004eec:	f898 3000 	ldrb.w	r3, [r8]
 8004ef0:	2b46      	cmp	r3, #70	; 0x46
 8004ef2:	f000 832a 	beq.w	800554a <d_print_comp+0x2e06>
 8004ef6:	eb09 1c07 	add.w	ip, r9, r7, lsl #4
 8004efa:	f898 3000 	ldrb.w	r3, [r8]
 8004efe:	2b4c      	cmp	r3, #76	; 0x4c
 8004f00:	f1a3 011c 	sub.w	r1, r3, #28
 8004f04:	f1a3 024e 	sub.w	r2, r3, #78	; 0x4e
 8004f08:	d003      	beq.n	8004f12 <d_print_comp+0x27ce>
 8004f0a:	d81b      	bhi.n	8004f44 <d_print_comp+0x2800>
 8004f0c:	2904      	cmp	r1, #4
 8004f0e:	f63e acfb 	bhi.w	8003908 <d_print_comp+0x11c4>
 8004f12:	2f04      	cmp	r7, #4
 8004f14:	f1ac 0b10 	sub.w	fp, ip, #16
 8004f18:	f10c 0a10 	add.w	sl, ip, #16
 8004f1c:	f000 8106 	beq.w	800512c <d_print_comp+0x29e8>
 8004f20:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
 8004f24:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 8004f28:	2300      	movs	r3, #0
 8004f2a:	f84a 8c1c 	str.w	r8, [sl, #-28]
 8004f2e:	f84a 3c18 	str.w	r3, [sl, #-24]
 8004f32:	f8d8 8008 	ldr.w	r8, [r8, #8]
 8004f36:	f8c4 c114 	str.w	ip, [r4, #276]	; 0x114
 8004f3a:	3701      	adds	r7, #1
 8004f3c:	e94a eb05 	strd	lr, fp, [sl, #-20]
 8004f40:	46d4      	mov	ip, sl
 8004f42:	e7da      	b.n	8004efa <d_print_comp+0x27b6>
 8004f44:	2a01      	cmp	r2, #1
 8004f46:	f63e acdf 	bhi.w	8003908 <d_print_comp+0x11c4>
 8004f4a:	e7e2      	b.n	8004f12 <d_print_comp+0x27ce>
 8004f4c:	e9d4 7e4c 	ldrd	r7, lr, [r4, #304]	; 0x130
 8004f50:	f1be 0f00 	cmp.w	lr, #0
 8004f54:	dd0d      	ble.n	8004f72 <d_print_comp+0x282e>
 8004f56:	683b      	ldr	r3, [r7, #0]
 8004f58:	4599      	cmp	r9, r3
 8004f5a:	d105      	bne.n	8004f68 <d_print_comp+0x2824>
 8004f5c:	e1db      	b.n	8005316 <d_print_comp+0x2bd2>
 8004f5e:	f857 3030 	ldr.w	r3, [r7, r0, lsl #3]
 8004f62:	4599      	cmp	r9, r3
 8004f64:	f000 81d6 	beq.w	8005314 <d_print_comp+0x2bd0>
 8004f68:	3001      	adds	r0, #1
 8004f6a:	4586      	cmp	lr, r0
 8004f6c:	eb07 0ac0 	add.w	sl, r7, r0, lsl #3
 8004f70:	d1f5      	bne.n	8004f5e <d_print_comp+0x281a>
 8004f72:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8004f76:	459e      	cmp	lr, r3
 8004f78:	f280 8389 	bge.w	800568e <d_print_comp+0x2f4a>
 8004f7c:	f10e 0301 	add.w	r3, lr, #1
 8004f80:	eb07 00ce 	add.w	r0, r7, lr, lsl #3
 8004f84:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
 8004f88:	f847 903e 	str.w	r9, [r7, lr, lsl #3]
 8004f8c:	f8d4 7110 	ldr.w	r7, [r4, #272]	; 0x110
 8004f90:	3004      	adds	r0, #4
 8004f92:	2f00      	cmp	r7, #0
 8004f94:	f000 8389 	beq.w	80056aa <d_print_comp+0x2f66>
 8004f98:	e9d4 1350 	ldrd	r1, r3, [r4, #320]	; 0x140
 8004f9c:	4299      	cmp	r1, r3
 8004f9e:	f101 0e01 	add.w	lr, r1, #1
 8004fa2:	f280 8374 	bge.w	800568e <d_print_comp+0x2f4a>
 8004fa6:	f8d4 313c 	ldr.w	r3, [r4, #316]	; 0x13c
 8004faa:	f8c4 e140 	str.w	lr, [r4, #320]	; 0x140
 8004fae:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8004fb2:	6879      	ldr	r1, [r7, #4]
 8004fb4:	6059      	str	r1, [r3, #4]
 8004fb6:	6003      	str	r3, [r0, #0]
 8004fb8:	683f      	ldr	r7, [r7, #0]
 8004fba:	4618      	mov	r0, r3
 8004fbc:	e7e9      	b.n	8004f92 <d_print_comp+0x284e>
 8004fbe:	2301      	movs	r3, #1
 8004fc0:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8004fc4:	f7fe b9b2 	b.w	800332c <d_print_comp+0xbe8>
 8004fc8:	686b      	ldr	r3, [r5, #4]
 8004fca:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8004fce:	9a03      	ldr	r2, [sp, #12]
 8004fd0:	3b01      	subs	r3, #1
 8004fd2:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8004fd6:	f7fd bcaa 	b.w	800292e <d_print_comp+0x1ea>
 8004fda:	68eb      	ldr	r3, [r5, #12]
 8004fdc:	4631      	mov	r1, r6
 8004fde:	68da      	ldr	r2, [r3, #12]
 8004fe0:	4620      	mov	r0, r4
 8004fe2:	f7fd fbaf 	bl	8002744 <d_print_comp>
 8004fe6:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004fea:	2bff      	cmp	r3, #255	; 0xff
 8004fec:	d10f      	bne.n	800500e <d_print_comp+0x28ca>
 8004fee:	2600      	movs	r6, #0
 8004ff0:	4619      	mov	r1, r3
 8004ff2:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004ff6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004ffa:	4620      	mov	r0, r4
 8004ffc:	4798      	blx	r3
 8004ffe:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005002:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005006:	1c5a      	adds	r2, r3, #1
 8005008:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 800500c:	4633      	mov	r3, r6
 800500e:	1c59      	adds	r1, r3, #1
 8005010:	2229      	movs	r2, #41	; 0x29
 8005012:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005016:	54e2      	strb	r2, [r4, r3]
 8005018:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800501c:	686b      	ldr	r3, [r5, #4]
 800501e:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8005022:	9a03      	ldr	r2, [sp, #12]
 8005024:	3b01      	subs	r3, #1
 8005026:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800502a:	f7fd bc80 	b.w	800292e <d_print_comp+0x1ea>
 800502e:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
 8005032:	2900      	cmp	r1, #0
 8005034:	f6ff aa7f 	blt.w	8004536 <d_print_comp+0x1df2>
 8005038:	f7fb fc62 	bl	8000900 <d_index_template_argument.part.8>
 800503c:	4602      	mov	r2, r0
 800503e:	2800      	cmp	r0, #0
 8005040:	f47f aa79 	bne.w	8004536 <d_print_comp+0x1df2>
 8005044:	2301      	movs	r3, #1
 8005046:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 800504a:	686b      	ldr	r3, [r5, #4]
 800504c:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8005050:	9a03      	ldr	r2, [sp, #12]
 8005052:	3b01      	subs	r3, #1
 8005054:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8005058:	f7fd bc69 	b.w	800292e <d_print_comp+0x1ea>
 800505c:	2905      	cmp	r1, #5
 800505e:	f200 82e1 	bhi.w	8005624 <d_print_comp+0x2ee0>
 8005062:	3b57      	subs	r3, #87	; 0x57
 8005064:	f7ff bab4 	b.w	80045d0 <d_print_comp+0x1e8c>
 8005068:	4606      	mov	r6, r0
 800506a:	e001      	b.n	8005070 <d_print_comp+0x292c>
 800506c:	68ff      	ldr	r7, [r7, #12]
 800506e:	b33f      	cbz	r7, 80050c0 <d_print_comp+0x297c>
 8005070:	783b      	ldrb	r3, [r7, #0]
 8005072:	2b2f      	cmp	r3, #47	; 0x2f
 8005074:	d124      	bne.n	80050c0 <d_print_comp+0x297c>
 8005076:	68bb      	ldr	r3, [r7, #8]
 8005078:	b313      	cbz	r3, 80050c0 <d_print_comp+0x297c>
 800507a:	781a      	ldrb	r2, [r3, #0]
 800507c:	2a4a      	cmp	r2, #74	; 0x4a
 800507e:	bf18      	it	ne
 8005080:	3601      	addne	r6, #1
 8005082:	d1f3      	bne.n	800506c <d_print_comp+0x2928>
 8005084:	6899      	ldr	r1, [r3, #8]
 8005086:	4620      	mov	r0, r4
 8005088:	f7fb fc60 	bl	800094c <d_find_pack>
 800508c:	2800      	cmp	r0, #0
 800508e:	f000 82c6 	beq.w	800561e <d_print_comp+0x2eda>
 8005092:	7803      	ldrb	r3, [r0, #0]
 8005094:	2b2f      	cmp	r3, #47	; 0x2f
 8005096:	f040 82c2 	bne.w	800561e <d_print_comp+0x2eda>
 800509a:	6883      	ldr	r3, [r0, #8]
 800509c:	b153      	cbz	r3, 80050b4 <d_print_comp+0x2970>
 800509e:	2300      	movs	r3, #0
 80050a0:	e004      	b.n	80050ac <d_print_comp+0x2968>
 80050a2:	7802      	ldrb	r2, [r0, #0]
 80050a4:	2a2f      	cmp	r2, #47	; 0x2f
 80050a6:	d105      	bne.n	80050b4 <d_print_comp+0x2970>
 80050a8:	6882      	ldr	r2, [r0, #8]
 80050aa:	b11a      	cbz	r2, 80050b4 <d_print_comp+0x2970>
 80050ac:	68c0      	ldr	r0, [r0, #12]
 80050ae:	3301      	adds	r3, #1
 80050b0:	2800      	cmp	r0, #0
 80050b2:	d1f6      	bne.n	80050a2 <d_print_comp+0x295e>
 80050b4:	441e      	add	r6, r3
 80050b6:	e7d9      	b.n	800506c <d_print_comp+0x2928>
 80050b8:	08012ce4 	.word	0x08012ce4
 80050bc:	08012ce8 	.word	0x08012ce8
 80050c0:	4632      	mov	r2, r6
 80050c2:	a806      	add	r0, sp, #24
 80050c4:	49cf      	ldr	r1, [pc, #828]	; (8005404 <d_print_comp+0x2cc0>)
 80050c6:	f009 f90d 	bl	800e2e4 <sprintf>
 80050ca:	a806      	add	r0, sp, #24
 80050cc:	f002 ff38 	bl	8007f40 <strlen>
 80050d0:	b308      	cbz	r0, 8005116 <d_print_comp+0x29d2>
 80050d2:	ae06      	add	r6, sp, #24
 80050d4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80050d8:	1837      	adds	r7, r6, r0
 80050da:	f04f 0900 	mov.w	r9, #0
 80050de:	e009      	b.n	80050f4 <d_print_comp+0x29b0>
 80050e0:	460b      	mov	r3, r1
 80050e2:	1c59      	adds	r1, r3, #1
 80050e4:	42b7      	cmp	r7, r6
 80050e6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80050ea:	f804 8003 	strb.w	r8, [r4, r3]
 80050ee:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80050f2:	d010      	beq.n	8005116 <d_print_comp+0x29d2>
 80050f4:	29ff      	cmp	r1, #255	; 0xff
 80050f6:	f816 8b01 	ldrb.w	r8, [r6], #1
 80050fa:	d1f1      	bne.n	80050e0 <d_print_comp+0x299c>
 80050fc:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005100:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005104:	4620      	mov	r0, r4
 8005106:	4798      	blx	r3
 8005108:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800510c:	3301      	adds	r3, #1
 800510e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005112:	2300      	movs	r3, #0
 8005114:	e7e5      	b.n	80050e2 <d_print_comp+0x299e>
 8005116:	686b      	ldr	r3, [r5, #4]
 8005118:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800511c:	9a03      	ldr	r2, [sp, #12]
 800511e:	3b01      	subs	r3, #1
 8005120:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8005124:	f7fd bc03 	b.w	800292e <d_print_comp+0x1ea>
 8005128:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 800512c:	2301      	movs	r3, #1
 800512e:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8005132:	f7fe bc2a 	b.w	800398a <d_print_comp+0x1246>
 8005136:	f105 030c 	add.w	r3, r5, #12
 800513a:	68aa      	ldr	r2, [r5, #8]
 800513c:	4631      	mov	r1, r6
 800513e:	4620      	mov	r0, r4
 8005140:	f001 f9e8 	bl	8006514 <d_maybe_print_fold_expression.isra.19>
 8005144:	4607      	mov	r7, r0
 8005146:	2800      	cmp	r0, #0
 8005148:	f040 8243 	bne.w	80055d2 <d_print_comp+0x2e8e>
 800514c:	e9d5 a202 	ldrd	sl, r2, [r5, #8]
 8005150:	f8da 1008 	ldr.w	r1, [sl, #8]
 8005154:	68d3      	ldr	r3, [r2, #12]
 8005156:	6808      	ldr	r0, [r1, #0]
 8005158:	49ab      	ldr	r1, [pc, #684]	; (8005408 <d_print_comp+0x2cc4>)
 800515a:	f8d2 b008 	ldr.w	fp, [r2, #8]
 800515e:	e9d3 9802 	ldrd	r9, r8, [r3, #8]
 8005162:	f002 fd81 	bl	8007c68 <strcmp>
 8005166:	2800      	cmp	r0, #0
 8005168:	f040 81f6 	bne.w	8005558 <d_print_comp+0x2e14>
 800516c:	465a      	mov	r2, fp
 800516e:	4631      	mov	r1, r6
 8005170:	4620      	mov	r0, r4
 8005172:	f001 f981 	bl	8006478 <d_print_subexpr>
 8005176:	4652      	mov	r2, sl
 8005178:	4631      	mov	r1, r6
 800517a:	4620      	mov	r0, r4
 800517c:	f001 f940 	bl	8006400 <d_print_expr_op>
 8005180:	464a      	mov	r2, r9
 8005182:	4631      	mov	r1, r6
 8005184:	4620      	mov	r0, r4
 8005186:	f001 f977 	bl	8006478 <d_print_subexpr>
 800518a:	2203      	movs	r2, #3
 800518c:	499f      	ldr	r1, [pc, #636]	; (800540c <d_print_comp+0x2cc8>)
 800518e:	4620      	mov	r0, r4
 8005190:	f7fb f96e 	bl	8000470 <d_append_buffer>
 8005194:	4642      	mov	r2, r8
 8005196:	4631      	mov	r1, r6
 8005198:	4620      	mov	r0, r4
 800519a:	f001 f96d 	bl	8006478 <d_print_subexpr>
 800519e:	686b      	ldr	r3, [r5, #4]
 80051a0:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80051a4:	9a03      	ldr	r2, [sp, #12]
 80051a6:	3b01      	subs	r3, #1
 80051a8:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80051ac:	f7fd bbbf 	b.w	800292e <d_print_comp+0x1ea>
 80051b0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80051b4:	f7fe ba56 	b.w	8003664 <d_print_comp+0xf20>
 80051b8:	4995      	ldr	r1, [pc, #596]	; (8005410 <d_print_comp+0x2ccc>)
 80051ba:	f8d9 0008 	ldr.w	r0, [r9, #8]
 80051be:	f009 f8b3 	bl	800e328 <strncmp>
 80051c2:	2800      	cmp	r0, #0
 80051c4:	f47e ac38 	bne.w	8003a38 <d_print_comp+0x12f4>
 80051c8:	4631      	mov	r1, r6
 80051ca:	68ea      	ldr	r2, [r5, #12]
 80051cc:	4620      	mov	r0, r4
 80051ce:	f7fd fab9 	bl	8002744 <d_print_comp>
 80051d2:	2202      	movs	r2, #2
 80051d4:	498f      	ldr	r1, [pc, #572]	; (8005414 <d_print_comp+0x2cd0>)
 80051d6:	4620      	mov	r0, r4
 80051d8:	f7fb f94a 	bl	8000470 <d_append_buffer>
 80051dc:	f7fe bc71 	b.w	8003ac2 <d_print_comp+0x137e>
 80051e0:	4640      	mov	r0, r8
 80051e2:	498d      	ldr	r1, [pc, #564]	; (8005418 <d_print_comp+0x2cd4>)
 80051e4:	f002 fd40 	bl	8007c68 <strcmp>
 80051e8:	2800      	cmp	r0, #0
 80051ea:	f040 8204 	bne.w	80055f6 <d_print_comp+0x2eb2>
 80051ee:	68eb      	ldr	r3, [r5, #12]
 80051f0:	4631      	mov	r1, r6
 80051f2:	68da      	ldr	r2, [r3, #12]
 80051f4:	4620      	mov	r0, r4
 80051f6:	f001 f93f 	bl	8006478 <d_print_subexpr>
 80051fa:	f7fd bb8c 	b.w	8002916 <d_print_comp+0x1d2>
 80051fe:	68eb      	ldr	r3, [r5, #12]
 8005200:	f893 8000 	ldrb.w	r8, [r3]
 8005204:	f1b8 0f00 	cmp.w	r8, #0
 8005208:	f47d adea 	bne.w	8002de0 <d_print_comp+0x69c>
 800520c:	283d      	cmp	r0, #61	; 0x3d
 800520e:	f000 82b2 	beq.w	8005776 <d_print_comp+0x3032>
 8005212:	4631      	mov	r1, r6
 8005214:	68ea      	ldr	r2, [r5, #12]
 8005216:	4620      	mov	r0, r4
 8005218:	3f02      	subs	r7, #2
 800521a:	f7fd fa93 	bl	8002744 <d_print_comp>
 800521e:	2f04      	cmp	r7, #4
 8005220:	f200 82c4 	bhi.w	80057ac <d_print_comp+0x3068>
 8005224:	e8df f017 	tbh	[pc, r7, lsl #1]
 8005228:	025f0283 	.word	0x025f0283
 800522c:	02430251 	.word	0x02430251
 8005230:	0225      	.short	0x0225
 8005232:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005236:	2bff      	cmp	r3, #255	; 0xff
 8005238:	d10f      	bne.n	800525a <d_print_comp+0x2b16>
 800523a:	2600      	movs	r6, #0
 800523c:	4619      	mov	r1, r3
 800523e:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8005242:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005246:	4620      	mov	r0, r4
 8005248:	4798      	blx	r3
 800524a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800524e:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005252:	1c5a      	adds	r2, r3, #1
 8005254:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005258:	4633      	mov	r3, r6
 800525a:	2220      	movs	r2, #32
 800525c:	1c59      	adds	r1, r3, #1
 800525e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005262:	54e2      	strb	r2, [r4, r3]
 8005264:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005268:	f7ff bb88 	b.w	800497c <d_print_comp+0x2238>
 800526c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005270:	2bff      	cmp	r3, #255	; 0xff
 8005272:	d10f      	bne.n	8005294 <d_print_comp+0x2b50>
 8005274:	2700      	movs	r7, #0
 8005276:	4619      	mov	r1, r3
 8005278:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 800527c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005280:	4620      	mov	r0, r4
 8005282:	4798      	blx	r3
 8005284:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005288:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 800528c:	1c5a      	adds	r2, r3, #1
 800528e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005292:	463b      	mov	r3, r7
 8005294:	2220      	movs	r2, #32
 8005296:	1c59      	adds	r1, r3, #1
 8005298:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800529c:	54e2      	strb	r2, [r4, r3]
 800529e:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80052a2:	f7ff bb45 	b.w	8004930 <d_print_comp+0x21ec>
 80052a6:	689b      	ldr	r3, [r3, #8]
 80052a8:	689a      	ldr	r2, [r3, #8]
 80052aa:	2a01      	cmp	r2, #1
 80052ac:	f47d ab38 	bne.w	8002920 <d_print_comp+0x1dc>
 80052b0:	685b      	ldr	r3, [r3, #4]
 80052b2:	781b      	ldrb	r3, [r3, #0]
 80052b4:	2b3e      	cmp	r3, #62	; 0x3e
 80052b6:	f47d ab33 	bne.w	8002920 <d_print_comp+0x1dc>
 80052ba:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80052be:	2bff      	cmp	r3, #255	; 0xff
 80052c0:	d10f      	bne.n	80052e2 <d_print_comp+0x2b9e>
 80052c2:	2600      	movs	r6, #0
 80052c4:	4619      	mov	r1, r3
 80052c6:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80052ca:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80052ce:	4620      	mov	r0, r4
 80052d0:	4798      	blx	r3
 80052d2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80052d6:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80052da:	1c5a      	adds	r2, r3, #1
 80052dc:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80052e0:	4633      	mov	r3, r6
 80052e2:	1c59      	adds	r1, r3, #1
 80052e4:	2229      	movs	r2, #41	; 0x29
 80052e6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80052ea:	54e2      	strb	r2, [r4, r3]
 80052ec:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80052f0:	686b      	ldr	r3, [r5, #4]
 80052f2:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80052f6:	9a03      	ldr	r2, [sp, #12]
 80052f8:	3b01      	subs	r3, #1
 80052fa:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80052fe:	f7fd bb16 	b.w	800292e <d_print_comp+0x1ea>
 8005302:	686b      	ldr	r3, [r5, #4]
 8005304:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8005308:	9a03      	ldr	r2, [sp, #12]
 800530a:	3b01      	subs	r3, #1
 800530c:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8005310:	f7fd bb0d 	b.w	800292e <d_print_comp+0x1ea>
 8005314:	4657      	mov	r7, sl
 8005316:	460b      	mov	r3, r1
 8005318:	e002      	b.n	8005320 <d_print_comp+0x2bdc>
 800531a:	685b      	ldr	r3, [r3, #4]
 800531c:	2b00      	cmp	r3, #0
 800531e:	d07f      	beq.n	8005420 <d_print_comp+0x2cdc>
 8005320:	681a      	ldr	r2, [r3, #0]
 8005322:	4591      	cmp	r9, r2
 8005324:	d003      	beq.n	800532e <d_print_comp+0x2bea>
 8005326:	4295      	cmp	r5, r2
 8005328:	d1f7      	bne.n	800531a <d_print_comp+0x2bd6>
 800532a:	428b      	cmp	r3, r1
 800532c:	d0f5      	beq.n	800531a <d_print_comp+0x2bd6>
 800532e:	f109 0108 	add.w	r1, r9, #8
 8005332:	4620      	mov	r0, r4
 8005334:	f7fb fafa 	bl	800092c <d_lookup_template_argument.isra.9>
 8005338:	4681      	mov	r9, r0
 800533a:	b1a0      	cbz	r0, 8005366 <d_print_comp+0x2c22>
 800533c:	2700      	movs	r7, #0
 800533e:	f899 3000 	ldrb.w	r3, [r9]
 8005342:	2b2f      	cmp	r3, #47	; 0x2f
 8005344:	f47e a96f 	bne.w	8003626 <d_print_comp+0xee2>
 8005348:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
 800534c:	2900      	cmp	r1, #0
 800534e:	f6ff a8b3 	blt.w	80044b8 <d_print_comp+0x1d74>
 8005352:	4648      	mov	r0, r9
 8005354:	f7fb fad4 	bl	8000900 <d_index_template_argument.part.8>
 8005358:	4681      	mov	r9, r0
 800535a:	2800      	cmp	r0, #0
 800535c:	f47e a963 	bne.w	8003626 <d_print_comp+0xee2>
 8005360:	b10f      	cbz	r7, 8005366 <d_print_comp+0x2c22>
 8005362:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
 8005366:	2301      	movs	r3, #1
 8005368:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 800536c:	686b      	ldr	r3, [r5, #4]
 800536e:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8005372:	9a03      	ldr	r2, [sp, #12]
 8005374:	3b01      	subs	r3, #1
 8005376:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800537a:	f7fd bad8 	b.w	800292e <d_print_comp+0x1ea>
 800537e:	689a      	ldr	r2, [r3, #8]
 8005380:	6891      	ldr	r1, [r2, #8]
 8005382:	2901      	cmp	r1, #1
 8005384:	f47d aa70 	bne.w	8002868 <d_print_comp+0x124>
 8005388:	6852      	ldr	r2, [r2, #4]
 800538a:	7812      	ldrb	r2, [r2, #0]
 800538c:	2a3e      	cmp	r2, #62	; 0x3e
 800538e:	f47d aa6b 	bne.w	8002868 <d_print_comp+0x124>
 8005392:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005396:	2bff      	cmp	r3, #255	; 0xff
 8005398:	d10e      	bne.n	80053b8 <d_print_comp+0x2c74>
 800539a:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 800539e:	4619      	mov	r1, r3
 80053a0:	4620      	mov	r0, r4
 80053a2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80053a6:	4798      	blx	r3
 80053a8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80053ac:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 80053b0:	1c5a      	adds	r2, r3, #1
 80053b2:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80053b6:	463b      	mov	r3, r7
 80053b8:	1c59      	adds	r1, r3, #1
 80053ba:	2228      	movs	r2, #40	; 0x28
 80053bc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80053c0:	54e2      	strb	r2, [r4, r3]
 80053c2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80053c6:	68ab      	ldr	r3, [r5, #8]
 80053c8:	f7fd ba4e 	b.w	8002868 <d_print_comp+0x124>
 80053cc:	4631      	mov	r1, r6
 80053ce:	68aa      	ldr	r2, [r5, #8]
 80053d0:	4620      	mov	r0, r4
 80053d2:	f001 f851 	bl	8006478 <d_print_subexpr>
 80053d6:	2203      	movs	r2, #3
 80053d8:	4910      	ldr	r1, [pc, #64]	; (800541c <d_print_comp+0x2cd8>)
 80053da:	4620      	mov	r0, r4
 80053dc:	f7fb f848 	bl	8000470 <d_append_buffer>
 80053e0:	686b      	ldr	r3, [r5, #4]
 80053e2:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80053e6:	9a03      	ldr	r2, [sp, #12]
 80053e8:	3b01      	subs	r3, #1
 80053ea:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80053ee:	f7fd ba9e 	b.w	800292e <d_print_comp+0x1ea>
 80053f2:	686b      	ldr	r3, [r5, #4]
 80053f4:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80053f8:	9a03      	ldr	r2, [sp, #12]
 80053fa:	3b01      	subs	r3, #1
 80053fc:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8005400:	f7fd ba95 	b.w	800292e <d_print_comp+0x1ea>
 8005404:	08012ce4 	.word	0x08012ce4
 8005408:	08012c94 	.word	0x08012c94
 800540c:	08012e90 	.word	0x08012e90
 8005410:	08012cec 	.word	0x08012cec
 8005414:	08012cf4 	.word	0x08012cf4
 8005418:	08012c88 	.word	0x08012c88
 800541c:	08012ed4 	.word	0x08012ed4
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	f8d4 8110 	ldr.w	r8, [r4, #272]	; 0x110
 8005426:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800542a:	f109 0108 	add.w	r1, r9, #8
 800542e:	4620      	mov	r0, r4
 8005430:	f7fb fa7c 	bl	800092c <d_lookup_template_argument.isra.9>
 8005434:	4681      	mov	r9, r0
 8005436:	2800      	cmp	r0, #0
 8005438:	d093      	beq.n	8005362 <d_print_comp+0x2c1e>
 800543a:	2701      	movs	r7, #1
 800543c:	e77f      	b.n	800533e <d_print_comp+0x2bfa>
 800543e:	68d3      	ldr	r3, [r2, #12]
 8005440:	781b      	ldrb	r3, [r3, #0]
 8005442:	2b29      	cmp	r3, #41	; 0x29
 8005444:	bf1c      	itt	ne
 8005446:	2301      	movne	r3, #1
 8005448:	f8c4 3118 	strne.w	r3, [r4, #280]	; 0x118
 800544c:	6892      	ldr	r2, [r2, #8]
 800544e:	4631      	mov	r1, r6
 8005450:	4620      	mov	r0, r4
 8005452:	f001 f811 	bl	8006478 <d_print_subexpr>
 8005456:	f7fd ba17 	b.w	8002888 <d_print_comp+0x144>
 800545a:	4639      	mov	r1, r7
 800545c:	4620      	mov	r0, r4
 800545e:	f7fb fa75 	bl	800094c <d_find_pack>
 8005462:	b930      	cbnz	r0, 8005472 <d_print_comp+0x2d2e>
 8005464:	e008      	b.n	8005478 <d_print_comp+0x2d34>
 8005466:	6883      	ldr	r3, [r0, #8]
 8005468:	b133      	cbz	r3, 8005478 <d_print_comp+0x2d34>
 800546a:	68c0      	ldr	r0, [r0, #12]
 800546c:	f10a 0a01 	add.w	sl, sl, #1
 8005470:	b110      	cbz	r0, 8005478 <d_print_comp+0x2d34>
 8005472:	7803      	ldrb	r3, [r0, #0]
 8005474:	2b2f      	cmp	r3, #47	; 0x2f
 8005476:	d0f6      	beq.n	8005466 <d_print_comp+0x2d22>
 8005478:	4652      	mov	r2, sl
 800547a:	a806      	add	r0, sp, #24
 800547c:	49d0      	ldr	r1, [pc, #832]	; (80057c0 <d_print_comp+0x307c>)
 800547e:	f008 ff31 	bl	800e2e4 <sprintf>
 8005482:	a806      	add	r0, sp, #24
 8005484:	f002 fd5c 	bl	8007f40 <strlen>
 8005488:	b300      	cbz	r0, 80054cc <d_print_comp+0x2d88>
 800548a:	ae06      	add	r6, sp, #24
 800548c:	1837      	adds	r7, r6, r0
 800548e:	f04f 0800 	mov.w	r8, #0
 8005492:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005496:	f816 9b01 	ldrb.w	r9, [r6], #1
 800549a:	29ff      	cmp	r1, #255	; 0xff
 800549c:	d10d      	bne.n	80054ba <d_print_comp+0x2d76>
 800549e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80054a2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80054a6:	4620      	mov	r0, r4
 80054a8:	4798      	blx	r3
 80054aa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80054ae:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 80054b2:	3301      	adds	r3, #1
 80054b4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80054b8:	2100      	movs	r1, #0
 80054ba:	1c4b      	adds	r3, r1, #1
 80054bc:	42b7      	cmp	r7, r6
 80054be:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80054c2:	f804 9001 	strb.w	r9, [r4, r1]
 80054c6:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80054ca:	d1e2      	bne.n	8005492 <d_print_comp+0x2d4e>
 80054cc:	686b      	ldr	r3, [r5, #4]
 80054ce:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80054d2:	9a03      	ldr	r2, [sp, #12]
 80054d4:	3b01      	subs	r3, #1
 80054d6:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80054da:	f7fd ba28 	b.w	800292e <d_print_comp+0x1ea>
 80054de:	68ba      	ldr	r2, [r7, #8]
 80054e0:	4631      	mov	r1, r6
 80054e2:	4620      	mov	r0, r4
 80054e4:	f000 ffc8 	bl	8006478 <d_print_subexpr>
 80054e8:	4642      	mov	r2, r8
 80054ea:	4631      	mov	r1, r6
 80054ec:	4620      	mov	r0, r4
 80054ee:	f000 ff87 	bl	8006400 <d_print_expr_op>
 80054f2:	686b      	ldr	r3, [r5, #4]
 80054f4:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80054f8:	9a03      	ldr	r2, [sp, #12]
 80054fa:	3b01      	subs	r3, #1
 80054fc:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8005500:	f7fd ba15 	b.w	800292e <d_print_comp+0x1ea>
 8005504:	68bb      	ldr	r3, [r7, #8]
 8005506:	781a      	ldrb	r2, [r3, #0]
 8005508:	2a01      	cmp	r2, #1
 800550a:	f47f aa64 	bne.w	80049d6 <d_print_comp+0x2292>
 800550e:	68fa      	ldr	r2, [r7, #12]
 8005510:	7812      	ldrb	r2, [r2, #0]
 8005512:	2a29      	cmp	r2, #41	; 0x29
 8005514:	bf08      	it	eq
 8005516:	461f      	moveq	r7, r3
 8005518:	f7ff ba5d 	b.w	80049d6 <d_print_comp+0x2292>
 800551c:	68ea      	ldr	r2, [r5, #12]
 800551e:	4631      	mov	r1, r6
 8005520:	4620      	mov	r0, r4
 8005522:	f7fd f90f 	bl	8002744 <d_print_comp>
 8005526:	9b08      	ldr	r3, [sp, #32]
 8005528:	9a00      	ldr	r2, [sp, #0]
 800552a:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 800552e:	2b00      	cmp	r3, #0
 8005530:	f43d aef4 	beq.w	800331c <d_print_comp+0xbd8>
 8005534:	f7fd befa 	b.w	800332c <d_print_comp+0xbe8>
 8005538:	686b      	ldr	r3, [r5, #4]
 800553a:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800553e:	9a03      	ldr	r2, [sp, #12]
 8005540:	3b01      	subs	r3, #1
 8005542:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8005546:	f7fd b9f2 	b.w	800292e <d_print_comp+0x1ea>
 800554a:	f8d8 8008 	ldr.w	r8, [r8, #8]
 800554e:	f1b8 0f00 	cmp.w	r8, #0
 8005552:	f43f adeb 	beq.w	800512c <d_print_comp+0x29e8>
 8005556:	e4ce      	b.n	8004ef6 <d_print_comp+0x27b2>
 8005558:	2204      	movs	r2, #4
 800555a:	499a      	ldr	r1, [pc, #616]	; (80057c4 <d_print_comp+0x3080>)
 800555c:	4620      	mov	r0, r4
 800555e:	f7fa ff87 	bl	8000470 <d_append_buffer>
 8005562:	f8db 3008 	ldr.w	r3, [fp, #8]
 8005566:	b1f3      	cbz	r3, 80055a6 <d_print_comp+0x2e62>
 8005568:	465a      	mov	r2, fp
 800556a:	4631      	mov	r1, r6
 800556c:	4620      	mov	r0, r4
 800556e:	f000 ff83 	bl	8006478 <d_print_subexpr>
 8005572:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005576:	2bff      	cmp	r3, #255	; 0xff
 8005578:	d10e      	bne.n	8005598 <d_print_comp+0x2e54>
 800557a:	4619      	mov	r1, r3
 800557c:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005580:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005584:	4620      	mov	r0, r4
 8005586:	4798      	blx	r3
 8005588:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800558c:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8005590:	1c5a      	adds	r2, r3, #1
 8005592:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005596:	463b      	mov	r3, r7
 8005598:	2220      	movs	r2, #32
 800559a:	1c59      	adds	r1, r3, #1
 800559c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80055a0:	54e2      	strb	r2, [r4, r3]
 80055a2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80055a6:	464a      	mov	r2, r9
 80055a8:	4631      	mov	r1, r6
 80055aa:	4620      	mov	r0, r4
 80055ac:	f7fd f8ca 	bl	8002744 <d_print_comp>
 80055b0:	f1b8 0f00 	cmp.w	r8, #0
 80055b4:	d016      	beq.n	80055e4 <d_print_comp+0x2ea0>
 80055b6:	4642      	mov	r2, r8
 80055b8:	4631      	mov	r1, r6
 80055ba:	4620      	mov	r0, r4
 80055bc:	f000 ff5c 	bl	8006478 <d_print_subexpr>
 80055c0:	686b      	ldr	r3, [r5, #4]
 80055c2:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80055c6:	9a03      	ldr	r2, [sp, #12]
 80055c8:	3b01      	subs	r3, #1
 80055ca:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80055ce:	f7fd b9ae 	b.w	800292e <d_print_comp+0x1ea>
 80055d2:	686b      	ldr	r3, [r5, #4]
 80055d4:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80055d8:	9a03      	ldr	r2, [sp, #12]
 80055da:	3b01      	subs	r3, #1
 80055dc:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80055e0:	f7fd b9a5 	b.w	800292e <d_print_comp+0x1ea>
 80055e4:	686b      	ldr	r3, [r5, #4]
 80055e6:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80055ea:	9a03      	ldr	r2, [sp, #12]
 80055ec:	3b01      	subs	r3, #1
 80055ee:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80055f2:	f7fd b99c 	b.w	800292e <d_print_comp+0x1ea>
 80055f6:	463a      	mov	r2, r7
 80055f8:	4631      	mov	r1, r6
 80055fa:	4620      	mov	r0, r4
 80055fc:	f000 ff00 	bl	8006400 <d_print_expr_op>
 8005600:	e5f5      	b.n	80051ee <d_print_comp+0x2aaa>
 8005602:	2205      	movs	r2, #5
 8005604:	4970      	ldr	r1, [pc, #448]	; (80057c8 <d_print_comp+0x3084>)
 8005606:	4620      	mov	r0, r4
 8005608:	f7fa ff32 	bl	8000470 <d_append_buffer>
 800560c:	686b      	ldr	r3, [r5, #4]
 800560e:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8005612:	9a03      	ldr	r2, [sp, #12]
 8005614:	3b01      	subs	r3, #1
 8005616:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800561a:	f7fd b988 	b.w	800292e <d_print_comp+0x1ea>
 800561e:	2300      	movs	r3, #0
 8005620:	441e      	add	r6, r3
 8005622:	e523      	b.n	800506c <d_print_comp+0x2928>
 8005624:	4556      	cmp	r6, sl
 8005626:	f67e afb5 	bls.w	8004594 <d_print_comp+0x1e50>
 800562a:	2b5f      	cmp	r3, #95	; 0x5f
 800562c:	f47e afb2 	bne.w	8004594 <d_print_comp+0x1e50>
 8005630:	28ff      	cmp	r0, #255	; 0xff
 8005632:	f63e afaf 	bhi.w	8004594 <d_print_comp+0x1e50>
 8005636:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800563a:	29ff      	cmp	r1, #255	; 0xff
 800563c:	fa5f f980 	uxtb.w	r9, r0
 8005640:	d10d      	bne.n	800565e <d_print_comp+0x2f1a>
 8005642:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005646:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800564a:	4620      	mov	r0, r4
 800564c:	4798      	blx	r3
 800564e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005652:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8005656:	3301      	adds	r3, #1
 8005658:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800565c:	2100      	movs	r1, #0
 800565e:	1c4b      	adds	r3, r1, #1
 8005660:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005664:	4657      	mov	r7, sl
 8005666:	f804 9001 	strb.w	r9, [r4, r1]
 800566a:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 800566e:	f7fe bf85 	b.w	800457c <d_print_comp+0x1e38>
 8005672:	2203      	movs	r2, #3
 8005674:	4955      	ldr	r1, [pc, #340]	; (80057cc <d_print_comp+0x3088>)
 8005676:	4620      	mov	r0, r4
 8005678:	f7fa fefa 	bl	8000470 <d_append_buffer>
 800567c:	686b      	ldr	r3, [r5, #4]
 800567e:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8005682:	9a03      	ldr	r2, [sp, #12]
 8005684:	3b01      	subs	r3, #1
 8005686:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800568a:	f7fd b950 	b.w	800292e <d_print_comp+0x1ea>
 800568e:	2301      	movs	r3, #1
 8005690:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8005694:	686b      	ldr	r3, [r5, #4]
 8005696:	3b01      	subs	r3, #1
 8005698:	f7fd b949 	b.w	800292e <d_print_comp+0x1ea>
 800569c:	4642      	mov	r2, r8
 800569e:	4631      	mov	r1, r6
 80056a0:	4620      	mov	r0, r4
 80056a2:	f000 fead 	bl	8006400 <d_print_expr_op>
 80056a6:	f7fd bc4a 	b.w	8002f3e <d_print_comp+0x7fa>
 80056aa:	6007      	str	r7, [r0, #0]
 80056ac:	e63f      	b.n	800532e <d_print_comp+0x2bea>
 80056ae:	2202      	movs	r2, #2
 80056b0:	4947      	ldr	r1, [pc, #284]	; (80057d0 <d_print_comp+0x308c>)
 80056b2:	4620      	mov	r0, r4
 80056b4:	f7fa fedc 	bl	8000470 <d_append_buffer>
 80056b8:	686b      	ldr	r3, [r5, #4]
 80056ba:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80056be:	9a03      	ldr	r2, [sp, #12]
 80056c0:	3b01      	subs	r3, #1
 80056c2:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80056c6:	f7fd b932 	b.w	800292e <d_print_comp+0x1ea>
 80056ca:	2202      	movs	r2, #2
 80056cc:	4941      	ldr	r1, [pc, #260]	; (80057d4 <d_print_comp+0x3090>)
 80056ce:	4620      	mov	r0, r4
 80056d0:	f7fa fece 	bl	8000470 <d_append_buffer>
 80056d4:	686b      	ldr	r3, [r5, #4]
 80056d6:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80056da:	9a03      	ldr	r2, [sp, #12]
 80056dc:	3b01      	subs	r3, #1
 80056de:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80056e2:	f7fd b924 	b.w	800292e <d_print_comp+0x1ea>
 80056e6:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80056ea:	2bff      	cmp	r3, #255	; 0xff
 80056ec:	d10f      	bne.n	800570e <d_print_comp+0x2fca>
 80056ee:	2600      	movs	r6, #0
 80056f0:	4619      	mov	r1, r3
 80056f2:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80056f6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80056fa:	4620      	mov	r0, r4
 80056fc:	4798      	blx	r3
 80056fe:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005702:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005706:	1c5a      	adds	r2, r3, #1
 8005708:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 800570c:	4633      	mov	r3, r6
 800570e:	1c59      	adds	r1, r3, #1
 8005710:	226c      	movs	r2, #108	; 0x6c
 8005712:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005716:	54e2      	strb	r2, [r4, r3]
 8005718:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800571c:	686b      	ldr	r3, [r5, #4]
 800571e:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 8005722:	9a03      	ldr	r2, [sp, #12]
 8005724:	3b01      	subs	r3, #1
 8005726:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 800572a:	f7fd b900 	b.w	800292e <d_print_comp+0x1ea>
 800572e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005732:	2bff      	cmp	r3, #255	; 0xff
 8005734:	d10f      	bne.n	8005756 <d_print_comp+0x3012>
 8005736:	2600      	movs	r6, #0
 8005738:	4619      	mov	r1, r3
 800573a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800573e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005742:	4620      	mov	r0, r4
 8005744:	4798      	blx	r3
 8005746:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800574a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800574e:	1c5a      	adds	r2, r3, #1
 8005750:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005754:	4633      	mov	r3, r6
 8005756:	1c59      	adds	r1, r3, #1
 8005758:	2275      	movs	r2, #117	; 0x75
 800575a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800575e:	54e2      	strb	r2, [r4, r3]
 8005760:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005764:	686b      	ldr	r3, [r5, #4]
 8005766:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 800576a:	9a03      	ldr	r2, [sp, #12]
 800576c:	3b01      	subs	r3, #1
 800576e:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 8005772:	f7fd b8dc 	b.w	800292e <d_print_comp+0x1ea>
 8005776:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800577a:	2bff      	cmp	r3, #255	; 0xff
 800577c:	d10e      	bne.n	800579c <d_print_comp+0x3058>
 800577e:	4619      	mov	r1, r3
 8005780:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005784:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005788:	4620      	mov	r0, r4
 800578a:	4798      	blx	r3
 800578c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005790:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8005794:	1c5a      	adds	r2, r3, #1
 8005796:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 800579a:	4643      	mov	r3, r8
 800579c:	222d      	movs	r2, #45	; 0x2d
 800579e:	1c59      	adds	r1, r3, #1
 80057a0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80057a4:	54e2      	strb	r2, [r4, r3]
 80057a6:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80057aa:	e532      	b.n	8005212 <d_print_comp+0x2ace>
 80057ac:	686b      	ldr	r3, [r5, #4]
 80057ae:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
 80057b2:	9a03      	ldr	r2, [sp, #12]
 80057b4:	3b01      	subs	r3, #1
 80057b6:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
 80057ba:	f7fd b8b8 	b.w	800292e <d_print_comp+0x1ea>
 80057be:	bf00      	nop
 80057c0:	08012ce4 	.word	0x08012ce4
 80057c4:	08012e94 	.word	0x08012e94
 80057c8:	08012ea8 	.word	0x08012ea8
 80057cc:	08012ea4 	.word	0x08012ea4
 80057d0:	08012ea0 	.word	0x08012ea0
 80057d4:	08012e9c 	.word	0x08012e9c

080057d8 <d_print_mod>:
 80057d8:	7813      	ldrb	r3, [r2, #0]
 80057da:	3b03      	subs	r3, #3
 80057dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80057e0:	4615      	mov	r5, r2
 80057e2:	4604      	mov	r4, r0
 80057e4:	460e      	mov	r6, r1
 80057e6:	2b4c      	cmp	r3, #76	; 0x4c
 80057e8:	f200 8262 	bhi.w	8005cb0 <d_print_mod+0x4d8>
 80057ec:	e8df f013 	tbh	[pc, r3, lsl #1]
 80057f0:	02600086 	.word	0x02600086
 80057f4:	02600260 	.word	0x02600260
 80057f8:	02600260 	.word	0x02600260
 80057fc:	02600260 	.word	0x02600260
 8005800:	02600260 	.word	0x02600260
 8005804:	02600260 	.word	0x02600260
 8005808:	02600260 	.word	0x02600260
 800580c:	02600260 	.word	0x02600260
 8005810:	02600260 	.word	0x02600260
 8005814:	02600260 	.word	0x02600260
 8005818:	02600260 	.word	0x02600260
 800581c:	0172014f 	.word	0x0172014f
 8005820:	014f0195 	.word	0x014f0195
 8005824:	01950172 	.word	0x01950172
 8005828:	0098008b 	.word	0x0098008b
 800582c:	00b800a5 	.word	0x00b800a5
 8005830:	01b8011e 	.word	0x01b8011e
 8005834:	012c00fb 	.word	0x012c00fb
 8005838:	02600260 	.word	0x02600260
 800583c:	02600260 	.word	0x02600260
 8005840:	0260004d 	.word	0x0260004d
 8005844:	026000d5 	.word	0x026000d5
 8005848:	02600260 	.word	0x02600260
 800584c:	02600260 	.word	0x02600260
 8005850:	02600260 	.word	0x02600260
 8005854:	02600260 	.word	0x02600260
 8005858:	02600260 	.word	0x02600260
 800585c:	02600260 	.word	0x02600260
 8005860:	02600260 	.word	0x02600260
 8005864:	02600260 	.word	0x02600260
 8005868:	02600260 	.word	0x02600260
 800586c:	02600260 	.word	0x02600260
 8005870:	02600260 	.word	0x02600260
 8005874:	02600260 	.word	0x02600260
 8005878:	02600260 	.word	0x02600260
 800587c:	02600260 	.word	0x02600260
 8005880:	02020260 	.word	0x02020260
 8005884:	01dc0260 	.word	0x01dc0260
 8005888:	023a      	.short	0x023a
 800588a:	f890 3104 	ldrb.w	r3, [r0, #260]	; 0x104
 800588e:	2b28      	cmp	r3, #40	; 0x28
 8005890:	d00b      	beq.n	80058aa <d_print_mod+0xd2>
 8005892:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005896:	29ff      	cmp	r1, #255	; 0xff
 8005898:	f000 8295 	beq.w	8005dc6 <d_print_mod+0x5ee>
 800589c:	1c4a      	adds	r2, r1, #1
 800589e:	2320      	movs	r3, #32
 80058a0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80058a4:	5463      	strb	r3, [r4, r1]
 80058a6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80058aa:	4fd6      	ldr	r7, [pc, #856]	; (8005c04 <d_print_mod+0x42c>)
 80058ac:	68aa      	ldr	r2, [r5, #8]
 80058ae:	4631      	mov	r1, r6
 80058b0:	4620      	mov	r0, r4
 80058b2:	f7fc ff47 	bl	8002744 <d_print_comp>
 80058b6:	f107 0802 	add.w	r8, r7, #2
 80058ba:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80058be:	253a      	movs	r5, #58	; 0x3a
 80058c0:	2600      	movs	r6, #0
 80058c2:	e00b      	b.n	80058dc <d_print_mod+0x104>
 80058c4:	460b      	mov	r3, r1
 80058c6:	3101      	adds	r1, #1
 80058c8:	4547      	cmp	r7, r8
 80058ca:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80058ce:	54e5      	strb	r5, [r4, r3]
 80058d0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80058d4:	f000 80b6 	beq.w	8005a44 <d_print_mod+0x26c>
 80058d8:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 80058dc:	29ff      	cmp	r1, #255	; 0xff
 80058de:	d1f1      	bne.n	80058c4 <d_print_mod+0xec>
 80058e0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80058e4:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80058e8:	4620      	mov	r0, r4
 80058ea:	4798      	blx	r3
 80058ec:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80058f0:	3301      	adds	r3, #1
 80058f2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80058f6:	2101      	movs	r1, #1
 80058f8:	2300      	movs	r3, #0
 80058fa:	e7e5      	b.n	80058c8 <d_print_mod+0xf0>
 80058fc:	68aa      	ldr	r2, [r5, #8]
 80058fe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005902:	f7fc bf1f 	b.w	8002744 <d_print_comp>
 8005906:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800590a:	2bff      	cmp	r3, #255	; 0xff
 800590c:	f000 821b 	beq.w	8005d46 <d_print_mod+0x56e>
 8005910:	2220      	movs	r2, #32
 8005912:	1c59      	adds	r1, r3, #1
 8005914:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005918:	54e2      	strb	r2, [r4, r3]
 800591a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800591e:	e087      	b.n	8005a30 <d_print_mod+0x258>
 8005920:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005924:	2bff      	cmp	r3, #255	; 0xff
 8005926:	f000 81fe 	beq.w	8005d26 <d_print_mod+0x54e>
 800592a:	2220      	movs	r2, #32
 800592c:	1c59      	adds	r1, r3, #1
 800592e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005932:	54e2      	strb	r2, [r4, r3]
 8005934:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005938:	e114      	b.n	8005b64 <d_print_mod+0x38c>
 800593a:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800593e:	2bff      	cmp	r3, #255	; 0xff
 8005940:	f000 8211 	beq.w	8005d66 <d_print_mod+0x58e>
 8005944:	2220      	movs	r2, #32
 8005946:	1c59      	adds	r1, r3, #1
 8005948:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800594c:	54e2      	strb	r2, [r4, r3]
 800594e:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005952:	4631      	mov	r1, r6
 8005954:	68ea      	ldr	r2, [r5, #12]
 8005956:	4620      	mov	r0, r4
 8005958:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800595c:	f7fc bef2 	b.w	8002744 <d_print_comp>
 8005960:	f011 0604 	ands.w	r6, r1, #4
 8005964:	d16e      	bne.n	8005a44 <d_print_mod+0x26c>
 8005966:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800596a:	2bff      	cmp	r3, #255	; 0xff
 800596c:	d10d      	bne.n	800598a <d_print_mod+0x1b2>
 800596e:	4619      	mov	r1, r3
 8005970:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8005974:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 8005978:	4798      	blx	r3
 800597a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800597e:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005982:	1c5a      	adds	r2, r3, #1
 8005984:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005988:	4633      	mov	r3, r6
 800598a:	222a      	movs	r2, #42	; 0x2a
 800598c:	1c59      	adds	r1, r3, #1
 800598e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005992:	54e2      	strb	r2, [r4, r3]
 8005994:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005998:	e054      	b.n	8005a44 <d_print_mod+0x26c>
 800599a:	f8df 8288 	ldr.w	r8, [pc, #648]	; 8005c24 <d_print_mod+0x44c>
 800599e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80059a2:	f108 0a09 	add.w	sl, r8, #9
 80059a6:	2720      	movs	r7, #32
 80059a8:	f04f 0900 	mov.w	r9, #0
 80059ac:	e00b      	b.n	80059c6 <d_print_mod+0x1ee>
 80059ae:	460b      	mov	r3, r1
 80059b0:	3101      	adds	r1, #1
 80059b2:	45c2      	cmp	sl, r8
 80059b4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80059b8:	54e7      	strb	r7, [r4, r3]
 80059ba:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80059be:	f000 819a 	beq.w	8005cf6 <d_print_mod+0x51e>
 80059c2:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80059c6:	29ff      	cmp	r1, #255	; 0xff
 80059c8:	d1f1      	bne.n	80059ae <d_print_mod+0x1d6>
 80059ca:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80059ce:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80059d2:	4620      	mov	r0, r4
 80059d4:	4798      	blx	r3
 80059d6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80059da:	3301      	adds	r3, #1
 80059dc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80059e0:	2101      	movs	r1, #1
 80059e2:	2300      	movs	r3, #0
 80059e4:	e7e5      	b.n	80059b2 <d_print_mod+0x1da>
 80059e6:	4e88      	ldr	r6, [pc, #544]	; (8005c08 <d_print_mod+0x430>)
 80059e8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80059ec:	f106 0807 	add.w	r8, r6, #7
 80059f0:	2563      	movs	r5, #99	; 0x63
 80059f2:	2700      	movs	r7, #0
 80059f4:	e00a      	b.n	8005a0c <d_print_mod+0x234>
 80059f6:	460b      	mov	r3, r1
 80059f8:	3101      	adds	r1, #1
 80059fa:	4546      	cmp	r6, r8
 80059fc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005a00:	54e5      	strb	r5, [r4, r3]
 8005a02:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005a06:	d01d      	beq.n	8005a44 <d_print_mod+0x26c>
 8005a08:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005a0c:	29ff      	cmp	r1, #255	; 0xff
 8005a0e:	d1f2      	bne.n	80059f6 <d_print_mod+0x21e>
 8005a10:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005a14:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005a18:	4620      	mov	r0, r4
 8005a1a:	4798      	blx	r3
 8005a1c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005a20:	3301      	adds	r3, #1
 8005a22:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005a26:	2101      	movs	r1, #1
 8005a28:	2300      	movs	r3, #0
 8005a2a:	e7e6      	b.n	80059fa <d_print_mod+0x222>
 8005a2c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005a30:	29ff      	cmp	r1, #255	; 0xff
 8005a32:	f000 81a8 	beq.w	8005d86 <d_print_mod+0x5ae>
 8005a36:	1c4a      	adds	r2, r1, #1
 8005a38:	2326      	movs	r3, #38	; 0x26
 8005a3a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005a3e:	5463      	strb	r3, [r4, r1]
 8005a40:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005a44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a48:	4e70      	ldr	r6, [pc, #448]	; (8005c0c <d_print_mod+0x434>)
 8005a4a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005a4e:	f106 0809 	add.w	r8, r6, #9
 8005a52:	2569      	movs	r5, #105	; 0x69
 8005a54:	2700      	movs	r7, #0
 8005a56:	e00a      	b.n	8005a6e <d_print_mod+0x296>
 8005a58:	460b      	mov	r3, r1
 8005a5a:	3101      	adds	r1, #1
 8005a5c:	45b0      	cmp	r8, r6
 8005a5e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005a62:	54e5      	strb	r5, [r4, r3]
 8005a64:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005a68:	d0ec      	beq.n	8005a44 <d_print_mod+0x26c>
 8005a6a:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005a6e:	29ff      	cmp	r1, #255	; 0xff
 8005a70:	d1f2      	bne.n	8005a58 <d_print_mod+0x280>
 8005a72:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005a76:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005a7a:	4620      	mov	r0, r4
 8005a7c:	4798      	blx	r3
 8005a7e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005a82:	3301      	adds	r3, #1
 8005a84:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005a88:	2101      	movs	r1, #1
 8005a8a:	2300      	movs	r3, #0
 8005a8c:	e7e6      	b.n	8005a5c <d_print_mod+0x284>
 8005a8e:	4e60      	ldr	r6, [pc, #384]	; (8005c10 <d_print_mod+0x438>)
 8005a90:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005a94:	f106 0808 	add.w	r8, r6, #8
 8005a98:	2520      	movs	r5, #32
 8005a9a:	2700      	movs	r7, #0
 8005a9c:	e00a      	b.n	8005ab4 <d_print_mod+0x2dc>
 8005a9e:	460b      	mov	r3, r1
 8005aa0:	3101      	adds	r1, #1
 8005aa2:	45b0      	cmp	r8, r6
 8005aa4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005aa8:	54e5      	strb	r5, [r4, r3]
 8005aaa:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005aae:	d0c9      	beq.n	8005a44 <d_print_mod+0x26c>
 8005ab0:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005ab4:	29ff      	cmp	r1, #255	; 0xff
 8005ab6:	d1f2      	bne.n	8005a9e <d_print_mod+0x2c6>
 8005ab8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005abc:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005ac0:	4620      	mov	r0, r4
 8005ac2:	4798      	blx	r3
 8005ac4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005ac8:	3301      	adds	r3, #1
 8005aca:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005ace:	2101      	movs	r1, #1
 8005ad0:	2300      	movs	r3, #0
 8005ad2:	e7e6      	b.n	8005aa2 <d_print_mod+0x2ca>
 8005ad4:	4e4f      	ldr	r6, [pc, #316]	; (8005c14 <d_print_mod+0x43c>)
 8005ad6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005ada:	f106 0808 	add.w	r8, r6, #8
 8005ade:	2520      	movs	r5, #32
 8005ae0:	2700      	movs	r7, #0
 8005ae2:	e00a      	b.n	8005afa <d_print_mod+0x322>
 8005ae4:	460b      	mov	r3, r1
 8005ae6:	3101      	adds	r1, #1
 8005ae8:	45b0      	cmp	r8, r6
 8005aea:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005aee:	54e5      	strb	r5, [r4, r3]
 8005af0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005af4:	d0a6      	beq.n	8005a44 <d_print_mod+0x26c>
 8005af6:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005afa:	29ff      	cmp	r1, #255	; 0xff
 8005afc:	d1f2      	bne.n	8005ae4 <d_print_mod+0x30c>
 8005afe:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005b02:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005b06:	4620      	mov	r0, r4
 8005b08:	4798      	blx	r3
 8005b0a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005b0e:	3301      	adds	r3, #1
 8005b10:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005b14:	2101      	movs	r1, #1
 8005b16:	2300      	movs	r3, #0
 8005b18:	e7e6      	b.n	8005ae8 <d_print_mod+0x310>
 8005b1a:	4e3f      	ldr	r6, [pc, #252]	; (8005c18 <d_print_mod+0x440>)
 8005b1c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005b20:	f106 0805 	add.w	r8, r6, #5
 8005b24:	2520      	movs	r5, #32
 8005b26:	2700      	movs	r7, #0
 8005b28:	e00a      	b.n	8005b40 <d_print_mod+0x368>
 8005b2a:	460b      	mov	r3, r1
 8005b2c:	3101      	adds	r1, #1
 8005b2e:	45b0      	cmp	r8, r6
 8005b30:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005b34:	54e5      	strb	r5, [r4, r3]
 8005b36:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005b3a:	d083      	beq.n	8005a44 <d_print_mod+0x26c>
 8005b3c:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005b40:	29ff      	cmp	r1, #255	; 0xff
 8005b42:	d1f2      	bne.n	8005b2a <d_print_mod+0x352>
 8005b44:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005b48:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005b4c:	4620      	mov	r0, r4
 8005b4e:	4798      	blx	r3
 8005b50:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005b54:	3301      	adds	r3, #1
 8005b56:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005b5a:	2101      	movs	r1, #1
 8005b5c:	2300      	movs	r3, #0
 8005b5e:	e7e6      	b.n	8005b2e <d_print_mod+0x356>
 8005b60:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005b64:	4e2d      	ldr	r6, [pc, #180]	; (8005c1c <d_print_mod+0x444>)
 8005b66:	2526      	movs	r5, #38	; 0x26
 8005b68:	f106 0801 	add.w	r8, r6, #1
 8005b6c:	2700      	movs	r7, #0
 8005b6e:	e00b      	b.n	8005b88 <d_print_mod+0x3b0>
 8005b70:	460b      	mov	r3, r1
 8005b72:	3101      	adds	r1, #1
 8005b74:	45b0      	cmp	r8, r6
 8005b76:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005b7a:	54e5      	strb	r5, [r4, r3]
 8005b7c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005b80:	f43f af60 	beq.w	8005a44 <d_print_mod+0x26c>
 8005b84:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005b88:	29ff      	cmp	r1, #255	; 0xff
 8005b8a:	d1f1      	bne.n	8005b70 <d_print_mod+0x398>
 8005b8c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005b90:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005b94:	4620      	mov	r0, r4
 8005b96:	4798      	blx	r3
 8005b98:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005b9c:	3301      	adds	r3, #1
 8005b9e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005ba2:	2101      	movs	r1, #1
 8005ba4:	2300      	movs	r3, #0
 8005ba6:	e7e5      	b.n	8005b74 <d_print_mod+0x39c>
 8005ba8:	f8df 807c 	ldr.w	r8, [pc, #124]	; 8005c28 <d_print_mod+0x450>
 8005bac:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005bb0:	f108 0a08 	add.w	sl, r8, #8
 8005bb4:	2720      	movs	r7, #32
 8005bb6:	f04f 0900 	mov.w	r9, #0
 8005bba:	e00a      	b.n	8005bd2 <d_print_mod+0x3fa>
 8005bbc:	461a      	mov	r2, r3
 8005bbe:	3301      	adds	r3, #1
 8005bc0:	45c2      	cmp	sl, r8
 8005bc2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005bc6:	54a7      	strb	r7, [r4, r2]
 8005bc8:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8005bcc:	d075      	beq.n	8005cba <d_print_mod+0x4e2>
 8005bce:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8005bd2:	2bff      	cmp	r3, #255	; 0xff
 8005bd4:	d1f2      	bne.n	8005bbc <d_print_mod+0x3e4>
 8005bd6:	4619      	mov	r1, r3
 8005bd8:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005bdc:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005be0:	4620      	mov	r0, r4
 8005be2:	4798      	blx	r3
 8005be4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005be8:	3301      	adds	r3, #1
 8005bea:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005bee:	2200      	movs	r2, #0
 8005bf0:	2301      	movs	r3, #1
 8005bf2:	e7e5      	b.n	8005bc0 <d_print_mod+0x3e8>
 8005bf4:	4e0a      	ldr	r6, [pc, #40]	; (8005c20 <d_print_mod+0x448>)
 8005bf6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005bfa:	f106 0810 	add.w	r8, r6, #16
 8005bfe:	2520      	movs	r5, #32
 8005c00:	2700      	movs	r7, #0
 8005c02:	e01f      	b.n	8005c44 <d_print_mod+0x46c>
 8005c04:	08012fb8 	.word	0x08012fb8
 8005c08:	08012fa0 	.word	0x08012fa0
 8005c0c:	08012fac 	.word	0x08012fac
 8005c10:	08012f54 	.word	0x08012f54
 8005c14:	08012f60 	.word	0x08012f60
 8005c18:	08012f6c 	.word	0x08012f6c
 8005c1c:	08012f9c 	.word	0x08012f9c
 8005c20:	08012f74 	.word	0x08012f74
 8005c24:	08012fbc 	.word	0x08012fbc
 8005c28:	08012f88 	.word	0x08012f88
 8005c2c:	460b      	mov	r3, r1
 8005c2e:	3101      	adds	r1, #1
 8005c30:	45b0      	cmp	r8, r6
 8005c32:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005c36:	54e5      	strb	r5, [r4, r3]
 8005c38:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005c3c:	f43f af02 	beq.w	8005a44 <d_print_mod+0x26c>
 8005c40:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005c44:	29ff      	cmp	r1, #255	; 0xff
 8005c46:	d1f1      	bne.n	8005c2c <d_print_mod+0x454>
 8005c48:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005c4c:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005c50:	4620      	mov	r0, r4
 8005c52:	4798      	blx	r3
 8005c54:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005c58:	3301      	adds	r3, #1
 8005c5a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005c5e:	2101      	movs	r1, #1
 8005c60:	2300      	movs	r3, #0
 8005c62:	e7e5      	b.n	8005c30 <d_print_mod+0x458>
 8005c64:	f8df 817c 	ldr.w	r8, [pc, #380]	; 8005de4 <d_print_mod+0x60c>
 8005c68:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005c6c:	f108 0a05 	add.w	sl, r8, #5
 8005c70:	2720      	movs	r7, #32
 8005c72:	f04f 0900 	mov.w	r9, #0
 8005c76:	e00a      	b.n	8005c8e <d_print_mod+0x4b6>
 8005c78:	461a      	mov	r2, r3
 8005c7a:	3301      	adds	r3, #1
 8005c7c:	45c2      	cmp	sl, r8
 8005c7e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005c82:	54a7      	strb	r7, [r4, r2]
 8005c84:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8005c88:	d017      	beq.n	8005cba <d_print_mod+0x4e2>
 8005c8a:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8005c8e:	2bff      	cmp	r3, #255	; 0xff
 8005c90:	d1f2      	bne.n	8005c78 <d_print_mod+0x4a0>
 8005c92:	4619      	mov	r1, r3
 8005c94:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005c98:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005c9c:	4620      	mov	r0, r4
 8005c9e:	4798      	blx	r3
 8005ca0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005ca4:	3301      	adds	r3, #1
 8005ca6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005caa:	2200      	movs	r2, #0
 8005cac:	2301      	movs	r3, #1
 8005cae:	e7e5      	b.n	8005c7c <d_print_mod+0x4a4>
 8005cb0:	462a      	mov	r2, r5
 8005cb2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005cb6:	f7fc bd45 	b.w	8002744 <d_print_comp>
 8005cba:	68ea      	ldr	r2, [r5, #12]
 8005cbc:	2a00      	cmp	r2, #0
 8005cbe:	f43f aec1 	beq.w	8005a44 <d_print_mod+0x26c>
 8005cc2:	2bff      	cmp	r3, #255	; 0xff
 8005cc4:	d06e      	beq.n	8005da4 <d_print_mod+0x5cc>
 8005cc6:	1c59      	adds	r1, r3, #1
 8005cc8:	2528      	movs	r5, #40	; 0x28
 8005cca:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005cce:	4620      	mov	r0, r4
 8005cd0:	4631      	mov	r1, r6
 8005cd2:	54e5      	strb	r5, [r4, r3]
 8005cd4:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005cd8:	f7fc fd34 	bl	8002744 <d_print_comp>
 8005cdc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005ce0:	29ff      	cmp	r1, #255	; 0xff
 8005ce2:	d011      	beq.n	8005d08 <d_print_mod+0x530>
 8005ce4:	1c4a      	adds	r2, r1, #1
 8005ce6:	2329      	movs	r3, #41	; 0x29
 8005ce8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005cec:	5463      	strb	r3, [r4, r1]
 8005cee:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005cf2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005cf6:	4631      	mov	r1, r6
 8005cf8:	68aa      	ldr	r2, [r5, #8]
 8005cfa:	4620      	mov	r0, r4
 8005cfc:	f7fc fd22 	bl	8002744 <d_print_comp>
 8005d00:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005d04:	29ff      	cmp	r1, #255	; 0xff
 8005d06:	d1ed      	bne.n	8005ce4 <d_print_mod+0x50c>
 8005d08:	2500      	movs	r5, #0
 8005d0a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005d0e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005d12:	4620      	mov	r0, r4
 8005d14:	4798      	blx	r3
 8005d16:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005d1a:	3301      	adds	r3, #1
 8005d1c:	4629      	mov	r1, r5
 8005d1e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005d22:	2201      	movs	r2, #1
 8005d24:	e7df      	b.n	8005ce6 <d_print_mod+0x50e>
 8005d26:	2500      	movs	r5, #0
 8005d28:	4619      	mov	r1, r3
 8005d2a:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 8005d2e:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 8005d32:	4798      	blx	r3
 8005d34:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005d38:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8005d3c:	1c5a      	adds	r2, r3, #1
 8005d3e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005d42:	462b      	mov	r3, r5
 8005d44:	e5f1      	b.n	800592a <d_print_mod+0x152>
 8005d46:	2500      	movs	r5, #0
 8005d48:	4619      	mov	r1, r3
 8005d4a:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 8005d4e:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 8005d52:	4798      	blx	r3
 8005d54:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005d58:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8005d5c:	1c5a      	adds	r2, r3, #1
 8005d5e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005d62:	462b      	mov	r3, r5
 8005d64:	e5d4      	b.n	8005910 <d_print_mod+0x138>
 8005d66:	2700      	movs	r7, #0
 8005d68:	4619      	mov	r1, r3
 8005d6a:	f880 70ff 	strb.w	r7, [r0, #255]	; 0xff
 8005d6e:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 8005d72:	4798      	blx	r3
 8005d74:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005d78:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8005d7c:	1c5a      	adds	r2, r3, #1
 8005d7e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005d82:	463b      	mov	r3, r7
 8005d84:	e5de      	b.n	8005944 <d_print_mod+0x16c>
 8005d86:	2500      	movs	r5, #0
 8005d88:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005d8c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005d90:	4620      	mov	r0, r4
 8005d92:	4798      	blx	r3
 8005d94:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005d98:	3301      	adds	r3, #1
 8005d9a:	4629      	mov	r1, r5
 8005d9c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005da0:	2201      	movs	r2, #1
 8005da2:	e649      	b.n	8005a38 <d_print_mod+0x260>
 8005da4:	2700      	movs	r7, #0
 8005da6:	4619      	mov	r1, r3
 8005da8:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005dac:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005db0:	4620      	mov	r0, r4
 8005db2:	4798      	blx	r3
 8005db4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005db8:	68ea      	ldr	r2, [r5, #12]
 8005dba:	1c59      	adds	r1, r3, #1
 8005dbc:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 8005dc0:	463b      	mov	r3, r7
 8005dc2:	2101      	movs	r1, #1
 8005dc4:	e780      	b.n	8005cc8 <d_print_mod+0x4f0>
 8005dc6:	2700      	movs	r7, #0
 8005dc8:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 8005dcc:	f880 70ff 	strb.w	r7, [r0, #255]	; 0xff
 8005dd0:	4798      	blx	r3
 8005dd2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005dd6:	3301      	adds	r3, #1
 8005dd8:	4639      	mov	r1, r7
 8005dda:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005dde:	2201      	movs	r2, #1
 8005de0:	e55d      	b.n	800589e <d_print_mod+0xc6>
 8005de2:	bf00      	nop
 8005de4:	08012f94 	.word	0x08012f94

08005de8 <d_print_function_type.isra.14>:
 8005de8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005dec:	4604      	mov	r4, r0
 8005dee:	460e      	mov	r6, r1
 8005df0:	4617      	mov	r7, r2
 8005df2:	461d      	mov	r5, r3
 8005df4:	b1d3      	cbz	r3, 8005e2c <d_print_function_type.isra.14+0x44>
 8005df6:	689b      	ldr	r3, [r3, #8]
 8005df8:	b9c3      	cbnz	r3, 8005e2c <d_print_function_type.isra.14+0x44>
 8005dfa:	462a      	mov	r2, r5
 8005dfc:	2001      	movs	r0, #1
 8005dfe:	f8df c1c4 	ldr.w	ip, [pc, #452]	; 8005fc4 <d_print_function_type.isra.14+0x1dc>
 8005e02:	e001      	b.n	8005e08 <d_print_function_type.isra.14+0x20>
 8005e04:	6893      	ldr	r3, [r2, #8]
 8005e06:	b98b      	cbnz	r3, 8005e2c <d_print_function_type.isra.14+0x44>
 8005e08:	6853      	ldr	r3, [r2, #4]
 8005e0a:	781b      	ldrb	r3, [r3, #0]
 8005e0c:	3b19      	subs	r3, #25
 8005e0e:	b2db      	uxtb	r3, r3
 8005e10:	2b12      	cmp	r3, #18
 8005e12:	fa00 f103 	lsl.w	r1, r0, r3
 8005e16:	d806      	bhi.n	8005e26 <d_print_function_type.isra.14+0x3e>
 8005e18:	ea11 0f0c 	tst.w	r1, ip
 8005e1c:	f040 80cd 	bne.w	8005fba <d_print_function_type.isra.14+0x1d2>
 8005e20:	f411 6f60 	tst.w	r1, #3584	; 0xe00
 8005e24:	d159      	bne.n	8005eda <d_print_function_type.isra.14+0xf2>
 8005e26:	6812      	ldr	r2, [r2, #0]
 8005e28:	2a00      	cmp	r2, #0
 8005e2a:	d1eb      	bne.n	8005e04 <d_print_function_type.isra.14+0x1c>
 8005e2c:	2300      	movs	r3, #0
 8005e2e:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 8005e32:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8005e36:	4631      	mov	r1, r6
 8005e38:	462a      	mov	r2, r5
 8005e3a:	4620      	mov	r0, r4
 8005e3c:	f000 f8c4 	bl	8005fc8 <d_print_mod_list>
 8005e40:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005e44:	29ff      	cmp	r1, #255	; 0xff
 8005e46:	d021      	beq.n	8005e8c <d_print_function_type.isra.14+0xa4>
 8005e48:	2228      	movs	r2, #40	; 0x28
 8005e4a:	1c4b      	adds	r3, r1, #1
 8005e4c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005e50:	5462      	strb	r2, [r4, r1]
 8005e52:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005e56:	683a      	ldr	r2, [r7, #0]
 8005e58:	b12a      	cbz	r2, 8005e66 <d_print_function_type.isra.14+0x7e>
 8005e5a:	4631      	mov	r1, r6
 8005e5c:	4620      	mov	r0, r4
 8005e5e:	f7fc fc71 	bl	8002744 <d_print_comp>
 8005e62:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005e66:	2bff      	cmp	r3, #255	; 0xff
 8005e68:	d027      	beq.n	8005eba <d_print_function_type.isra.14+0xd2>
 8005e6a:	1c5a      	adds	r2, r3, #1
 8005e6c:	2029      	movs	r0, #41	; 0x29
 8005e6e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005e72:	4631      	mov	r1, r6
 8005e74:	54e0      	strb	r0, [r4, r3]
 8005e76:	462a      	mov	r2, r5
 8005e78:	f884 0104 	strb.w	r0, [r4, #260]	; 0x104
 8005e7c:	2301      	movs	r3, #1
 8005e7e:	4620      	mov	r0, r4
 8005e80:	f000 f8a2 	bl	8005fc8 <d_print_mod_list>
 8005e84:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
 8005e88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005e8c:	2300      	movs	r3, #0
 8005e8e:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 8005e92:	4620      	mov	r0, r4
 8005e94:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005e98:	4798      	blx	r3
 8005e9a:	2328      	movs	r3, #40	; 0x28
 8005e9c:	7023      	strb	r3, [r4, #0]
 8005e9e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005ea2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005ea6:	683a      	ldr	r2, [r7, #0]
 8005ea8:	1c59      	adds	r1, r3, #1
 8005eaa:	2301      	movs	r3, #1
 8005eac:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 8005eb0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005eb4:	2a00      	cmp	r2, #0
 8005eb6:	d1d0      	bne.n	8005e5a <d_print_function_type.isra.14+0x72>
 8005eb8:	e7d7      	b.n	8005e6a <d_print_function_type.isra.14+0x82>
 8005eba:	2700      	movs	r7, #0
 8005ebc:	4619      	mov	r1, r3
 8005ebe:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005ec2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005ec6:	4620      	mov	r0, r4
 8005ec8:	4798      	blx	r3
 8005eca:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005ece:	1c5a      	adds	r2, r3, #1
 8005ed0:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005ed4:	463b      	mov	r3, r7
 8005ed6:	2201      	movs	r2, #1
 8005ed8:	e7c8      	b.n	8005e6c <d_print_function_type.isra.14+0x84>
 8005eda:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8005ede:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005ee2:	f003 02fd 	and.w	r2, r3, #253	; 0xfd
 8005ee6:	2a28      	cmp	r2, #40	; 0x28
 8005ee8:	d00b      	beq.n	8005f02 <d_print_function_type.isra.14+0x11a>
 8005eea:	2b20      	cmp	r3, #32
 8005eec:	d009      	beq.n	8005f02 <d_print_function_type.isra.14+0x11a>
 8005eee:	29ff      	cmp	r1, #255	; 0xff
 8005ef0:	d02a      	beq.n	8005f48 <d_print_function_type.isra.14+0x160>
 8005ef2:	1c4b      	adds	r3, r1, #1
 8005ef4:	2220      	movs	r2, #32
 8005ef6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005efa:	5462      	strb	r2, [r4, r1]
 8005efc:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005f00:	4619      	mov	r1, r3
 8005f02:	29ff      	cmp	r1, #255	; 0xff
 8005f04:	d049      	beq.n	8005f9a <d_print_function_type.isra.14+0x1b2>
 8005f06:	1c4b      	adds	r3, r1, #1
 8005f08:	f04f 0928 	mov.w	r9, #40	; 0x28
 8005f0c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005f10:	f804 9001 	strb.w	r9, [r4, r1]
 8005f14:	f04f 0a00 	mov.w	sl, #0
 8005f18:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 8005f1c:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8005f20:	4653      	mov	r3, sl
 8005f22:	f8c4 a114 	str.w	sl, [r4, #276]	; 0x114
 8005f26:	462a      	mov	r2, r5
 8005f28:	4631      	mov	r1, r6
 8005f2a:	4620      	mov	r0, r4
 8005f2c:	f000 f84c 	bl	8005fc8 <d_print_mod_list>
 8005f30:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005f34:	2bff      	cmp	r3, #255	; 0xff
 8005f36:	d017      	beq.n	8005f68 <d_print_function_type.isra.14+0x180>
 8005f38:	2229      	movs	r2, #41	; 0x29
 8005f3a:	1c59      	adds	r1, r3, #1
 8005f3c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005f40:	54e2      	strb	r2, [r4, r3]
 8005f42:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005f46:	e77d      	b.n	8005e44 <d_print_function_type.isra.14+0x5c>
 8005f48:	2300      	movs	r3, #0
 8005f4a:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 8005f4e:	4620      	mov	r0, r4
 8005f50:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005f54:	4798      	blx	r3
 8005f56:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005f5a:	2220      	movs	r2, #32
 8005f5c:	3301      	adds	r3, #1
 8005f5e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005f62:	7022      	strb	r2, [r4, #0]
 8005f64:	2101      	movs	r1, #1
 8005f66:	e7ce      	b.n	8005f06 <d_print_function_type.isra.14+0x11e>
 8005f68:	4619      	mov	r1, r3
 8005f6a:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8005f6e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005f72:	4620      	mov	r0, r4
 8005f74:	4798      	blx	r3
 8005f76:	f642 0329 	movw	r3, #10281	; 0x2829
 8005f7a:	8023      	strh	r3, [r4, #0]
 8005f7c:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8005f80:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005f84:	683a      	ldr	r2, [r7, #0]
 8005f86:	1c59      	adds	r1, r3, #1
 8005f88:	2302      	movs	r3, #2
 8005f8a:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 8005f8e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005f92:	2a00      	cmp	r2, #0
 8005f94:	f47f af61 	bne.w	8005e5a <d_print_function_type.isra.14+0x72>
 8005f98:	e767      	b.n	8005e6a <d_print_function_type.isra.14+0x82>
 8005f9a:	f04f 0800 	mov.w	r8, #0
 8005f9e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005fa2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005fa6:	4620      	mov	r0, r4
 8005fa8:	4798      	blx	r3
 8005faa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005fae:	3301      	adds	r3, #1
 8005fb0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005fb4:	4641      	mov	r1, r8
 8005fb6:	2301      	movs	r3, #1
 8005fb8:	e7a6      	b.n	8005f08 <d_print_function_type.isra.14+0x120>
 8005fba:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8005fbe:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005fc2:	e792      	b.n	8005eea <d_print_function_type.isra.14+0x102>
 8005fc4:	00043107 	.word	0x00043107

08005fc8 <d_print_mod_list>:
 8005fc8:	2a00      	cmp	r2, #0
 8005fca:	f000 80b9 	beq.w	8006140 <d_print_mod_list+0x178>
 8005fce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005fd2:	461e      	mov	r6, r3
 8005fd4:	f8d0 3118 	ldr.w	r3, [r0, #280]	; 0x118
 8005fd8:	b089      	sub	sp, #36	; 0x24
 8005fda:	4605      	mov	r5, r0
 8005fdc:	2b00      	cmp	r3, #0
 8005fde:	d160      	bne.n	80060a2 <d_print_mod_list+0xda>
 8005fe0:	460f      	mov	r7, r1
 8005fe2:	4614      	mov	r4, r2
 8005fe4:	f04f 0801 	mov.w	r8, #1
 8005fe8:	e01d      	b.n	8006026 <d_print_mod_list+0x5e>
 8005fea:	f1a3 011c 	sub.w	r1, r3, #28
 8005fee:	2904      	cmp	r1, #4
 8005ff0:	d912      	bls.n	8006018 <d_print_mod_list+0x50>
 8005ff2:	68e1      	ldr	r1, [r4, #12]
 8005ff4:	f8c4 8008 	str.w	r8, [r4, #8]
 8005ff8:	2b29      	cmp	r3, #41	; 0x29
 8005ffa:	f8d5 9110 	ldr.w	r9, [r5, #272]	; 0x110
 8005ffe:	f8c5 1110 	str.w	r1, [r5, #272]	; 0x110
 8006002:	d051      	beq.n	80060a8 <d_print_mod_list+0xe0>
 8006004:	2b2a      	cmp	r3, #42	; 0x2a
 8006006:	d05a      	beq.n	80060be <d_print_mod_list+0xf6>
 8006008:	2b02      	cmp	r3, #2
 800600a:	d01b      	beq.n	8006044 <d_print_mod_list+0x7c>
 800600c:	4639      	mov	r1, r7
 800600e:	4628      	mov	r0, r5
 8006010:	f7ff fbe2 	bl	80057d8 <d_print_mod>
 8006014:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 8006018:	6824      	ldr	r4, [r4, #0]
 800601a:	2c00      	cmp	r4, #0
 800601c:	d041      	beq.n	80060a2 <d_print_mod_list+0xda>
 800601e:	f8d5 3118 	ldr.w	r3, [r5, #280]	; 0x118
 8006022:	2b00      	cmp	r3, #0
 8006024:	d13d      	bne.n	80060a2 <d_print_mod_list+0xda>
 8006026:	68a3      	ldr	r3, [r4, #8]
 8006028:	2b00      	cmp	r3, #0
 800602a:	d1f5      	bne.n	8006018 <d_print_mod_list+0x50>
 800602c:	6862      	ldr	r2, [r4, #4]
 800602e:	7813      	ldrb	r3, [r2, #0]
 8006030:	2e00      	cmp	r6, #0
 8006032:	d1de      	bne.n	8005ff2 <d_print_mod_list+0x2a>
 8006034:	2b4c      	cmp	r3, #76	; 0x4c
 8006036:	d0ef      	beq.n	8006018 <d_print_mod_list+0x50>
 8006038:	d9d7      	bls.n	8005fea <d_print_mod_list+0x22>
 800603a:	f1a3 014e 	sub.w	r1, r3, #78	; 0x4e
 800603e:	2901      	cmp	r1, #1
 8006040:	d8d7      	bhi.n	8005ff2 <d_print_mod_list+0x2a>
 8006042:	e7e9      	b.n	8006018 <d_print_mod_list+0x50>
 8006044:	2600      	movs	r6, #0
 8006046:	f8d5 8114 	ldr.w	r8, [r5, #276]	; 0x114
 800604a:	6892      	ldr	r2, [r2, #8]
 800604c:	f8c5 6114 	str.w	r6, [r5, #276]	; 0x114
 8006050:	4639      	mov	r1, r7
 8006052:	4628      	mov	r0, r5
 8006054:	f7fc fb76 	bl	8002744 <d_print_comp>
 8006058:	f017 0a04 	ands.w	sl, r7, #4
 800605c:	f8c5 8114 	str.w	r8, [r5, #276]	; 0x114
 8006060:	d03d      	beq.n	80060de <d_print_mod_list+0x116>
 8006062:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 8006066:	29ff      	cmp	r1, #255	; 0xff
 8006068:	d05c      	beq.n	8006124 <d_print_mod_list+0x15c>
 800606a:	1c4a      	adds	r2, r1, #1
 800606c:	232e      	movs	r3, #46	; 0x2e
 800606e:	f8c5 2100 	str.w	r2, [r5, #256]	; 0x100
 8006072:	546b      	strb	r3, [r5, r1]
 8006074:	f885 3104 	strb.w	r3, [r5, #260]	; 0x104
 8006078:	6863      	ldr	r3, [r4, #4]
 800607a:	68dc      	ldr	r4, [r3, #12]
 800607c:	7823      	ldrb	r3, [r4, #0]
 800607e:	2b46      	cmp	r3, #70	; 0x46
 8006080:	d05f      	beq.n	8006142 <d_print_mod_list+0x17a>
 8006082:	2b4c      	cmp	r3, #76	; 0x4c
 8006084:	f1a3 024e 	sub.w	r2, r3, #78	; 0x4e
 8006088:	f1a3 011c 	sub.w	r1, r3, #28
 800608c:	d024      	beq.n	80060d8 <d_print_mod_list+0x110>
 800608e:	d821      	bhi.n	80060d4 <d_print_mod_list+0x10c>
 8006090:	2904      	cmp	r1, #4
 8006092:	d921      	bls.n	80060d8 <d_print_mod_list+0x110>
 8006094:	4622      	mov	r2, r4
 8006096:	4639      	mov	r1, r7
 8006098:	4628      	mov	r0, r5
 800609a:	f7fc fb53 	bl	8002744 <d_print_comp>
 800609e:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 80060a2:	b009      	add	sp, #36	; 0x24
 80060a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80060a8:	6823      	ldr	r3, [r4, #0]
 80060aa:	320c      	adds	r2, #12
 80060ac:	4639      	mov	r1, r7
 80060ae:	4628      	mov	r0, r5
 80060b0:	f7ff fe9a 	bl	8005de8 <d_print_function_type.isra.14>
 80060b4:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 80060b8:	b009      	add	sp, #36	; 0x24
 80060ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80060be:	6823      	ldr	r3, [r4, #0]
 80060c0:	3208      	adds	r2, #8
 80060c2:	4639      	mov	r1, r7
 80060c4:	4628      	mov	r0, r5
 80060c6:	f000 f8bd 	bl	8006244 <d_print_array_type.isra.13>
 80060ca:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 80060ce:	b009      	add	sp, #36	; 0x24
 80060d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80060d4:	2a01      	cmp	r2, #1
 80060d6:	d8dd      	bhi.n	8006094 <d_print_mod_list+0xcc>
 80060d8:	68a4      	ldr	r4, [r4, #8]
 80060da:	7823      	ldrb	r3, [r4, #0]
 80060dc:	e7d1      	b.n	8006082 <d_print_mod_list+0xba>
 80060de:	f8df 8158 	ldr.w	r8, [pc, #344]	; 8006238 <d_print_mod_list+0x270>
 80060e2:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 80060e6:	f108 0b01 	add.w	fp, r8, #1
 80060ea:	263a      	movs	r6, #58	; 0x3a
 80060ec:	e00a      	b.n	8006104 <d_print_mod_list+0x13c>
 80060ee:	460b      	mov	r3, r1
 80060f0:	3101      	adds	r1, #1
 80060f2:	45d8      	cmp	r8, fp
 80060f4:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 80060f8:	54ee      	strb	r6, [r5, r3]
 80060fa:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
 80060fe:	d0bb      	beq.n	8006078 <d_print_mod_list+0xb0>
 8006100:	f818 6f01 	ldrb.w	r6, [r8, #1]!
 8006104:	29ff      	cmp	r1, #255	; 0xff
 8006106:	d1f2      	bne.n	80060ee <d_print_mod_list+0x126>
 8006108:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
 800610c:	f885 a0ff 	strb.w	sl, [r5, #255]	; 0xff
 8006110:	4628      	mov	r0, r5
 8006112:	4798      	blx	r3
 8006114:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 8006118:	3301      	adds	r3, #1
 800611a:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 800611e:	2101      	movs	r1, #1
 8006120:	2300      	movs	r3, #0
 8006122:	e7e6      	b.n	80060f2 <d_print_mod_list+0x12a>
 8006124:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
 8006128:	f885 60ff 	strb.w	r6, [r5, #255]	; 0xff
 800612c:	4628      	mov	r0, r5
 800612e:	4798      	blx	r3
 8006130:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 8006134:	3301      	adds	r3, #1
 8006136:	4631      	mov	r1, r6
 8006138:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 800613c:	2201      	movs	r2, #1
 800613e:	e795      	b.n	800606c <d_print_mod_list+0xa4>
 8006140:	4770      	bx	lr
 8006142:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 800623c <d_print_mod_list+0x274>
 8006146:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 800614a:	f108 0b0c 	add.w	fp, r8, #12
 800614e:	267b      	movs	r6, #123	; 0x7b
 8006150:	f04f 0a00 	mov.w	sl, #0
 8006154:	e00a      	b.n	800616c <d_print_mod_list+0x1a4>
 8006156:	460b      	mov	r3, r1
 8006158:	3101      	adds	r1, #1
 800615a:	45d8      	cmp	r8, fp
 800615c:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 8006160:	54ee      	strb	r6, [r5, r3]
 8006162:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
 8006166:	d011      	beq.n	800618c <d_print_mod_list+0x1c4>
 8006168:	f818 6f01 	ldrb.w	r6, [r8, #1]!
 800616c:	29ff      	cmp	r1, #255	; 0xff
 800616e:	d1f2      	bne.n	8006156 <d_print_mod_list+0x18e>
 8006170:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
 8006174:	f885 a0ff 	strb.w	sl, [r5, #255]	; 0xff
 8006178:	4628      	mov	r0, r5
 800617a:	4798      	blx	r3
 800617c:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 8006180:	3301      	adds	r3, #1
 8006182:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 8006186:	2101      	movs	r1, #1
 8006188:	2300      	movs	r3, #0
 800618a:	e7e6      	b.n	800615a <d_print_mod_list+0x192>
 800618c:	68e2      	ldr	r2, [r4, #12]
 800618e:	4929      	ldr	r1, [pc, #164]	; (8006234 <d_print_mod_list+0x26c>)
 8006190:	3201      	adds	r2, #1
 8006192:	a801      	add	r0, sp, #4
 8006194:	f008 f8a6 	bl	800e2e4 <sprintf>
 8006198:	a801      	add	r0, sp, #4
 800619a:	f001 fed1 	bl	8007f40 <strlen>
 800619e:	b318      	cbz	r0, 80061e8 <d_print_mod_list+0x220>
 80061a0:	ae01      	add	r6, sp, #4
 80061a2:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 80061a6:	eb06 0b00 	add.w	fp, r6, r0
 80061aa:	f04f 0a00 	mov.w	sl, #0
 80061ae:	e009      	b.n	80061c4 <d_print_mod_list+0x1fc>
 80061b0:	460b      	mov	r3, r1
 80061b2:	3101      	adds	r1, #1
 80061b4:	45b3      	cmp	fp, r6
 80061b6:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 80061ba:	f805 8003 	strb.w	r8, [r5, r3]
 80061be:	f885 8104 	strb.w	r8, [r5, #260]	; 0x104
 80061c2:	d013      	beq.n	80061ec <d_print_mod_list+0x224>
 80061c4:	29ff      	cmp	r1, #255	; 0xff
 80061c6:	f816 8b01 	ldrb.w	r8, [r6], #1
 80061ca:	d1f1      	bne.n	80061b0 <d_print_mod_list+0x1e8>
 80061cc:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
 80061d0:	f885 a0ff 	strb.w	sl, [r5, #255]	; 0xff
 80061d4:	4628      	mov	r0, r5
 80061d6:	4798      	blx	r3
 80061d8:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 80061dc:	3301      	adds	r3, #1
 80061de:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 80061e2:	2101      	movs	r1, #1
 80061e4:	2300      	movs	r3, #0
 80061e6:	e7e5      	b.n	80061b4 <d_print_mod_list+0x1ec>
 80061e8:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 80061ec:	f8df 8050 	ldr.w	r8, [pc, #80]	; 8006240 <d_print_mod_list+0x278>
 80061f0:	267d      	movs	r6, #125	; 0x7d
 80061f2:	f108 0b02 	add.w	fp, r8, #2
 80061f6:	f04f 0a00 	mov.w	sl, #0
 80061fa:	e00b      	b.n	8006214 <d_print_mod_list+0x24c>
 80061fc:	460b      	mov	r3, r1
 80061fe:	3101      	adds	r1, #1
 8006200:	45c3      	cmp	fp, r8
 8006202:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 8006206:	54ee      	strb	r6, [r5, r3]
 8006208:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
 800620c:	f43f af64 	beq.w	80060d8 <d_print_mod_list+0x110>
 8006210:	f818 6f01 	ldrb.w	r6, [r8, #1]!
 8006214:	29ff      	cmp	r1, #255	; 0xff
 8006216:	d1f1      	bne.n	80061fc <d_print_mod_list+0x234>
 8006218:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
 800621c:	f885 a0ff 	strb.w	sl, [r5, #255]	; 0xff
 8006220:	4628      	mov	r0, r5
 8006222:	4798      	blx	r3
 8006224:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 8006228:	3301      	adds	r3, #1
 800622a:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 800622e:	2101      	movs	r1, #1
 8006230:	2300      	movs	r3, #0
 8006232:	e7e5      	b.n	8006200 <d_print_mod_list+0x238>
 8006234:	08012ce4 	.word	0x08012ce4
 8006238:	08012cd0 	.word	0x08012cd0
 800623c:	08012cd4 	.word	0x08012cd4
 8006240:	08012ce8 	.word	0x08012ce8

08006244 <d_print_array_type.isra.13>:
 8006244:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006248:	4604      	mov	r4, r0
 800624a:	460f      	mov	r7, r1
 800624c:	4690      	mov	r8, r2
 800624e:	b16b      	cbz	r3, 800626c <d_print_array_type.isra.13+0x28>
 8006250:	461e      	mov	r6, r3
 8006252:	461a      	mov	r2, r3
 8006254:	6893      	ldr	r3, [r2, #8]
 8006256:	2b00      	cmp	r3, #0
 8006258:	d058      	beq.n	800630c <d_print_array_type.isra.13+0xc8>
 800625a:	6812      	ldr	r2, [r2, #0]
 800625c:	2a00      	cmp	r2, #0
 800625e:	d1f9      	bne.n	8006254 <d_print_array_type.isra.13+0x10>
 8006260:	4613      	mov	r3, r2
 8006262:	4639      	mov	r1, r7
 8006264:	4632      	mov	r2, r6
 8006266:	4620      	mov	r0, r4
 8006268:	f7ff feae 	bl	8005fc8 <d_print_mod_list>
 800626c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8006270:	2bff      	cmp	r3, #255	; 0xff
 8006272:	d057      	beq.n	8006324 <d_print_array_type.isra.13+0xe0>
 8006274:	2220      	movs	r2, #32
 8006276:	1c59      	adds	r1, r3, #1
 8006278:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800627c:	54e2      	strb	r2, [r4, r3]
 800627e:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8006282:	29ff      	cmp	r1, #255	; 0xff
 8006284:	d01a      	beq.n	80062bc <d_print_array_type.isra.13+0x78>
 8006286:	225b      	movs	r2, #91	; 0x5b
 8006288:	1c4b      	adds	r3, r1, #1
 800628a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800628e:	5462      	strb	r2, [r4, r1]
 8006290:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8006294:	f8d8 2000 	ldr.w	r2, [r8]
 8006298:	b12a      	cbz	r2, 80062a6 <d_print_array_type.isra.13+0x62>
 800629a:	4639      	mov	r1, r7
 800629c:	4620      	mov	r0, r4
 800629e:	f7fc fa51 	bl	8002744 <d_print_comp>
 80062a2:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80062a6:	2bff      	cmp	r3, #255	; 0xff
 80062a8:	d020      	beq.n	80062ec <d_print_array_type.isra.13+0xa8>
 80062aa:	1c59      	adds	r1, r3, #1
 80062ac:	225d      	movs	r2, #93	; 0x5d
 80062ae:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80062b2:	54e2      	strb	r2, [r4, r3]
 80062b4:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80062b8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062bc:	2300      	movs	r3, #0
 80062be:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 80062c2:	4620      	mov	r0, r4
 80062c4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80062c8:	4798      	blx	r3
 80062ca:	235b      	movs	r3, #91	; 0x5b
 80062cc:	7023      	strb	r3, [r4, #0]
 80062ce:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80062d2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80062d6:	f8d8 2000 	ldr.w	r2, [r8]
 80062da:	1c59      	adds	r1, r3, #1
 80062dc:	2301      	movs	r3, #1
 80062de:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 80062e2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80062e6:	2a00      	cmp	r2, #0
 80062e8:	d1d7      	bne.n	800629a <d_print_array_type.isra.13+0x56>
 80062ea:	e7de      	b.n	80062aa <d_print_array_type.isra.13+0x66>
 80062ec:	2500      	movs	r5, #0
 80062ee:	4619      	mov	r1, r3
 80062f0:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80062f4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80062f8:	4620      	mov	r0, r4
 80062fa:	4798      	blx	r3
 80062fc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006300:	1c5a      	adds	r2, r3, #1
 8006302:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8006306:	462b      	mov	r3, r5
 8006308:	2101      	movs	r1, #1
 800630a:	e7cf      	b.n	80062ac <d_print_array_type.isra.13+0x68>
 800630c:	6852      	ldr	r2, [r2, #4]
 800630e:	7812      	ldrb	r2, [r2, #0]
 8006310:	2a2a      	cmp	r2, #42	; 0x2a
 8006312:	d122      	bne.n	800635a <d_print_array_type.isra.13+0x116>
 8006314:	4639      	mov	r1, r7
 8006316:	4632      	mov	r2, r6
 8006318:	4620      	mov	r0, r4
 800631a:	f7ff fe55 	bl	8005fc8 <d_print_mod_list>
 800631e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006322:	e7ae      	b.n	8006282 <d_print_array_type.isra.13+0x3e>
 8006324:	2200      	movs	r2, #0
 8006326:	4619      	mov	r1, r3
 8006328:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 800632c:	4620      	mov	r0, r4
 800632e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8006332:	4798      	blx	r3
 8006334:	f645 3220 	movw	r2, #23328	; 0x5b20
 8006338:	235b      	movs	r3, #91	; 0x5b
 800633a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800633e:	8022      	strh	r2, [r4, #0]
 8006340:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006344:	f8d8 2000 	ldr.w	r2, [r8]
 8006348:	1c59      	adds	r1, r3, #1
 800634a:	2302      	movs	r3, #2
 800634c:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 8006350:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8006354:	2a00      	cmp	r2, #0
 8006356:	d1a0      	bne.n	800629a <d_print_array_type.isra.13+0x56>
 8006358:	e7a7      	b.n	80062aa <d_print_array_type.isra.13+0x66>
 800635a:	f8df a0a0 	ldr.w	sl, [pc, #160]	; 80063fc <d_print_array_type.isra.13+0x1b8>
 800635e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006362:	461d      	mov	r5, r3
 8006364:	f10a 0b01 	add.w	fp, sl, #1
 8006368:	f04f 0920 	mov.w	r9, #32
 800636c:	e00c      	b.n	8006388 <d_print_array_type.isra.13+0x144>
 800636e:	460b      	mov	r3, r1
 8006370:	45d3      	cmp	fp, sl
 8006372:	f101 0101 	add.w	r1, r1, #1
 8006376:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800637a:	f804 9003 	strb.w	r9, [r4, r3]
 800637e:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8006382:	d018      	beq.n	80063b6 <d_print_array_type.isra.13+0x172>
 8006384:	f81a 9f01 	ldrb.w	r9, [sl, #1]!
 8006388:	29ff      	cmp	r1, #255	; 0xff
 800638a:	d1f0      	bne.n	800636e <d_print_array_type.isra.13+0x12a>
 800638c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8006390:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8006394:	4620      	mov	r0, r4
 8006396:	4798      	blx	r3
 8006398:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800639c:	3301      	adds	r3, #1
 800639e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80063a2:	2300      	movs	r3, #0
 80063a4:	2101      	movs	r1, #1
 80063a6:	45d3      	cmp	fp, sl
 80063a8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80063ac:	f804 9003 	strb.w	r9, [r4, r3]
 80063b0:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80063b4:	d1e6      	bne.n	8006384 <d_print_array_type.isra.13+0x140>
 80063b6:	4639      	mov	r1, r7
 80063b8:	4632      	mov	r2, r6
 80063ba:	2300      	movs	r3, #0
 80063bc:	4620      	mov	r0, r4
 80063be:	f7ff fe03 	bl	8005fc8 <d_print_mod_list>
 80063c2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80063c6:	29ff      	cmp	r1, #255	; 0xff
 80063c8:	d007      	beq.n	80063da <d_print_array_type.isra.13+0x196>
 80063ca:	2229      	movs	r2, #41	; 0x29
 80063cc:	1c4b      	adds	r3, r1, #1
 80063ce:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80063d2:	5462      	strb	r2, [r4, r1]
 80063d4:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80063d8:	e74a      	b.n	8006270 <d_print_array_type.isra.13+0x2c>
 80063da:	2300      	movs	r3, #0
 80063dc:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 80063e0:	4620      	mov	r0, r4
 80063e2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80063e6:	4798      	blx	r3
 80063e8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80063ec:	2229      	movs	r2, #41	; 0x29
 80063ee:	3301      	adds	r3, #1
 80063f0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80063f4:	7022      	strb	r2, [r4, #0]
 80063f6:	2301      	movs	r3, #1
 80063f8:	e73c      	b.n	8006274 <d_print_array_type.isra.13+0x30>
 80063fa:	bf00      	nop
 80063fc:	08012ed0 	.word	0x08012ed0

08006400 <d_print_expr_op>:
 8006400:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006404:	7815      	ldrb	r5, [r2, #0]
 8006406:	2d31      	cmp	r5, #49	; 0x31
 8006408:	d003      	beq.n	8006412 <d_print_expr_op+0x12>
 800640a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800640e:	f7fc b999 	b.w	8002744 <d_print_comp>
 8006412:	6893      	ldr	r3, [r2, #8]
 8006414:	e9d3 5601 	ldrd	r5, r6, [r3, #4]
 8006418:	b35e      	cbz	r6, 8006472 <d_print_expr_op+0x72>
 800641a:	442e      	add	r6, r5
 800641c:	4604      	mov	r4, r0
 800641e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8006422:	3e01      	subs	r6, #1
 8006424:	3d01      	subs	r5, #1
 8006426:	2700      	movs	r7, #0
 8006428:	e00a      	b.n	8006440 <d_print_expr_op+0x40>
 800642a:	460b      	mov	r3, r1
 800642c:	42b5      	cmp	r5, r6
 800642e:	f101 0101 	add.w	r1, r1, #1
 8006432:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006436:	f804 8003 	strb.w	r8, [r4, r3]
 800643a:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800643e:	d018      	beq.n	8006472 <d_print_expr_op+0x72>
 8006440:	29ff      	cmp	r1, #255	; 0xff
 8006442:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 8006446:	d1f0      	bne.n	800642a <d_print_expr_op+0x2a>
 8006448:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800644c:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8006450:	4620      	mov	r0, r4
 8006452:	4798      	blx	r3
 8006454:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006458:	3301      	adds	r3, #1
 800645a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800645e:	2300      	movs	r3, #0
 8006460:	2101      	movs	r1, #1
 8006462:	42b5      	cmp	r5, r6
 8006464:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006468:	f804 8003 	strb.w	r8, [r4, r3]
 800646c:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8006470:	d1e6      	bne.n	8006440 <d_print_expr_op+0x40>
 8006472:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006476:	bf00      	nop

08006478 <d_print_subexpr>:
 8006478:	7813      	ldrb	r3, [r2, #0]
 800647a:	2b01      	cmp	r3, #1
 800647c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006480:	4604      	mov	r4, r0
 8006482:	d922      	bls.n	80064ca <d_print_subexpr+0x52>
 8006484:	2b30      	cmp	r3, #48	; 0x30
 8006486:	d020      	beq.n	80064ca <d_print_subexpr+0x52>
 8006488:	2b06      	cmp	r3, #6
 800648a:	d01e      	beq.n	80064ca <d_print_subexpr+0x52>
 800648c:	f8d0 7100 	ldr.w	r7, [r0, #256]	; 0x100
 8006490:	2fff      	cmp	r7, #255	; 0xff
 8006492:	460e      	mov	r6, r1
 8006494:	4615      	mov	r5, r2
 8006496:	d01d      	beq.n	80064d4 <d_print_subexpr+0x5c>
 8006498:	1c7a      	adds	r2, r7, #1
 800649a:	2328      	movs	r3, #40	; 0x28
 800649c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80064a0:	4631      	mov	r1, r6
 80064a2:	55e3      	strb	r3, [r4, r7]
 80064a4:	462a      	mov	r2, r5
 80064a6:	4620      	mov	r0, r4
 80064a8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80064ac:	f7fc f94a 	bl	8002744 <d_print_comp>
 80064b0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80064b4:	29ff      	cmp	r1, #255	; 0xff
 80064b6:	d01d      	beq.n	80064f4 <d_print_subexpr+0x7c>
 80064b8:	1c4a      	adds	r2, r1, #1
 80064ba:	2329      	movs	r3, #41	; 0x29
 80064bc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80064c0:	5463      	strb	r3, [r4, r1]
 80064c2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80064c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80064ca:	4620      	mov	r0, r4
 80064cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80064d0:	f7fc b938 	b.w	8002744 <d_print_comp>
 80064d4:	f04f 0800 	mov.w	r8, #0
 80064d8:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 80064dc:	4639      	mov	r1, r7
 80064de:	f880 80ff 	strb.w	r8, [r0, #255]	; 0xff
 80064e2:	4798      	blx	r3
 80064e4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80064e8:	3301      	adds	r3, #1
 80064ea:	4647      	mov	r7, r8
 80064ec:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80064f0:	2201      	movs	r2, #1
 80064f2:	e7d2      	b.n	800649a <d_print_subexpr+0x22>
 80064f4:	2500      	movs	r5, #0
 80064f6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80064fa:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80064fe:	4620      	mov	r0, r4
 8006500:	4798      	blx	r3
 8006502:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006506:	3301      	adds	r3, #1
 8006508:	4629      	mov	r1, r5
 800650a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800650e:	2201      	movs	r2, #1
 8006510:	e7d3      	b.n	80064ba <d_print_subexpr+0x42>
 8006512:	bf00      	nop

08006514 <d_maybe_print_fold_expression.isra.19>:
 8006514:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006518:	6892      	ldr	r2, [r2, #8]
 800651a:	6812      	ldr	r2, [r2, #0]
 800651c:	7815      	ldrb	r5, [r2, #0]
 800651e:	2d66      	cmp	r5, #102	; 0x66
 8006520:	d12d      	bne.n	800657e <d_maybe_print_fold_expression.isra.19+0x6a>
 8006522:	681b      	ldr	r3, [r3, #0]
 8006524:	f8d0 7124 	ldr.w	r7, [r0, #292]	; 0x124
 8006528:	e9d3 8902 	ldrd	r8, r9, [r3, #8]
 800652c:	f899 3000 	ldrb.w	r3, [r9]
 8006530:	2b3b      	cmp	r3, #59	; 0x3b
 8006532:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8006536:	bf08      	it	eq
 8006538:	e9d9 9502 	ldrdeq	r9, r5, [r9, #8]
 800653c:	f8c0 3124 	str.w	r3, [r0, #292]	; 0x124
 8006540:	7853      	ldrb	r3, [r2, #1]
 8006542:	f1a3 034c 	sub.w	r3, r3, #76	; 0x4c
 8006546:	bf18      	it	ne
 8006548:	2500      	movne	r5, #0
 800654a:	460e      	mov	r6, r1
 800654c:	4604      	mov	r4, r0
 800654e:	2b26      	cmp	r3, #38	; 0x26
 8006550:	d82e      	bhi.n	80065b0 <d_maybe_print_fold_expression.isra.19+0x9c>
 8006552:	e8df f003 	tbb	[pc, r3]
 8006556:	2d6c      	.short	0x2d6c
 8006558:	2d2d2d2d 	.word	0x2d2d2d2d
 800655c:	2d2d2d6c 	.word	0x2d2d2d6c
 8006560:	2d2d2d2d 	.word	0x2d2d2d2d
 8006564:	2d2d2d2d 	.word	0x2d2d2d2d
 8006568:	2d2d2d2d 	.word	0x2d2d2d2d
 800656c:	2d2d2d2d 	.word	0x2d2d2d2d
 8006570:	2d2d2d2d 	.word	0x2d2d2d2d
 8006574:	2dc92d2d 	.word	0x2dc92d2d
 8006578:	2d2d2d2d 	.word	0x2d2d2d2d
 800657c:	32          	.byte	0x32
 800657d:	00          	.byte	0x00
 800657e:	2000      	movs	r0, #0
 8006580:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006584:	4642      	mov	r2, r8
 8006586:	4631      	mov	r1, r6
 8006588:	4620      	mov	r0, r4
 800658a:	f7ff ff39 	bl	8006400 <d_print_expr_op>
 800658e:	464a      	mov	r2, r9
 8006590:	4631      	mov	r1, r6
 8006592:	4620      	mov	r0, r4
 8006594:	f7ff ff70 	bl	8006478 <d_print_subexpr>
 8006598:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800659c:	29ff      	cmp	r1, #255	; 0xff
 800659e:	f000 80ca 	beq.w	8006736 <d_maybe_print_fold_expression.isra.19+0x222>
 80065a2:	1c4a      	adds	r2, r1, #1
 80065a4:	2329      	movs	r3, #41	; 0x29
 80065a6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80065aa:	5463      	strb	r3, [r4, r1]
 80065ac:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80065b0:	f8c4 7124 	str.w	r7, [r4, #292]	; 0x124
 80065b4:	2001      	movs	r0, #1
 80065b6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80065ba:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80065be:	29ff      	cmp	r1, #255	; 0xff
 80065c0:	f000 80c8 	beq.w	8006754 <d_maybe_print_fold_expression.isra.19+0x240>
 80065c4:	1c4a      	adds	r2, r1, #1
 80065c6:	2328      	movs	r3, #40	; 0x28
 80065c8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80065cc:	4620      	mov	r0, r4
 80065ce:	5463      	strb	r3, [r4, r1]
 80065d0:	464a      	mov	r2, r9
 80065d2:	4631      	mov	r1, r6
 80065d4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80065d8:	4d65      	ldr	r5, [pc, #404]	; (8006770 <d_maybe_print_fold_expression.isra.19+0x25c>)
 80065da:	f7ff ff4d 	bl	8006478 <d_print_subexpr>
 80065de:	4631      	mov	r1, r6
 80065e0:	4642      	mov	r2, r8
 80065e2:	4620      	mov	r0, r4
 80065e4:	f7ff ff0c 	bl	8006400 <d_print_expr_op>
 80065e8:	f105 0903 	add.w	r9, r5, #3
 80065ec:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80065f0:	262e      	movs	r6, #46	; 0x2e
 80065f2:	f04f 0800 	mov.w	r8, #0
 80065f6:	e00a      	b.n	800660e <d_maybe_print_fold_expression.isra.19+0xfa>
 80065f8:	460b      	mov	r3, r1
 80065fa:	3101      	adds	r1, #1
 80065fc:	454d      	cmp	r5, r9
 80065fe:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006602:	54e6      	strb	r6, [r4, r3]
 8006604:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8006608:	d0d2      	beq.n	80065b0 <d_maybe_print_fold_expression.isra.19+0x9c>
 800660a:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800660e:	29ff      	cmp	r1, #255	; 0xff
 8006610:	d1f2      	bne.n	80065f8 <d_maybe_print_fold_expression.isra.19+0xe4>
 8006612:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8006616:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800661a:	4620      	mov	r0, r4
 800661c:	4798      	blx	r3
 800661e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006622:	3301      	adds	r3, #1
 8006624:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8006628:	2101      	movs	r1, #1
 800662a:	2300      	movs	r3, #0
 800662c:	e7e6      	b.n	80065fc <d_maybe_print_fold_expression.isra.19+0xe8>
 800662e:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8006632:	2bff      	cmp	r3, #255	; 0xff
 8006634:	d10f      	bne.n	8006656 <d_maybe_print_fold_expression.isra.19+0x142>
 8006636:	f04f 0a00 	mov.w	sl, #0
 800663a:	4619      	mov	r1, r3
 800663c:	f880 a0ff 	strb.w	sl, [r0, #255]	; 0xff
 8006640:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 8006644:	4798      	blx	r3
 8006646:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800664a:	f8c4 a100 	str.w	sl, [r4, #256]	; 0x100
 800664e:	1c5a      	adds	r2, r3, #1
 8006650:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8006654:	4653      	mov	r3, sl
 8006656:	1c59      	adds	r1, r3, #1
 8006658:	f04f 0c28 	mov.w	ip, #40	; 0x28
 800665c:	464a      	mov	r2, r9
 800665e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006662:	4620      	mov	r0, r4
 8006664:	f804 c003 	strb.w	ip, [r4, r3]
 8006668:	4631      	mov	r1, r6
 800666a:	f884 c104 	strb.w	ip, [r4, #260]	; 0x104
 800666e:	f8df 9108 	ldr.w	r9, [pc, #264]	; 8006778 <d_maybe_print_fold_expression.isra.19+0x264>
 8006672:	f7ff ff01 	bl	8006478 <d_print_subexpr>
 8006676:	4631      	mov	r1, r6
 8006678:	4642      	mov	r2, r8
 800667a:	4620      	mov	r0, r4
 800667c:	f7ff fec0 	bl	8006400 <d_print_expr_op>
 8006680:	f109 0b02 	add.w	fp, r9, #2
 8006684:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006688:	f04f 0a2e 	mov.w	sl, #46	; 0x2e
 800668c:	e00c      	b.n	80066a8 <d_maybe_print_fold_expression.isra.19+0x194>
 800668e:	460b      	mov	r3, r1
 8006690:	45cb      	cmp	fp, r9
 8006692:	f101 0101 	add.w	r1, r1, #1
 8006696:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800669a:	f804 a003 	strb.w	sl, [r4, r3]
 800669e:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80066a2:	d01a      	beq.n	80066da <d_maybe_print_fold_expression.isra.19+0x1c6>
 80066a4:	f819 af01 	ldrb.w	sl, [r9, #1]!
 80066a8:	29ff      	cmp	r1, #255	; 0xff
 80066aa:	d1f0      	bne.n	800668e <d_maybe_print_fold_expression.isra.19+0x17a>
 80066ac:	f04f 0300 	mov.w	r3, #0
 80066b0:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 80066b4:	4620      	mov	r0, r4
 80066b6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80066ba:	4798      	blx	r3
 80066bc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80066c0:	3301      	adds	r3, #1
 80066c2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80066c6:	2300      	movs	r3, #0
 80066c8:	2101      	movs	r1, #1
 80066ca:	45cb      	cmp	fp, r9
 80066cc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80066d0:	f804 a003 	strb.w	sl, [r4, r3]
 80066d4:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80066d8:	d1e4      	bne.n	80066a4 <d_maybe_print_fold_expression.isra.19+0x190>
 80066da:	4642      	mov	r2, r8
 80066dc:	4631      	mov	r1, r6
 80066de:	4620      	mov	r0, r4
 80066e0:	f7ff fe8e 	bl	8006400 <d_print_expr_op>
 80066e4:	462a      	mov	r2, r5
 80066e6:	e753      	b.n	8006590 <d_maybe_print_fold_expression.isra.19+0x7c>
 80066e8:	4d22      	ldr	r5, [pc, #136]	; (8006774 <d_maybe_print_fold_expression.isra.19+0x260>)
 80066ea:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80066ee:	f105 0b03 	add.w	fp, r5, #3
 80066f2:	f04f 0a28 	mov.w	sl, #40	; 0x28
 80066f6:	e00c      	b.n	8006712 <d_maybe_print_fold_expression.isra.19+0x1fe>
 80066f8:	460b      	mov	r3, r1
 80066fa:	3101      	adds	r1, #1
 80066fc:	45ab      	cmp	fp, r5
 80066fe:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006702:	f804 a003 	strb.w	sl, [r4, r3]
 8006706:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 800670a:	f43f af3b 	beq.w	8006584 <d_maybe_print_fold_expression.isra.19+0x70>
 800670e:	f815 af01 	ldrb.w	sl, [r5, #1]!
 8006712:	29ff      	cmp	r1, #255	; 0xff
 8006714:	d1f0      	bne.n	80066f8 <d_maybe_print_fold_expression.isra.19+0x1e4>
 8006716:	f04f 0300 	mov.w	r3, #0
 800671a:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 800671e:	4620      	mov	r0, r4
 8006720:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8006724:	4798      	blx	r3
 8006726:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800672a:	3301      	adds	r3, #1
 800672c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8006730:	2101      	movs	r1, #1
 8006732:	2300      	movs	r3, #0
 8006734:	e7e2      	b.n	80066fc <d_maybe_print_fold_expression.isra.19+0x1e8>
 8006736:	2500      	movs	r5, #0
 8006738:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800673c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8006740:	4620      	mov	r0, r4
 8006742:	4798      	blx	r3
 8006744:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006748:	3301      	adds	r3, #1
 800674a:	4629      	mov	r1, r5
 800674c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8006750:	2201      	movs	r2, #1
 8006752:	e727      	b.n	80065a4 <d_maybe_print_fold_expression.isra.19+0x90>
 8006754:	2500      	movs	r5, #0
 8006756:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 800675a:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 800675e:	4798      	blx	r3
 8006760:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006764:	3301      	adds	r3, #1
 8006766:	4629      	mov	r1, r5
 8006768:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800676c:	2201      	movs	r2, #1
 800676e:	e72a      	b.n	80065c6 <d_maybe_print_fold_expression.isra.19+0xb2>
 8006770:	08012fd0 	.word	0x08012fd0
 8006774:	08012fc8 	.word	0x08012fc8
 8006778:	08012ed4 	.word	0x08012ed4

0800677c <d_demangle_callback.constprop.21>:
 800677c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006780:	b0e5      	sub	sp, #404	; 0x194
 8006782:	f890 8000 	ldrb.w	r8, [r0]
 8006786:	f1b8 0f5f 	cmp.w	r8, #95	; 0x5f
 800678a:	af00      	add	r7, sp, #0
 800678c:	4681      	mov	r9, r0
 800678e:	460e      	mov	r6, r1
 8006790:	4615      	mov	r5, r2
 8006792:	f000 80f0 	beq.w	8006976 <d_demangle_callback.constprop.21+0x1fa>
 8006796:	2208      	movs	r2, #8
 8006798:	49bb      	ldr	r1, [pc, #748]	; (8006a88 <d_demangle_callback.constprop.21+0x30c>)
 800679a:	4648      	mov	r0, r9
 800679c:	f007 fdc4 	bl	800e328 <strncmp>
 80067a0:	b950      	cbnz	r0, 80067b8 <d_demangle_callback.constprop.21+0x3c>
 80067a2:	f899 3008 	ldrb.w	r3, [r9, #8]
 80067a6:	2b2e      	cmp	r3, #46	; 0x2e
 80067a8:	f000 80d2 	beq.w	8006950 <d_demangle_callback.constprop.21+0x1d4>
 80067ac:	2b5f      	cmp	r3, #95	; 0x5f
 80067ae:	f000 80cf 	beq.w	8006950 <d_demangle_callback.constprop.21+0x1d4>
 80067b2:	2b24      	cmp	r3, #36	; 0x24
 80067b4:	f000 80cc 	beq.w	8006950 <d_demangle_callback.constprop.21+0x1d4>
 80067b8:	f04f 0a00 	mov.w	sl, #0
 80067bc:	4648      	mov	r0, r9
 80067be:	f001 fbbf 	bl	8007f40 <strlen>
 80067c2:	466b      	mov	r3, sp
 80067c4:	0084      	lsls	r4, r0, #2
 80067c6:	eba3 1340 	sub.w	r3, r3, r0, lsl #5
 80067ca:	3407      	adds	r4, #7
 80067cc:	469d      	mov	sp, r3
 80067ce:	f024 0407 	bic.w	r4, r4, #7
 80067d2:	46eb      	mov	fp, sp
 80067d4:	eb09 0100 	add.w	r1, r9, r0
 80067d8:	ebad 0d04 	sub.w	sp, sp, r4
 80067dc:	0043      	lsls	r3, r0, #1
 80067de:	2400      	movs	r4, #0
 80067e0:	2211      	movs	r2, #17
 80067e2:	f1ba 0f01 	cmp.w	sl, #1
 80067e6:	f8c7 d028 	str.w	sp, [r7, #40]	; 0x28
 80067ea:	f8c7 b01c 	str.w	fp, [r7, #28]
 80067ee:	f8c7 900c 	str.w	r9, [r7, #12]
 80067f2:	f8c7 9018 	str.w	r9, [r7, #24]
 80067f6:	6338      	str	r0, [r7, #48]	; 0x30
 80067f8:	6139      	str	r1, [r7, #16]
 80067fa:	627b      	str	r3, [r7, #36]	; 0x24
 80067fc:	617a      	str	r2, [r7, #20]
 80067fe:	623c      	str	r4, [r7, #32]
 8006800:	62fc      	str	r4, [r7, #44]	; 0x2c
 8006802:	e9c7 440d 	strd	r4, r4, [r7, #52]	; 0x34
 8006806:	e9c7 440f 	strd	r4, r4, [r7, #60]	; 0x3c
 800680a:	f000 8098 	beq.w	800693e <d_demangle_callback.constprop.21+0x1c2>
 800680e:	f1ba 0f00 	cmp.w	sl, #0
 8006812:	f000 80b7 	beq.w	8006984 <d_demangle_callback.constprop.21+0x208>
 8006816:	f899 200b 	ldrb.w	r2, [r9, #11]
 800681a:	f1ba 0f02 	cmp.w	sl, #2
 800681e:	bf08      	it	eq
 8006820:	f04f 0843 	moveq.w	r8, #67	; 0x43
 8006824:	f109 0a0b 	add.w	sl, r9, #11
 8006828:	bf18      	it	ne
 800682a:	f04f 0844 	movne.w	r8, #68	; 0x44
 800682e:	2a5f      	cmp	r2, #95	; 0x5f
 8006830:	f8c7 a018 	str.w	sl, [r7, #24]
 8006834:	f000 80af 	beq.w	8006996 <d_demangle_callback.constprop.21+0x21a>
 8006838:	4650      	mov	r0, sl
 800683a:	607b      	str	r3, [r7, #4]
 800683c:	f001 fb80 	bl	8007f40 <strlen>
 8006840:	687b      	ldr	r3, [r7, #4]
 8006842:	2b00      	cmp	r3, #0
 8006844:	f340 80ca 	ble.w	80069dc <d_demangle_callback.constprop.21+0x260>
 8006848:	2300      	movs	r3, #0
 800684a:	2201      	movs	r2, #1
 800684c:	f8cb 3004 	str.w	r3, [fp, #4]
 8006850:	623a      	str	r2, [r7, #32]
 8006852:	2800      	cmp	r0, #0
 8006854:	f000 80c2 	beq.w	80069dc <d_demangle_callback.constprop.21+0x260>
 8006858:	e9cb a002 	strd	sl, r0, [fp, #8]
 800685c:	f88b 3000 	strb.w	r3, [fp]
 8006860:	4641      	mov	r1, r8
 8006862:	2300      	movs	r3, #0
 8006864:	465a      	mov	r2, fp
 8006866:	f107 000c 	add.w	r0, r7, #12
 800686a:	f7f9 fd4d 	bl	8000308 <d_make_comp>
 800686e:	69bc      	ldr	r4, [r7, #24]
 8006870:	4680      	mov	r8, r0
 8006872:	4620      	mov	r0, r4
 8006874:	f001 fb64 	bl	8007f40 <strlen>
 8006878:	1823      	adds	r3, r4, r0
 800687a:	61bb      	str	r3, [r7, #24]
 800687c:	f814 9000 	ldrb.w	r9, [r4, r0]
 8006880:	f1b9 0f00 	cmp.w	r9, #0
 8006884:	d15e      	bne.n	8006944 <d_demangle_callback.constprop.21+0x1c8>
 8006886:	f1b8 0f00 	cmp.w	r8, #0
 800688a:	d05b      	beq.n	8006944 <d_demangle_callback.constprop.21+0x1c8>
 800688c:	f107 0444 	add.w	r4, r7, #68	; 0x44
 8006890:	4642      	mov	r2, r8
 8006892:	f507 71be 	add.w	r1, r7, #380	; 0x17c
 8006896:	f507 70c4 	add.w	r0, r7, #392	; 0x188
 800689a:	f8c4 510c 	str.w	r5, [r4, #268]	; 0x10c
 800689e:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 80068a2:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80068a6:	e9c4 9944 	strd	r9, r9, [r4, #272]	; 0x110
 80068aa:	e9c4 9949 	strd	r9, r9, [r4, #292]	; 0x124
 80068ae:	f8c4 6108 	str.w	r6, [r4, #264]	; 0x108
 80068b2:	e9c4 9946 	strd	r9, r9, [r4, #280]	; 0x118
 80068b6:	f8c4 9120 	str.w	r9, [r4, #288]	; 0x120
 80068ba:	e9c4 994b 	strd	r9, r9, [r4, #300]	; 0x12c
 80068be:	e9c4 994d 	strd	r9, r9, [r4, #308]	; 0x134
 80068c2:	e9c4 994f 	strd	r9, r9, [r4, #316]	; 0x13c
 80068c6:	f8c4 9144 	str.w	r9, [r4, #324]	; 0x144
 80068ca:	f7f9 fd7f 	bl	80003cc <d_count_templates_scopes>
 80068ce:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 80068d2:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 80068d6:	f8c4 9148 	str.w	r9, [r4, #328]	; 0x148
 80068da:	2a01      	cmp	r2, #1
 80068dc:	466d      	mov	r5, sp
 80068de:	4611      	mov	r1, r2
 80068e0:	bfb8      	it	lt
 80068e2:	2101      	movlt	r1, #1
 80068e4:	fb03 f302 	mul.w	r3, r3, r2
 80068e8:	eba5 02c1 	sub.w	r2, r5, r1, lsl #3
 80068ec:	2b01      	cmp	r3, #1
 80068ee:	4695      	mov	sp, r2
 80068f0:	4618      	mov	r0, r3
 80068f2:	4669      	mov	r1, sp
 80068f4:	bfb8      	it	lt
 80068f6:	2001      	movlt	r0, #1
 80068f8:	eba1 00c0 	sub.w	r0, r1, r0, lsl #3
 80068fc:	4685      	mov	sp, r0
 80068fe:	4642      	mov	r2, r8
 8006900:	4620      	mov	r0, r4
 8006902:	f8c4 1130 	str.w	r1, [r4, #304]	; 0x130
 8006906:	2111      	movs	r1, #17
 8006908:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 800690c:	f8c4 d13c 	str.w	sp, [r4, #316]	; 0x13c
 8006910:	f7fb ff18 	bl	8002744 <d_print_comp>
 8006914:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006918:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800691c:	f804 9001 	strb.w	r9, [r4, r1]
 8006920:	4620      	mov	r0, r4
 8006922:	46ad      	mov	sp, r5
 8006924:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006928:	4798      	blx	r3
 800692a:	f8d4 0118 	ldr.w	r0, [r4, #280]	; 0x118
 800692e:	fab0 f080 	clz	r0, r0
 8006932:	0940      	lsrs	r0, r0, #5
 8006934:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8006938:	46bd      	mov	sp, r7
 800693a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800693e:	f1b8 0f5f 	cmp.w	r8, #95	; 0x5f
 8006942:	d037      	beq.n	80069b4 <d_demangle_callback.constprop.21+0x238>
 8006944:	2000      	movs	r0, #0
 8006946:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800694a:	46bd      	mov	sp, r7
 800694c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006950:	f899 3009 	ldrb.w	r3, [r9, #9]
 8006954:	2b44      	cmp	r3, #68	; 0x44
 8006956:	d002      	beq.n	800695e <d_demangle_callback.constprop.21+0x1e2>
 8006958:	2b49      	cmp	r3, #73	; 0x49
 800695a:	f47f af2d 	bne.w	80067b8 <d_demangle_callback.constprop.21+0x3c>
 800695e:	f899 200a 	ldrb.w	r2, [r9, #10]
 8006962:	2a5f      	cmp	r2, #95	; 0x5f
 8006964:	f47f af28 	bne.w	80067b8 <d_demangle_callback.constprop.21+0x3c>
 8006968:	2b49      	cmp	r3, #73	; 0x49
 800696a:	bf0c      	ite	eq
 800696c:	f04f 0a02 	moveq.w	sl, #2
 8006970:	f04f 0a03 	movne.w	sl, #3
 8006974:	e722      	b.n	80067bc <d_demangle_callback.constprop.21+0x40>
 8006976:	7843      	ldrb	r3, [r0, #1]
 8006978:	2b5a      	cmp	r3, #90	; 0x5a
 800697a:	f47f af0c 	bne.w	8006796 <d_demangle_callback.constprop.21+0x1a>
 800697e:	f04f 0a01 	mov.w	sl, #1
 8006982:	e71b      	b.n	80067bc <d_demangle_callback.constprop.21+0x40>
 8006984:	f107 000c 	add.w	r0, r7, #12
 8006988:	f7fa fd2e 	bl	80013e8 <d_type>
 800698c:	69bb      	ldr	r3, [r7, #24]
 800698e:	4680      	mov	r8, r0
 8006990:	f893 9000 	ldrb.w	r9, [r3]
 8006994:	e774      	b.n	8006880 <d_demangle_callback.constprop.21+0x104>
 8006996:	f899 200c 	ldrb.w	r2, [r9, #12]
 800699a:	2a5a      	cmp	r2, #90	; 0x5a
 800699c:	f47f af4c 	bne.w	8006838 <d_demangle_callback.constprop.21+0xbc>
 80069a0:	f109 030d 	add.w	r3, r9, #13
 80069a4:	4621      	mov	r1, r4
 80069a6:	f107 000c 	add.w	r0, r7, #12
 80069aa:	61bb      	str	r3, [r7, #24]
 80069ac:	f7fb fc2e 	bl	800220c <d_encoding>
 80069b0:	4683      	mov	fp, r0
 80069b2:	e755      	b.n	8006860 <d_demangle_callback.constprop.21+0xe4>
 80069b4:	f899 3001 	ldrb.w	r3, [r9, #1]
 80069b8:	2b5a      	cmp	r3, #90	; 0x5a
 80069ba:	d1c3      	bne.n	8006944 <d_demangle_callback.constprop.21+0x1c8>
 80069bc:	f109 0302 	add.w	r3, r9, #2
 80069c0:	4651      	mov	r1, sl
 80069c2:	f107 000c 	add.w	r0, r7, #12
 80069c6:	61bb      	str	r3, [r7, #24]
 80069c8:	f7fb fc20 	bl	800220c <d_encoding>
 80069cc:	697b      	ldr	r3, [r7, #20]
 80069ce:	07db      	lsls	r3, r3, #31
 80069d0:	4680      	mov	r8, r0
 80069d2:	d424      	bmi.n	8006a1e <d_demangle_callback.constprop.21+0x2a2>
 80069d4:	69bb      	ldr	r3, [r7, #24]
 80069d6:	f893 9000 	ldrb.w	r9, [r3]
 80069da:	e751      	b.n	8006880 <d_demangle_callback.constprop.21+0x104>
 80069dc:	f04f 0b00 	mov.w	fp, #0
 80069e0:	e73e      	b.n	8006860 <d_demangle_callback.constprop.21+0xe4>
 80069e2:	e9d7 2108 	ldrd	r2, r1, [r7, #32]
 80069e6:	428a      	cmp	r2, r1
 80069e8:	61bb      	str	r3, [r7, #24]
 80069ea:	eba3 0c00 	sub.w	ip, r3, r0
 80069ee:	da3d      	bge.n	8006a6c <d_demangle_callback.constprop.21+0x2f0>
 80069f0:	f8d7 e01c 	ldr.w	lr, [r7, #28]
 80069f4:	0111      	lsls	r1, r2, #4
 80069f6:	eb0e 0301 	add.w	r3, lr, r1
 80069fa:	3201      	adds	r2, #1
 80069fc:	605c      	str	r4, [r3, #4]
 80069fe:	623a      	str	r2, [r7, #32]
 8006a00:	f1bc 0f00 	cmp.w	ip, #0
 8006a04:	d032      	beq.n	8006a6c <d_demangle_callback.constprop.21+0x2f0>
 8006a06:	605c      	str	r4, [r3, #4]
 8006a08:	f80e 4001 	strb.w	r4, [lr, r1]
 8006a0c:	e9c3 0c02 	strd	r0, ip, [r3, #8]
 8006a10:	4642      	mov	r2, r8
 8006a12:	214d      	movs	r1, #77	; 0x4d
 8006a14:	f107 000c 	add.w	r0, r7, #12
 8006a18:	f7f9 fc76 	bl	8000308 <d_make_comp>
 8006a1c:	4680      	mov	r8, r0
 8006a1e:	69b8      	ldr	r0, [r7, #24]
 8006a20:	f890 9000 	ldrb.w	r9, [r0]
 8006a24:	f1b9 0f2e 	cmp.w	r9, #46	; 0x2e
 8006a28:	f47f af2a 	bne.w	8006880 <d_demangle_callback.constprop.21+0x104>
 8006a2c:	7843      	ldrb	r3, [r0, #1]
 8006a2e:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8006a32:	2a19      	cmp	r2, #25
 8006a34:	d91c      	bls.n	8006a70 <d_demangle_callback.constprop.21+0x2f4>
 8006a36:	2b5f      	cmp	r3, #95	; 0x5f
 8006a38:	d01a      	beq.n	8006a70 <d_demangle_callback.constprop.21+0x2f4>
 8006a3a:	3b30      	subs	r3, #48	; 0x30
 8006a3c:	2b09      	cmp	r3, #9
 8006a3e:	d8c9      	bhi.n	80069d4 <d_demangle_callback.constprop.21+0x258>
 8006a40:	7802      	ldrb	r2, [r0, #0]
 8006a42:	4603      	mov	r3, r0
 8006a44:	2a2e      	cmp	r2, #46	; 0x2e
 8006a46:	d1cc      	bne.n	80069e2 <d_demangle_callback.constprop.21+0x266>
 8006a48:	785a      	ldrb	r2, [r3, #1]
 8006a4a:	3a30      	subs	r2, #48	; 0x30
 8006a4c:	2a09      	cmp	r2, #9
 8006a4e:	d8c8      	bhi.n	80069e2 <d_demangle_callback.constprop.21+0x266>
 8006a50:	789a      	ldrb	r2, [r3, #2]
 8006a52:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8006a56:	2909      	cmp	r1, #9
 8006a58:	f103 0302 	add.w	r3, r3, #2
 8006a5c:	d8f2      	bhi.n	8006a44 <d_demangle_callback.constprop.21+0x2c8>
 8006a5e:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8006a62:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8006a66:	2909      	cmp	r1, #9
 8006a68:	d9f9      	bls.n	8006a5e <d_demangle_callback.constprop.21+0x2e2>
 8006a6a:	e7eb      	b.n	8006a44 <d_demangle_callback.constprop.21+0x2c8>
 8006a6c:	2300      	movs	r3, #0
 8006a6e:	e7cf      	b.n	8006a10 <d_demangle_callback.constprop.21+0x294>
 8006a70:	1c81      	adds	r1, r0, #2
 8006a72:	460b      	mov	r3, r1
 8006a74:	f811 2b01 	ldrb.w	r2, [r1], #1
 8006a78:	f1a2 0c61 	sub.w	ip, r2, #97	; 0x61
 8006a7c:	f1bc 0f19 	cmp.w	ip, #25
 8006a80:	d9f7      	bls.n	8006a72 <d_demangle_callback.constprop.21+0x2f6>
 8006a82:	2a5f      	cmp	r2, #95	; 0x5f
 8006a84:	d0f5      	beq.n	8006a72 <d_demangle_callback.constprop.21+0x2f6>
 8006a86:	e7dd      	b.n	8006a44 <d_demangle_callback.constprop.21+0x2c8>
 8006a88:	08012c60 	.word	0x08012c60

08006a8c <__cxa_demangle>:
 8006a8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006a90:	b084      	sub	sp, #16
 8006a92:	2800      	cmp	r0, #0
 8006a94:	d041      	beq.n	8006b1a <__cxa_demangle+0x8e>
 8006a96:	b109      	cbz	r1, 8006a9c <__cxa_demangle+0x10>
 8006a98:	2a00      	cmp	r2, #0
 8006a9a:	d03e      	beq.n	8006b1a <__cxa_demangle+0x8e>
 8006a9c:	2400      	movs	r4, #0
 8006a9e:	4616      	mov	r6, r2
 8006aa0:	460d      	mov	r5, r1
 8006aa2:	466a      	mov	r2, sp
 8006aa4:	4929      	ldr	r1, [pc, #164]	; (8006b4c <__cxa_demangle+0xc0>)
 8006aa6:	461f      	mov	r7, r3
 8006aa8:	e9cd 4400 	strd	r4, r4, [sp]
 8006aac:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8006ab0:	f7ff fe64 	bl	800677c <d_demangle_callback.constprop.21>
 8006ab4:	2800      	cmp	r0, #0
 8006ab6:	d039      	beq.n	8006b2c <__cxa_demangle+0xa0>
 8006ab8:	9b03      	ldr	r3, [sp, #12]
 8006aba:	9c00      	ldr	r4, [sp, #0]
 8006abc:	b9d3      	cbnz	r3, 8006af4 <__cxa_demangle+0x68>
 8006abe:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8006ac2:	2c00      	cmp	r4, #0
 8006ac4:	d03c      	beq.n	8006b40 <__cxa_demangle+0xb4>
 8006ac6:	b32d      	cbz	r5, 8006b14 <__cxa_demangle+0x88>
 8006ac8:	4620      	mov	r0, r4
 8006aca:	f001 fa39 	bl	8007f40 <strlen>
 8006ace:	6833      	ldr	r3, [r6, #0]
 8006ad0:	4298      	cmp	r0, r3
 8006ad2:	d219      	bcs.n	8006b08 <__cxa_demangle+0x7c>
 8006ad4:	1c42      	adds	r2, r0, #1
 8006ad6:	4621      	mov	r1, r4
 8006ad8:	4628      	mov	r0, r5
 8006ada:	f001 f819 	bl	8007b10 <memcpy>
 8006ade:	4620      	mov	r0, r4
 8006ae0:	f006 fe0a 	bl	800d6f8 <free>
 8006ae4:	462c      	mov	r4, r5
 8006ae6:	b10f      	cbz	r7, 8006aec <__cxa_demangle+0x60>
 8006ae8:	2300      	movs	r3, #0
 8006aea:	603b      	str	r3, [r7, #0]
 8006aec:	4620      	mov	r0, r4
 8006aee:	b004      	add	sp, #16
 8006af0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006af4:	f04f 0801 	mov.w	r8, #1
 8006af8:	2c00      	cmp	r4, #0
 8006afa:	d1e4      	bne.n	8006ac6 <__cxa_demangle+0x3a>
 8006afc:	b18f      	cbz	r7, 8006b22 <__cxa_demangle+0x96>
 8006afe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8006b02:	603b      	str	r3, [r7, #0]
 8006b04:	2400      	movs	r4, #0
 8006b06:	e7f1      	b.n	8006aec <__cxa_demangle+0x60>
 8006b08:	4628      	mov	r0, r5
 8006b0a:	f006 fdf5 	bl	800d6f8 <free>
 8006b0e:	f8c6 8000 	str.w	r8, [r6]
 8006b12:	e7e8      	b.n	8006ae6 <__cxa_demangle+0x5a>
 8006b14:	2e00      	cmp	r6, #0
 8006b16:	d1fa      	bne.n	8006b0e <__cxa_demangle+0x82>
 8006b18:	e7e5      	b.n	8006ae6 <__cxa_demangle+0x5a>
 8006b1a:	b113      	cbz	r3, 8006b22 <__cxa_demangle+0x96>
 8006b1c:	f06f 0202 	mvn.w	r2, #2
 8006b20:	601a      	str	r2, [r3, #0]
 8006b22:	2400      	movs	r4, #0
 8006b24:	4620      	mov	r0, r4
 8006b26:	b004      	add	sp, #16
 8006b28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b2c:	9800      	ldr	r0, [sp, #0]
 8006b2e:	f006 fde3 	bl	800d6f8 <free>
 8006b32:	2f00      	cmp	r7, #0
 8006b34:	d0f5      	beq.n	8006b22 <__cxa_demangle+0x96>
 8006b36:	f06f 0301 	mvn.w	r3, #1
 8006b3a:	603b      	str	r3, [r7, #0]
 8006b3c:	2400      	movs	r4, #0
 8006b3e:	e7d5      	b.n	8006aec <__cxa_demangle+0x60>
 8006b40:	2f00      	cmp	r7, #0
 8006b42:	d0ee      	beq.n	8006b22 <__cxa_demangle+0x96>
 8006b44:	f1b8 0f01 	cmp.w	r8, #1
 8006b48:	d0d9      	beq.n	8006afe <__cxa_demangle+0x72>
 8006b4a:	e7f4      	b.n	8006b36 <__cxa_demangle+0xaa>
 8006b4c:	080009dd 	.word	0x080009dd

08006b50 <__gcclibcxx_demangle_callback>:
 8006b50:	b160      	cbz	r0, 8006b6c <__gcclibcxx_demangle_callback+0x1c>
 8006b52:	b508      	push	{r3, lr}
 8006b54:	b139      	cbz	r1, 8006b66 <__gcclibcxx_demangle_callback+0x16>
 8006b56:	f7ff fe11 	bl	800677c <d_demangle_callback.constprop.21>
 8006b5a:	2800      	cmp	r0, #0
 8006b5c:	bf14      	ite	ne
 8006b5e:	2000      	movne	r0, #0
 8006b60:	f06f 0001 	mvneq.w	r0, #1
 8006b64:	bd08      	pop	{r3, pc}
 8006b66:	f06f 0002 	mvn.w	r0, #2
 8006b6a:	bd08      	pop	{r3, pc}
 8006b6c:	f06f 0002 	mvn.w	r0, #2
 8006b70:	4770      	bx	lr
 8006b72:	bf00      	nop

08006b74 <selfrel_offset31>:
 8006b74:	6803      	ldr	r3, [r0, #0]
 8006b76:	005a      	lsls	r2, r3, #1
 8006b78:	bf4c      	ite	mi
 8006b7a:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 8006b7e:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 8006b82:	4418      	add	r0, r3
 8006b84:	4770      	bx	lr
 8006b86:	bf00      	nop

08006b88 <search_EIT_table>:
 8006b88:	b369      	cbz	r1, 8006be6 <search_EIT_table+0x5e>
 8006b8a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006b8e:	f101 39ff 	add.w	r9, r1, #4294967295	; 0xffffffff
 8006b92:	4617      	mov	r7, r2
 8006b94:	4606      	mov	r6, r0
 8006b96:	46c8      	mov	r8, r9
 8006b98:	f04f 0a00 	mov.w	sl, #0
 8006b9c:	eb0a 0408 	add.w	r4, sl, r8
 8006ba0:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 8006ba4:	1064      	asrs	r4, r4, #1
 8006ba6:	00e5      	lsls	r5, r4, #3
 8006ba8:	1971      	adds	r1, r6, r5
 8006baa:	4608      	mov	r0, r1
 8006bac:	f7ff ffe2 	bl	8006b74 <selfrel_offset31>
 8006bb0:	45a1      	cmp	r9, r4
 8006bb2:	4603      	mov	r3, r0
 8006bb4:	f105 0008 	add.w	r0, r5, #8
 8006bb8:	4430      	add	r0, r6
 8006bba:	d009      	beq.n	8006bd0 <search_EIT_table+0x48>
 8006bbc:	42bb      	cmp	r3, r7
 8006bbe:	d809      	bhi.n	8006bd4 <search_EIT_table+0x4c>
 8006bc0:	f7ff ffd8 	bl	8006b74 <selfrel_offset31>
 8006bc4:	3801      	subs	r0, #1
 8006bc6:	42b8      	cmp	r0, r7
 8006bc8:	d20a      	bcs.n	8006be0 <search_EIT_table+0x58>
 8006bca:	f104 0a01 	add.w	sl, r4, #1
 8006bce:	e7e5      	b.n	8006b9c <search_EIT_table+0x14>
 8006bd0:	42bb      	cmp	r3, r7
 8006bd2:	d905      	bls.n	8006be0 <search_EIT_table+0x58>
 8006bd4:	45a2      	cmp	sl, r4
 8006bd6:	d002      	beq.n	8006bde <search_EIT_table+0x56>
 8006bd8:	f104 38ff 	add.w	r8, r4, #4294967295	; 0xffffffff
 8006bdc:	e7de      	b.n	8006b9c <search_EIT_table+0x14>
 8006bde:	2100      	movs	r1, #0
 8006be0:	4608      	mov	r0, r1
 8006be2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006be6:	4608      	mov	r0, r1
 8006be8:	4770      	bx	lr
 8006bea:	bf00      	nop

08006bec <__gnu_unwind_get_pr_addr>:
 8006bec:	2801      	cmp	r0, #1
 8006bee:	d007      	beq.n	8006c00 <__gnu_unwind_get_pr_addr+0x14>
 8006bf0:	2802      	cmp	r0, #2
 8006bf2:	d007      	beq.n	8006c04 <__gnu_unwind_get_pr_addr+0x18>
 8006bf4:	4b04      	ldr	r3, [pc, #16]	; (8006c08 <__gnu_unwind_get_pr_addr+0x1c>)
 8006bf6:	2800      	cmp	r0, #0
 8006bf8:	bf0c      	ite	eq
 8006bfa:	4618      	moveq	r0, r3
 8006bfc:	2000      	movne	r0, #0
 8006bfe:	4770      	bx	lr
 8006c00:	4802      	ldr	r0, [pc, #8]	; (8006c0c <__gnu_unwind_get_pr_addr+0x20>)
 8006c02:	4770      	bx	lr
 8006c04:	4802      	ldr	r0, [pc, #8]	; (8006c10 <__gnu_unwind_get_pr_addr+0x24>)
 8006c06:	4770      	bx	lr
 8006c08:	080072c9 	.word	0x080072c9
 8006c0c:	080072cd 	.word	0x080072cd
 8006c10:	080072d1 	.word	0x080072d1

08006c14 <get_eit_entry>:
 8006c14:	b530      	push	{r4, r5, lr}
 8006c16:	4b24      	ldr	r3, [pc, #144]	; (8006ca8 <get_eit_entry+0x94>)
 8006c18:	b083      	sub	sp, #12
 8006c1a:	4604      	mov	r4, r0
 8006c1c:	1e8d      	subs	r5, r1, #2
 8006c1e:	b34b      	cbz	r3, 8006c74 <get_eit_entry+0x60>
 8006c20:	a901      	add	r1, sp, #4
 8006c22:	4628      	mov	r0, r5
 8006c24:	f3af 8000 	nop.w
 8006c28:	b1f0      	cbz	r0, 8006c68 <get_eit_entry+0x54>
 8006c2a:	9901      	ldr	r1, [sp, #4]
 8006c2c:	462a      	mov	r2, r5
 8006c2e:	f7ff ffab 	bl	8006b88 <search_EIT_table>
 8006c32:	4601      	mov	r1, r0
 8006c34:	b1c0      	cbz	r0, 8006c68 <get_eit_entry+0x54>
 8006c36:	f7ff ff9d 	bl	8006b74 <selfrel_offset31>
 8006c3a:	684b      	ldr	r3, [r1, #4]
 8006c3c:	64a0      	str	r0, [r4, #72]	; 0x48
 8006c3e:	2b01      	cmp	r3, #1
 8006c40:	d02e      	beq.n	8006ca0 <get_eit_entry+0x8c>
 8006c42:	2b00      	cmp	r3, #0
 8006c44:	f101 0004 	add.w	r0, r1, #4
 8006c48:	db26      	blt.n	8006c98 <get_eit_entry+0x84>
 8006c4a:	f7ff ff93 	bl	8006b74 <selfrel_offset31>
 8006c4e:	2300      	movs	r3, #0
 8006c50:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 8006c54:	6803      	ldr	r3, [r0, #0]
 8006c56:	2b00      	cmp	r3, #0
 8006c58:	db12      	blt.n	8006c80 <get_eit_entry+0x6c>
 8006c5a:	f7ff ff8b 	bl	8006b74 <selfrel_offset31>
 8006c5e:	2300      	movs	r3, #0
 8006c60:	6120      	str	r0, [r4, #16]
 8006c62:	4618      	mov	r0, r3
 8006c64:	b003      	add	sp, #12
 8006c66:	bd30      	pop	{r4, r5, pc}
 8006c68:	2300      	movs	r3, #0
 8006c6a:	6123      	str	r3, [r4, #16]
 8006c6c:	2309      	movs	r3, #9
 8006c6e:	4618      	mov	r0, r3
 8006c70:	b003      	add	sp, #12
 8006c72:	bd30      	pop	{r4, r5, pc}
 8006c74:	490d      	ldr	r1, [pc, #52]	; (8006cac <get_eit_entry+0x98>)
 8006c76:	480e      	ldr	r0, [pc, #56]	; (8006cb0 <get_eit_entry+0x9c>)
 8006c78:	1a09      	subs	r1, r1, r0
 8006c7a:	10c9      	asrs	r1, r1, #3
 8006c7c:	9101      	str	r1, [sp, #4]
 8006c7e:	e7d5      	b.n	8006c2c <get_eit_entry+0x18>
 8006c80:	f3c3 6003 	ubfx	r0, r3, #24, #4
 8006c84:	f7ff ffb2 	bl	8006bec <__gnu_unwind_get_pr_addr>
 8006c88:	2800      	cmp	r0, #0
 8006c8a:	bf14      	ite	ne
 8006c8c:	2300      	movne	r3, #0
 8006c8e:	2309      	moveq	r3, #9
 8006c90:	6120      	str	r0, [r4, #16]
 8006c92:	4618      	mov	r0, r3
 8006c94:	b003      	add	sp, #12
 8006c96:	bd30      	pop	{r4, r5, pc}
 8006c98:	2301      	movs	r3, #1
 8006c9a:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 8006c9e:	e7d9      	b.n	8006c54 <get_eit_entry+0x40>
 8006ca0:	2300      	movs	r3, #0
 8006ca2:	6123      	str	r3, [r4, #16]
 8006ca4:	2305      	movs	r3, #5
 8006ca6:	e7dc      	b.n	8006c62 <get_eit_entry+0x4e>
 8006ca8:	00000000 	.word	0x00000000
 8006cac:	08013aa4 	.word	0x08013aa4
 8006cb0:	0801390c 	.word	0x0801390c

08006cb4 <restore_non_core_regs>:
 8006cb4:	6803      	ldr	r3, [r0, #0]
 8006cb6:	07da      	lsls	r2, r3, #31
 8006cb8:	b510      	push	{r4, lr}
 8006cba:	4604      	mov	r4, r0
 8006cbc:	d406      	bmi.n	8006ccc <restore_non_core_regs+0x18>
 8006cbe:	079b      	lsls	r3, r3, #30
 8006cc0:	f100 0048 	add.w	r0, r0, #72	; 0x48
 8006cc4:	d509      	bpl.n	8006cda <restore_non_core_regs+0x26>
 8006cc6:	f000 fc59 	bl	800757c <__gnu_Unwind_Restore_VFP_D>
 8006cca:	6823      	ldr	r3, [r4, #0]
 8006ccc:	0759      	lsls	r1, r3, #29
 8006cce:	d509      	bpl.n	8006ce4 <restore_non_core_regs+0x30>
 8006cd0:	071a      	lsls	r2, r3, #28
 8006cd2:	d50e      	bpl.n	8006cf2 <restore_non_core_regs+0x3e>
 8006cd4:	06db      	lsls	r3, r3, #27
 8006cd6:	d513      	bpl.n	8006d00 <restore_non_core_regs+0x4c>
 8006cd8:	bd10      	pop	{r4, pc}
 8006cda:	f000 fc47 	bl	800756c <__gnu_Unwind_Restore_VFP>
 8006cde:	6823      	ldr	r3, [r4, #0]
 8006ce0:	0759      	lsls	r1, r3, #29
 8006ce2:	d4f5      	bmi.n	8006cd0 <restore_non_core_regs+0x1c>
 8006ce4:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8006ce8:	f000 fc50 	bl	800758c <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8006cec:	6823      	ldr	r3, [r4, #0]
 8006cee:	071a      	lsls	r2, r3, #28
 8006cf0:	d4f0      	bmi.n	8006cd4 <restore_non_core_regs+0x20>
 8006cf2:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8006cf6:	f000 fc51 	bl	800759c <__gnu_Unwind_Restore_WMMXD>
 8006cfa:	6823      	ldr	r3, [r4, #0]
 8006cfc:	06db      	lsls	r3, r3, #27
 8006cfe:	d4eb      	bmi.n	8006cd8 <restore_non_core_regs+0x24>
 8006d00:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 8006d04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006d08:	f000 bc8c 	b.w	8007624 <__gnu_Unwind_Restore_WMMXC>

08006d0c <_Unwind_decode_typeinfo_ptr.isra.0>:
 8006d0c:	6803      	ldr	r3, [r0, #0]
 8006d0e:	b103      	cbz	r3, 8006d12 <_Unwind_decode_typeinfo_ptr.isra.0+0x6>
 8006d10:	4403      	add	r3, r0
 8006d12:	4618      	mov	r0, r3
 8006d14:	4770      	bx	lr
 8006d16:	bf00      	nop

08006d18 <__gnu_unwind_24bit.isra.1>:
 8006d18:	2009      	movs	r0, #9
 8006d1a:	4770      	bx	lr

08006d1c <_Unwind_DebugHook>:
 8006d1c:	4770      	bx	lr
 8006d1e:	bf00      	nop

08006d20 <unwind_phase2>:
 8006d20:	b570      	push	{r4, r5, r6, lr}
 8006d22:	4604      	mov	r4, r0
 8006d24:	460d      	mov	r5, r1
 8006d26:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8006d28:	4620      	mov	r0, r4
 8006d2a:	f7ff ff73 	bl	8006c14 <get_eit_entry>
 8006d2e:	4606      	mov	r6, r0
 8006d30:	b988      	cbnz	r0, 8006d56 <unwind_phase2+0x36>
 8006d32:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8006d34:	6163      	str	r3, [r4, #20]
 8006d36:	462a      	mov	r2, r5
 8006d38:	6923      	ldr	r3, [r4, #16]
 8006d3a:	4621      	mov	r1, r4
 8006d3c:	2001      	movs	r0, #1
 8006d3e:	4798      	blx	r3
 8006d40:	2808      	cmp	r0, #8
 8006d42:	d0f0      	beq.n	8006d26 <unwind_phase2+0x6>
 8006d44:	2807      	cmp	r0, #7
 8006d46:	d106      	bne.n	8006d56 <unwind_phase2+0x36>
 8006d48:	4630      	mov	r0, r6
 8006d4a:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8006d4c:	f7ff ffe6 	bl	8006d1c <_Unwind_DebugHook>
 8006d50:	1d28      	adds	r0, r5, #4
 8006d52:	f000 fbff 	bl	8007554 <__restore_core_regs>
 8006d56:	f006 fa55 	bl	800d204 <abort>
 8006d5a:	bf00      	nop

08006d5c <unwind_phase2_forced>:
 8006d5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006d60:	1d0c      	adds	r4, r1, #4
 8006d62:	4605      	mov	r5, r0
 8006d64:	4617      	mov	r7, r2
 8006d66:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006d68:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 8006d6c:	ae03      	add	r6, sp, #12
 8006d6e:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8006d70:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006d72:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8006d74:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006d76:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8006d78:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8006d7c:	ac02      	add	r4, sp, #8
 8006d7e:	f8d5 800c 	ldr.w	r8, [r5, #12]
 8006d82:	f8d5 9018 	ldr.w	r9, [r5, #24]
 8006d86:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8006d8a:	2300      	movs	r3, #0
 8006d8c:	4628      	mov	r0, r5
 8006d8e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8006d90:	6023      	str	r3, [r4, #0]
 8006d92:	f7ff ff3f 	bl	8006c14 <get_eit_entry>
 8006d96:	2f00      	cmp	r7, #0
 8006d98:	4606      	mov	r6, r0
 8006d9a:	bf14      	ite	ne
 8006d9c:	270a      	movne	r7, #10
 8006d9e:	2709      	moveq	r7, #9
 8006da0:	bb46      	cbnz	r6, 8006df4 <unwind_phase2_forced+0x98>
 8006da2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006da4:	616b      	str	r3, [r5, #20]
 8006da6:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8006daa:	4621      	mov	r1, r4
 8006dac:	a87a      	add	r0, sp, #488	; 0x1e8
 8006dae:	f000 feaf 	bl	8007b10 <memcpy>
 8006db2:	692b      	ldr	r3, [r5, #16]
 8006db4:	aa7a      	add	r2, sp, #488	; 0x1e8
 8006db6:	4629      	mov	r1, r5
 8006db8:	4638      	mov	r0, r7
 8006dba:	4798      	blx	r3
 8006dbc:	9b88      	ldr	r3, [sp, #544]	; 0x220
 8006dbe:	4682      	mov	sl, r0
 8006dc0:	e9cd 4900 	strd	r4, r9, [sp]
 8006dc4:	4639      	mov	r1, r7
 8006dc6:	6463      	str	r3, [r4, #68]	; 0x44
 8006dc8:	462a      	mov	r2, r5
 8006dca:	462b      	mov	r3, r5
 8006dcc:	2001      	movs	r0, #1
 8006dce:	47c0      	blx	r8
 8006dd0:	b9d8      	cbnz	r0, 8006e0a <unwind_phase2_forced+0xae>
 8006dd2:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8006dd6:	a97a      	add	r1, sp, #488	; 0x1e8
 8006dd8:	4620      	mov	r0, r4
 8006dda:	f000 fe99 	bl	8007b10 <memcpy>
 8006dde:	f1ba 0f08 	cmp.w	sl, #8
 8006de2:	d118      	bne.n	8006e16 <unwind_phase2_forced+0xba>
 8006de4:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8006de6:	4628      	mov	r0, r5
 8006de8:	f7ff ff14 	bl	8006c14 <get_eit_entry>
 8006dec:	4606      	mov	r6, r0
 8006dee:	2709      	movs	r7, #9
 8006df0:	2e00      	cmp	r6, #0
 8006df2:	d0d6      	beq.n	8006da2 <unwind_phase2_forced+0x46>
 8006df4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006df6:	f047 0110 	orr.w	r1, r7, #16
 8006dfa:	e9cd 4900 	strd	r4, r9, [sp]
 8006dfe:	462a      	mov	r2, r5
 8006e00:	6463      	str	r3, [r4, #68]	; 0x44
 8006e02:	2001      	movs	r0, #1
 8006e04:	462b      	mov	r3, r5
 8006e06:	47c0      	blx	r8
 8006e08:	b100      	cbz	r0, 8006e0c <unwind_phase2_forced+0xb0>
 8006e0a:	2609      	movs	r6, #9
 8006e0c:	4630      	mov	r0, r6
 8006e0e:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 8006e12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006e16:	f1ba 0f07 	cmp.w	sl, #7
 8006e1a:	d1f6      	bne.n	8006e0a <unwind_phase2_forced+0xae>
 8006e1c:	4630      	mov	r0, r6
 8006e1e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8006e20:	f7ff ff7c 	bl	8006d1c <_Unwind_DebugHook>
 8006e24:	a803      	add	r0, sp, #12
 8006e26:	f000 fb95 	bl	8007554 <__restore_core_regs>
 8006e2a:	bf00      	nop

08006e2c <_Unwind_GetCFA>:
 8006e2c:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8006e2e:	4770      	bx	lr

08006e30 <__gnu_Unwind_RaiseException>:
 8006e30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006e32:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8006e34:	640b      	str	r3, [r1, #64]	; 0x40
 8006e36:	1d0e      	adds	r6, r1, #4
 8006e38:	460f      	mov	r7, r1
 8006e3a:	4604      	mov	r4, r0
 8006e3c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8006e3e:	b0f9      	sub	sp, #484	; 0x1e4
 8006e40:	ad01      	add	r5, sp, #4
 8006e42:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8006e44:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8006e46:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8006e48:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8006e4a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8006e4c:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8006e50:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8006e54:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8006e58:	9600      	str	r6, [sp, #0]
 8006e5a:	e006      	b.n	8006e6a <__gnu_Unwind_RaiseException+0x3a>
 8006e5c:	6923      	ldr	r3, [r4, #16]
 8006e5e:	466a      	mov	r2, sp
 8006e60:	4621      	mov	r1, r4
 8006e62:	4798      	blx	r3
 8006e64:	2808      	cmp	r0, #8
 8006e66:	4605      	mov	r5, r0
 8006e68:	d108      	bne.n	8006e7c <__gnu_Unwind_RaiseException+0x4c>
 8006e6a:	9910      	ldr	r1, [sp, #64]	; 0x40
 8006e6c:	4620      	mov	r0, r4
 8006e6e:	f7ff fed1 	bl	8006c14 <get_eit_entry>
 8006e72:	2800      	cmp	r0, #0
 8006e74:	d0f2      	beq.n	8006e5c <__gnu_Unwind_RaiseException+0x2c>
 8006e76:	2009      	movs	r0, #9
 8006e78:	b079      	add	sp, #484	; 0x1e4
 8006e7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006e7c:	4668      	mov	r0, sp
 8006e7e:	f7ff ff19 	bl	8006cb4 <restore_non_core_regs>
 8006e82:	2d06      	cmp	r5, #6
 8006e84:	d1f7      	bne.n	8006e76 <__gnu_Unwind_RaiseException+0x46>
 8006e86:	4639      	mov	r1, r7
 8006e88:	4620      	mov	r0, r4
 8006e8a:	f7ff ff49 	bl	8006d20 <unwind_phase2>
 8006e8e:	bf00      	nop

08006e90 <__gnu_Unwind_ForcedUnwind>:
 8006e90:	b430      	push	{r4, r5}
 8006e92:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8006e94:	60c1      	str	r1, [r0, #12]
 8006e96:	6182      	str	r2, [r0, #24]
 8006e98:	4619      	mov	r1, r3
 8006e9a:	641d      	str	r5, [r3, #64]	; 0x40
 8006e9c:	2200      	movs	r2, #0
 8006e9e:	bc30      	pop	{r4, r5}
 8006ea0:	e75c      	b.n	8006d5c <unwind_phase2_forced>
 8006ea2:	bf00      	nop

08006ea4 <__gnu_Unwind_Resume>:
 8006ea4:	b570      	push	{r4, r5, r6, lr}
 8006ea6:	68c6      	ldr	r6, [r0, #12]
 8006ea8:	6943      	ldr	r3, [r0, #20]
 8006eaa:	640b      	str	r3, [r1, #64]	; 0x40
 8006eac:	b9ae      	cbnz	r6, 8006eda <__gnu_Unwind_Resume+0x36>
 8006eae:	6903      	ldr	r3, [r0, #16]
 8006eb0:	460a      	mov	r2, r1
 8006eb2:	4604      	mov	r4, r0
 8006eb4:	460d      	mov	r5, r1
 8006eb6:	4601      	mov	r1, r0
 8006eb8:	2002      	movs	r0, #2
 8006eba:	4798      	blx	r3
 8006ebc:	2807      	cmp	r0, #7
 8006ebe:	d005      	beq.n	8006ecc <__gnu_Unwind_Resume+0x28>
 8006ec0:	2808      	cmp	r0, #8
 8006ec2:	d10f      	bne.n	8006ee4 <__gnu_Unwind_Resume+0x40>
 8006ec4:	4629      	mov	r1, r5
 8006ec6:	4620      	mov	r0, r4
 8006ec8:	f7ff ff2a 	bl	8006d20 <unwind_phase2>
 8006ecc:	4630      	mov	r0, r6
 8006ece:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8006ed0:	f7ff ff24 	bl	8006d1c <_Unwind_DebugHook>
 8006ed4:	1d28      	adds	r0, r5, #4
 8006ed6:	f000 fb3d 	bl	8007554 <__restore_core_regs>
 8006eda:	2201      	movs	r2, #1
 8006edc:	f7ff ff3e 	bl	8006d5c <unwind_phase2_forced>
 8006ee0:	f006 f990 	bl	800d204 <abort>
 8006ee4:	f006 f98e 	bl	800d204 <abort>

08006ee8 <__gnu_Unwind_Resume_or_Rethrow>:
 8006ee8:	68c2      	ldr	r2, [r0, #12]
 8006eea:	b11a      	cbz	r2, 8006ef4 <__gnu_Unwind_Resume_or_Rethrow+0xc>
 8006eec:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 8006eee:	640a      	str	r2, [r1, #64]	; 0x40
 8006ef0:	2200      	movs	r2, #0
 8006ef2:	e733      	b.n	8006d5c <unwind_phase2_forced>
 8006ef4:	e79c      	b.n	8006e30 <__gnu_Unwind_RaiseException>
 8006ef6:	bf00      	nop

08006ef8 <_Unwind_Complete>:
 8006ef8:	4770      	bx	lr
 8006efa:	bf00      	nop

08006efc <_Unwind_DeleteException>:
 8006efc:	6883      	ldr	r3, [r0, #8]
 8006efe:	b113      	cbz	r3, 8006f06 <_Unwind_DeleteException+0xa>
 8006f00:	4601      	mov	r1, r0
 8006f02:	2001      	movs	r0, #1
 8006f04:	4718      	bx	r3
 8006f06:	4770      	bx	lr

08006f08 <_Unwind_VRS_Get>:
 8006f08:	2904      	cmp	r1, #4
 8006f0a:	d810      	bhi.n	8006f2e <_Unwind_VRS_Get+0x26>
 8006f0c:	e8df f001 	tbb	[pc, r1]
 8006f10:	030f0305 	.word	0x030f0305
 8006f14:	03          	.byte	0x03
 8006f15:	00          	.byte	0x00
 8006f16:	2001      	movs	r0, #1
 8006f18:	4770      	bx	lr
 8006f1a:	b943      	cbnz	r3, 8006f2e <_Unwind_VRS_Get+0x26>
 8006f1c:	2a0f      	cmp	r2, #15
 8006f1e:	d806      	bhi.n	8006f2e <_Unwind_VRS_Get+0x26>
 8006f20:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8006f24:	4618      	mov	r0, r3
 8006f26:	6853      	ldr	r3, [r2, #4]
 8006f28:	9a00      	ldr	r2, [sp, #0]
 8006f2a:	6013      	str	r3, [r2, #0]
 8006f2c:	4770      	bx	lr
 8006f2e:	2002      	movs	r0, #2
 8006f30:	4770      	bx	lr
 8006f32:	bf00      	nop

08006f34 <_Unwind_GetGR>:
 8006f34:	b510      	push	{r4, lr}
 8006f36:	b084      	sub	sp, #16
 8006f38:	2300      	movs	r3, #0
 8006f3a:	ac03      	add	r4, sp, #12
 8006f3c:	460a      	mov	r2, r1
 8006f3e:	9400      	str	r4, [sp, #0]
 8006f40:	4619      	mov	r1, r3
 8006f42:	f7ff ffe1 	bl	8006f08 <_Unwind_VRS_Get>
 8006f46:	9803      	ldr	r0, [sp, #12]
 8006f48:	b004      	add	sp, #16
 8006f4a:	bd10      	pop	{r4, pc}

08006f4c <_Unwind_VRS_Set>:
 8006f4c:	2904      	cmp	r1, #4
 8006f4e:	d810      	bhi.n	8006f72 <_Unwind_VRS_Set+0x26>
 8006f50:	e8df f001 	tbb	[pc, r1]
 8006f54:	030f0305 	.word	0x030f0305
 8006f58:	03          	.byte	0x03
 8006f59:	00          	.byte	0x00
 8006f5a:	2001      	movs	r0, #1
 8006f5c:	4770      	bx	lr
 8006f5e:	b943      	cbnz	r3, 8006f72 <_Unwind_VRS_Set+0x26>
 8006f60:	2a0f      	cmp	r2, #15
 8006f62:	d806      	bhi.n	8006f72 <_Unwind_VRS_Set+0x26>
 8006f64:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8006f68:	9a00      	ldr	r2, [sp, #0]
 8006f6a:	6812      	ldr	r2, [r2, #0]
 8006f6c:	6042      	str	r2, [r0, #4]
 8006f6e:	4618      	mov	r0, r3
 8006f70:	4770      	bx	lr
 8006f72:	2002      	movs	r0, #2
 8006f74:	4770      	bx	lr
 8006f76:	bf00      	nop

08006f78 <_Unwind_SetGR>:
 8006f78:	b510      	push	{r4, lr}
 8006f7a:	b084      	sub	sp, #16
 8006f7c:	2300      	movs	r3, #0
 8006f7e:	ac03      	add	r4, sp, #12
 8006f80:	9203      	str	r2, [sp, #12]
 8006f82:	9400      	str	r4, [sp, #0]
 8006f84:	460a      	mov	r2, r1
 8006f86:	4619      	mov	r1, r3
 8006f88:	f7ff ffe0 	bl	8006f4c <_Unwind_VRS_Set>
 8006f8c:	b004      	add	sp, #16
 8006f8e:	bd10      	pop	{r4, pc}

08006f90 <__gnu_Unwind_Backtrace>:
 8006f90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006f92:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8006f94:	6413      	str	r3, [r2, #64]	; 0x40
 8006f96:	1d15      	adds	r5, r2, #4
 8006f98:	4607      	mov	r7, r0
 8006f9a:	460e      	mov	r6, r1
 8006f9c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006f9e:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
 8006fa2:	ac17      	add	r4, sp, #92	; 0x5c
 8006fa4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006fa6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006fa8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006faa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006fac:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006fae:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8006fb2:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8006fb6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8006fba:	9516      	str	r5, [sp, #88]	; 0x58
 8006fbc:	e010      	b.n	8006fe0 <__gnu_Unwind_Backtrace+0x50>
 8006fbe:	a816      	add	r0, sp, #88	; 0x58
 8006fc0:	f7ff ffda 	bl	8006f78 <_Unwind_SetGR>
 8006fc4:	4631      	mov	r1, r6
 8006fc6:	a816      	add	r0, sp, #88	; 0x58
 8006fc8:	47b8      	blx	r7
 8006fca:	aa16      	add	r2, sp, #88	; 0x58
 8006fcc:	4669      	mov	r1, sp
 8006fce:	b978      	cbnz	r0, 8006ff0 <__gnu_Unwind_Backtrace+0x60>
 8006fd0:	9b04      	ldr	r3, [sp, #16]
 8006fd2:	2008      	movs	r0, #8
 8006fd4:	4798      	blx	r3
 8006fd6:	2805      	cmp	r0, #5
 8006fd8:	4604      	mov	r4, r0
 8006fda:	d00a      	beq.n	8006ff2 <__gnu_Unwind_Backtrace+0x62>
 8006fdc:	2809      	cmp	r0, #9
 8006fde:	d007      	beq.n	8006ff0 <__gnu_Unwind_Backtrace+0x60>
 8006fe0:	9926      	ldr	r1, [sp, #152]	; 0x98
 8006fe2:	4668      	mov	r0, sp
 8006fe4:	f7ff fe16 	bl	8006c14 <get_eit_entry>
 8006fe8:	466a      	mov	r2, sp
 8006fea:	210c      	movs	r1, #12
 8006fec:	2800      	cmp	r0, #0
 8006fee:	d0e6      	beq.n	8006fbe <__gnu_Unwind_Backtrace+0x2e>
 8006ff0:	2409      	movs	r4, #9
 8006ff2:	a816      	add	r0, sp, #88	; 0x58
 8006ff4:	f7ff fe5e 	bl	8006cb4 <restore_non_core_regs>
 8006ff8:	4620      	mov	r0, r4
 8006ffa:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
 8006ffe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007000 <__gnu_unwind_pr_common>:
 8007000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007004:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
 8007006:	b089      	sub	sp, #36	; 0x24
 8007008:	460d      	mov	r5, r1
 800700a:	f854 1b04 	ldr.w	r1, [r4], #4
 800700e:	9406      	str	r4, [sp, #24]
 8007010:	4617      	mov	r7, r2
 8007012:	f000 0803 	and.w	r8, r0, #3
 8007016:	461e      	mov	r6, r3
 8007018:	2b00      	cmp	r3, #0
 800701a:	d061      	beq.n	80070e0 <__gnu_unwind_pr_common+0xe0>
 800701c:	0c0b      	lsrs	r3, r1, #16
 800701e:	b2da      	uxtb	r2, r3
 8007020:	0409      	lsls	r1, r1, #16
 8007022:	f88d 301d 	strb.w	r3, [sp, #29]
 8007026:	2302      	movs	r3, #2
 8007028:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 800702c:	9105      	str	r1, [sp, #20]
 800702e:	f88d 301c 	strb.w	r3, [sp, #28]
 8007032:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8007034:	f1b8 0f02 	cmp.w	r8, #2
 8007038:	bf08      	it	eq
 800703a:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 800703c:	f013 0301 	ands.w	r3, r3, #1
 8007040:	d178      	bne.n	8007134 <__gnu_unwind_pr_common+0x134>
 8007042:	9301      	str	r3, [sp, #4]
 8007044:	f000 0308 	and.w	r3, r0, #8
 8007048:	9302      	str	r3, [sp, #8]
 800704a:	f8d4 a000 	ldr.w	sl, [r4]
 800704e:	f1ba 0f00 	cmp.w	sl, #0
 8007052:	f000 811b 	beq.w	800728c <__gnu_unwind_pr_common+0x28c>
 8007056:	2e02      	cmp	r6, #2
 8007058:	d03e      	beq.n	80070d8 <__gnu_unwind_pr_common+0xd8>
 800705a:	f8b4 a000 	ldrh.w	sl, [r4]
 800705e:	f8b4 9002 	ldrh.w	r9, [r4, #2]
 8007062:	3404      	adds	r4, #4
 8007064:	6caa      	ldr	r2, [r5, #72]	; 0x48
 8007066:	f029 0b01 	bic.w	fp, r9, #1
 800706a:	210f      	movs	r1, #15
 800706c:	4638      	mov	r0, r7
 800706e:	4493      	add	fp, r2
 8007070:	f7ff ff60 	bl	8006f34 <_Unwind_GetGR>
 8007074:	4583      	cmp	fp, r0
 8007076:	d82d      	bhi.n	80070d4 <__gnu_unwind_pr_common+0xd4>
 8007078:	f02a 0201 	bic.w	r2, sl, #1
 800707c:	445a      	add	r2, fp
 800707e:	4282      	cmp	r2, r0
 8007080:	bf94      	ite	ls
 8007082:	2000      	movls	r0, #0
 8007084:	2001      	movhi	r0, #1
 8007086:	ea4f 0349 	mov.w	r3, r9, lsl #1
 800708a:	f003 0302 	and.w	r3, r3, #2
 800708e:	f00a 0a01 	and.w	sl, sl, #1
 8007092:	ea43 030a 	orr.w	r3, r3, sl
 8007096:	2b01      	cmp	r3, #1
 8007098:	d030      	beq.n	80070fc <__gnu_unwind_pr_common+0xfc>
 800709a:	b33b      	cbz	r3, 80070ec <__gnu_unwind_pr_common+0xec>
 800709c:	2b02      	cmp	r3, #2
 800709e:	d115      	bne.n	80070cc <__gnu_unwind_pr_common+0xcc>
 80070a0:	6823      	ldr	r3, [r4, #0]
 80070a2:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
 80070a6:	f1b8 0f00 	cmp.w	r8, #0
 80070aa:	d14d      	bne.n	8007148 <__gnu_unwind_pr_common+0x148>
 80070ac:	b130      	cbz	r0, 80070bc <__gnu_unwind_pr_common+0xbc>
 80070ae:	9a02      	ldr	r2, [sp, #8]
 80070b0:	2a00      	cmp	r2, #0
 80070b2:	d06d      	beq.n	8007190 <__gnu_unwind_pr_common+0x190>
 80070b4:	f1bb 0f00 	cmp.w	fp, #0
 80070b8:	f000 80a0 	beq.w	80071fc <__gnu_unwind_pr_common+0x1fc>
 80070bc:	2b00      	cmp	r3, #0
 80070be:	da00      	bge.n	80070c2 <__gnu_unwind_pr_common+0xc2>
 80070c0:	3404      	adds	r4, #4
 80070c2:	f10b 0b01 	add.w	fp, fp, #1
 80070c6:	eb04 048b 	add.w	r4, r4, fp, lsl #2
 80070ca:	e7be      	b.n	800704a <__gnu_unwind_pr_common+0x4a>
 80070cc:	2009      	movs	r0, #9
 80070ce:	b009      	add	sp, #36	; 0x24
 80070d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80070d4:	2000      	movs	r0, #0
 80070d6:	e7d6      	b.n	8007086 <__gnu_unwind_pr_common+0x86>
 80070d8:	f8d4 9004 	ldr.w	r9, [r4, #4]
 80070dc:	3408      	adds	r4, #8
 80070de:	e7c1      	b.n	8007064 <__gnu_unwind_pr_common+0x64>
 80070e0:	0209      	lsls	r1, r1, #8
 80070e2:	2303      	movs	r3, #3
 80070e4:	9105      	str	r1, [sp, #20]
 80070e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80070ea:	e7a2      	b.n	8007032 <__gnu_unwind_pr_common+0x32>
 80070ec:	f1b8 0f00 	cmp.w	r8, #0
 80070f0:	d002      	beq.n	80070f8 <__gnu_unwind_pr_common+0xf8>
 80070f2:	2800      	cmp	r0, #0
 80070f4:	f040 809d 	bne.w	8007232 <__gnu_unwind_pr_common+0x232>
 80070f8:	3404      	adds	r4, #4
 80070fa:	e7a6      	b.n	800704a <__gnu_unwind_pr_common+0x4a>
 80070fc:	f1b8 0f00 	cmp.w	r8, #0
 8007100:	d12c      	bne.n	800715c <__gnu_unwind_pr_common+0x15c>
 8007102:	b1a8      	cbz	r0, 8007130 <__gnu_unwind_pr_common+0x130>
 8007104:	e9d4 2300 	ldrd	r2, r3, [r4]
 8007108:	1c99      	adds	r1, r3, #2
 800710a:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 800710e:	d0dd      	beq.n	80070cc <__gnu_unwind_pr_common+0xcc>
 8007110:	f105 0158 	add.w	r1, r5, #88	; 0x58
 8007114:	3301      	adds	r3, #1
 8007116:	9104      	str	r1, [sp, #16]
 8007118:	f000 809e 	beq.w	8007258 <__gnu_unwind_pr_common+0x258>
 800711c:	1d20      	adds	r0, r4, #4
 800711e:	f7ff fdf5 	bl	8006d0c <_Unwind_decode_typeinfo_ptr.isra.0>
 8007122:	ab04      	add	r3, sp, #16
 8007124:	4601      	mov	r1, r0
 8007126:	4628      	mov	r0, r5
 8007128:	f005 fc74 	bl	800ca14 <__cxa_type_match>
 800712c:	2800      	cmp	r0, #0
 800712e:	d16f      	bne.n	8007210 <__gnu_unwind_pr_common+0x210>
 8007130:	3408      	adds	r4, #8
 8007132:	e78a      	b.n	800704a <__gnu_unwind_pr_common+0x4a>
 8007134:	4638      	mov	r0, r7
 8007136:	a905      	add	r1, sp, #20
 8007138:	f000 fb0e 	bl	8007758 <__gnu_unwind_execute>
 800713c:	2800      	cmp	r0, #0
 800713e:	d1c5      	bne.n	80070cc <__gnu_unwind_pr_common+0xcc>
 8007140:	2008      	movs	r0, #8
 8007142:	b009      	add	sp, #36	; 0x24
 8007144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007148:	210d      	movs	r1, #13
 800714a:	4638      	mov	r0, r7
 800714c:	f8d5 9020 	ldr.w	r9, [r5, #32]
 8007150:	f7ff fef0 	bl	8006f34 <_Unwind_GetGR>
 8007154:	4581      	cmp	r9, r0
 8007156:	d040      	beq.n	80071da <__gnu_unwind_pr_common+0x1da>
 8007158:	6823      	ldr	r3, [r4, #0]
 800715a:	e7af      	b.n	80070bc <__gnu_unwind_pr_common+0xbc>
 800715c:	210d      	movs	r1, #13
 800715e:	4638      	mov	r0, r7
 8007160:	f8d5 9020 	ldr.w	r9, [r5, #32]
 8007164:	f7ff fee6 	bl	8006f34 <_Unwind_GetGR>
 8007168:	4581      	cmp	r9, r0
 800716a:	d1e1      	bne.n	8007130 <__gnu_unwind_pr_common+0x130>
 800716c:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800716e:	429c      	cmp	r4, r3
 8007170:	d1de      	bne.n	8007130 <__gnu_unwind_pr_common+0x130>
 8007172:	4620      	mov	r0, r4
 8007174:	f7ff fcfe 	bl	8006b74 <selfrel_offset31>
 8007178:	210f      	movs	r1, #15
 800717a:	4602      	mov	r2, r0
 800717c:	4638      	mov	r0, r7
 800717e:	f7ff fefb 	bl	8006f78 <_Unwind_SetGR>
 8007182:	4638      	mov	r0, r7
 8007184:	462a      	mov	r2, r5
 8007186:	2100      	movs	r1, #0
 8007188:	f7ff fef6 	bl	8006f78 <_Unwind_SetGR>
 800718c:	2007      	movs	r0, #7
 800718e:	e79e      	b.n	80070ce <__gnu_unwind_pr_common+0xce>
 8007190:	f1bb 0f00 	cmp.w	fp, #0
 8007194:	d032      	beq.n	80071fc <__gnu_unwind_pr_common+0x1fc>
 8007196:	f105 0358 	add.w	r3, r5, #88	; 0x58
 800719a:	f8cd 800c 	str.w	r8, [sp, #12]
 800719e:	f104 0904 	add.w	r9, r4, #4
 80071a2:	46b0      	mov	r8, r6
 80071a4:	f8dd a008 	ldr.w	sl, [sp, #8]
 80071a8:	461e      	mov	r6, r3
 80071aa:	e001      	b.n	80071b0 <__gnu_unwind_pr_common+0x1b0>
 80071ac:	45da      	cmp	sl, fp
 80071ae:	d025      	beq.n	80071fc <__gnu_unwind_pr_common+0x1fc>
 80071b0:	4648      	mov	r0, r9
 80071b2:	9604      	str	r6, [sp, #16]
 80071b4:	f7ff fdaa 	bl	8006d0c <_Unwind_decode_typeinfo_ptr.isra.0>
 80071b8:	ab04      	add	r3, sp, #16
 80071ba:	4601      	mov	r1, r0
 80071bc:	2200      	movs	r2, #0
 80071be:	4628      	mov	r0, r5
 80071c0:	f005 fc28 	bl	800ca14 <__cxa_type_match>
 80071c4:	f10a 0a01 	add.w	sl, sl, #1
 80071c8:	f109 0904 	add.w	r9, r9, #4
 80071cc:	2800      	cmp	r0, #0
 80071ce:	d0ed      	beq.n	80071ac <__gnu_unwind_pr_common+0x1ac>
 80071d0:	4646      	mov	r6, r8
 80071d2:	6823      	ldr	r3, [r4, #0]
 80071d4:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80071d8:	e770      	b.n	80070bc <__gnu_unwind_pr_common+0xbc>
 80071da:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80071dc:	429c      	cmp	r4, r3
 80071de:	d1bb      	bne.n	8007158 <__gnu_unwind_pr_common+0x158>
 80071e0:	2204      	movs	r2, #4
 80071e2:	f04f 0900 	mov.w	r9, #0
 80071e6:	18a3      	adds	r3, r4, r2
 80071e8:	e9c5 b90a 	strd	fp, r9, [r5, #40]	; 0x28
 80071ec:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
 80071f0:	6823      	ldr	r3, [r4, #0]
 80071f2:	454b      	cmp	r3, r9
 80071f4:	db38      	blt.n	8007268 <__gnu_unwind_pr_common+0x268>
 80071f6:	2301      	movs	r3, #1
 80071f8:	9301      	str	r3, [sp, #4]
 80071fa:	e762      	b.n	80070c2 <__gnu_unwind_pr_common+0xc2>
 80071fc:	4638      	mov	r0, r7
 80071fe:	210d      	movs	r1, #13
 8007200:	f7ff fe98 	bl	8006f34 <_Unwind_GetGR>
 8007204:	9b04      	ldr	r3, [sp, #16]
 8007206:	6228      	str	r0, [r5, #32]
 8007208:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
 800720c:	2006      	movs	r0, #6
 800720e:	e75e      	b.n	80070ce <__gnu_unwind_pr_common+0xce>
 8007210:	4681      	mov	r9, r0
 8007212:	210d      	movs	r1, #13
 8007214:	4638      	mov	r0, r7
 8007216:	f7ff fe8d 	bl	8006f34 <_Unwind_GetGR>
 800721a:	f1b9 0f02 	cmp.w	r9, #2
 800721e:	6228      	str	r0, [r5, #32]
 8007220:	d11f      	bne.n	8007262 <__gnu_unwind_pr_common+0x262>
 8007222:	462b      	mov	r3, r5
 8007224:	9a04      	ldr	r2, [sp, #16]
 8007226:	f843 2f2c 	str.w	r2, [r3, #44]!
 800722a:	626b      	str	r3, [r5, #36]	; 0x24
 800722c:	62ac      	str	r4, [r5, #40]	; 0x28
 800722e:	2006      	movs	r0, #6
 8007230:	e74d      	b.n	80070ce <__gnu_unwind_pr_common+0xce>
 8007232:	4620      	mov	r0, r4
 8007234:	f7ff fc9e 	bl	8006b74 <selfrel_offset31>
 8007238:	3404      	adds	r4, #4
 800723a:	4606      	mov	r6, r0
 800723c:	63ac      	str	r4, [r5, #56]	; 0x38
 800723e:	4628      	mov	r0, r5
 8007240:	f005 fc46 	bl	800cad0 <__cxa_begin_cleanup>
 8007244:	2800      	cmp	r0, #0
 8007246:	f43f af41 	beq.w	80070cc <__gnu_unwind_pr_common+0xcc>
 800724a:	4638      	mov	r0, r7
 800724c:	4632      	mov	r2, r6
 800724e:	210f      	movs	r1, #15
 8007250:	f7ff fe92 	bl	8006f78 <_Unwind_SetGR>
 8007254:	2007      	movs	r0, #7
 8007256:	e73a      	b.n	80070ce <__gnu_unwind_pr_common+0xce>
 8007258:	4638      	mov	r0, r7
 800725a:	210d      	movs	r1, #13
 800725c:	f7ff fe6a 	bl	8006f34 <_Unwind_GetGR>
 8007260:	6228      	str	r0, [r5, #32]
 8007262:	9b04      	ldr	r3, [sp, #16]
 8007264:	626b      	str	r3, [r5, #36]	; 0x24
 8007266:	e7e1      	b.n	800722c <__gnu_unwind_pr_common+0x22c>
 8007268:	f10b 0001 	add.w	r0, fp, #1
 800726c:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8007270:	f7ff fc80 	bl	8006b74 <selfrel_offset31>
 8007274:	210f      	movs	r1, #15
 8007276:	4602      	mov	r2, r0
 8007278:	4638      	mov	r0, r7
 800727a:	f7ff fe7d 	bl	8006f78 <_Unwind_SetGR>
 800727e:	4638      	mov	r0, r7
 8007280:	462a      	mov	r2, r5
 8007282:	4649      	mov	r1, r9
 8007284:	f7ff fe78 	bl	8006f78 <_Unwind_SetGR>
 8007288:	2007      	movs	r0, #7
 800728a:	e720      	b.n	80070ce <__gnu_unwind_pr_common+0xce>
 800728c:	a905      	add	r1, sp, #20
 800728e:	4638      	mov	r0, r7
 8007290:	f000 fa62 	bl	8007758 <__gnu_unwind_execute>
 8007294:	2800      	cmp	r0, #0
 8007296:	f47f af19 	bne.w	80070cc <__gnu_unwind_pr_common+0xcc>
 800729a:	9b01      	ldr	r3, [sp, #4]
 800729c:	2b00      	cmp	r3, #0
 800729e:	f43f af4f 	beq.w	8007140 <__gnu_unwind_pr_common+0x140>
 80072a2:	210f      	movs	r1, #15
 80072a4:	4638      	mov	r0, r7
 80072a6:	f7ff fe45 	bl	8006f34 <_Unwind_GetGR>
 80072aa:	210e      	movs	r1, #14
 80072ac:	4602      	mov	r2, r0
 80072ae:	4638      	mov	r0, r7
 80072b0:	f7ff fe62 	bl	8006f78 <_Unwind_SetGR>
 80072b4:	4638      	mov	r0, r7
 80072b6:	4a03      	ldr	r2, [pc, #12]	; (80072c4 <__gnu_unwind_pr_common+0x2c4>)
 80072b8:	210f      	movs	r1, #15
 80072ba:	f7ff fe5d 	bl	8006f78 <_Unwind_SetGR>
 80072be:	2007      	movs	r0, #7
 80072c0:	e705      	b.n	80070ce <__gnu_unwind_pr_common+0xce>
 80072c2:	bf00      	nop
 80072c4:	0800c7a5 	.word	0x0800c7a5

080072c8 <__aeabi_unwind_cpp_pr0>:
 80072c8:	2300      	movs	r3, #0
 80072ca:	e699      	b.n	8007000 <__gnu_unwind_pr_common>

080072cc <__aeabi_unwind_cpp_pr1>:
 80072cc:	2301      	movs	r3, #1
 80072ce:	e697      	b.n	8007000 <__gnu_unwind_pr_common>

080072d0 <__aeabi_unwind_cpp_pr2>:
 80072d0:	2302      	movs	r3, #2
 80072d2:	e695      	b.n	8007000 <__gnu_unwind_pr_common>

080072d4 <_Unwind_VRS_Pop>:
 80072d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072d8:	4605      	mov	r5, r0
 80072da:	b0c4      	sub	sp, #272	; 0x110
 80072dc:	2904      	cmp	r1, #4
 80072de:	f200 80b3 	bhi.w	8007448 <_Unwind_VRS_Pop+0x174>
 80072e2:	e8df f001 	tbb	[pc, r1]
 80072e6:	5195      	.short	0x5195
 80072e8:	2bb1      	.short	0x2bb1
 80072ea:	03          	.byte	0x03
 80072eb:	00          	.byte	0x00
 80072ec:	2b00      	cmp	r3, #0
 80072ee:	f040 80ab 	bne.w	8007448 <_Unwind_VRS_Pop+0x174>
 80072f2:	2a10      	cmp	r2, #16
 80072f4:	f200 80a8 	bhi.w	8007448 <_Unwind_VRS_Pop+0x174>
 80072f8:	682b      	ldr	r3, [r5, #0]
 80072fa:	06dc      	lsls	r4, r3, #27
 80072fc:	f100 8100 	bmi.w	8007500 <_Unwind_VRS_Pop+0x22c>
 8007300:	ac22      	add	r4, sp, #136	; 0x88
 8007302:	4620      	mov	r0, r4
 8007304:	9201      	str	r2, [sp, #4]
 8007306:	f000 f997 	bl	8007638 <__gnu_Unwind_Save_WMMXC>
 800730a:	6bae      	ldr	r6, [r5, #56]	; 0x38
 800730c:	9a01      	ldr	r2, [sp, #4]
 800730e:	2300      	movs	r3, #0
 8007310:	2701      	movs	r7, #1
 8007312:	fa07 f103 	lsl.w	r1, r7, r3
 8007316:	4211      	tst	r1, r2
 8007318:	4630      	mov	r0, r6
 800731a:	d004      	beq.n	8007326 <_Unwind_VRS_Pop+0x52>
 800731c:	f850 1b04 	ldr.w	r1, [r0], #4
 8007320:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8007324:	4606      	mov	r6, r0
 8007326:	3301      	adds	r3, #1
 8007328:	2b04      	cmp	r3, #4
 800732a:	d1f2      	bne.n	8007312 <_Unwind_VRS_Pop+0x3e>
 800732c:	4620      	mov	r0, r4
 800732e:	63ae      	str	r6, [r5, #56]	; 0x38
 8007330:	f000 f978 	bl	8007624 <__gnu_Unwind_Restore_WMMXC>
 8007334:	2000      	movs	r0, #0
 8007336:	b044      	add	sp, #272	; 0x110
 8007338:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800733c:	2b03      	cmp	r3, #3
 800733e:	f040 8083 	bne.w	8007448 <_Unwind_VRS_Pop+0x174>
 8007342:	0c16      	lsrs	r6, r2, #16
 8007344:	b297      	uxth	r7, r2
 8007346:	19f3      	adds	r3, r6, r7
 8007348:	2b10      	cmp	r3, #16
 800734a:	d87d      	bhi.n	8007448 <_Unwind_VRS_Pop+0x174>
 800734c:	682b      	ldr	r3, [r5, #0]
 800734e:	071a      	lsls	r2, r3, #28
 8007350:	f100 80e0 	bmi.w	8007514 <_Unwind_VRS_Pop+0x240>
 8007354:	ac22      	add	r4, sp, #136	; 0x88
 8007356:	4620      	mov	r0, r4
 8007358:	f000 f942 	bl	80075e0 <__gnu_Unwind_Save_WMMXD>
 800735c:	eb04 00c6 	add.w	r0, r4, r6, lsl #3
 8007360:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 8007362:	b14f      	cbz	r7, 8007378 <_Unwind_VRS_Pop+0xa4>
 8007364:	4603      	mov	r3, r0
 8007366:	00fa      	lsls	r2, r7, #3
 8007368:	4410      	add	r0, r2
 800736a:	1ace      	subs	r6, r1, r3
 800736c:	599f      	ldr	r7, [r3, r6]
 800736e:	f843 7b04 	str.w	r7, [r3], #4
 8007372:	4283      	cmp	r3, r0
 8007374:	d1fa      	bne.n	800736c <_Unwind_VRS_Pop+0x98>
 8007376:	4411      	add	r1, r2
 8007378:	4620      	mov	r0, r4
 800737a:	63a9      	str	r1, [r5, #56]	; 0x38
 800737c:	f000 f90e 	bl	800759c <__gnu_Unwind_Restore_WMMXD>
 8007380:	2000      	movs	r0, #0
 8007382:	b044      	add	sp, #272	; 0x110
 8007384:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007388:	2b01      	cmp	r3, #1
 800738a:	ea4f 4612 	mov.w	r6, r2, lsr #16
 800738e:	fa1f f882 	uxth.w	r8, r2
 8007392:	d055      	beq.n	8007440 <_Unwind_VRS_Pop+0x16c>
 8007394:	2b05      	cmp	r3, #5
 8007396:	d157      	bne.n	8007448 <_Unwind_VRS_Pop+0x174>
 8007398:	eb06 0708 	add.w	r7, r6, r8
 800739c:	2f20      	cmp	r7, #32
 800739e:	d853      	bhi.n	8007448 <_Unwind_VRS_Pop+0x174>
 80073a0:	2e0f      	cmp	r6, #15
 80073a2:	d955      	bls.n	8007450 <_Unwind_VRS_Pop+0x17c>
 80073a4:	4647      	mov	r7, r8
 80073a6:	f1b8 0f00 	cmp.w	r8, #0
 80073aa:	d164      	bne.n	8007476 <_Unwind_VRS_Pop+0x1a2>
 80073ac:	4640      	mov	r0, r8
 80073ae:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 80073b0:	f1b8 0f00 	cmp.w	r8, #0
 80073b4:	f000 80ba 	beq.w	800752c <_Unwind_VRS_Pop+0x258>
 80073b8:	ac22      	add	r4, sp, #136	; 0x88
 80073ba:	2700      	movs	r7, #0
 80073bc:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 80073c0:	3c04      	subs	r4, #4
 80073c2:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
 80073c6:	f851 0b04 	ldr.w	r0, [r1], #4
 80073ca:	f844 0f04 	str.w	r0, [r4, #4]!
 80073ce:	4291      	cmp	r1, r2
 80073d0:	d1f9      	bne.n	80073c6 <_Unwind_VRS_Pop+0xf2>
 80073d2:	b17f      	cbz	r7, 80073f4 <_Unwind_VRS_Pop+0x120>
 80073d4:	ac02      	add	r4, sp, #8
 80073d6:	2e10      	cmp	r6, #16
 80073d8:	4630      	mov	r0, r6
 80073da:	bf38      	it	cc
 80073dc:	2010      	movcc	r0, #16
 80073de:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 80073e2:	3884      	subs	r0, #132	; 0x84
 80073e4:	eb02 01c7 	add.w	r1, r2, r7, lsl #3
 80073e8:	f852 4b04 	ldr.w	r4, [r2], #4
 80073ec:	f840 4f04 	str.w	r4, [r0, #4]!
 80073f0:	4291      	cmp	r1, r2
 80073f2:	d1f9      	bne.n	80073e8 <_Unwind_VRS_Pop+0x114>
 80073f4:	2b01      	cmp	r3, #1
 80073f6:	f000 8095 	beq.w	8007524 <_Unwind_VRS_Pop+0x250>
 80073fa:	2e0f      	cmp	r6, #15
 80073fc:	63a9      	str	r1, [r5, #56]	; 0x38
 80073fe:	d96b      	bls.n	80074d8 <_Unwind_VRS_Pop+0x204>
 8007400:	b117      	cbz	r7, 8007408 <_Unwind_VRS_Pop+0x134>
 8007402:	a802      	add	r0, sp, #8
 8007404:	f000 f8c2 	bl	800758c <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8007408:	2000      	movs	r0, #0
 800740a:	b044      	add	sp, #272	; 0x110
 800740c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007410:	b9d3      	cbnz	r3, 8007448 <_Unwind_VRS_Pop+0x174>
 8007412:	6bac      	ldr	r4, [r5, #56]	; 0x38
 8007414:	b297      	uxth	r7, r2
 8007416:	2601      	movs	r6, #1
 8007418:	f105 0c04 	add.w	ip, r5, #4
 800741c:	fa06 f103 	lsl.w	r1, r6, r3
 8007420:	4239      	tst	r1, r7
 8007422:	4620      	mov	r0, r4
 8007424:	d004      	beq.n	8007430 <_Unwind_VRS_Pop+0x15c>
 8007426:	f850 1b04 	ldr.w	r1, [r0], #4
 800742a:	f84c 1023 	str.w	r1, [ip, r3, lsl #2]
 800742e:	4604      	mov	r4, r0
 8007430:	3301      	adds	r3, #1
 8007432:	2b10      	cmp	r3, #16
 8007434:	d1f2      	bne.n	800741c <_Unwind_VRS_Pop+0x148>
 8007436:	f412 5000 	ands.w	r0, r2, #8192	; 0x2000
 800743a:	d1e5      	bne.n	8007408 <_Unwind_VRS_Pop+0x134>
 800743c:	63ac      	str	r4, [r5, #56]	; 0x38
 800743e:	e004      	b.n	800744a <_Unwind_VRS_Pop+0x176>
 8007440:	eb06 0208 	add.w	r2, r6, r8
 8007444:	2a10      	cmp	r2, #16
 8007446:	d928      	bls.n	800749a <_Unwind_VRS_Pop+0x1c6>
 8007448:	2002      	movs	r0, #2
 800744a:	b044      	add	sp, #272	; 0x110
 800744c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007450:	2f10      	cmp	r7, #16
 8007452:	d97c      	bls.n	800754e <_Unwind_VRS_Pop+0x27a>
 8007454:	3f10      	subs	r7, #16
 8007456:	682a      	ldr	r2, [r5, #0]
 8007458:	07d0      	lsls	r0, r2, #31
 800745a:	d50a      	bpl.n	8007472 <_Unwind_VRS_Pop+0x19e>
 800745c:	4628      	mov	r0, r5
 800745e:	f022 0201 	bic.w	r2, r2, #1
 8007462:	f042 0202 	orr.w	r2, r2, #2
 8007466:	f840 2b48 	str.w	r2, [r0], #72
 800746a:	9301      	str	r3, [sp, #4]
 800746c:	f000 f88a 	bl	8007584 <__gnu_Unwind_Save_VFP_D>
 8007470:	9b01      	ldr	r3, [sp, #4]
 8007472:	2f00      	cmp	r7, #0
 8007474:	d05c      	beq.n	8007530 <_Unwind_VRS_Pop+0x25c>
 8007476:	682a      	ldr	r2, [r5, #0]
 8007478:	0751      	lsls	r1, r2, #29
 800747a:	d437      	bmi.n	80074ec <_Unwind_VRS_Pop+0x218>
 800747c:	2e0f      	cmp	r6, #15
 800747e:	d92f      	bls.n	80074e0 <_Unwind_VRS_Pop+0x20c>
 8007480:	ac02      	add	r4, sp, #8
 8007482:	4620      	mov	r0, r4
 8007484:	9301      	str	r3, [sp, #4]
 8007486:	f000 f885 	bl	8007594 <__gnu_Unwind_Save_VFP_D_16_to_31>
 800748a:	f1c6 0010 	rsb	r0, r6, #16
 800748e:	2800      	cmp	r0, #0
 8007490:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 8007492:	9b01      	ldr	r3, [sp, #4]
 8007494:	dd48      	ble.n	8007528 <_Unwind_VRS_Pop+0x254>
 8007496:	ac22      	add	r4, sp, #136	; 0x88
 8007498:	e790      	b.n	80073bc <_Unwind_VRS_Pop+0xe8>
 800749a:	2e0f      	cmp	r6, #15
 800749c:	d8d4      	bhi.n	8007448 <_Unwind_VRS_Pop+0x174>
 800749e:	682a      	ldr	r2, [r5, #0]
 80074a0:	07d1      	lsls	r1, r2, #31
 80074a2:	d508      	bpl.n	80074b6 <_Unwind_VRS_Pop+0x1e2>
 80074a4:	4628      	mov	r0, r5
 80074a6:	f022 0203 	bic.w	r2, r2, #3
 80074aa:	f840 2b48 	str.w	r2, [r0], #72
 80074ae:	9301      	str	r3, [sp, #4]
 80074b0:	f000 f860 	bl	8007574 <__gnu_Unwind_Save_VFP>
 80074b4:	9b01      	ldr	r3, [sp, #4]
 80074b6:	9301      	str	r3, [sp, #4]
 80074b8:	ac22      	add	r4, sp, #136	; 0x88
 80074ba:	4620      	mov	r0, r4
 80074bc:	f000 f85a 	bl	8007574 <__gnu_Unwind_Save_VFP>
 80074c0:	4640      	mov	r0, r8
 80074c2:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 80074c4:	9b01      	ldr	r3, [sp, #4]
 80074c6:	2800      	cmp	r0, #0
 80074c8:	f47f af77 	bne.w	80073ba <_Unwind_VRS_Pop+0xe6>
 80074cc:	3104      	adds	r1, #4
 80074ce:	63a9      	str	r1, [r5, #56]	; 0x38
 80074d0:	4620      	mov	r0, r4
 80074d2:	f000 f84b 	bl	800756c <__gnu_Unwind_Restore_VFP>
 80074d6:	e797      	b.n	8007408 <_Unwind_VRS_Pop+0x134>
 80074d8:	a822      	add	r0, sp, #136	; 0x88
 80074da:	f000 f84f 	bl	800757c <__gnu_Unwind_Restore_VFP_D>
 80074de:	e78f      	b.n	8007400 <_Unwind_VRS_Pop+0x12c>
 80074e0:	a822      	add	r0, sp, #136	; 0x88
 80074e2:	9301      	str	r3, [sp, #4]
 80074e4:	f000 f84e 	bl	8007584 <__gnu_Unwind_Save_VFP_D>
 80074e8:	9b01      	ldr	r3, [sp, #4]
 80074ea:	e7c9      	b.n	8007480 <_Unwind_VRS_Pop+0x1ac>
 80074ec:	4628      	mov	r0, r5
 80074ee:	f022 0204 	bic.w	r2, r2, #4
 80074f2:	f840 2bd0 	str.w	r2, [r0], #208
 80074f6:	9301      	str	r3, [sp, #4]
 80074f8:	f000 f84c 	bl	8007594 <__gnu_Unwind_Save_VFP_D_16_to_31>
 80074fc:	9b01      	ldr	r3, [sp, #4]
 80074fe:	e7bd      	b.n	800747c <_Unwind_VRS_Pop+0x1a8>
 8007500:	f023 0310 	bic.w	r3, r3, #16
 8007504:	602b      	str	r3, [r5, #0]
 8007506:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
 800750a:	9201      	str	r2, [sp, #4]
 800750c:	f000 f894 	bl	8007638 <__gnu_Unwind_Save_WMMXC>
 8007510:	9a01      	ldr	r2, [sp, #4]
 8007512:	e6f5      	b.n	8007300 <_Unwind_VRS_Pop+0x2c>
 8007514:	f023 0308 	bic.w	r3, r3, #8
 8007518:	602b      	str	r3, [r5, #0]
 800751a:	f505 70a8 	add.w	r0, r5, #336	; 0x150
 800751e:	f000 f85f 	bl	80075e0 <__gnu_Unwind_Save_WMMXD>
 8007522:	e717      	b.n	8007354 <_Unwind_VRS_Pop+0x80>
 8007524:	ac22      	add	r4, sp, #136	; 0x88
 8007526:	e7d1      	b.n	80074cc <_Unwind_VRS_Pop+0x1f8>
 8007528:	460a      	mov	r2, r1
 800752a:	e754      	b.n	80073d6 <_Unwind_VRS_Pop+0x102>
 800752c:	4647      	mov	r7, r8
 800752e:	e764      	b.n	80073fa <_Unwind_VRS_Pop+0x126>
 8007530:	2e0f      	cmp	r6, #15
 8007532:	f63f af3b 	bhi.w	80073ac <_Unwind_VRS_Pop+0xd8>
 8007536:	ac22      	add	r4, sp, #136	; 0x88
 8007538:	4620      	mov	r0, r4
 800753a:	9301      	str	r3, [sp, #4]
 800753c:	f000 f822 	bl	8007584 <__gnu_Unwind_Save_VFP_D>
 8007540:	4640      	mov	r0, r8
 8007542:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 8007544:	9b01      	ldr	r3, [sp, #4]
 8007546:	2800      	cmp	r0, #0
 8007548:	f47f af37 	bne.w	80073ba <_Unwind_VRS_Pop+0xe6>
 800754c:	e755      	b.n	80073fa <_Unwind_VRS_Pop+0x126>
 800754e:	2700      	movs	r7, #0
 8007550:	e781      	b.n	8007456 <_Unwind_VRS_Pop+0x182>
 8007552:	bf00      	nop

08007554 <__restore_core_regs>:
 8007554:	f100 0134 	add.w	r1, r0, #52	; 0x34
 8007558:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 800755c:	469c      	mov	ip, r3
 800755e:	46a6      	mov	lr, r4
 8007560:	f84c 5d04 	str.w	r5, [ip, #-4]!
 8007564:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8007568:	46e5      	mov	sp, ip
 800756a:	bd00      	pop	{pc}

0800756c <__gnu_Unwind_Restore_VFP>:
 800756c:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 8007570:	4770      	bx	lr
 8007572:	bf00      	nop

08007574 <__gnu_Unwind_Save_VFP>:
 8007574:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 8007578:	4770      	bx	lr
 800757a:	bf00      	nop

0800757c <__gnu_Unwind_Restore_VFP_D>:
 800757c:	ec90 0b20 	vldmia	r0, {d0-d15}
 8007580:	4770      	bx	lr
 8007582:	bf00      	nop

08007584 <__gnu_Unwind_Save_VFP_D>:
 8007584:	ec80 0b20 	vstmia	r0, {d0-d15}
 8007588:	4770      	bx	lr
 800758a:	bf00      	nop

0800758c <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 800758c:	ecd0 0b20 	vldmia	r0, {d16-d31}
 8007590:	4770      	bx	lr
 8007592:	bf00      	nop

08007594 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 8007594:	ecc0 0b20 	vstmia	r0, {d16-d31}
 8007598:	4770      	bx	lr
 800759a:	bf00      	nop

0800759c <__gnu_Unwind_Restore_WMMXD>:
 800759c:	ecf0 0102 	ldfe	f0, [r0], #8
 80075a0:	ecf0 1102 	ldfe	f1, [r0], #8
 80075a4:	ecf0 2102 	ldfe	f2, [r0], #8
 80075a8:	ecf0 3102 	ldfe	f3, [r0], #8
 80075ac:	ecf0 4102 	ldfe	f4, [r0], #8
 80075b0:	ecf0 5102 	ldfe	f5, [r0], #8
 80075b4:	ecf0 6102 	ldfe	f6, [r0], #8
 80075b8:	ecf0 7102 	ldfe	f7, [r0], #8
 80075bc:	ecf0 8102 	ldfp	f0, [r0], #8
 80075c0:	ecf0 9102 	ldfp	f1, [r0], #8
 80075c4:	ecf0 a102 	ldfp	f2, [r0], #8
 80075c8:	ecf0 b102 	ldfp	f3, [r0], #8
 80075cc:	ecf0 c102 	ldfp	f4, [r0], #8
 80075d0:	ecf0 d102 	ldfp	f5, [r0], #8
 80075d4:	ecf0 e102 	ldfp	f6, [r0], #8
 80075d8:	ecf0 f102 	ldfp	f7, [r0], #8
 80075dc:	4770      	bx	lr
 80075de:	bf00      	nop

080075e0 <__gnu_Unwind_Save_WMMXD>:
 80075e0:	ece0 0102 	stfe	f0, [r0], #8
 80075e4:	ece0 1102 	stfe	f1, [r0], #8
 80075e8:	ece0 2102 	stfe	f2, [r0], #8
 80075ec:	ece0 3102 	stfe	f3, [r0], #8
 80075f0:	ece0 4102 	stfe	f4, [r0], #8
 80075f4:	ece0 5102 	stfe	f5, [r0], #8
 80075f8:	ece0 6102 	stfe	f6, [r0], #8
 80075fc:	ece0 7102 	stfe	f7, [r0], #8
 8007600:	ece0 8102 	stfp	f0, [r0], #8
 8007604:	ece0 9102 	stfp	f1, [r0], #8
 8007608:	ece0 a102 	stfp	f2, [r0], #8
 800760c:	ece0 b102 	stfp	f3, [r0], #8
 8007610:	ece0 c102 	stfp	f4, [r0], #8
 8007614:	ece0 d102 	stfp	f5, [r0], #8
 8007618:	ece0 e102 	stfp	f6, [r0], #8
 800761c:	ece0 f102 	stfp	f7, [r0], #8
 8007620:	4770      	bx	lr
 8007622:	bf00      	nop

08007624 <__gnu_Unwind_Restore_WMMXC>:
 8007624:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 8007628:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 800762c:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 8007630:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 8007634:	4770      	bx	lr
 8007636:	bf00      	nop

08007638 <__gnu_Unwind_Save_WMMXC>:
 8007638:	fca0 8101 	stc2	1, cr8, [r0], #4
 800763c:	fca0 9101 	stc2	1, cr9, [r0], #4
 8007640:	fca0 a101 	stc2	1, cr10, [r0], #4
 8007644:	fca0 b101 	stc2	1, cr11, [r0], #4
 8007648:	4770      	bx	lr
 800764a:	bf00      	nop

0800764c <_Unwind_RaiseException>:
 800764c:	46ec      	mov	ip, sp
 800764e:	b500      	push	{lr}
 8007650:	e92d 5000 	stmdb	sp!, {ip, lr}
 8007654:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8007658:	f04f 0300 	mov.w	r3, #0
 800765c:	e92d 000c 	stmdb	sp!, {r2, r3}
 8007660:	a901      	add	r1, sp, #4
 8007662:	f7ff fbe5 	bl	8006e30 <__gnu_Unwind_RaiseException>
 8007666:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800766a:	b012      	add	sp, #72	; 0x48
 800766c:	4770      	bx	lr
 800766e:	bf00      	nop

08007670 <_Unwind_Resume>:
 8007670:	46ec      	mov	ip, sp
 8007672:	b500      	push	{lr}
 8007674:	e92d 5000 	stmdb	sp!, {ip, lr}
 8007678:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 800767c:	f04f 0300 	mov.w	r3, #0
 8007680:	e92d 000c 	stmdb	sp!, {r2, r3}
 8007684:	a901      	add	r1, sp, #4
 8007686:	f7ff fc0d 	bl	8006ea4 <__gnu_Unwind_Resume>
 800768a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800768e:	b012      	add	sp, #72	; 0x48
 8007690:	4770      	bx	lr
 8007692:	bf00      	nop

08007694 <_Unwind_Resume_or_Rethrow>:
 8007694:	46ec      	mov	ip, sp
 8007696:	b500      	push	{lr}
 8007698:	e92d 5000 	stmdb	sp!, {ip, lr}
 800769c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80076a0:	f04f 0300 	mov.w	r3, #0
 80076a4:	e92d 000c 	stmdb	sp!, {r2, r3}
 80076a8:	a901      	add	r1, sp, #4
 80076aa:	f7ff fc1d 	bl	8006ee8 <__gnu_Unwind_Resume_or_Rethrow>
 80076ae:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80076b2:	b012      	add	sp, #72	; 0x48
 80076b4:	4770      	bx	lr
 80076b6:	bf00      	nop

080076b8 <_Unwind_ForcedUnwind>:
 80076b8:	46ec      	mov	ip, sp
 80076ba:	b500      	push	{lr}
 80076bc:	e92d 5000 	stmdb	sp!, {ip, lr}
 80076c0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80076c4:	f04f 0300 	mov.w	r3, #0
 80076c8:	e92d 000c 	stmdb	sp!, {r2, r3}
 80076cc:	ab01      	add	r3, sp, #4
 80076ce:	f7ff fbdf 	bl	8006e90 <__gnu_Unwind_ForcedUnwind>
 80076d2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80076d6:	b012      	add	sp, #72	; 0x48
 80076d8:	4770      	bx	lr
 80076da:	bf00      	nop

080076dc <_Unwind_Backtrace>:
 80076dc:	46ec      	mov	ip, sp
 80076de:	b500      	push	{lr}
 80076e0:	e92d 5000 	stmdb	sp!, {ip, lr}
 80076e4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80076e8:	f04f 0300 	mov.w	r3, #0
 80076ec:	e92d 000c 	stmdb	sp!, {r2, r3}
 80076f0:	aa01      	add	r2, sp, #4
 80076f2:	f7ff fc4d 	bl	8006f90 <__gnu_Unwind_Backtrace>
 80076f6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80076fa:	b012      	add	sp, #72	; 0x48
 80076fc:	4770      	bx	lr
 80076fe:	bf00      	nop

08007700 <next_unwind_byte>:
 8007700:	7a02      	ldrb	r2, [r0, #8]
 8007702:	b97a      	cbnz	r2, 8007724 <next_unwind_byte+0x24>
 8007704:	7a43      	ldrb	r3, [r0, #9]
 8007706:	b1a3      	cbz	r3, 8007732 <next_unwind_byte+0x32>
 8007708:	6842      	ldr	r2, [r0, #4]
 800770a:	3b01      	subs	r3, #1
 800770c:	b410      	push	{r4}
 800770e:	7243      	strb	r3, [r0, #9]
 8007710:	6813      	ldr	r3, [r2, #0]
 8007712:	2103      	movs	r1, #3
 8007714:	1d14      	adds	r4, r2, #4
 8007716:	7201      	strb	r1, [r0, #8]
 8007718:	021a      	lsls	r2, r3, #8
 800771a:	6044      	str	r4, [r0, #4]
 800771c:	6002      	str	r2, [r0, #0]
 800771e:	bc10      	pop	{r4}
 8007720:	0e18      	lsrs	r0, r3, #24
 8007722:	4770      	bx	lr
 8007724:	6803      	ldr	r3, [r0, #0]
 8007726:	3a01      	subs	r2, #1
 8007728:	7202      	strb	r2, [r0, #8]
 800772a:	021a      	lsls	r2, r3, #8
 800772c:	6002      	str	r2, [r0, #0]
 800772e:	0e18      	lsrs	r0, r3, #24
 8007730:	4770      	bx	lr
 8007732:	20b0      	movs	r0, #176	; 0xb0
 8007734:	4770      	bx	lr
 8007736:	bf00      	nop

08007738 <_Unwind_GetGR.constprop.0>:
 8007738:	b500      	push	{lr}
 800773a:	b085      	sub	sp, #20
 800773c:	aa03      	add	r2, sp, #12
 800773e:	2300      	movs	r3, #0
 8007740:	9200      	str	r2, [sp, #0]
 8007742:	4619      	mov	r1, r3
 8007744:	220c      	movs	r2, #12
 8007746:	f7ff fbdf 	bl	8006f08 <_Unwind_VRS_Get>
 800774a:	9803      	ldr	r0, [sp, #12]
 800774c:	b005      	add	sp, #20
 800774e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007752:	bf00      	nop

08007754 <unwind_UCB_from_context>:
 8007754:	e7f0      	b.n	8007738 <_Unwind_GetGR.constprop.0>
 8007756:	bf00      	nop

08007758 <__gnu_unwind_execute>:
 8007758:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800775c:	4605      	mov	r5, r0
 800775e:	b085      	sub	sp, #20
 8007760:	460e      	mov	r6, r1
 8007762:	f04f 0800 	mov.w	r8, #0
 8007766:	4630      	mov	r0, r6
 8007768:	f7ff ffca 	bl	8007700 <next_unwind_byte>
 800776c:	28b0      	cmp	r0, #176	; 0xb0
 800776e:	4604      	mov	r4, r0
 8007770:	f000 80b2 	beq.w	80078d8 <__gnu_unwind_execute+0x180>
 8007774:	0607      	lsls	r7, r0, #24
 8007776:	d520      	bpl.n	80077ba <__gnu_unwind_execute+0x62>
 8007778:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 800777c:	2b80      	cmp	r3, #128	; 0x80
 800777e:	d04d      	beq.n	800781c <__gnu_unwind_execute+0xc4>
 8007780:	2b90      	cmp	r3, #144	; 0x90
 8007782:	d036      	beq.n	80077f2 <__gnu_unwind_execute+0x9a>
 8007784:	2ba0      	cmp	r3, #160	; 0xa0
 8007786:	d060      	beq.n	800784a <__gnu_unwind_execute+0xf2>
 8007788:	2bb0      	cmp	r3, #176	; 0xb0
 800778a:	d074      	beq.n	8007876 <__gnu_unwind_execute+0x11e>
 800778c:	2bc0      	cmp	r3, #192	; 0xc0
 800778e:	f000 808b 	beq.w	80078a8 <__gnu_unwind_execute+0x150>
 8007792:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8007796:	2bd0      	cmp	r3, #208	; 0xd0
 8007798:	d10b      	bne.n	80077b2 <__gnu_unwind_execute+0x5a>
 800779a:	f000 0207 	and.w	r2, r0, #7
 800779e:	3201      	adds	r2, #1
 80077a0:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 80077a4:	2305      	movs	r3, #5
 80077a6:	2101      	movs	r1, #1
 80077a8:	4628      	mov	r0, r5
 80077aa:	f7ff fd93 	bl	80072d4 <_Unwind_VRS_Pop>
 80077ae:	2800      	cmp	r0, #0
 80077b0:	d0d9      	beq.n	8007766 <__gnu_unwind_execute+0xe>
 80077b2:	2009      	movs	r0, #9
 80077b4:	b005      	add	sp, #20
 80077b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80077ba:	f10d 090c 	add.w	r9, sp, #12
 80077be:	2300      	movs	r3, #0
 80077c0:	4619      	mov	r1, r3
 80077c2:	0087      	lsls	r7, r0, #2
 80077c4:	f8cd 9000 	str.w	r9, [sp]
 80077c8:	220d      	movs	r2, #13
 80077ca:	4628      	mov	r0, r5
 80077cc:	f7ff fb9c 	bl	8006f08 <_Unwind_VRS_Get>
 80077d0:	b2ff      	uxtb	r7, r7
 80077d2:	9b03      	ldr	r3, [sp, #12]
 80077d4:	f8cd 9000 	str.w	r9, [sp]
 80077d8:	3704      	adds	r7, #4
 80077da:	0660      	lsls	r0, r4, #25
 80077dc:	bf4c      	ite	mi
 80077de:	1bdf      	submi	r7, r3, r7
 80077e0:	18ff      	addpl	r7, r7, r3
 80077e2:	2300      	movs	r3, #0
 80077e4:	4619      	mov	r1, r3
 80077e6:	220d      	movs	r2, #13
 80077e8:	4628      	mov	r0, r5
 80077ea:	9703      	str	r7, [sp, #12]
 80077ec:	f7ff fbae 	bl	8006f4c <_Unwind_VRS_Set>
 80077f0:	e7b9      	b.n	8007766 <__gnu_unwind_execute+0xe>
 80077f2:	f000 030d 	and.w	r3, r0, #13
 80077f6:	2b0d      	cmp	r3, #13
 80077f8:	d0db      	beq.n	80077b2 <__gnu_unwind_execute+0x5a>
 80077fa:	af03      	add	r7, sp, #12
 80077fc:	2300      	movs	r3, #0
 80077fe:	f000 020f 	and.w	r2, r0, #15
 8007802:	4619      	mov	r1, r3
 8007804:	9700      	str	r7, [sp, #0]
 8007806:	4628      	mov	r0, r5
 8007808:	f7ff fb7e 	bl	8006f08 <_Unwind_VRS_Get>
 800780c:	2300      	movs	r3, #0
 800780e:	9700      	str	r7, [sp, #0]
 8007810:	4619      	mov	r1, r3
 8007812:	220d      	movs	r2, #13
 8007814:	4628      	mov	r0, r5
 8007816:	f7ff fb99 	bl	8006f4c <_Unwind_VRS_Set>
 800781a:	e7a4      	b.n	8007766 <__gnu_unwind_execute+0xe>
 800781c:	4630      	mov	r0, r6
 800781e:	f7ff ff6f 	bl	8007700 <next_unwind_byte>
 8007822:	0224      	lsls	r4, r4, #8
 8007824:	4304      	orrs	r4, r0
 8007826:	f5b4 4f00 	cmp.w	r4, #32768	; 0x8000
 800782a:	d0c2      	beq.n	80077b2 <__gnu_unwind_execute+0x5a>
 800782c:	0124      	lsls	r4, r4, #4
 800782e:	2300      	movs	r3, #0
 8007830:	b2a2      	uxth	r2, r4
 8007832:	4619      	mov	r1, r3
 8007834:	4628      	mov	r0, r5
 8007836:	f7ff fd4d 	bl	80072d4 <_Unwind_VRS_Pop>
 800783a:	2800      	cmp	r0, #0
 800783c:	d1b9      	bne.n	80077b2 <__gnu_unwind_execute+0x5a>
 800783e:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8007842:	bf18      	it	ne
 8007844:	f04f 0801 	movne.w	r8, #1
 8007848:	e78d      	b.n	8007766 <__gnu_unwind_execute+0xe>
 800784a:	43c2      	mvns	r2, r0
 800784c:	f002 0307 	and.w	r3, r2, #7
 8007850:	f44f 627f 	mov.w	r2, #4080	; 0xff0
 8007854:	411a      	asrs	r2, r3
 8007856:	0701      	lsls	r1, r0, #28
 8007858:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
 800785c:	f04f 0300 	mov.w	r3, #0
 8007860:	bf48      	it	mi
 8007862:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 8007866:	4619      	mov	r1, r3
 8007868:	4628      	mov	r0, r5
 800786a:	f7ff fd33 	bl	80072d4 <_Unwind_VRS_Pop>
 800786e:	2800      	cmp	r0, #0
 8007870:	f43f af79 	beq.w	8007766 <__gnu_unwind_execute+0xe>
 8007874:	e79d      	b.n	80077b2 <__gnu_unwind_execute+0x5a>
 8007876:	28b1      	cmp	r0, #177	; 0xb1
 8007878:	d033      	beq.n	80078e2 <__gnu_unwind_execute+0x18a>
 800787a:	28b2      	cmp	r0, #178	; 0xb2
 800787c:	f000 80a0 	beq.w	80079c0 <__gnu_unwind_execute+0x268>
 8007880:	28b3      	cmp	r0, #179	; 0xb3
 8007882:	d041      	beq.n	8007908 <__gnu_unwind_execute+0x1b0>
 8007884:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 8007888:	2bb4      	cmp	r3, #180	; 0xb4
 800788a:	d092      	beq.n	80077b2 <__gnu_unwind_execute+0x5a>
 800788c:	f000 0207 	and.w	r2, r0, #7
 8007890:	3201      	adds	r2, #1
 8007892:	2301      	movs	r3, #1
 8007894:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8007898:	4619      	mov	r1, r3
 800789a:	4628      	mov	r0, r5
 800789c:	f7ff fd1a 	bl	80072d4 <_Unwind_VRS_Pop>
 80078a0:	2800      	cmp	r0, #0
 80078a2:	f43f af60 	beq.w	8007766 <__gnu_unwind_execute+0xe>
 80078a6:	e784      	b.n	80077b2 <__gnu_unwind_execute+0x5a>
 80078a8:	28c6      	cmp	r0, #198	; 0xc6
 80078aa:	d051      	beq.n	8007950 <__gnu_unwind_execute+0x1f8>
 80078ac:	28c7      	cmp	r0, #199	; 0xc7
 80078ae:	d05a      	beq.n	8007966 <__gnu_unwind_execute+0x20e>
 80078b0:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 80078b4:	2bc0      	cmp	r3, #192	; 0xc0
 80078b6:	d069      	beq.n	800798c <__gnu_unwind_execute+0x234>
 80078b8:	28c8      	cmp	r0, #200	; 0xc8
 80078ba:	d075      	beq.n	80079a8 <__gnu_unwind_execute+0x250>
 80078bc:	28c9      	cmp	r0, #201	; 0xc9
 80078be:	f47f af78 	bne.w	80077b2 <__gnu_unwind_execute+0x5a>
 80078c2:	4630      	mov	r0, r6
 80078c4:	f7ff ff1c 	bl	8007700 <next_unwind_byte>
 80078c8:	0302      	lsls	r2, r0, #12
 80078ca:	f000 000f 	and.w	r0, r0, #15
 80078ce:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 80078d2:	3001      	adds	r0, #1
 80078d4:	4302      	orrs	r2, r0
 80078d6:	e765      	b.n	80077a4 <__gnu_unwind_execute+0x4c>
 80078d8:	f1b8 0f00 	cmp.w	r8, #0
 80078dc:	d027      	beq.n	800792e <__gnu_unwind_execute+0x1d6>
 80078de:	2000      	movs	r0, #0
 80078e0:	e768      	b.n	80077b4 <__gnu_unwind_execute+0x5c>
 80078e2:	4630      	mov	r0, r6
 80078e4:	f7ff ff0c 	bl	8007700 <next_unwind_byte>
 80078e8:	2800      	cmp	r0, #0
 80078ea:	f43f af62 	beq.w	80077b2 <__gnu_unwind_execute+0x5a>
 80078ee:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 80078f2:	f47f af5e 	bne.w	80077b2 <__gnu_unwind_execute+0x5a>
 80078f6:	4602      	mov	r2, r0
 80078f8:	4619      	mov	r1, r3
 80078fa:	4628      	mov	r0, r5
 80078fc:	f7ff fcea 	bl	80072d4 <_Unwind_VRS_Pop>
 8007900:	2800      	cmp	r0, #0
 8007902:	f43f af30 	beq.w	8007766 <__gnu_unwind_execute+0xe>
 8007906:	e754      	b.n	80077b2 <__gnu_unwind_execute+0x5a>
 8007908:	4630      	mov	r0, r6
 800790a:	f7ff fef9 	bl	8007700 <next_unwind_byte>
 800790e:	0301      	lsls	r1, r0, #12
 8007910:	f000 000f 	and.w	r0, r0, #15
 8007914:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 8007918:	1c42      	adds	r2, r0, #1
 800791a:	2301      	movs	r3, #1
 800791c:	430a      	orrs	r2, r1
 800791e:	4628      	mov	r0, r5
 8007920:	4619      	mov	r1, r3
 8007922:	f7ff fcd7 	bl	80072d4 <_Unwind_VRS_Pop>
 8007926:	2800      	cmp	r0, #0
 8007928:	f43f af1d 	beq.w	8007766 <__gnu_unwind_execute+0xe>
 800792c:	e741      	b.n	80077b2 <__gnu_unwind_execute+0x5a>
 800792e:	ac03      	add	r4, sp, #12
 8007930:	4643      	mov	r3, r8
 8007932:	220e      	movs	r2, #14
 8007934:	4641      	mov	r1, r8
 8007936:	9400      	str	r4, [sp, #0]
 8007938:	4628      	mov	r0, r5
 800793a:	f7ff fae5 	bl	8006f08 <_Unwind_VRS_Get>
 800793e:	9400      	str	r4, [sp, #0]
 8007940:	4628      	mov	r0, r5
 8007942:	4643      	mov	r3, r8
 8007944:	220f      	movs	r2, #15
 8007946:	4641      	mov	r1, r8
 8007948:	f7ff fb00 	bl	8006f4c <_Unwind_VRS_Set>
 800794c:	4640      	mov	r0, r8
 800794e:	e731      	b.n	80077b4 <__gnu_unwind_execute+0x5c>
 8007950:	4630      	mov	r0, r6
 8007952:	f7ff fed5 	bl	8007700 <next_unwind_byte>
 8007956:	0301      	lsls	r1, r0, #12
 8007958:	f000 000f 	and.w	r0, r0, #15
 800795c:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 8007960:	1c42      	adds	r2, r0, #1
 8007962:	2303      	movs	r3, #3
 8007964:	e7da      	b.n	800791c <__gnu_unwind_execute+0x1c4>
 8007966:	4630      	mov	r0, r6
 8007968:	f7ff feca 	bl	8007700 <next_unwind_byte>
 800796c:	2800      	cmp	r0, #0
 800796e:	f43f af20 	beq.w	80077b2 <__gnu_unwind_execute+0x5a>
 8007972:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8007976:	f47f af1c 	bne.w	80077b2 <__gnu_unwind_execute+0x5a>
 800797a:	4602      	mov	r2, r0
 800797c:	2104      	movs	r1, #4
 800797e:	4628      	mov	r0, r5
 8007980:	f7ff fca8 	bl	80072d4 <_Unwind_VRS_Pop>
 8007984:	2800      	cmp	r0, #0
 8007986:	f43f aeee 	beq.w	8007766 <__gnu_unwind_execute+0xe>
 800798a:	e712      	b.n	80077b2 <__gnu_unwind_execute+0x5a>
 800798c:	f000 020f 	and.w	r2, r0, #15
 8007990:	3201      	adds	r2, #1
 8007992:	2303      	movs	r3, #3
 8007994:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 8007998:	4619      	mov	r1, r3
 800799a:	4628      	mov	r0, r5
 800799c:	f7ff fc9a 	bl	80072d4 <_Unwind_VRS_Pop>
 80079a0:	2800      	cmp	r0, #0
 80079a2:	f43f aee0 	beq.w	8007766 <__gnu_unwind_execute+0xe>
 80079a6:	e704      	b.n	80077b2 <__gnu_unwind_execute+0x5a>
 80079a8:	4630      	mov	r0, r6
 80079aa:	f7ff fea9 	bl	8007700 <next_unwind_byte>
 80079ae:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
 80079b2:	f000 030f 	and.w	r3, r0, #15
 80079b6:	3210      	adds	r2, #16
 80079b8:	3301      	adds	r3, #1
 80079ba:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 80079be:	e6f1      	b.n	80077a4 <__gnu_unwind_execute+0x4c>
 80079c0:	2300      	movs	r3, #0
 80079c2:	f10d 090c 	add.w	r9, sp, #12
 80079c6:	220d      	movs	r2, #13
 80079c8:	4619      	mov	r1, r3
 80079ca:	f8cd 9000 	str.w	r9, [sp]
 80079ce:	4628      	mov	r0, r5
 80079d0:	f7ff fa9a 	bl	8006f08 <_Unwind_VRS_Get>
 80079d4:	4630      	mov	r0, r6
 80079d6:	f7ff fe93 	bl	8007700 <next_unwind_byte>
 80079da:	0602      	lsls	r2, r0, #24
 80079dc:	f04f 0702 	mov.w	r7, #2
 80079e0:	d50c      	bpl.n	80079fc <__gnu_unwind_execute+0x2a4>
 80079e2:	9b03      	ldr	r3, [sp, #12]
 80079e4:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80079e8:	40b8      	lsls	r0, r7
 80079ea:	4403      	add	r3, r0
 80079ec:	4630      	mov	r0, r6
 80079ee:	9303      	str	r3, [sp, #12]
 80079f0:	f7ff fe86 	bl	8007700 <next_unwind_byte>
 80079f4:	0603      	lsls	r3, r0, #24
 80079f6:	f107 0707 	add.w	r7, r7, #7
 80079fa:	d4f2      	bmi.n	80079e2 <__gnu_unwind_execute+0x28a>
 80079fc:	9b03      	ldr	r3, [sp, #12]
 80079fe:	f8cd 9000 	str.w	r9, [sp]
 8007a02:	f000 047f 	and.w	r4, r0, #127	; 0x7f
 8007a06:	f503 7201 	add.w	r2, r3, #516	; 0x204
 8007a0a:	40bc      	lsls	r4, r7
 8007a0c:	2300      	movs	r3, #0
 8007a0e:	4414      	add	r4, r2
 8007a10:	4619      	mov	r1, r3
 8007a12:	220d      	movs	r2, #13
 8007a14:	4628      	mov	r0, r5
 8007a16:	9403      	str	r4, [sp, #12]
 8007a18:	f7ff fa98 	bl	8006f4c <_Unwind_VRS_Set>
 8007a1c:	e6a3      	b.n	8007766 <__gnu_unwind_execute+0xe>
 8007a1e:	bf00      	nop

08007a20 <__gnu_unwind_frame>:
 8007a20:	b510      	push	{r4, lr}
 8007a22:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8007a24:	b084      	sub	sp, #16
 8007a26:	685a      	ldr	r2, [r3, #4]
 8007a28:	2003      	movs	r0, #3
 8007a2a:	f88d 000c 	strb.w	r0, [sp, #12]
 8007a2e:	79dc      	ldrb	r4, [r3, #7]
 8007a30:	f88d 400d 	strb.w	r4, [sp, #13]
 8007a34:	0212      	lsls	r2, r2, #8
 8007a36:	3308      	adds	r3, #8
 8007a38:	4608      	mov	r0, r1
 8007a3a:	a901      	add	r1, sp, #4
 8007a3c:	9201      	str	r2, [sp, #4]
 8007a3e:	9302      	str	r3, [sp, #8]
 8007a40:	f7ff fe8a 	bl	8007758 <__gnu_unwind_execute>
 8007a44:	b004      	add	sp, #16
 8007a46:	bd10      	pop	{r4, pc}

08007a48 <_Unwind_GetRegionStart>:
 8007a48:	b508      	push	{r3, lr}
 8007a4a:	f7ff fe83 	bl	8007754 <unwind_UCB_from_context>
 8007a4e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8007a50:	bd08      	pop	{r3, pc}
 8007a52:	bf00      	nop

08007a54 <_Unwind_GetLanguageSpecificData>:
 8007a54:	b508      	push	{r3, lr}
 8007a56:	f7ff fe7d 	bl	8007754 <unwind_UCB_from_context>
 8007a5a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8007a5c:	79c3      	ldrb	r3, [r0, #7]
 8007a5e:	3302      	adds	r3, #2
 8007a60:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8007a64:	bd08      	pop	{r3, pc}
 8007a66:	bf00      	nop
	...

08007a70 <memchr>:
 8007a70:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8007a74:	2a10      	cmp	r2, #16
 8007a76:	db2b      	blt.n	8007ad0 <memchr+0x60>
 8007a78:	f010 0f07 	tst.w	r0, #7
 8007a7c:	d008      	beq.n	8007a90 <memchr+0x20>
 8007a7e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8007a82:	3a01      	subs	r2, #1
 8007a84:	428b      	cmp	r3, r1
 8007a86:	d02d      	beq.n	8007ae4 <memchr+0x74>
 8007a88:	f010 0f07 	tst.w	r0, #7
 8007a8c:	b342      	cbz	r2, 8007ae0 <memchr+0x70>
 8007a8e:	d1f6      	bne.n	8007a7e <memchr+0xe>
 8007a90:	b4f0      	push	{r4, r5, r6, r7}
 8007a92:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8007a96:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8007a9a:	f022 0407 	bic.w	r4, r2, #7
 8007a9e:	f07f 0700 	mvns.w	r7, #0
 8007aa2:	2300      	movs	r3, #0
 8007aa4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8007aa8:	3c08      	subs	r4, #8
 8007aaa:	ea85 0501 	eor.w	r5, r5, r1
 8007aae:	ea86 0601 	eor.w	r6, r6, r1
 8007ab2:	fa85 f547 	uadd8	r5, r5, r7
 8007ab6:	faa3 f587 	sel	r5, r3, r7
 8007aba:	fa86 f647 	uadd8	r6, r6, r7
 8007abe:	faa5 f687 	sel	r6, r5, r7
 8007ac2:	b98e      	cbnz	r6, 8007ae8 <memchr+0x78>
 8007ac4:	d1ee      	bne.n	8007aa4 <memchr+0x34>
 8007ac6:	bcf0      	pop	{r4, r5, r6, r7}
 8007ac8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8007acc:	f002 0207 	and.w	r2, r2, #7
 8007ad0:	b132      	cbz	r2, 8007ae0 <memchr+0x70>
 8007ad2:	f810 3b01 	ldrb.w	r3, [r0], #1
 8007ad6:	3a01      	subs	r2, #1
 8007ad8:	ea83 0301 	eor.w	r3, r3, r1
 8007adc:	b113      	cbz	r3, 8007ae4 <memchr+0x74>
 8007ade:	d1f8      	bne.n	8007ad2 <memchr+0x62>
 8007ae0:	2000      	movs	r0, #0
 8007ae2:	4770      	bx	lr
 8007ae4:	3801      	subs	r0, #1
 8007ae6:	4770      	bx	lr
 8007ae8:	2d00      	cmp	r5, #0
 8007aea:	bf06      	itte	eq
 8007aec:	4635      	moveq	r5, r6
 8007aee:	3803      	subeq	r0, #3
 8007af0:	3807      	subne	r0, #7
 8007af2:	f015 0f01 	tst.w	r5, #1
 8007af6:	d107      	bne.n	8007b08 <memchr+0x98>
 8007af8:	3001      	adds	r0, #1
 8007afa:	f415 7f80 	tst.w	r5, #256	; 0x100
 8007afe:	bf02      	ittt	eq
 8007b00:	3001      	addeq	r0, #1
 8007b02:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8007b06:	3001      	addeq	r0, #1
 8007b08:	bcf0      	pop	{r4, r5, r6, r7}
 8007b0a:	3801      	subs	r0, #1
 8007b0c:	4770      	bx	lr
 8007b0e:	bf00      	nop

08007b10 <memcpy>:
 8007b10:	4684      	mov	ip, r0
 8007b12:	ea41 0300 	orr.w	r3, r1, r0
 8007b16:	f013 0303 	ands.w	r3, r3, #3
 8007b1a:	d16d      	bne.n	8007bf8 <memcpy+0xe8>
 8007b1c:	3a40      	subs	r2, #64	; 0x40
 8007b1e:	d341      	bcc.n	8007ba4 <memcpy+0x94>
 8007b20:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b24:	f840 3b04 	str.w	r3, [r0], #4
 8007b28:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b2c:	f840 3b04 	str.w	r3, [r0], #4
 8007b30:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b34:	f840 3b04 	str.w	r3, [r0], #4
 8007b38:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b3c:	f840 3b04 	str.w	r3, [r0], #4
 8007b40:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b44:	f840 3b04 	str.w	r3, [r0], #4
 8007b48:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b4c:	f840 3b04 	str.w	r3, [r0], #4
 8007b50:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b54:	f840 3b04 	str.w	r3, [r0], #4
 8007b58:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b5c:	f840 3b04 	str.w	r3, [r0], #4
 8007b60:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b64:	f840 3b04 	str.w	r3, [r0], #4
 8007b68:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b6c:	f840 3b04 	str.w	r3, [r0], #4
 8007b70:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b74:	f840 3b04 	str.w	r3, [r0], #4
 8007b78:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b7c:	f840 3b04 	str.w	r3, [r0], #4
 8007b80:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b84:	f840 3b04 	str.w	r3, [r0], #4
 8007b88:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b8c:	f840 3b04 	str.w	r3, [r0], #4
 8007b90:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b94:	f840 3b04 	str.w	r3, [r0], #4
 8007b98:	f851 3b04 	ldr.w	r3, [r1], #4
 8007b9c:	f840 3b04 	str.w	r3, [r0], #4
 8007ba0:	3a40      	subs	r2, #64	; 0x40
 8007ba2:	d2bd      	bcs.n	8007b20 <memcpy+0x10>
 8007ba4:	3230      	adds	r2, #48	; 0x30
 8007ba6:	d311      	bcc.n	8007bcc <memcpy+0xbc>
 8007ba8:	f851 3b04 	ldr.w	r3, [r1], #4
 8007bac:	f840 3b04 	str.w	r3, [r0], #4
 8007bb0:	f851 3b04 	ldr.w	r3, [r1], #4
 8007bb4:	f840 3b04 	str.w	r3, [r0], #4
 8007bb8:	f851 3b04 	ldr.w	r3, [r1], #4
 8007bbc:	f840 3b04 	str.w	r3, [r0], #4
 8007bc0:	f851 3b04 	ldr.w	r3, [r1], #4
 8007bc4:	f840 3b04 	str.w	r3, [r0], #4
 8007bc8:	3a10      	subs	r2, #16
 8007bca:	d2ed      	bcs.n	8007ba8 <memcpy+0x98>
 8007bcc:	320c      	adds	r2, #12
 8007bce:	d305      	bcc.n	8007bdc <memcpy+0xcc>
 8007bd0:	f851 3b04 	ldr.w	r3, [r1], #4
 8007bd4:	f840 3b04 	str.w	r3, [r0], #4
 8007bd8:	3a04      	subs	r2, #4
 8007bda:	d2f9      	bcs.n	8007bd0 <memcpy+0xc0>
 8007bdc:	3204      	adds	r2, #4
 8007bde:	d008      	beq.n	8007bf2 <memcpy+0xe2>
 8007be0:	07d2      	lsls	r2, r2, #31
 8007be2:	bf1c      	itt	ne
 8007be4:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8007be8:	f800 3b01 	strbne.w	r3, [r0], #1
 8007bec:	d301      	bcc.n	8007bf2 <memcpy+0xe2>
 8007bee:	880b      	ldrh	r3, [r1, #0]
 8007bf0:	8003      	strh	r3, [r0, #0]
 8007bf2:	4660      	mov	r0, ip
 8007bf4:	4770      	bx	lr
 8007bf6:	bf00      	nop
 8007bf8:	2a08      	cmp	r2, #8
 8007bfa:	d313      	bcc.n	8007c24 <memcpy+0x114>
 8007bfc:	078b      	lsls	r3, r1, #30
 8007bfe:	d08d      	beq.n	8007b1c <memcpy+0xc>
 8007c00:	f010 0303 	ands.w	r3, r0, #3
 8007c04:	d08a      	beq.n	8007b1c <memcpy+0xc>
 8007c06:	f1c3 0304 	rsb	r3, r3, #4
 8007c0a:	1ad2      	subs	r2, r2, r3
 8007c0c:	07db      	lsls	r3, r3, #31
 8007c0e:	bf1c      	itt	ne
 8007c10:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8007c14:	f800 3b01 	strbne.w	r3, [r0], #1
 8007c18:	d380      	bcc.n	8007b1c <memcpy+0xc>
 8007c1a:	f831 3b02 	ldrh.w	r3, [r1], #2
 8007c1e:	f820 3b02 	strh.w	r3, [r0], #2
 8007c22:	e77b      	b.n	8007b1c <memcpy+0xc>
 8007c24:	3a04      	subs	r2, #4
 8007c26:	d3d9      	bcc.n	8007bdc <memcpy+0xcc>
 8007c28:	3a01      	subs	r2, #1
 8007c2a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007c2e:	f800 3b01 	strb.w	r3, [r0], #1
 8007c32:	d2f9      	bcs.n	8007c28 <memcpy+0x118>
 8007c34:	780b      	ldrb	r3, [r1, #0]
 8007c36:	7003      	strb	r3, [r0, #0]
 8007c38:	784b      	ldrb	r3, [r1, #1]
 8007c3a:	7043      	strb	r3, [r0, #1]
 8007c3c:	788b      	ldrb	r3, [r1, #2]
 8007c3e:	7083      	strb	r3, [r0, #2]
 8007c40:	4660      	mov	r0, ip
 8007c42:	4770      	bx	lr
	...
 8007c60:	eba2 0003 	sub.w	r0, r2, r3
 8007c64:	4770      	bx	lr
 8007c66:	bf00      	nop

08007c68 <strcmp>:
 8007c68:	7802      	ldrb	r2, [r0, #0]
 8007c6a:	780b      	ldrb	r3, [r1, #0]
 8007c6c:	2a01      	cmp	r2, #1
 8007c6e:	bf28      	it	cs
 8007c70:	429a      	cmpcs	r2, r3
 8007c72:	d1f5      	bne.n	8007c60 <memcpy+0x150>
 8007c74:	e96d 4504 	strd	r4, r5, [sp, #-16]!
 8007c78:	ea40 0401 	orr.w	r4, r0, r1
 8007c7c:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8007c80:	f06f 0c00 	mvn.w	ip, #0
 8007c84:	ea4f 7244 	mov.w	r2, r4, lsl #29
 8007c88:	b312      	cbz	r2, 8007cd0 <strcmp+0x68>
 8007c8a:	ea80 0401 	eor.w	r4, r0, r1
 8007c8e:	f014 0f07 	tst.w	r4, #7
 8007c92:	d16a      	bne.n	8007d6a <strcmp+0x102>
 8007c94:	f000 0407 	and.w	r4, r0, #7
 8007c98:	f020 0007 	bic.w	r0, r0, #7
 8007c9c:	f004 0503 	and.w	r5, r4, #3
 8007ca0:	f021 0107 	bic.w	r1, r1, #7
 8007ca4:	ea4f 05c5 	mov.w	r5, r5, lsl #3
 8007ca8:	e8f0 2304 	ldrd	r2, r3, [r0], #16
 8007cac:	f014 0f04 	tst.w	r4, #4
 8007cb0:	e8f1 6704 	ldrd	r6, r7, [r1], #16
 8007cb4:	fa0c f405 	lsl.w	r4, ip, r5
 8007cb8:	ea62 0204 	orn	r2, r2, r4
 8007cbc:	ea66 0604 	orn	r6, r6, r4
 8007cc0:	d00a      	beq.n	8007cd8 <strcmp+0x70>
 8007cc2:	ea63 0304 	orn	r3, r3, r4
 8007cc6:	4662      	mov	r2, ip
 8007cc8:	ea67 0704 	orn	r7, r7, r4
 8007ccc:	4666      	mov	r6, ip
 8007cce:	e003      	b.n	8007cd8 <strcmp+0x70>
 8007cd0:	e8f0 2304 	ldrd	r2, r3, [r0], #16
 8007cd4:	e8f1 6704 	ldrd	r6, r7, [r1], #16
 8007cd8:	fa82 f54c 	uadd8	r5, r2, ip
 8007cdc:	ea82 0406 	eor.w	r4, r2, r6
 8007ce0:	faa4 f48c 	sel	r4, r4, ip
 8007ce4:	bb6c      	cbnz	r4, 8007d42 <strcmp+0xda>
 8007ce6:	fa83 f54c 	uadd8	r5, r3, ip
 8007cea:	ea83 0507 	eor.w	r5, r3, r7
 8007cee:	faa5 f58c 	sel	r5, r5, ip
 8007cf2:	b995      	cbnz	r5, 8007d1a <strcmp+0xb2>
 8007cf4:	e950 2302 	ldrd	r2, r3, [r0, #-8]
 8007cf8:	e951 6702 	ldrd	r6, r7, [r1, #-8]
 8007cfc:	fa82 f54c 	uadd8	r5, r2, ip
 8007d00:	ea82 0406 	eor.w	r4, r2, r6
 8007d04:	faa4 f48c 	sel	r4, r4, ip
 8007d08:	fa83 f54c 	uadd8	r5, r3, ip
 8007d0c:	ea83 0507 	eor.w	r5, r3, r7
 8007d10:	faa5 f58c 	sel	r5, r5, ip
 8007d14:	4325      	orrs	r5, r4
 8007d16:	d0db      	beq.n	8007cd0 <strcmp+0x68>
 8007d18:	b99c      	cbnz	r4, 8007d42 <strcmp+0xda>
 8007d1a:	ba2d      	rev	r5, r5
 8007d1c:	fab5 f485 	clz	r4, r5
 8007d20:	f024 0407 	bic.w	r4, r4, #7
 8007d24:	fa27 f104 	lsr.w	r1, r7, r4
 8007d28:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8007d2c:	fa23 f304 	lsr.w	r3, r3, r4
 8007d30:	f003 00ff 	and.w	r0, r3, #255	; 0xff
 8007d34:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8007d38:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 8007d3c:	eba0 0001 	sub.w	r0, r0, r1
 8007d40:	4770      	bx	lr
 8007d42:	ba24      	rev	r4, r4
 8007d44:	fab4 f484 	clz	r4, r4
 8007d48:	f024 0407 	bic.w	r4, r4, #7
 8007d4c:	fa26 f104 	lsr.w	r1, r6, r4
 8007d50:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8007d54:	fa22 f204 	lsr.w	r2, r2, r4
 8007d58:	f002 00ff 	and.w	r0, r2, #255	; 0xff
 8007d5c:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8007d60:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 8007d64:	eba0 0001 	sub.w	r0, r0, r1
 8007d68:	4770      	bx	lr
 8007d6a:	f014 0f03 	tst.w	r4, #3
 8007d6e:	d13c      	bne.n	8007dea <strcmp+0x182>
 8007d70:	f010 0403 	ands.w	r4, r0, #3
 8007d74:	d128      	bne.n	8007dc8 <strcmp+0x160>
 8007d76:	f850 2b08 	ldr.w	r2, [r0], #8
 8007d7a:	f851 3b08 	ldr.w	r3, [r1], #8
 8007d7e:	fa82 f54c 	uadd8	r5, r2, ip
 8007d82:	ea82 0503 	eor.w	r5, r2, r3
 8007d86:	faa5 f58c 	sel	r5, r5, ip
 8007d8a:	b95d      	cbnz	r5, 8007da4 <strcmp+0x13c>
 8007d8c:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8007d90:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007d94:	fa82 f54c 	uadd8	r5, r2, ip
 8007d98:	ea82 0503 	eor.w	r5, r2, r3
 8007d9c:	faa5 f58c 	sel	r5, r5, ip
 8007da0:	2d00      	cmp	r5, #0
 8007da2:	d0e8      	beq.n	8007d76 <strcmp+0x10e>
 8007da4:	ba2d      	rev	r5, r5
 8007da6:	fab5 f485 	clz	r4, r5
 8007daa:	f024 0407 	bic.w	r4, r4, #7
 8007dae:	fa23 f104 	lsr.w	r1, r3, r4
 8007db2:	fa22 f204 	lsr.w	r2, r2, r4
 8007db6:	f002 00ff 	and.w	r0, r2, #255	; 0xff
 8007dba:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8007dbe:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 8007dc2:	eba0 0001 	sub.w	r0, r0, r1
 8007dc6:	4770      	bx	lr
 8007dc8:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8007dcc:	f020 0003 	bic.w	r0, r0, #3
 8007dd0:	f850 2b08 	ldr.w	r2, [r0], #8
 8007dd4:	f021 0103 	bic.w	r1, r1, #3
 8007dd8:	f851 3b08 	ldr.w	r3, [r1], #8
 8007ddc:	fa0c f404 	lsl.w	r4, ip, r4
 8007de0:	ea62 0204 	orn	r2, r2, r4
 8007de4:	ea63 0304 	orn	r3, r3, r4
 8007de8:	e7c9      	b.n	8007d7e <strcmp+0x116>
 8007dea:	f010 0403 	ands.w	r4, r0, #3
 8007dee:	d01a      	beq.n	8007e26 <strcmp+0x1be>
 8007df0:	eba1 0104 	sub.w	r1, r1, r4
 8007df4:	f020 0003 	bic.w	r0, r0, #3
 8007df8:	07e4      	lsls	r4, r4, #31
 8007dfa:	f850 2b04 	ldr.w	r2, [r0], #4
 8007dfe:	d006      	beq.n	8007e0e <strcmp+0x1a6>
 8007e00:	d20f      	bcs.n	8007e22 <strcmp+0x1ba>
 8007e02:	788b      	ldrb	r3, [r1, #2]
 8007e04:	fa5f f4a2 	uxtb.w	r4, r2, ror #16
 8007e08:	1ae4      	subs	r4, r4, r3
 8007e0a:	d106      	bne.n	8007e1a <strcmp+0x1b2>
 8007e0c:	b12b      	cbz	r3, 8007e1a <strcmp+0x1b2>
 8007e0e:	78cb      	ldrb	r3, [r1, #3]
 8007e10:	fa5f f4b2 	uxtb.w	r4, r2, ror #24
 8007e14:	1ae4      	subs	r4, r4, r3
 8007e16:	d100      	bne.n	8007e1a <strcmp+0x1b2>
 8007e18:	b91b      	cbnz	r3, 8007e22 <strcmp+0x1ba>
 8007e1a:	4620      	mov	r0, r4
 8007e1c:	f85d 4b10 	ldr.w	r4, [sp], #16
 8007e20:	4770      	bx	lr
 8007e22:	f101 0104 	add.w	r1, r1, #4
 8007e26:	f850 2b04 	ldr.w	r2, [r0], #4
 8007e2a:	07cc      	lsls	r4, r1, #31
 8007e2c:	f021 0103 	bic.w	r1, r1, #3
 8007e30:	f851 3b04 	ldr.w	r3, [r1], #4
 8007e34:	d848      	bhi.n	8007ec8 <strcmp+0x260>
 8007e36:	d224      	bcs.n	8007e82 <strcmp+0x21a>
 8007e38:	f022 447f 	bic.w	r4, r2, #4278190080	; 0xff000000
 8007e3c:	fa82 f54c 	uadd8	r5, r2, ip
 8007e40:	ea94 2513 	eors.w	r5, r4, r3, lsr #8
 8007e44:	faa5 f58c 	sel	r5, r5, ip
 8007e48:	d10a      	bne.n	8007e60 <strcmp+0x1f8>
 8007e4a:	b965      	cbnz	r5, 8007e66 <strcmp+0x1fe>
 8007e4c:	f851 3b04 	ldr.w	r3, [r1], #4
 8007e50:	ea84 0402 	eor.w	r4, r4, r2
 8007e54:	ebb4 6f03 	cmp.w	r4, r3, lsl #24
 8007e58:	d10e      	bne.n	8007e78 <strcmp+0x210>
 8007e5a:	f850 2b04 	ldr.w	r2, [r0], #4
 8007e5e:	e7eb      	b.n	8007e38 <strcmp+0x1d0>
 8007e60:	ea4f 2313 	mov.w	r3, r3, lsr #8
 8007e64:	e055      	b.n	8007f12 <strcmp+0x2aa>
 8007e66:	f035 457f 	bics.w	r5, r5, #4278190080	; 0xff000000
 8007e6a:	d14d      	bne.n	8007f08 <strcmp+0x2a0>
 8007e6c:	7808      	ldrb	r0, [r1, #0]
 8007e6e:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 8007e72:	f1c0 0000 	rsb	r0, r0, #0
 8007e76:	4770      	bx	lr
 8007e78:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007e7c:	f003 03ff 	and.w	r3, r3, #255	; 0xff
 8007e80:	e047      	b.n	8007f12 <strcmp+0x2aa>
 8007e82:	ea02 441c 	and.w	r4, r2, ip, lsr #16
 8007e86:	fa82 f54c 	uadd8	r5, r2, ip
 8007e8a:	ea94 4513 	eors.w	r5, r4, r3, lsr #16
 8007e8e:	faa5 f58c 	sel	r5, r5, ip
 8007e92:	d10a      	bne.n	8007eaa <strcmp+0x242>
 8007e94:	b965      	cbnz	r5, 8007eb0 <strcmp+0x248>
 8007e96:	f851 3b04 	ldr.w	r3, [r1], #4
 8007e9a:	ea84 0402 	eor.w	r4, r4, r2
 8007e9e:	ebb4 4f03 	cmp.w	r4, r3, lsl #16
 8007ea2:	d10c      	bne.n	8007ebe <strcmp+0x256>
 8007ea4:	f850 2b04 	ldr.w	r2, [r0], #4
 8007ea8:	e7eb      	b.n	8007e82 <strcmp+0x21a>
 8007eaa:	ea4f 4313 	mov.w	r3, r3, lsr #16
 8007eae:	e030      	b.n	8007f12 <strcmp+0x2aa>
 8007eb0:	ea15 451c 	ands.w	r5, r5, ip, lsr #16
 8007eb4:	d128      	bne.n	8007f08 <strcmp+0x2a0>
 8007eb6:	880b      	ldrh	r3, [r1, #0]
 8007eb8:	ea4f 4212 	mov.w	r2, r2, lsr #16
 8007ebc:	e029      	b.n	8007f12 <strcmp+0x2aa>
 8007ebe:	ea4f 4212 	mov.w	r2, r2, lsr #16
 8007ec2:	ea03 431c 	and.w	r3, r3, ip, lsr #16
 8007ec6:	e024      	b.n	8007f12 <strcmp+0x2aa>
 8007ec8:	f002 04ff 	and.w	r4, r2, #255	; 0xff
 8007ecc:	fa82 f54c 	uadd8	r5, r2, ip
 8007ed0:	ea94 6513 	eors.w	r5, r4, r3, lsr #24
 8007ed4:	faa5 f58c 	sel	r5, r5, ip
 8007ed8:	d10a      	bne.n	8007ef0 <strcmp+0x288>
 8007eda:	b965      	cbnz	r5, 8007ef6 <strcmp+0x28e>
 8007edc:	f851 3b04 	ldr.w	r3, [r1], #4
 8007ee0:	ea84 0402 	eor.w	r4, r4, r2
 8007ee4:	ebb4 2f03 	cmp.w	r4, r3, lsl #8
 8007ee8:	d109      	bne.n	8007efe <strcmp+0x296>
 8007eea:	f850 2b04 	ldr.w	r2, [r0], #4
 8007eee:	e7eb      	b.n	8007ec8 <strcmp+0x260>
 8007ef0:	ea4f 6313 	mov.w	r3, r3, lsr #24
 8007ef4:	e00d      	b.n	8007f12 <strcmp+0x2aa>
 8007ef6:	f015 0fff 	tst.w	r5, #255	; 0xff
 8007efa:	d105      	bne.n	8007f08 <strcmp+0x2a0>
 8007efc:	680b      	ldr	r3, [r1, #0]
 8007efe:	ea4f 2212 	mov.w	r2, r2, lsr #8
 8007f02:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8007f06:	e004      	b.n	8007f12 <strcmp+0x2aa>
 8007f08:	f04f 0000 	mov.w	r0, #0
 8007f0c:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 8007f10:	4770      	bx	lr
 8007f12:	ba12      	rev	r2, r2
 8007f14:	ba1b      	rev	r3, r3
 8007f16:	fa82 f44c 	uadd8	r4, r2, ip
 8007f1a:	ea82 0403 	eor.w	r4, r2, r3
 8007f1e:	faa4 f58c 	sel	r5, r4, ip
 8007f22:	fab5 f485 	clz	r4, r5
 8007f26:	fa02 f204 	lsl.w	r2, r2, r4
 8007f2a:	fa03 f304 	lsl.w	r3, r3, r4
 8007f2e:	ea4f 6012 	mov.w	r0, r2, lsr #24
 8007f32:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 8007f36:	eba0 6013 	sub.w	r0, r0, r3, lsr #24
 8007f3a:	4770      	bx	lr
 8007f3c:	0000      	movs	r0, r0
	...

08007f40 <strlen>:
 8007f40:	f890 f000 	pld	[r0]
 8007f44:	e96d 4502 	strd	r4, r5, [sp, #-8]!
 8007f48:	f020 0107 	bic.w	r1, r0, #7
 8007f4c:	f06f 0c00 	mvn.w	ip, #0
 8007f50:	f010 0407 	ands.w	r4, r0, #7
 8007f54:	f891 f020 	pld	[r1, #32]
 8007f58:	f040 8049 	bne.w	8007fee <strlen+0xae>
 8007f5c:	f04f 0400 	mov.w	r4, #0
 8007f60:	f06f 0007 	mvn.w	r0, #7
 8007f64:	e9d1 2300 	ldrd	r2, r3, [r1]
 8007f68:	f891 f040 	pld	[r1, #64]	; 0x40
 8007f6c:	f100 0008 	add.w	r0, r0, #8
 8007f70:	fa82 f24c 	uadd8	r2, r2, ip
 8007f74:	faa4 f28c 	sel	r2, r4, ip
 8007f78:	fa83 f34c 	uadd8	r3, r3, ip
 8007f7c:	faa2 f38c 	sel	r3, r2, ip
 8007f80:	bb4b      	cbnz	r3, 8007fd6 <strlen+0x96>
 8007f82:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 8007f86:	fa82 f24c 	uadd8	r2, r2, ip
 8007f8a:	f100 0008 	add.w	r0, r0, #8
 8007f8e:	faa4 f28c 	sel	r2, r4, ip
 8007f92:	fa83 f34c 	uadd8	r3, r3, ip
 8007f96:	faa2 f38c 	sel	r3, r2, ip
 8007f9a:	b9e3      	cbnz	r3, 8007fd6 <strlen+0x96>
 8007f9c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
 8007fa0:	fa82 f24c 	uadd8	r2, r2, ip
 8007fa4:	f100 0008 	add.w	r0, r0, #8
 8007fa8:	faa4 f28c 	sel	r2, r4, ip
 8007fac:	fa83 f34c 	uadd8	r3, r3, ip
 8007fb0:	faa2 f38c 	sel	r3, r2, ip
 8007fb4:	b97b      	cbnz	r3, 8007fd6 <strlen+0x96>
 8007fb6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
 8007fba:	f101 0120 	add.w	r1, r1, #32
 8007fbe:	fa82 f24c 	uadd8	r2, r2, ip
 8007fc2:	f100 0008 	add.w	r0, r0, #8
 8007fc6:	faa4 f28c 	sel	r2, r4, ip
 8007fca:	fa83 f34c 	uadd8	r3, r3, ip
 8007fce:	faa2 f38c 	sel	r3, r2, ip
 8007fd2:	2b00      	cmp	r3, #0
 8007fd4:	d0c6      	beq.n	8007f64 <strlen+0x24>
 8007fd6:	2a00      	cmp	r2, #0
 8007fd8:	bf04      	itt	eq
 8007fda:	3004      	addeq	r0, #4
 8007fdc:	461a      	moveq	r2, r3
 8007fde:	ba12      	rev	r2, r2
 8007fe0:	fab2 f282 	clz	r2, r2
 8007fe4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
 8007fe8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
 8007fec:	4770      	bx	lr
 8007fee:	e9d1 2300 	ldrd	r2, r3, [r1]
 8007ff2:	f004 0503 	and.w	r5, r4, #3
 8007ff6:	f1c4 0000 	rsb	r0, r4, #0
 8007ffa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
 8007ffe:	f014 0f04 	tst.w	r4, #4
 8008002:	f891 f040 	pld	[r1, #64]	; 0x40
 8008006:	fa0c f505 	lsl.w	r5, ip, r5
 800800a:	ea62 0205 	orn	r2, r2, r5
 800800e:	bf1c      	itt	ne
 8008010:	ea63 0305 	ornne	r3, r3, r5
 8008014:	4662      	movne	r2, ip
 8008016:	f04f 0400 	mov.w	r4, #0
 800801a:	e7a9      	b.n	8007f70 <strlen+0x30>

0800801c <__aeabi_drsub>:
 800801c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8008020:	e002      	b.n	8008028 <__adddf3>
 8008022:	bf00      	nop

08008024 <__aeabi_dsub>:
 8008024:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08008028 <__adddf3>:
 8008028:	b530      	push	{r4, r5, lr}
 800802a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800802e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8008032:	ea94 0f05 	teq	r4, r5
 8008036:	bf08      	it	eq
 8008038:	ea90 0f02 	teqeq	r0, r2
 800803c:	bf1f      	itttt	ne
 800803e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8008042:	ea55 0c02 	orrsne.w	ip, r5, r2
 8008046:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800804a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800804e:	f000 80e2 	beq.w	8008216 <__adddf3+0x1ee>
 8008052:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8008056:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800805a:	bfb8      	it	lt
 800805c:	426d      	neglt	r5, r5
 800805e:	dd0c      	ble.n	800807a <__adddf3+0x52>
 8008060:	442c      	add	r4, r5
 8008062:	ea80 0202 	eor.w	r2, r0, r2
 8008066:	ea81 0303 	eor.w	r3, r1, r3
 800806a:	ea82 0000 	eor.w	r0, r2, r0
 800806e:	ea83 0101 	eor.w	r1, r3, r1
 8008072:	ea80 0202 	eor.w	r2, r0, r2
 8008076:	ea81 0303 	eor.w	r3, r1, r3
 800807a:	2d36      	cmp	r5, #54	; 0x36
 800807c:	bf88      	it	hi
 800807e:	bd30      	pophi	{r4, r5, pc}
 8008080:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8008084:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008088:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 800808c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8008090:	d002      	beq.n	8008098 <__adddf3+0x70>
 8008092:	4240      	negs	r0, r0
 8008094:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008098:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 800809c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80080a0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80080a4:	d002      	beq.n	80080ac <__adddf3+0x84>
 80080a6:	4252      	negs	r2, r2
 80080a8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80080ac:	ea94 0f05 	teq	r4, r5
 80080b0:	f000 80a7 	beq.w	8008202 <__adddf3+0x1da>
 80080b4:	f1a4 0401 	sub.w	r4, r4, #1
 80080b8:	f1d5 0e20 	rsbs	lr, r5, #32
 80080bc:	db0d      	blt.n	80080da <__adddf3+0xb2>
 80080be:	fa02 fc0e 	lsl.w	ip, r2, lr
 80080c2:	fa22 f205 	lsr.w	r2, r2, r5
 80080c6:	1880      	adds	r0, r0, r2
 80080c8:	f141 0100 	adc.w	r1, r1, #0
 80080cc:	fa03 f20e 	lsl.w	r2, r3, lr
 80080d0:	1880      	adds	r0, r0, r2
 80080d2:	fa43 f305 	asr.w	r3, r3, r5
 80080d6:	4159      	adcs	r1, r3
 80080d8:	e00e      	b.n	80080f8 <__adddf3+0xd0>
 80080da:	f1a5 0520 	sub.w	r5, r5, #32
 80080de:	f10e 0e20 	add.w	lr, lr, #32
 80080e2:	2a01      	cmp	r2, #1
 80080e4:	fa03 fc0e 	lsl.w	ip, r3, lr
 80080e8:	bf28      	it	cs
 80080ea:	f04c 0c02 	orrcs.w	ip, ip, #2
 80080ee:	fa43 f305 	asr.w	r3, r3, r5
 80080f2:	18c0      	adds	r0, r0, r3
 80080f4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80080f8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80080fc:	d507      	bpl.n	800810e <__adddf3+0xe6>
 80080fe:	f04f 0e00 	mov.w	lr, #0
 8008102:	f1dc 0c00 	rsbs	ip, ip, #0
 8008106:	eb7e 0000 	sbcs.w	r0, lr, r0
 800810a:	eb6e 0101 	sbc.w	r1, lr, r1
 800810e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8008112:	d31b      	bcc.n	800814c <__adddf3+0x124>
 8008114:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008118:	d30c      	bcc.n	8008134 <__adddf3+0x10c>
 800811a:	0849      	lsrs	r1, r1, #1
 800811c:	ea5f 0030 	movs.w	r0, r0, rrx
 8008120:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8008124:	f104 0401 	add.w	r4, r4, #1
 8008128:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800812c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008130:	f080 809a 	bcs.w	8008268 <__adddf3+0x240>
 8008134:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008138:	bf08      	it	eq
 800813a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800813e:	f150 0000 	adcs.w	r0, r0, #0
 8008142:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008146:	ea41 0105 	orr.w	r1, r1, r5
 800814a:	bd30      	pop	{r4, r5, pc}
 800814c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008150:	4140      	adcs	r0, r0
 8008152:	eb41 0101 	adc.w	r1, r1, r1
 8008156:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800815a:	f1a4 0401 	sub.w	r4, r4, #1
 800815e:	d1e9      	bne.n	8008134 <__adddf3+0x10c>
 8008160:	f091 0f00 	teq	r1, #0
 8008164:	bf04      	itt	eq
 8008166:	4601      	moveq	r1, r0
 8008168:	2000      	moveq	r0, #0
 800816a:	fab1 f381 	clz	r3, r1
 800816e:	bf08      	it	eq
 8008170:	3320      	addeq	r3, #32
 8008172:	f1a3 030b 	sub.w	r3, r3, #11
 8008176:	f1b3 0220 	subs.w	r2, r3, #32
 800817a:	da0c      	bge.n	8008196 <__adddf3+0x16e>
 800817c:	320c      	adds	r2, #12
 800817e:	dd08      	ble.n	8008192 <__adddf3+0x16a>
 8008180:	f102 0c14 	add.w	ip, r2, #20
 8008184:	f1c2 020c 	rsb	r2, r2, #12
 8008188:	fa01 f00c 	lsl.w	r0, r1, ip
 800818c:	fa21 f102 	lsr.w	r1, r1, r2
 8008190:	e00c      	b.n	80081ac <__adddf3+0x184>
 8008192:	f102 0214 	add.w	r2, r2, #20
 8008196:	bfd8      	it	le
 8008198:	f1c2 0c20 	rsble	ip, r2, #32
 800819c:	fa01 f102 	lsl.w	r1, r1, r2
 80081a0:	fa20 fc0c 	lsr.w	ip, r0, ip
 80081a4:	bfdc      	itt	le
 80081a6:	ea41 010c 	orrle.w	r1, r1, ip
 80081aa:	4090      	lslle	r0, r2
 80081ac:	1ae4      	subs	r4, r4, r3
 80081ae:	bfa2      	ittt	ge
 80081b0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80081b4:	4329      	orrge	r1, r5
 80081b6:	bd30      	popge	{r4, r5, pc}
 80081b8:	ea6f 0404 	mvn.w	r4, r4
 80081bc:	3c1f      	subs	r4, #31
 80081be:	da1c      	bge.n	80081fa <__adddf3+0x1d2>
 80081c0:	340c      	adds	r4, #12
 80081c2:	dc0e      	bgt.n	80081e2 <__adddf3+0x1ba>
 80081c4:	f104 0414 	add.w	r4, r4, #20
 80081c8:	f1c4 0220 	rsb	r2, r4, #32
 80081cc:	fa20 f004 	lsr.w	r0, r0, r4
 80081d0:	fa01 f302 	lsl.w	r3, r1, r2
 80081d4:	ea40 0003 	orr.w	r0, r0, r3
 80081d8:	fa21 f304 	lsr.w	r3, r1, r4
 80081dc:	ea45 0103 	orr.w	r1, r5, r3
 80081e0:	bd30      	pop	{r4, r5, pc}
 80081e2:	f1c4 040c 	rsb	r4, r4, #12
 80081e6:	f1c4 0220 	rsb	r2, r4, #32
 80081ea:	fa20 f002 	lsr.w	r0, r0, r2
 80081ee:	fa01 f304 	lsl.w	r3, r1, r4
 80081f2:	ea40 0003 	orr.w	r0, r0, r3
 80081f6:	4629      	mov	r1, r5
 80081f8:	bd30      	pop	{r4, r5, pc}
 80081fa:	fa21 f004 	lsr.w	r0, r1, r4
 80081fe:	4629      	mov	r1, r5
 8008200:	bd30      	pop	{r4, r5, pc}
 8008202:	f094 0f00 	teq	r4, #0
 8008206:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800820a:	bf06      	itte	eq
 800820c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008210:	3401      	addeq	r4, #1
 8008212:	3d01      	subne	r5, #1
 8008214:	e74e      	b.n	80080b4 <__adddf3+0x8c>
 8008216:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800821a:	bf18      	it	ne
 800821c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008220:	d029      	beq.n	8008276 <__adddf3+0x24e>
 8008222:	ea94 0f05 	teq	r4, r5
 8008226:	bf08      	it	eq
 8008228:	ea90 0f02 	teqeq	r0, r2
 800822c:	d005      	beq.n	800823a <__adddf3+0x212>
 800822e:	ea54 0c00 	orrs.w	ip, r4, r0
 8008232:	bf04      	itt	eq
 8008234:	4619      	moveq	r1, r3
 8008236:	4610      	moveq	r0, r2
 8008238:	bd30      	pop	{r4, r5, pc}
 800823a:	ea91 0f03 	teq	r1, r3
 800823e:	bf1e      	ittt	ne
 8008240:	2100      	movne	r1, #0
 8008242:	2000      	movne	r0, #0
 8008244:	bd30      	popne	{r4, r5, pc}
 8008246:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800824a:	d105      	bne.n	8008258 <__adddf3+0x230>
 800824c:	0040      	lsls	r0, r0, #1
 800824e:	4149      	adcs	r1, r1
 8008250:	bf28      	it	cs
 8008252:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8008256:	bd30      	pop	{r4, r5, pc}
 8008258:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800825c:	bf3c      	itt	cc
 800825e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8008262:	bd30      	popcc	{r4, r5, pc}
 8008264:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008268:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800826c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008270:	f04f 0000 	mov.w	r0, #0
 8008274:	bd30      	pop	{r4, r5, pc}
 8008276:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800827a:	bf1a      	itte	ne
 800827c:	4619      	movne	r1, r3
 800827e:	4610      	movne	r0, r2
 8008280:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8008284:	bf1c      	itt	ne
 8008286:	460b      	movne	r3, r1
 8008288:	4602      	movne	r2, r0
 800828a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800828e:	bf06      	itte	eq
 8008290:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8008294:	ea91 0f03 	teqeq	r1, r3
 8008298:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800829c:	bd30      	pop	{r4, r5, pc}
 800829e:	bf00      	nop

080082a0 <__aeabi_ui2d>:
 80082a0:	f090 0f00 	teq	r0, #0
 80082a4:	bf04      	itt	eq
 80082a6:	2100      	moveq	r1, #0
 80082a8:	4770      	bxeq	lr
 80082aa:	b530      	push	{r4, r5, lr}
 80082ac:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80082b0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80082b4:	f04f 0500 	mov.w	r5, #0
 80082b8:	f04f 0100 	mov.w	r1, #0
 80082bc:	e750      	b.n	8008160 <__adddf3+0x138>
 80082be:	bf00      	nop

080082c0 <__aeabi_i2d>:
 80082c0:	f090 0f00 	teq	r0, #0
 80082c4:	bf04      	itt	eq
 80082c6:	2100      	moveq	r1, #0
 80082c8:	4770      	bxeq	lr
 80082ca:	b530      	push	{r4, r5, lr}
 80082cc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80082d0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80082d4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80082d8:	bf48      	it	mi
 80082da:	4240      	negmi	r0, r0
 80082dc:	f04f 0100 	mov.w	r1, #0
 80082e0:	e73e      	b.n	8008160 <__adddf3+0x138>
 80082e2:	bf00      	nop

080082e4 <__aeabi_f2d>:
 80082e4:	0042      	lsls	r2, r0, #1
 80082e6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80082ea:	ea4f 0131 	mov.w	r1, r1, rrx
 80082ee:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80082f2:	bf1f      	itttt	ne
 80082f4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80082f8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80082fc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8008300:	4770      	bxne	lr
 8008302:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8008306:	bf08      	it	eq
 8008308:	4770      	bxeq	lr
 800830a:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800830e:	bf04      	itt	eq
 8008310:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8008314:	4770      	bxeq	lr
 8008316:	b530      	push	{r4, r5, lr}
 8008318:	f44f 7460 	mov.w	r4, #896	; 0x380
 800831c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008320:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008324:	e71c      	b.n	8008160 <__adddf3+0x138>
 8008326:	bf00      	nop

08008328 <__aeabi_ul2d>:
 8008328:	ea50 0201 	orrs.w	r2, r0, r1
 800832c:	bf08      	it	eq
 800832e:	4770      	bxeq	lr
 8008330:	b530      	push	{r4, r5, lr}
 8008332:	f04f 0500 	mov.w	r5, #0
 8008336:	e00a      	b.n	800834e <__aeabi_l2d+0x16>

08008338 <__aeabi_l2d>:
 8008338:	ea50 0201 	orrs.w	r2, r0, r1
 800833c:	bf08      	it	eq
 800833e:	4770      	bxeq	lr
 8008340:	b530      	push	{r4, r5, lr}
 8008342:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008346:	d502      	bpl.n	800834e <__aeabi_l2d+0x16>
 8008348:	4240      	negs	r0, r0
 800834a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800834e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008352:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008356:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800835a:	f43f aed8 	beq.w	800810e <__adddf3+0xe6>
 800835e:	f04f 0203 	mov.w	r2, #3
 8008362:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8008366:	bf18      	it	ne
 8008368:	3203      	addne	r2, #3
 800836a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800836e:	bf18      	it	ne
 8008370:	3203      	addne	r2, #3
 8008372:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8008376:	f1c2 0320 	rsb	r3, r2, #32
 800837a:	fa00 fc03 	lsl.w	ip, r0, r3
 800837e:	fa20 f002 	lsr.w	r0, r0, r2
 8008382:	fa01 fe03 	lsl.w	lr, r1, r3
 8008386:	ea40 000e 	orr.w	r0, r0, lr
 800838a:	fa21 f102 	lsr.w	r1, r1, r2
 800838e:	4414      	add	r4, r2
 8008390:	e6bd      	b.n	800810e <__adddf3+0xe6>
 8008392:	bf00      	nop

08008394 <__aeabi_dmul>:
 8008394:	b570      	push	{r4, r5, r6, lr}
 8008396:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800839a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800839e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80083a2:	bf1d      	ittte	ne
 80083a4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80083a8:	ea94 0f0c 	teqne	r4, ip
 80083ac:	ea95 0f0c 	teqne	r5, ip
 80083b0:	f000 f8de 	bleq	8008570 <__aeabi_dmul+0x1dc>
 80083b4:	442c      	add	r4, r5
 80083b6:	ea81 0603 	eor.w	r6, r1, r3
 80083ba:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80083be:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80083c2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80083c6:	bf18      	it	ne
 80083c8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80083cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80083d0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80083d4:	d038      	beq.n	8008448 <__aeabi_dmul+0xb4>
 80083d6:	fba0 ce02 	umull	ip, lr, r0, r2
 80083da:	f04f 0500 	mov.w	r5, #0
 80083de:	fbe1 e502 	umlal	lr, r5, r1, r2
 80083e2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80083e6:	fbe0 e503 	umlal	lr, r5, r0, r3
 80083ea:	f04f 0600 	mov.w	r6, #0
 80083ee:	fbe1 5603 	umlal	r5, r6, r1, r3
 80083f2:	f09c 0f00 	teq	ip, #0
 80083f6:	bf18      	it	ne
 80083f8:	f04e 0e01 	orrne.w	lr, lr, #1
 80083fc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8008400:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8008404:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8008408:	d204      	bcs.n	8008414 <__aeabi_dmul+0x80>
 800840a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800840e:	416d      	adcs	r5, r5
 8008410:	eb46 0606 	adc.w	r6, r6, r6
 8008414:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8008418:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 800841c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8008420:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8008424:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8008428:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800842c:	bf88      	it	hi
 800842e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8008432:	d81e      	bhi.n	8008472 <__aeabi_dmul+0xde>
 8008434:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8008438:	bf08      	it	eq
 800843a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800843e:	f150 0000 	adcs.w	r0, r0, #0
 8008442:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008446:	bd70      	pop	{r4, r5, r6, pc}
 8008448:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 800844c:	ea46 0101 	orr.w	r1, r6, r1
 8008450:	ea40 0002 	orr.w	r0, r0, r2
 8008454:	ea81 0103 	eor.w	r1, r1, r3
 8008458:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 800845c:	bfc2      	ittt	gt
 800845e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8008462:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8008466:	bd70      	popgt	{r4, r5, r6, pc}
 8008468:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800846c:	f04f 0e00 	mov.w	lr, #0
 8008470:	3c01      	subs	r4, #1
 8008472:	f300 80ab 	bgt.w	80085cc <__aeabi_dmul+0x238>
 8008476:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800847a:	bfde      	ittt	le
 800847c:	2000      	movle	r0, #0
 800847e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8008482:	bd70      	pople	{r4, r5, r6, pc}
 8008484:	f1c4 0400 	rsb	r4, r4, #0
 8008488:	3c20      	subs	r4, #32
 800848a:	da35      	bge.n	80084f8 <__aeabi_dmul+0x164>
 800848c:	340c      	adds	r4, #12
 800848e:	dc1b      	bgt.n	80084c8 <__aeabi_dmul+0x134>
 8008490:	f104 0414 	add.w	r4, r4, #20
 8008494:	f1c4 0520 	rsb	r5, r4, #32
 8008498:	fa00 f305 	lsl.w	r3, r0, r5
 800849c:	fa20 f004 	lsr.w	r0, r0, r4
 80084a0:	fa01 f205 	lsl.w	r2, r1, r5
 80084a4:	ea40 0002 	orr.w	r0, r0, r2
 80084a8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80084ac:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80084b0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80084b4:	fa21 f604 	lsr.w	r6, r1, r4
 80084b8:	eb42 0106 	adc.w	r1, r2, r6
 80084bc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80084c0:	bf08      	it	eq
 80084c2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80084c6:	bd70      	pop	{r4, r5, r6, pc}
 80084c8:	f1c4 040c 	rsb	r4, r4, #12
 80084cc:	f1c4 0520 	rsb	r5, r4, #32
 80084d0:	fa00 f304 	lsl.w	r3, r0, r4
 80084d4:	fa20 f005 	lsr.w	r0, r0, r5
 80084d8:	fa01 f204 	lsl.w	r2, r1, r4
 80084dc:	ea40 0002 	orr.w	r0, r0, r2
 80084e0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80084e4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80084e8:	f141 0100 	adc.w	r1, r1, #0
 80084ec:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80084f0:	bf08      	it	eq
 80084f2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80084f6:	bd70      	pop	{r4, r5, r6, pc}
 80084f8:	f1c4 0520 	rsb	r5, r4, #32
 80084fc:	fa00 f205 	lsl.w	r2, r0, r5
 8008500:	ea4e 0e02 	orr.w	lr, lr, r2
 8008504:	fa20 f304 	lsr.w	r3, r0, r4
 8008508:	fa01 f205 	lsl.w	r2, r1, r5
 800850c:	ea43 0302 	orr.w	r3, r3, r2
 8008510:	fa21 f004 	lsr.w	r0, r1, r4
 8008514:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8008518:	fa21 f204 	lsr.w	r2, r1, r4
 800851c:	ea20 0002 	bic.w	r0, r0, r2
 8008520:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8008524:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8008528:	bf08      	it	eq
 800852a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800852e:	bd70      	pop	{r4, r5, r6, pc}
 8008530:	f094 0f00 	teq	r4, #0
 8008534:	d10f      	bne.n	8008556 <__aeabi_dmul+0x1c2>
 8008536:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800853a:	0040      	lsls	r0, r0, #1
 800853c:	eb41 0101 	adc.w	r1, r1, r1
 8008540:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8008544:	bf08      	it	eq
 8008546:	3c01      	subeq	r4, #1
 8008548:	d0f7      	beq.n	800853a <__aeabi_dmul+0x1a6>
 800854a:	ea41 0106 	orr.w	r1, r1, r6
 800854e:	f095 0f00 	teq	r5, #0
 8008552:	bf18      	it	ne
 8008554:	4770      	bxne	lr
 8008556:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800855a:	0052      	lsls	r2, r2, #1
 800855c:	eb43 0303 	adc.w	r3, r3, r3
 8008560:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8008564:	bf08      	it	eq
 8008566:	3d01      	subeq	r5, #1
 8008568:	d0f7      	beq.n	800855a <__aeabi_dmul+0x1c6>
 800856a:	ea43 0306 	orr.w	r3, r3, r6
 800856e:	4770      	bx	lr
 8008570:	ea94 0f0c 	teq	r4, ip
 8008574:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8008578:	bf18      	it	ne
 800857a:	ea95 0f0c 	teqne	r5, ip
 800857e:	d00c      	beq.n	800859a <__aeabi_dmul+0x206>
 8008580:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8008584:	bf18      	it	ne
 8008586:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800858a:	d1d1      	bne.n	8008530 <__aeabi_dmul+0x19c>
 800858c:	ea81 0103 	eor.w	r1, r1, r3
 8008590:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8008594:	f04f 0000 	mov.w	r0, #0
 8008598:	bd70      	pop	{r4, r5, r6, pc}
 800859a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800859e:	bf06      	itte	eq
 80085a0:	4610      	moveq	r0, r2
 80085a2:	4619      	moveq	r1, r3
 80085a4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80085a8:	d019      	beq.n	80085de <__aeabi_dmul+0x24a>
 80085aa:	ea94 0f0c 	teq	r4, ip
 80085ae:	d102      	bne.n	80085b6 <__aeabi_dmul+0x222>
 80085b0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80085b4:	d113      	bne.n	80085de <__aeabi_dmul+0x24a>
 80085b6:	ea95 0f0c 	teq	r5, ip
 80085ba:	d105      	bne.n	80085c8 <__aeabi_dmul+0x234>
 80085bc:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80085c0:	bf1c      	itt	ne
 80085c2:	4610      	movne	r0, r2
 80085c4:	4619      	movne	r1, r3
 80085c6:	d10a      	bne.n	80085de <__aeabi_dmul+0x24a>
 80085c8:	ea81 0103 	eor.w	r1, r1, r3
 80085cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80085d0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80085d4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80085d8:	f04f 0000 	mov.w	r0, #0
 80085dc:	bd70      	pop	{r4, r5, r6, pc}
 80085de:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80085e2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80085e6:	bd70      	pop	{r4, r5, r6, pc}

080085e8 <__aeabi_ddiv>:
 80085e8:	b570      	push	{r4, r5, r6, lr}
 80085ea:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80085ee:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80085f2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80085f6:	bf1d      	ittte	ne
 80085f8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80085fc:	ea94 0f0c 	teqne	r4, ip
 8008600:	ea95 0f0c 	teqne	r5, ip
 8008604:	f000 f8a7 	bleq	8008756 <__aeabi_ddiv+0x16e>
 8008608:	eba4 0405 	sub.w	r4, r4, r5
 800860c:	ea81 0e03 	eor.w	lr, r1, r3
 8008610:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8008614:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008618:	f000 8088 	beq.w	800872c <__aeabi_ddiv+0x144>
 800861c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8008620:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8008624:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8008628:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 800862c:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8008630:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8008634:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8008638:	ea4f 2600 	mov.w	r6, r0, lsl #8
 800863c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8008640:	429d      	cmp	r5, r3
 8008642:	bf08      	it	eq
 8008644:	4296      	cmpeq	r6, r2
 8008646:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800864a:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800864e:	d202      	bcs.n	8008656 <__aeabi_ddiv+0x6e>
 8008650:	085b      	lsrs	r3, r3, #1
 8008652:	ea4f 0232 	mov.w	r2, r2, rrx
 8008656:	1ab6      	subs	r6, r6, r2
 8008658:	eb65 0503 	sbc.w	r5, r5, r3
 800865c:	085b      	lsrs	r3, r3, #1
 800865e:	ea4f 0232 	mov.w	r2, r2, rrx
 8008662:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8008666:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800866a:	ebb6 0e02 	subs.w	lr, r6, r2
 800866e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8008672:	bf22      	ittt	cs
 8008674:	1ab6      	subcs	r6, r6, r2
 8008676:	4675      	movcs	r5, lr
 8008678:	ea40 000c 	orrcs.w	r0, r0, ip
 800867c:	085b      	lsrs	r3, r3, #1
 800867e:	ea4f 0232 	mov.w	r2, r2, rrx
 8008682:	ebb6 0e02 	subs.w	lr, r6, r2
 8008686:	eb75 0e03 	sbcs.w	lr, r5, r3
 800868a:	bf22      	ittt	cs
 800868c:	1ab6      	subcs	r6, r6, r2
 800868e:	4675      	movcs	r5, lr
 8008690:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8008694:	085b      	lsrs	r3, r3, #1
 8008696:	ea4f 0232 	mov.w	r2, r2, rrx
 800869a:	ebb6 0e02 	subs.w	lr, r6, r2
 800869e:	eb75 0e03 	sbcs.w	lr, r5, r3
 80086a2:	bf22      	ittt	cs
 80086a4:	1ab6      	subcs	r6, r6, r2
 80086a6:	4675      	movcs	r5, lr
 80086a8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80086ac:	085b      	lsrs	r3, r3, #1
 80086ae:	ea4f 0232 	mov.w	r2, r2, rrx
 80086b2:	ebb6 0e02 	subs.w	lr, r6, r2
 80086b6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80086ba:	bf22      	ittt	cs
 80086bc:	1ab6      	subcs	r6, r6, r2
 80086be:	4675      	movcs	r5, lr
 80086c0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80086c4:	ea55 0e06 	orrs.w	lr, r5, r6
 80086c8:	d018      	beq.n	80086fc <__aeabi_ddiv+0x114>
 80086ca:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80086ce:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80086d2:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80086d6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80086da:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80086de:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80086e2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80086e6:	d1c0      	bne.n	800866a <__aeabi_ddiv+0x82>
 80086e8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80086ec:	d10b      	bne.n	8008706 <__aeabi_ddiv+0x11e>
 80086ee:	ea41 0100 	orr.w	r1, r1, r0
 80086f2:	f04f 0000 	mov.w	r0, #0
 80086f6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80086fa:	e7b6      	b.n	800866a <__aeabi_ddiv+0x82>
 80086fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8008700:	bf04      	itt	eq
 8008702:	4301      	orreq	r1, r0
 8008704:	2000      	moveq	r0, #0
 8008706:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800870a:	bf88      	it	hi
 800870c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8008710:	f63f aeaf 	bhi.w	8008472 <__aeabi_dmul+0xde>
 8008714:	ebb5 0c03 	subs.w	ip, r5, r3
 8008718:	bf04      	itt	eq
 800871a:	ebb6 0c02 	subseq.w	ip, r6, r2
 800871e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008722:	f150 0000 	adcs.w	r0, r0, #0
 8008726:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800872a:	bd70      	pop	{r4, r5, r6, pc}
 800872c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8008730:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8008734:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8008738:	bfc2      	ittt	gt
 800873a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800873e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8008742:	bd70      	popgt	{r4, r5, r6, pc}
 8008744:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8008748:	f04f 0e00 	mov.w	lr, #0
 800874c:	3c01      	subs	r4, #1
 800874e:	e690      	b.n	8008472 <__aeabi_dmul+0xde>
 8008750:	ea45 0e06 	orr.w	lr, r5, r6
 8008754:	e68d      	b.n	8008472 <__aeabi_dmul+0xde>
 8008756:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800875a:	ea94 0f0c 	teq	r4, ip
 800875e:	bf08      	it	eq
 8008760:	ea95 0f0c 	teqeq	r5, ip
 8008764:	f43f af3b 	beq.w	80085de <__aeabi_dmul+0x24a>
 8008768:	ea94 0f0c 	teq	r4, ip
 800876c:	d10a      	bne.n	8008784 <__aeabi_ddiv+0x19c>
 800876e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8008772:	f47f af34 	bne.w	80085de <__aeabi_dmul+0x24a>
 8008776:	ea95 0f0c 	teq	r5, ip
 800877a:	f47f af25 	bne.w	80085c8 <__aeabi_dmul+0x234>
 800877e:	4610      	mov	r0, r2
 8008780:	4619      	mov	r1, r3
 8008782:	e72c      	b.n	80085de <__aeabi_dmul+0x24a>
 8008784:	ea95 0f0c 	teq	r5, ip
 8008788:	d106      	bne.n	8008798 <__aeabi_ddiv+0x1b0>
 800878a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800878e:	f43f aefd 	beq.w	800858c <__aeabi_dmul+0x1f8>
 8008792:	4610      	mov	r0, r2
 8008794:	4619      	mov	r1, r3
 8008796:	e722      	b.n	80085de <__aeabi_dmul+0x24a>
 8008798:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800879c:	bf18      	it	ne
 800879e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80087a2:	f47f aec5 	bne.w	8008530 <__aeabi_dmul+0x19c>
 80087a6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80087aa:	f47f af0d 	bne.w	80085c8 <__aeabi_dmul+0x234>
 80087ae:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80087b2:	f47f aeeb 	bne.w	800858c <__aeabi_dmul+0x1f8>
 80087b6:	e712      	b.n	80085de <__aeabi_dmul+0x24a>

080087b8 <__gedf2>:
 80087b8:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 80087bc:	e006      	b.n	80087cc <__cmpdf2+0x4>
 80087be:	bf00      	nop

080087c0 <__ledf2>:
 80087c0:	f04f 0c01 	mov.w	ip, #1
 80087c4:	e002      	b.n	80087cc <__cmpdf2+0x4>
 80087c6:	bf00      	nop

080087c8 <__cmpdf2>:
 80087c8:	f04f 0c01 	mov.w	ip, #1
 80087cc:	f84d cd04 	str.w	ip, [sp, #-4]!
 80087d0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80087d4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80087d8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80087dc:	bf18      	it	ne
 80087de:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80087e2:	d01b      	beq.n	800881c <__cmpdf2+0x54>
 80087e4:	b001      	add	sp, #4
 80087e6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80087ea:	bf0c      	ite	eq
 80087ec:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80087f0:	ea91 0f03 	teqne	r1, r3
 80087f4:	bf02      	ittt	eq
 80087f6:	ea90 0f02 	teqeq	r0, r2
 80087fa:	2000      	moveq	r0, #0
 80087fc:	4770      	bxeq	lr
 80087fe:	f110 0f00 	cmn.w	r0, #0
 8008802:	ea91 0f03 	teq	r1, r3
 8008806:	bf58      	it	pl
 8008808:	4299      	cmppl	r1, r3
 800880a:	bf08      	it	eq
 800880c:	4290      	cmpeq	r0, r2
 800880e:	bf2c      	ite	cs
 8008810:	17d8      	asrcs	r0, r3, #31
 8008812:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8008816:	f040 0001 	orr.w	r0, r0, #1
 800881a:	4770      	bx	lr
 800881c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8008820:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8008824:	d102      	bne.n	800882c <__cmpdf2+0x64>
 8008826:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800882a:	d107      	bne.n	800883c <__cmpdf2+0x74>
 800882c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8008830:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8008834:	d1d6      	bne.n	80087e4 <__cmpdf2+0x1c>
 8008836:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800883a:	d0d3      	beq.n	80087e4 <__cmpdf2+0x1c>
 800883c:	f85d 0b04 	ldr.w	r0, [sp], #4
 8008840:	4770      	bx	lr
 8008842:	bf00      	nop

08008844 <__aeabi_cdrcmple>:
 8008844:	4684      	mov	ip, r0
 8008846:	4610      	mov	r0, r2
 8008848:	4662      	mov	r2, ip
 800884a:	468c      	mov	ip, r1
 800884c:	4619      	mov	r1, r3
 800884e:	4663      	mov	r3, ip
 8008850:	e000      	b.n	8008854 <__aeabi_cdcmpeq>
 8008852:	bf00      	nop

08008854 <__aeabi_cdcmpeq>:
 8008854:	b501      	push	{r0, lr}
 8008856:	f7ff ffb7 	bl	80087c8 <__cmpdf2>
 800885a:	2800      	cmp	r0, #0
 800885c:	bf48      	it	mi
 800885e:	f110 0f00 	cmnmi.w	r0, #0
 8008862:	bd01      	pop	{r0, pc}

08008864 <__aeabi_dcmpeq>:
 8008864:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008868:	f7ff fff4 	bl	8008854 <__aeabi_cdcmpeq>
 800886c:	bf0c      	ite	eq
 800886e:	2001      	moveq	r0, #1
 8008870:	2000      	movne	r0, #0
 8008872:	f85d fb08 	ldr.w	pc, [sp], #8
 8008876:	bf00      	nop

08008878 <__aeabi_dcmplt>:
 8008878:	f84d ed08 	str.w	lr, [sp, #-8]!
 800887c:	f7ff ffea 	bl	8008854 <__aeabi_cdcmpeq>
 8008880:	bf34      	ite	cc
 8008882:	2001      	movcc	r0, #1
 8008884:	2000      	movcs	r0, #0
 8008886:	f85d fb08 	ldr.w	pc, [sp], #8
 800888a:	bf00      	nop

0800888c <__aeabi_dcmple>:
 800888c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008890:	f7ff ffe0 	bl	8008854 <__aeabi_cdcmpeq>
 8008894:	bf94      	ite	ls
 8008896:	2001      	movls	r0, #1
 8008898:	2000      	movhi	r0, #0
 800889a:	f85d fb08 	ldr.w	pc, [sp], #8
 800889e:	bf00      	nop

080088a0 <__aeabi_dcmpge>:
 80088a0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80088a4:	f7ff ffce 	bl	8008844 <__aeabi_cdrcmple>
 80088a8:	bf94      	ite	ls
 80088aa:	2001      	movls	r0, #1
 80088ac:	2000      	movhi	r0, #0
 80088ae:	f85d fb08 	ldr.w	pc, [sp], #8
 80088b2:	bf00      	nop

080088b4 <__aeabi_dcmpgt>:
 80088b4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80088b8:	f7ff ffc4 	bl	8008844 <__aeabi_cdrcmple>
 80088bc:	bf34      	ite	cc
 80088be:	2001      	movcc	r0, #1
 80088c0:	2000      	movcs	r0, #0
 80088c2:	f85d fb08 	ldr.w	pc, [sp], #8
 80088c6:	bf00      	nop

080088c8 <__aeabi_dcmpun>:
 80088c8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80088cc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80088d0:	d102      	bne.n	80088d8 <__aeabi_dcmpun+0x10>
 80088d2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80088d6:	d10a      	bne.n	80088ee <__aeabi_dcmpun+0x26>
 80088d8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80088dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80088e0:	d102      	bne.n	80088e8 <__aeabi_dcmpun+0x20>
 80088e2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80088e6:	d102      	bne.n	80088ee <__aeabi_dcmpun+0x26>
 80088e8:	f04f 0000 	mov.w	r0, #0
 80088ec:	4770      	bx	lr
 80088ee:	f04f 0001 	mov.w	r0, #1
 80088f2:	4770      	bx	lr

080088f4 <__aeabi_d2iz>:
 80088f4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80088f8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 80088fc:	d215      	bcs.n	800892a <__aeabi_d2iz+0x36>
 80088fe:	d511      	bpl.n	8008924 <__aeabi_d2iz+0x30>
 8008900:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8008904:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8008908:	d912      	bls.n	8008930 <__aeabi_d2iz+0x3c>
 800890a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 800890e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008912:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8008916:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800891a:	fa23 f002 	lsr.w	r0, r3, r2
 800891e:	bf18      	it	ne
 8008920:	4240      	negne	r0, r0
 8008922:	4770      	bx	lr
 8008924:	f04f 0000 	mov.w	r0, #0
 8008928:	4770      	bx	lr
 800892a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 800892e:	d105      	bne.n	800893c <__aeabi_d2iz+0x48>
 8008930:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8008934:	bf08      	it	eq
 8008936:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 800893a:	4770      	bx	lr
 800893c:	f04f 0000 	mov.w	r0, #0
 8008940:	4770      	bx	lr
 8008942:	bf00      	nop

08008944 <__aeabi_uldivmod>:
 8008944:	b953      	cbnz	r3, 800895c <__aeabi_uldivmod+0x18>
 8008946:	b94a      	cbnz	r2, 800895c <__aeabi_uldivmod+0x18>
 8008948:	2900      	cmp	r1, #0
 800894a:	bf08      	it	eq
 800894c:	2800      	cmpeq	r0, #0
 800894e:	bf1c      	itt	ne
 8008950:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8008954:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8008958:	f000 b974 	b.w	8008c44 <__aeabi_idiv0>
 800895c:	f1ad 0c08 	sub.w	ip, sp, #8
 8008960:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8008964:	f000 f806 	bl	8008974 <__udivmoddi4>
 8008968:	f8dd e004 	ldr.w	lr, [sp, #4]
 800896c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008970:	b004      	add	sp, #16
 8008972:	4770      	bx	lr

08008974 <__udivmoddi4>:
 8008974:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008978:	9e08      	ldr	r6, [sp, #32]
 800897a:	4604      	mov	r4, r0
 800897c:	4688      	mov	r8, r1
 800897e:	2b00      	cmp	r3, #0
 8008980:	f040 8085 	bne.w	8008a8e <__udivmoddi4+0x11a>
 8008984:	428a      	cmp	r2, r1
 8008986:	4615      	mov	r5, r2
 8008988:	d948      	bls.n	8008a1c <__udivmoddi4+0xa8>
 800898a:	fab2 f282 	clz	r2, r2
 800898e:	b14a      	cbz	r2, 80089a4 <__udivmoddi4+0x30>
 8008990:	f1c2 0720 	rsb	r7, r2, #32
 8008994:	fa01 f302 	lsl.w	r3, r1, r2
 8008998:	fa20 f707 	lsr.w	r7, r0, r7
 800899c:	4095      	lsls	r5, r2
 800899e:	ea47 0803 	orr.w	r8, r7, r3
 80089a2:	4094      	lsls	r4, r2
 80089a4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80089a8:	0c23      	lsrs	r3, r4, #16
 80089aa:	fbb8 f7fe 	udiv	r7, r8, lr
 80089ae:	fa1f fc85 	uxth.w	ip, r5
 80089b2:	fb0e 8817 	mls	r8, lr, r7, r8
 80089b6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80089ba:	fb07 f10c 	mul.w	r1, r7, ip
 80089be:	4299      	cmp	r1, r3
 80089c0:	d909      	bls.n	80089d6 <__udivmoddi4+0x62>
 80089c2:	18eb      	adds	r3, r5, r3
 80089c4:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
 80089c8:	f080 80e3 	bcs.w	8008b92 <__udivmoddi4+0x21e>
 80089cc:	4299      	cmp	r1, r3
 80089ce:	f240 80e0 	bls.w	8008b92 <__udivmoddi4+0x21e>
 80089d2:	3f02      	subs	r7, #2
 80089d4:	442b      	add	r3, r5
 80089d6:	1a5b      	subs	r3, r3, r1
 80089d8:	b2a4      	uxth	r4, r4
 80089da:	fbb3 f0fe 	udiv	r0, r3, lr
 80089de:	fb0e 3310 	mls	r3, lr, r0, r3
 80089e2:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80089e6:	fb00 fc0c 	mul.w	ip, r0, ip
 80089ea:	45a4      	cmp	ip, r4
 80089ec:	d909      	bls.n	8008a02 <__udivmoddi4+0x8e>
 80089ee:	192c      	adds	r4, r5, r4
 80089f0:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80089f4:	f080 80cb 	bcs.w	8008b8e <__udivmoddi4+0x21a>
 80089f8:	45a4      	cmp	ip, r4
 80089fa:	f240 80c8 	bls.w	8008b8e <__udivmoddi4+0x21a>
 80089fe:	3802      	subs	r0, #2
 8008a00:	442c      	add	r4, r5
 8008a02:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8008a06:	eba4 040c 	sub.w	r4, r4, ip
 8008a0a:	2700      	movs	r7, #0
 8008a0c:	b11e      	cbz	r6, 8008a16 <__udivmoddi4+0xa2>
 8008a0e:	40d4      	lsrs	r4, r2
 8008a10:	2300      	movs	r3, #0
 8008a12:	e9c6 4300 	strd	r4, r3, [r6]
 8008a16:	4639      	mov	r1, r7
 8008a18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008a1c:	2a00      	cmp	r2, #0
 8008a1e:	d053      	beq.n	8008ac8 <__udivmoddi4+0x154>
 8008a20:	fab2 f282 	clz	r2, r2
 8008a24:	2a00      	cmp	r2, #0
 8008a26:	f040 80b6 	bne.w	8008b96 <__udivmoddi4+0x222>
 8008a2a:	1b49      	subs	r1, r1, r5
 8008a2c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8008a30:	fa1f f885 	uxth.w	r8, r5
 8008a34:	2701      	movs	r7, #1
 8008a36:	fbb1 fcfe 	udiv	ip, r1, lr
 8008a3a:	0c23      	lsrs	r3, r4, #16
 8008a3c:	fb0e 111c 	mls	r1, lr, ip, r1
 8008a40:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8008a44:	fb08 f10c 	mul.w	r1, r8, ip
 8008a48:	4299      	cmp	r1, r3
 8008a4a:	d907      	bls.n	8008a5c <__udivmoddi4+0xe8>
 8008a4c:	18eb      	adds	r3, r5, r3
 8008a4e:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 8008a52:	d202      	bcs.n	8008a5a <__udivmoddi4+0xe6>
 8008a54:	4299      	cmp	r1, r3
 8008a56:	f200 80ec 	bhi.w	8008c32 <__udivmoddi4+0x2be>
 8008a5a:	4684      	mov	ip, r0
 8008a5c:	1a59      	subs	r1, r3, r1
 8008a5e:	b2a3      	uxth	r3, r4
 8008a60:	fbb1 f0fe 	udiv	r0, r1, lr
 8008a64:	fb0e 1410 	mls	r4, lr, r0, r1
 8008a68:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8008a6c:	fb08 f800 	mul.w	r8, r8, r0
 8008a70:	45a0      	cmp	r8, r4
 8008a72:	d907      	bls.n	8008a84 <__udivmoddi4+0x110>
 8008a74:	192c      	adds	r4, r5, r4
 8008a76:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8008a7a:	d202      	bcs.n	8008a82 <__udivmoddi4+0x10e>
 8008a7c:	45a0      	cmp	r8, r4
 8008a7e:	f200 80dc 	bhi.w	8008c3a <__udivmoddi4+0x2c6>
 8008a82:	4618      	mov	r0, r3
 8008a84:	eba4 0408 	sub.w	r4, r4, r8
 8008a88:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8008a8c:	e7be      	b.n	8008a0c <__udivmoddi4+0x98>
 8008a8e:	428b      	cmp	r3, r1
 8008a90:	d908      	bls.n	8008aa4 <__udivmoddi4+0x130>
 8008a92:	2e00      	cmp	r6, #0
 8008a94:	d078      	beq.n	8008b88 <__udivmoddi4+0x214>
 8008a96:	2700      	movs	r7, #0
 8008a98:	e9c6 0100 	strd	r0, r1, [r6]
 8008a9c:	4638      	mov	r0, r7
 8008a9e:	4639      	mov	r1, r7
 8008aa0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008aa4:	fab3 f783 	clz	r7, r3
 8008aa8:	b97f      	cbnz	r7, 8008aca <__udivmoddi4+0x156>
 8008aaa:	428b      	cmp	r3, r1
 8008aac:	d302      	bcc.n	8008ab4 <__udivmoddi4+0x140>
 8008aae:	4282      	cmp	r2, r0
 8008ab0:	f200 80bd 	bhi.w	8008c2e <__udivmoddi4+0x2ba>
 8008ab4:	1a84      	subs	r4, r0, r2
 8008ab6:	eb61 0303 	sbc.w	r3, r1, r3
 8008aba:	2001      	movs	r0, #1
 8008abc:	4698      	mov	r8, r3
 8008abe:	2e00      	cmp	r6, #0
 8008ac0:	d0a9      	beq.n	8008a16 <__udivmoddi4+0xa2>
 8008ac2:	e9c6 4800 	strd	r4, r8, [r6]
 8008ac6:	e7a6      	b.n	8008a16 <__udivmoddi4+0xa2>
 8008ac8:	deff      	udf	#255	; 0xff
 8008aca:	f1c7 0520 	rsb	r5, r7, #32
 8008ace:	40bb      	lsls	r3, r7
 8008ad0:	fa22 fc05 	lsr.w	ip, r2, r5
 8008ad4:	ea4c 0c03 	orr.w	ip, ip, r3
 8008ad8:	fa01 f407 	lsl.w	r4, r1, r7
 8008adc:	fa20 f805 	lsr.w	r8, r0, r5
 8008ae0:	fa21 f305 	lsr.w	r3, r1, r5
 8008ae4:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8008ae8:	ea48 0404 	orr.w	r4, r8, r4
 8008aec:	fbb3 f9fe 	udiv	r9, r3, lr
 8008af0:	0c21      	lsrs	r1, r4, #16
 8008af2:	fb0e 3319 	mls	r3, lr, r9, r3
 8008af6:	fa1f f88c 	uxth.w	r8, ip
 8008afa:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8008afe:	fb09 fa08 	mul.w	sl, r9, r8
 8008b02:	459a      	cmp	sl, r3
 8008b04:	fa02 f207 	lsl.w	r2, r2, r7
 8008b08:	fa00 f107 	lsl.w	r1, r0, r7
 8008b0c:	d90b      	bls.n	8008b26 <__udivmoddi4+0x1b2>
 8008b0e:	eb1c 0303 	adds.w	r3, ip, r3
 8008b12:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 8008b16:	f080 8088 	bcs.w	8008c2a <__udivmoddi4+0x2b6>
 8008b1a:	459a      	cmp	sl, r3
 8008b1c:	f240 8085 	bls.w	8008c2a <__udivmoddi4+0x2b6>
 8008b20:	f1a9 0902 	sub.w	r9, r9, #2
 8008b24:	4463      	add	r3, ip
 8008b26:	eba3 030a 	sub.w	r3, r3, sl
 8008b2a:	b2a4      	uxth	r4, r4
 8008b2c:	fbb3 f0fe 	udiv	r0, r3, lr
 8008b30:	fb0e 3310 	mls	r3, lr, r0, r3
 8008b34:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8008b38:	fb00 f808 	mul.w	r8, r0, r8
 8008b3c:	45a0      	cmp	r8, r4
 8008b3e:	d908      	bls.n	8008b52 <__udivmoddi4+0x1de>
 8008b40:	eb1c 0404 	adds.w	r4, ip, r4
 8008b44:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8008b48:	d26b      	bcs.n	8008c22 <__udivmoddi4+0x2ae>
 8008b4a:	45a0      	cmp	r8, r4
 8008b4c:	d969      	bls.n	8008c22 <__udivmoddi4+0x2ae>
 8008b4e:	3802      	subs	r0, #2
 8008b50:	4464      	add	r4, ip
 8008b52:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8008b56:	eba4 0408 	sub.w	r4, r4, r8
 8008b5a:	fba0 8902 	umull	r8, r9, r0, r2
 8008b5e:	454c      	cmp	r4, r9
 8008b60:	46c6      	mov	lr, r8
 8008b62:	464b      	mov	r3, r9
 8008b64:	d354      	bcc.n	8008c10 <__udivmoddi4+0x29c>
 8008b66:	d051      	beq.n	8008c0c <__udivmoddi4+0x298>
 8008b68:	2e00      	cmp	r6, #0
 8008b6a:	d069      	beq.n	8008c40 <__udivmoddi4+0x2cc>
 8008b6c:	ebb1 020e 	subs.w	r2, r1, lr
 8008b70:	eb64 0403 	sbc.w	r4, r4, r3
 8008b74:	fa04 f505 	lsl.w	r5, r4, r5
 8008b78:	fa22 f307 	lsr.w	r3, r2, r7
 8008b7c:	40fc      	lsrs	r4, r7
 8008b7e:	431d      	orrs	r5, r3
 8008b80:	e9c6 5400 	strd	r5, r4, [r6]
 8008b84:	2700      	movs	r7, #0
 8008b86:	e746      	b.n	8008a16 <__udivmoddi4+0xa2>
 8008b88:	4637      	mov	r7, r6
 8008b8a:	4630      	mov	r0, r6
 8008b8c:	e743      	b.n	8008a16 <__udivmoddi4+0xa2>
 8008b8e:	4618      	mov	r0, r3
 8008b90:	e737      	b.n	8008a02 <__udivmoddi4+0x8e>
 8008b92:	4607      	mov	r7, r0
 8008b94:	e71f      	b.n	80089d6 <__udivmoddi4+0x62>
 8008b96:	f1c2 0320 	rsb	r3, r2, #32
 8008b9a:	fa20 f703 	lsr.w	r7, r0, r3
 8008b9e:	4095      	lsls	r5, r2
 8008ba0:	fa01 f002 	lsl.w	r0, r1, r2
 8008ba4:	fa21 f303 	lsr.w	r3, r1, r3
 8008ba8:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8008bac:	4338      	orrs	r0, r7
 8008bae:	0c01      	lsrs	r1, r0, #16
 8008bb0:	fbb3 f7fe 	udiv	r7, r3, lr
 8008bb4:	fa1f f885 	uxth.w	r8, r5
 8008bb8:	fb0e 3317 	mls	r3, lr, r7, r3
 8008bbc:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8008bc0:	fb07 f308 	mul.w	r3, r7, r8
 8008bc4:	428b      	cmp	r3, r1
 8008bc6:	fa04 f402 	lsl.w	r4, r4, r2
 8008bca:	d907      	bls.n	8008bdc <__udivmoddi4+0x268>
 8008bcc:	1869      	adds	r1, r5, r1
 8008bce:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
 8008bd2:	d228      	bcs.n	8008c26 <__udivmoddi4+0x2b2>
 8008bd4:	428b      	cmp	r3, r1
 8008bd6:	d926      	bls.n	8008c26 <__udivmoddi4+0x2b2>
 8008bd8:	3f02      	subs	r7, #2
 8008bda:	4429      	add	r1, r5
 8008bdc:	1acb      	subs	r3, r1, r3
 8008bde:	b281      	uxth	r1, r0
 8008be0:	fbb3 f0fe 	udiv	r0, r3, lr
 8008be4:	fb0e 3310 	mls	r3, lr, r0, r3
 8008be8:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8008bec:	fb00 f308 	mul.w	r3, r0, r8
 8008bf0:	428b      	cmp	r3, r1
 8008bf2:	d907      	bls.n	8008c04 <__udivmoddi4+0x290>
 8008bf4:	1869      	adds	r1, r5, r1
 8008bf6:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8008bfa:	d210      	bcs.n	8008c1e <__udivmoddi4+0x2aa>
 8008bfc:	428b      	cmp	r3, r1
 8008bfe:	d90e      	bls.n	8008c1e <__udivmoddi4+0x2aa>
 8008c00:	3802      	subs	r0, #2
 8008c02:	4429      	add	r1, r5
 8008c04:	1ac9      	subs	r1, r1, r3
 8008c06:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8008c0a:	e714      	b.n	8008a36 <__udivmoddi4+0xc2>
 8008c0c:	4541      	cmp	r1, r8
 8008c0e:	d2ab      	bcs.n	8008b68 <__udivmoddi4+0x1f4>
 8008c10:	ebb8 0e02 	subs.w	lr, r8, r2
 8008c14:	eb69 020c 	sbc.w	r2, r9, ip
 8008c18:	3801      	subs	r0, #1
 8008c1a:	4613      	mov	r3, r2
 8008c1c:	e7a4      	b.n	8008b68 <__udivmoddi4+0x1f4>
 8008c1e:	4660      	mov	r0, ip
 8008c20:	e7f0      	b.n	8008c04 <__udivmoddi4+0x290>
 8008c22:	4618      	mov	r0, r3
 8008c24:	e795      	b.n	8008b52 <__udivmoddi4+0x1de>
 8008c26:	4667      	mov	r7, ip
 8008c28:	e7d8      	b.n	8008bdc <__udivmoddi4+0x268>
 8008c2a:	4681      	mov	r9, r0
 8008c2c:	e77b      	b.n	8008b26 <__udivmoddi4+0x1b2>
 8008c2e:	4638      	mov	r0, r7
 8008c30:	e745      	b.n	8008abe <__udivmoddi4+0x14a>
 8008c32:	f1ac 0c02 	sub.w	ip, ip, #2
 8008c36:	442b      	add	r3, r5
 8008c38:	e710      	b.n	8008a5c <__udivmoddi4+0xe8>
 8008c3a:	3802      	subs	r0, #2
 8008c3c:	442c      	add	r4, r5
 8008c3e:	e721      	b.n	8008a84 <__udivmoddi4+0x110>
 8008c40:	4637      	mov	r7, r6
 8008c42:	e6e8      	b.n	8008a16 <__udivmoddi4+0xa2>

08008c44 <__aeabi_idiv0>:
 8008c44:	4770      	bx	lr
 8008c46:	bf00      	nop
	...

08008c50 <_pal_lld_enablepadevent.constprop.31>:
  padmask = 1U << (uint32_t)pad;

  /* Multiple channel setting of the same channel not allowed, first disable
     it. This is done because on STM32 the same channel cannot be mapped on
     multiple ports.*/
  osalDbgAssert(((EXTI->RTSR1 & padmask) == 0U) &&
 8008c50:	4a18      	ldr	r2, [pc, #96]	; (8008cb4 <_pal_lld_enablepadevent.constprop.31+0x64>)
void _pal_lld_enablepadevent(ioportid_t port,
 8008c52:	b470      	push	{r4, r5, r6}
  padmask = 1U << (uint32_t)pad;
 8008c54:	2301      	movs	r3, #1
  osalDbgAssert(((EXTI->RTSR1 & padmask) == 0U) &&
 8008c56:	6894      	ldr	r4, [r2, #8]
  padmask = 1U << (uint32_t)pad;
 8008c58:	408b      	lsls	r3, r1
  osalDbgAssert(((EXTI->RTSR1 & padmask) == 0U) &&
 8008c5a:	4223      	tst	r3, r4
 8008c5c:	d102      	bne.n	8008c64 <_pal_lld_enablepadevent.constprop.31+0x14>
 8008c5e:	68d4      	ldr	r4, [r2, #12]
 8008c60:	4223      	tst	r3, r4
 8008c62:	d004      	beq.n	8008c6e <_pal_lld_enablepadevent.constprop.31+0x1e>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8008c64:	b672      	cpsid	i

  /* Logging the event.*/
  _trace_halt(reason);

  /* Pointing to the passed message.*/
  ch.dbg.panic_msg = reason;
 8008c66:	4b14      	ldr	r3, [pc, #80]	; (8008cb8 <_pal_lld_enablepadevent.constprop.31+0x68>)
 8008c68:	4a14      	ldr	r2, [pc, #80]	; (8008cbc <_pal_lld_enablepadevent.constprop.31+0x6c>)
 8008c6a:	62da      	str	r2, [r3, #44]	; 0x2c
 8008c6c:	e7fe      	b.n	8008c6c <_pal_lld_enablepadevent.constprop.31+0x1c>
 8008c6e:	f021 0403 	bic.w	r4, r1, #3
 8008c72:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8008c76:	f504 3480 	add.w	r4, r4, #65536	; 0x10000
                ((EXTI->FTSR1 & padmask) == 0U), "channel already in use");

  /* Index and mask of the SYSCFG CR register to be used.*/
  cridx  = (uint32_t)pad >> 2U;
  croff = ((uint32_t)pad & 3U) * 4U;
 8008c7a:	f001 0103 	and.w	r1, r1, #3
  /* Port index is obtained assuming that GPIO ports are placed at regular
     0x400 intervals in memory space. So far this is true for all devices.*/
  portidx = (((uint32_t)port - (uint32_t)GPIOA) >> 10U) & 0xFU;

  /* Port selection in SYSCFG.*/
  SYSCFG->EXTICR[cridx] = (SYSCFG->EXTICR[cridx] & crmask) | (portidx << croff);
 8008c7e:	68a5      	ldr	r5, [r4, #8]
  croff = ((uint32_t)pad & 3U) * 4U;
 8008c80:	0089      	lsls	r1, r1, #2
  crmask = ~(0xFU << croff);
 8008c82:	260f      	movs	r6, #15
 8008c84:	408e      	lsls	r6, r1
  portidx = (((uint32_t)port - (uint32_t)GPIOA) >> 10U) & 0xFU;
 8008c86:	f3c0 2083 	ubfx	r0, r0, #10, #4
  SYSCFG->EXTICR[cridx] = (SYSCFG->EXTICR[cridx] & crmask) | (portidx << croff);
 8008c8a:	ea25 0506 	bic.w	r5, r5, r6
 8008c8e:	fa00 f101 	lsl.w	r1, r0, r1
 8008c92:	4329      	orrs	r1, r5
 8008c94:	60a1      	str	r1, [r4, #8]

  /* Programming edge registers.*/
  if (mode & PAL_EVENT_MODE_RISING_EDGE)
    EXTI->RTSR1 |= padmask;
 8008c96:	6891      	ldr	r1, [r2, #8]
 8008c98:	4319      	orrs	r1, r3
 8008c9a:	6091      	str	r1, [r2, #8]
  else
    EXTI->RTSR1 &= ~padmask;
  if (mode & PAL_EVENT_MODE_FALLING_EDGE)
    EXTI->FTSR1 |= padmask;
 8008c9c:	68d1      	ldr	r1, [r2, #12]
 8008c9e:	4319      	orrs	r1, r3
 8008ca0:	60d1      	str	r1, [r2, #12]
  else
    EXTI->FTSR1 &= ~padmask;

  /* Programming interrupt and event registers.*/
  EXTI->IMR1 |= padmask;
 8008ca2:	6811      	ldr	r1, [r2, #0]
 8008ca4:	4319      	orrs	r1, r3
 8008ca6:	6011      	str	r1, [r2, #0]
  EXTI->EMR1 &= ~padmask;
 8008ca8:	6851      	ldr	r1, [r2, #4]
 8008caa:	ea21 0303 	bic.w	r3, r1, r3
 8008cae:	6053      	str	r3, [r2, #4]
}
 8008cb0:	bc70      	pop	{r4, r5, r6}
 8008cb2:	4770      	bx	lr
 8008cb4:	40010400 	.word	0x40010400
 8008cb8:	20002454 	.word	0x20002454
 8008cbc:	080128f8 	.word	0x080128f8

08008cc0 <chTMStartMeasurementX.constprop.25>:
 *
 * @return              The realtime counter value.
 */
static inline rtcnt_t port_rt_get_counter_value(void) {

  return DWT->CYCCNT;
 8008cc0:	4b01      	ldr	r3, [pc, #4]	; (8008cc8 <chTMStartMeasurementX.constprop.25+0x8>)
 8008cc2:	685b      	ldr	r3, [r3, #4]
 *
 * @xclass
 */
NOINLINE void chTMStartMeasurementX(time_measurement_t *tmp) {

  tmp->last = chSysGetRealtimeCounterX();
 8008cc4:	6083      	str	r3, [r0, #8]
}
 8008cc6:	4770      	bx	lr
 8008cc8:	e0001000 	.word	0xe0001000
 8008ccc:	00000000 	.word	0x00000000

08008cd0 <_ZL11chSysUnlockv>:

  /* The following condition can be triggered by the use of i-class functions
     in a critical section not followed by a chSchResceduleS(), this means
     that the current thread has a lower priority than the next thread in
     the ready list.*/
  chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 8008cd0:	4b08      	ldr	r3, [pc, #32]	; (8008cf4 <_ZL11chSysUnlockv+0x24>)
 8008cd2:	681a      	ldr	r2, [r3, #0]
 8008cd4:	429a      	cmp	r2, r3
 8008cd6:	d004      	beq.n	8008ce2 <_ZL11chSysUnlockv+0x12>
 8008cd8:	6999      	ldr	r1, [r3, #24]
 8008cda:	6892      	ldr	r2, [r2, #8]
 8008cdc:	6889      	ldr	r1, [r1, #8]
 8008cde:	4291      	cmp	r1, r2
 8008ce0:	d303      	bcc.n	8008cea <_ZL11chSysUnlockv+0x1a>
  \details Assigns the given value to the Base Priority register.
  \param [in]    basePri  Base Priority value to set
 */
__STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
{
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 8008ce2:	2300      	movs	r3, #0
 8008ce4:	f383 8811 	msr	BASEPRI, r3
              (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
              "priority order violation");

  port_unlock();
}
 8008ce8:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
 8008cea:	b672      	cpsid	i
 8008cec:	4a02      	ldr	r2, [pc, #8]	; (8008cf8 <_ZL11chSysUnlockv+0x28>)
 8008cee:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Halt hook code, usually empty.*/
  CH_CFG_SYSTEM_HALT_HOOK(reason);

  /* Harmless infinite loop.*/
  while (true) {
  }
 8008cf0:	e7fe      	b.n	8008cf0 <_ZL11chSysUnlockv+0x20>
 8008cf2:	bf00      	nop
 8008cf4:	20002454 	.word	0x20002454
 8008cf8:	08012780 	.word	0x08012780
 8008cfc:	00000000 	.word	0x00000000

08008d00 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_D1Ev>:
            static const GPTConfig _gpt_config_;

            static void _rx_callback_(void* obj) 
            { reinterpret_cast<uart*>(obj)->_ctx_.rx_interrupt(); }
      
            struct _uart_ctx_
 8008d00:	4770      	bx	lr
 8008d02:	bf00      	nop
	...

08008d10 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm>:
      
        template<
          GPTDriver* TIMER,
          size_t RX_BUFFER_LENGTH,
          size_t TX_BUFFER_LENGTH
        > uint32_t uart<
 8008d10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 8008d14:	2320      	movs	r3, #32
 8008d16:	f383 8811 	msr	BASEPRI, r3
    bool push(const T& t)
    { return _push_(t,bool_to_type<IS_CIRCULAR>()); }
   
    bool pop(T& t)
    {
      if(_first_<0) return false;
 8008d1a:	f8d0 3458 	ldr.w	r3, [r0, #1112]	; 0x458
 8008d1e:	2b00      	cmp	r3, #0
 8008d20:	db6d      	blt.n	8008dfe <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0xee>

      t=_buffer_p_[_first_];

      if(_first_==_last_) _init_();
 8008d22:	f8d0 445c 	ldr.w	r4, [r0, #1116]	; 0x45c
      t=_buffer_p_[_first_];
 8008d26:	eb00 0283 	add.w	r2, r0, r3, lsl #2
      if(_first_==_last_) _init_();
 8008d2a:	42a3      	cmp	r3, r4
      t=_buffer_p_[_first_];
 8008d2c:	6d97      	ldr	r7, [r2, #88]	; 0x58
      if(_first_==_last_) _init_();
 8008d2e:	d04e      	beq.n	8008dce <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0xbe>
      else { _first_=(_first_+1)%LENGTH; _items_--; }
 8008d30:	f8d0 4460 	ldr.w	r4, [r0, #1120]	; 0x460
 8008d34:	3301      	adds	r3, #1
 8008d36:	b2db      	uxtb	r3, r3
 8008d38:	3c01      	subs	r4, #1

      return true;
 8008d3a:	2201      	movs	r2, #1
      else { _first_=(_first_+1)%LENGTH; _items_--; }
 8008d3c:	f8c0 3458 	str.w	r3, [r0, #1112]	; 0x458
 8008d40:	f8c0 4460 	str.w	r4, [r0, #1120]	; 0x460
          uint32_t data_received;
          
          {
            system_guard guard;
            
            status=(not_empty=rx_buffer.pop(data_received))?
 8008d44:	4615      	mov	r5, r2
  chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 8008d46:	4b31      	ldr	r3, [pc, #196]	; (8008e0c <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0xfc>)
 8008d48:	681c      	ldr	r4, [r3, #0]
 8008d4a:	429c      	cmp	r4, r3
 8008d4c:	d004      	beq.n	8008d58 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0x48>
 8008d4e:	699e      	ldr	r6, [r3, #24]
 8008d50:	68a4      	ldr	r4, [r4, #8]
 8008d52:	68b6      	ldr	r6, [r6, #8]
 8008d54:	42a6      	cmp	r6, r4
 8008d56:	d355      	bcc.n	8008e04 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0xf4>
 8008d58:	2300      	movs	r3, #0
 8008d5a:	f383 8811 	msr	BASEPRI, r3
              rx_data_status_codes::DATA_AVAILABLE:
              rx_data_status_codes::NO_DATA_AVAILABLE;
          }
      
          if(!not_empty) return status;
 8008d5e:	2a00      	cmp	r2, #0
 8008d60:	d04a      	beq.n	8008df8 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0xe8>
          
          // checking start bit
          status=(data_received & 1)?
 8008d62:	07fb      	lsls	r3, r7, #31
 8008d64:	6d03      	ldr	r3, [r0, #80]	; 0x50
            status|rx_data_status_codes::BAD_START_BIT:
            status&(~rx_data_status_codes::BAD_START_BIT);
      
          // cheking parity
          if(parity!=parity_codes::NO_PARITY)
 8008d66:	f8d0 803c 	ldr.w	r8, [r0, #60]	; 0x3c
 8008d6a:	fa27 f303 	lsr.w	r3, r7, r3
          status=(data_received & 1)?
 8008d6e:	bf48      	it	mi
 8008d70:	f045 0504 	orrmi.w	r5, r5, #4
 8008d74:	f003 0e01 	and.w	lr, r3, #1
 8008d78:	087e      	lsrs	r6, r7, #1
          if(parity!=parity_codes::NO_PARITY)
 8008d7a:	f1b8 0f00 	cmp.w	r8, #0
 8008d7e:	d032      	beq.n	8008de6 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0xd6>
          {
            register uint32_t data_parity=get_even_parity(
              (data_received>>1),
              static_cast<uint32_t>(data_bits)
 8008d80:	f8d0 c038 	ldr.w	ip, [r0, #56]	; 0x38
                for(uint32_t bit=1; bit<bits; bit++)
 8008d84:	f1bc 0f01 	cmp.w	ip, #1
                uint32_t odd_parity=data&1;
 8008d88:	f006 0401 	and.w	r4, r6, #1
                for(uint32_t bit=1; bit<bits; bit++)
 8008d8c:	d909      	bls.n	8008da2 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0x92>
 8008d8e:	2301      	movs	r3, #1
                  odd_parity=odd_parity^((data>>bit)&1);
 8008d90:	fa26 f203 	lsr.w	r2, r6, r3
                for(uint32_t bit=1; bit<bits; bit++)
 8008d94:	3301      	adds	r3, #1
                  odd_parity=odd_parity^((data>>bit)&1);
 8008d96:	f002 0201 	and.w	r2, r2, #1
                for(uint32_t bit=1; bit<bits; bit++)
 8008d9a:	459c      	cmp	ip, r3
                  odd_parity=odd_parity^((data>>bit)&1);
 8008d9c:	ea84 0402 	eor.w	r4, r4, r2
                for(uint32_t bit=1; bit<bits; bit++)
 8008da0:	d8f6      	bhi.n	8008d90 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0x80>
      
            if(parity==parity_codes::ODD_PARITY) 
              data_parity=data_parity^1;
      
            register uint32_t received_parity=
              (data_received>>parity_bit_pos) & 1;
 8008da2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
            if(parity==parity_codes::ODD_PARITY) 
 8008da4:	f1b8 0f02 	cmp.w	r8, #2
              (data_received>>parity_bit_pos) & 1;
 8008da8:	fa27 f303 	lsr.w	r3, r7, r3
              data_parity=data_parity^1;
 8008dac:	bf08      	it	eq
 8008dae:	f084 0401 	eoreq.w	r4, r4, #1
            register uint32_t received_parity=
 8008db2:	f003 0301 	and.w	r3, r3, #1
      
            // verifying parity bit
            status=(received_parity^data_parity)?
 8008db6:	429c      	cmp	r4, r3
 8008db8:	d015      	beq.n	8008de6 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0xd6>
 8008dba:	f045 0508 	orr.w	r5, r5, #8
                status&(~rx_data_status_codes::BAD_PARITY);
          }
      
          // checking stop bit
          // NOTE: we only verify the first stop bit
          status=((data_received>>first_stop_bit_pos) & 1)?
 8008dbe:	f1be 0f00 	cmp.w	lr, #0
 8008dc2:	d101      	bne.n	8008dc8 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0xb8>
 8008dc4:	f045 0510 	orr.w	r5, r5, #16
            status&(~rx_data_status_codes::BAD_STOP_BIT):
            status|rx_data_status_codes::BAD_STOP_BIT;
      
          // NOTE: in case of error, we put the received raw data
          // on the high 16 bits of status
          if(bad_status(status)) status=status|(data_received<<16);
 8008dc8:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8008dcc:	e011      	b.n	8008df2 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0xe2>
    T _buffer_p_[LENGTH];
    int _first_,_last_;

    volatile int _items_;

    void _init_() { _first_=_last_=-1; _items_=0; }
 8008dce:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008dd2:	2400      	movs	r4, #0
      return true;
 8008dd4:	2201      	movs	r2, #1
    void _init_() { _first_=_last_=-1; _items_=0; }
 8008dd6:	f8c0 345c 	str.w	r3, [r0, #1116]	; 0x45c
 8008dda:	f8c0 3458 	str.w	r3, [r0, #1112]	; 0x458
 8008dde:	f8c0 4460 	str.w	r4, [r0, #1120]	; 0x460
            status=(not_empty=rx_buffer.pop(data_received))?
 8008de2:	4615      	mov	r5, r2
 8008de4:	e7af      	b.n	8008d46 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0x36>
          status=((data_received>>first_stop_bit_pos) & 1)?
 8008de6:	f1be 0f00 	cmp.w	lr, #0
 8008dea:	d0eb      	beq.n	8008dc4 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0xb4>
          if(bad_status(status)) status=status|(data_received<<16);
 8008dec:	f015 0f1c 	tst.w	r5, #28
 8008df0:	d1ea      	bne.n	8008dc8 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0xb8>
      
          data=(data_received>>1)&data_mask;
 8008df2:	6d43      	ldr	r3, [r0, #84]	; 0x54
 8008df4:	401e      	ands	r6, r3
 8008df6:	600e      	str	r6, [r1, #0]
      
          return status;
        }
 8008df8:	4628      	mov	r0, r5
 8008dfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(_first_<0) return false;
 8008dfe:	2200      	movs	r2, #0
            status=(not_empty=rx_buffer.pop(data_received))?
 8008e00:	4615      	mov	r5, r2
 8008e02:	e7a0      	b.n	8008d46 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0x36>
  __ASM volatile ("cpsid i" : : : "memory");
 8008e04:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 8008e06:	4a02      	ldr	r2, [pc, #8]	; (8008e10 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0x100>)
 8008e08:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 8008e0a:	e7fe      	b.n	8008e0a <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm+0xfa>
 8008e0c:	20002454 	.word	0x20002454
 8008e10:	08012780 	.word	0x08012780
	...

08008e20 <notify3>:

#if STM32_SERIAL_USE_USART3 || defined(__DOXYGEN__)
static void notify3(io_queue_t *qp) {

  (void)qp;
  USART3->CR1 |= USART_CR1_TXEIE | USART_CR1_TCIE;
 8008e20:	4a02      	ldr	r2, [pc, #8]	; (8008e2c <notify3+0xc>)
 8008e22:	6813      	ldr	r3, [r2, #0]
 8008e24:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8008e28:	6013      	str	r3, [r2, #0]
}
 8008e2a:	4770      	bx	lr
 8008e2c:	40004800 	.word	0x40004800

08008e30 <notifylp1>:

#if STM32_SERIAL_USE_LPUART1 || defined(__DOXYGEN__)
static void notifylp1(io_queue_t *qp) {

  (void)qp;
  LPUART1->CR1 |= USART_CR1_TXEIE | USART_CR1_TCIE;
 8008e30:	4a02      	ldr	r2, [pc, #8]	; (8008e3c <notifylp1+0xc>)
 8008e32:	6813      	ldr	r3, [r2, #0]
 8008e34:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8008e38:	6013      	str	r3, [r2, #0]
}
 8008e3a:	4770      	bx	lr
 8008e3c:	40008000 	.word	0x40008000

08008e40 <_port_irq_epilogue>:
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 8008e40:	2320      	movs	r3, #32
 8008e42:	f383 8811 	msr	BASEPRI, r3
 * @brief   Exception exit redirection to _port_switch_from_isr().
 */
void _port_irq_epilogue(void) {

  port_lock_from_isr();
  if ((SCB->ICSR & SCB_ICSR_RETTOBASE_Msk) != 0U) {
 8008e46:	4b0f      	ldr	r3, [pc, #60]	; (8008e84 <_port_irq_epilogue+0x44>)
 8008e48:	685b      	ldr	r3, [r3, #4]
 8008e4a:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
 8008e4e:	d102      	bne.n	8008e56 <_port_irq_epilogue+0x16>
 8008e50:	f383 8811 	msr	BASEPRI, r3
    /* Note, returning without unlocking is intentional, this is done in
       order to keep the rest of the context switch atomic.*/
    return;
  }
  port_unlock_from_isr();
}
 8008e54:	4770      	bx	lr
  __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 8008e56:	f3ef 8309 	mrs	r3, PSP
    ctxp->xpsr = (regarm_t)0x01000000;
 8008e5a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8008e5e:	f843 2c04 	str.w	r2, [r3, #-4]
    ctxp--;
 8008e62:	f1a3 0220 	sub.w	r2, r3, #32
  __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 8008e66:	f382 8809 	msr	PSP, r2
 * @retval false        if preemption is not required.
 *
 * @special
 */
bool chSchIsPreemptionRequired(void) {
  tprio_t p1 = firstprio(&ch.rlist.queue);
 8008e6a:	4a07      	ldr	r2, [pc, #28]	; (8008e88 <_port_irq_epilogue+0x48>)
 8008e6c:	6811      	ldr	r1, [r2, #0]
  tprio_t p2 = currp->prio;
 8008e6e:	6992      	ldr	r2, [r2, #24]
    if (chSchIsPreemptionRequired()) {
 8008e70:	6889      	ldr	r1, [r1, #8]
 8008e72:	6892      	ldr	r2, [r2, #8]
 8008e74:	4291      	cmp	r1, r2
      ctxp->pc = (regarm_t)_port_switch_from_isr;
 8008e76:	bf8c      	ite	hi
 8008e78:	4a04      	ldrhi	r2, [pc, #16]	; (8008e8c <_port_irq_epilogue+0x4c>)
      ctxp->pc = (regarm_t)_port_exit_from_isr;
 8008e7a:	4a05      	ldrls	r2, [pc, #20]	; (8008e90 <_port_irq_epilogue+0x50>)
 8008e7c:	f843 2c08 	str.w	r2, [r3, #-8]
 8008e80:	4770      	bx	lr
 8008e82:	bf00      	nop
 8008e84:	e000ed00 	.word	0xe000ed00
 8008e88:	20002454 	.word	0x20002454
 8008e8c:	08000301 	.word	0x08000301
 8008e90:	08000304 	.word	0x08000304
	...

08008ea0 <chCoreAllocAlignedI>:
 * @return              A pointer to the allocated memory block.
 * @retval NULL         allocation failed, core memory exhausted.
 *
 * @iclass
 */
static inline void *chCoreAllocAlignedI(size_t size, unsigned align) {
 8008ea0:	b470      	push	{r4, r5, r6}

  chDbgCheckClassI();
  chDbgCheck(MEM_IS_VALID_ALIGNMENT(align));

  size = MEM_ALIGN_NEXT(size, align);
  p = (uint8_t *)MEM_ALIGN_NEXT(ch_memcore.nextmem + offset, align);
 8008ea2:	4c0b      	ldr	r4, [pc, #44]	; (8008ed0 <chCoreAllocAlignedI+0x30>)
  next = p + size;

  /* Considering also the case where there is numeric overflow.*/
  if ((next > ch_memcore.endmem) || (next < ch_memcore.nextmem)) {
 8008ea4:	e9d4 6300 	ldrd	r6, r3, [r4]
  p = (uint8_t *)MEM_ALIGN_NEXT(ch_memcore.nextmem + offset, align);
 8008ea8:	1e72      	subs	r2, r6, #1
  size = MEM_ALIGN_NEXT(size, align);
 8008eaa:	424d      	negs	r5, r1
  p = (uint8_t *)MEM_ALIGN_NEXT(ch_memcore.nextmem + offset, align);
 8008eac:	440a      	add	r2, r1
  size = MEM_ALIGN_NEXT(size, align);
 8008eae:	3901      	subs	r1, #1
 8008eb0:	4401      	add	r1, r0
 8008eb2:	4029      	ands	r1, r5
  p = (uint8_t *)MEM_ALIGN_NEXT(ch_memcore.nextmem + offset, align);
 8008eb4:	ea02 0005 	and.w	r0, r2, r5
  next = p + size;
 8008eb8:	4401      	add	r1, r0
  if ((next > ch_memcore.endmem) || (next < ch_memcore.nextmem)) {
 8008eba:	4299      	cmp	r1, r3
 8008ebc:	d804      	bhi.n	8008ec8 <chCoreAllocAlignedI+0x28>
 8008ebe:	428e      	cmp	r6, r1
 8008ec0:	d802      	bhi.n	8008ec8 <chCoreAllocAlignedI+0x28>
    return NULL;
  }

  ch_memcore.nextmem = next;
 8008ec2:	6021      	str	r1, [r4, #0]

  return chCoreAllocAlignedWithOffsetI(size, align, 0U);
}
 8008ec4:	bc70      	pop	{r4, r5, r6}
 8008ec6:	4770      	bx	lr
    return NULL;
 8008ec8:	2000      	movs	r0, #0
 8008eca:	bc70      	pop	{r4, r5, r6}
 8008ecc:	4770      	bx	lr
 8008ece:	bf00      	nop
 8008ed0:	200025f0 	.word	0x200025f0
	...

08008ee0 <chCoreAllocAlignedWithOffset>:
 *
 * @api
 */
void *chCoreAllocAlignedWithOffset(size_t size,
                                   unsigned align,
                                   size_t offset) {
 8008ee0:	b470      	push	{r4, r5, r6}
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 8008ee2:	2320      	movs	r3, #32
 8008ee4:	f383 8811 	msr	BASEPRI, r3
  p = (uint8_t *)MEM_ALIGN_NEXT(ch_memcore.nextmem + offset, align);
 8008ee8:	4d12      	ldr	r5, [pc, #72]	; (8008f34 <chCoreAllocAlignedWithOffset+0x54>)
  if ((next > ch_memcore.endmem) || (next < ch_memcore.nextmem)) {
 8008eea:	e9d5 6400 	ldrd	r6, r4, [r5]
 8008eee:	1e4b      	subs	r3, r1, #1
  p = (uint8_t *)MEM_ALIGN_NEXT(ch_memcore.nextmem + offset, align);
 8008ef0:	4432      	add	r2, r6
  size = MEM_ALIGN_NEXT(size, align);
 8008ef2:	4418      	add	r0, r3
 8008ef4:	4249      	negs	r1, r1
  p = (uint8_t *)MEM_ALIGN_NEXT(ch_memcore.nextmem + offset, align);
 8008ef6:	441a      	add	r2, r3
  size = MEM_ALIGN_NEXT(size, align);
 8008ef8:	ea00 0301 	and.w	r3, r0, r1
  p = (uint8_t *)MEM_ALIGN_NEXT(ch_memcore.nextmem + offset, align);
 8008efc:	ea02 0001 	and.w	r0, r2, r1
  next = p + size;
 8008f00:	4403      	add	r3, r0
  if ((next > ch_memcore.endmem) || (next < ch_memcore.nextmem)) {
 8008f02:	42a3      	cmp	r3, r4
 8008f04:	d814      	bhi.n	8008f30 <chCoreAllocAlignedWithOffset+0x50>
 8008f06:	429e      	cmp	r6, r3
 8008f08:	d812      	bhi.n	8008f30 <chCoreAllocAlignedWithOffset+0x50>
  ch_memcore.nextmem = next;
 8008f0a:	602b      	str	r3, [r5, #0]
 8008f0c:	4b0a      	ldr	r3, [pc, #40]	; (8008f38 <chCoreAllocAlignedWithOffset+0x58>)
 8008f0e:	681a      	ldr	r2, [r3, #0]
 8008f10:	429a      	cmp	r2, r3
 8008f12:	d004      	beq.n	8008f1e <chCoreAllocAlignedWithOffset+0x3e>
 8008f14:	6999      	ldr	r1, [r3, #24]
 8008f16:	6892      	ldr	r2, [r2, #8]
 8008f18:	6889      	ldr	r1, [r1, #8]
 8008f1a:	4291      	cmp	r1, r2
 8008f1c:	d304      	bcc.n	8008f28 <chCoreAllocAlignedWithOffset+0x48>
 8008f1e:	2300      	movs	r3, #0
 8008f20:	f383 8811 	msr	BASEPRI, r3
  chSysLock();
  p = chCoreAllocAlignedWithOffsetI(size, align, offset);
  chSysUnlock();

  return p;
}
 8008f24:	bc70      	pop	{r4, r5, r6}
 8008f26:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
 8008f28:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 8008f2a:	4a04      	ldr	r2, [pc, #16]	; (8008f3c <chCoreAllocAlignedWithOffset+0x5c>)
 8008f2c:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 8008f2e:	e7fe      	b.n	8008f2e <chCoreAllocAlignedWithOffset+0x4e>
    return NULL;
 8008f30:	2000      	movs	r0, #0
 8008f32:	e7eb      	b.n	8008f0c <chCoreAllocAlignedWithOffset+0x2c>
 8008f34:	200025f0 	.word	0x200025f0
 8008f38:	20002454 	.word	0x20002454
 8008f3c:	080127bc 	.word	0x080127bc

08008f40 <chTMStopMeasurementX>:
 8008f40:	4a0f      	ldr	r2, [pc, #60]	; (8008f80 <chTMStopMeasurementX+0x40>)
 *
 * @xclass
 */
NOINLINE void chTMStopMeasurementX(time_measurement_t *tmp) {

  tm_stop(tmp, chSysGetRealtimeCounterX(), ch.tm.offset);
 8008f42:	4b10      	ldr	r3, [pc, #64]	; (8008f84 <chTMStopMeasurementX+0x44>)
 8008f44:	6852      	ldr	r2, [r2, #4]
 8008f46:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  tmp->last = (now - tmp->last) - offset;
 8008f48:	6881      	ldr	r1, [r0, #8]
NOINLINE void chTMStopMeasurementX(time_measurement_t *tmp) {
 8008f4a:	e92d 0830 	stmdb	sp!, {r4, r5, fp}
  tmp->last = (now - tmp->last) - offset;
 8008f4e:	1ad3      	subs	r3, r2, r3
  tmp->cumulative += (rttime_t)tmp->last;
 8008f50:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
  tmp->n++;
 8008f54:	68c2      	ldr	r2, [r0, #12]
  tmp->last = (now - tmp->last) - offset;
 8008f56:	1a5b      	subs	r3, r3, r1
  tmp->n++;
 8008f58:	3201      	adds	r2, #1
  if (tmp->last > tmp->worst) {
 8008f5a:	6841      	ldr	r1, [r0, #4]
  tmp->n++;
 8008f5c:	60c2      	str	r2, [r0, #12]
  tmp->cumulative += (rttime_t)tmp->last;
 8008f5e:	eb14 0b03 	adds.w	fp, r4, r3
  if (tmp->last < tmp->best) {
 8008f62:	6802      	ldr	r2, [r0, #0]
  tmp->last = (now - tmp->last) - offset;
 8008f64:	6083      	str	r3, [r0, #8]
  tmp->cumulative += (rttime_t)tmp->last;
 8008f66:	f145 0c00 	adc.w	ip, r5, #0
  if (tmp->last > tmp->worst) {
 8008f6a:	428b      	cmp	r3, r1
    tmp->worst = tmp->last;
 8008f6c:	bf88      	it	hi
 8008f6e:	6043      	strhi	r3, [r0, #4]
  if (tmp->last < tmp->best) {
 8008f70:	4293      	cmp	r3, r2
  tmp->cumulative += (rttime_t)tmp->last;
 8008f72:	e9c0 bc04 	strd	fp, ip, [r0, #16]
    tmp->best = tmp->last;
 8008f76:	bf38      	it	cc
 8008f78:	6003      	strcc	r3, [r0, #0]
}
 8008f7a:	e8bd 0830 	ldmia.w	sp!, {r4, r5, fp}
 8008f7e:	4770      	bx	lr
 8008f80:	e0001000 	.word	0xe0001000
 8008f84:	20002454 	.word	0x20002454
	...

08008f90 <chSchReadyAheadI>:
  chDbgAssert((tp->state != CH_STATE_READY) &&
 8008f90:	f890 3020 	ldrb.w	r3, [r0, #32]
thread_t *chSchReadyAheadI(thread_t *tp) {
 8008f94:	4601      	mov	r1, r0
  chDbgAssert((tp->state != CH_STATE_READY) &&
 8008f96:	b18b      	cbz	r3, 8008fbc <chSchReadyAheadI+0x2c>
 8008f98:	2b0f      	cmp	r3, #15
 8008f9a:	d00f      	beq.n	8008fbc <chSchReadyAheadI+0x2c>
  tp->state = CH_STATE_READY;
 8008f9c:	2200      	movs	r2, #0
  cp = (thread_t *)&ch.rlist.queue;
 8008f9e:	4b0a      	ldr	r3, [pc, #40]	; (8008fc8 <chSchReadyAheadI+0x38>)
  } while (cp->prio > tp->prio);
 8008fa0:	6880      	ldr	r0, [r0, #8]
  tp->state = CH_STATE_READY;
 8008fa2:	f881 2020 	strb.w	r2, [r1, #32]
    cp = cp->queue.next;
 8008fa6:	681b      	ldr	r3, [r3, #0]
  } while (cp->prio > tp->prio);
 8008fa8:	689a      	ldr	r2, [r3, #8]
 8008faa:	4282      	cmp	r2, r0
 8008fac:	d8fb      	bhi.n	8008fa6 <chSchReadyAheadI+0x16>
  tp->queue.prev             = cp->queue.prev;
 8008fae:	685a      	ldr	r2, [r3, #4]
}
 8008fb0:	4608      	mov	r0, r1
  tp->queue.prev             = cp->queue.prev;
 8008fb2:	e9c1 3200 	strd	r3, r2, [r1]
  tp->queue.prev->queue.next = tp;
 8008fb6:	6011      	str	r1, [r2, #0]
  cp->queue.prev             = tp;
 8008fb8:	6059      	str	r1, [r3, #4]
}
 8008fba:	4770      	bx	lr
 8008fbc:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 8008fbe:	4b02      	ldr	r3, [pc, #8]	; (8008fc8 <chSchReadyAheadI+0x38>)
 8008fc0:	4a02      	ldr	r2, [pc, #8]	; (8008fcc <chSchReadyAheadI+0x3c>)
 8008fc2:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 8008fc4:	e7fe      	b.n	8008fc4 <chSchReadyAheadI+0x34>
 8008fc6:	bf00      	nop
 8008fc8:	20002454 	.word	0x20002454
 8008fcc:	08012830 	.word	0x08012830

08008fd0 <chSchReadyI>:
  chDbgAssert((tp->state != CH_STATE_READY) &&
 8008fd0:	f890 3020 	ldrb.w	r3, [r0, #32]
thread_t *chSchReadyI(thread_t *tp) {
 8008fd4:	4601      	mov	r1, r0
  chDbgAssert((tp->state != CH_STATE_READY) &&
 8008fd6:	b18b      	cbz	r3, 8008ffc <chSchReadyI+0x2c>
 8008fd8:	2b0f      	cmp	r3, #15
 8008fda:	d00f      	beq.n	8008ffc <chSchReadyI+0x2c>
  tp->state = CH_STATE_READY;
 8008fdc:	2200      	movs	r2, #0
  cp = (thread_t *)&ch.rlist.queue;
 8008fde:	4b0a      	ldr	r3, [pc, #40]	; (8009008 <chSchReadyI+0x38>)
  } while (cp->prio >= tp->prio);
 8008fe0:	6880      	ldr	r0, [r0, #8]
  tp->state = CH_STATE_READY;
 8008fe2:	f881 2020 	strb.w	r2, [r1, #32]
    cp = cp->queue.next;
 8008fe6:	681b      	ldr	r3, [r3, #0]
  } while (cp->prio >= tp->prio);
 8008fe8:	689a      	ldr	r2, [r3, #8]
 8008fea:	4282      	cmp	r2, r0
 8008fec:	d2fb      	bcs.n	8008fe6 <chSchReadyI+0x16>
  tp->queue.prev             = cp->queue.prev;
 8008fee:	685a      	ldr	r2, [r3, #4]
}
 8008ff0:	4608      	mov	r0, r1
  tp->queue.prev             = cp->queue.prev;
 8008ff2:	e9c1 3200 	strd	r3, r2, [r1]
  tp->queue.prev->queue.next = tp;
 8008ff6:	6011      	str	r1, [r2, #0]
  cp->queue.prev             = tp;
 8008ff8:	6059      	str	r1, [r3, #4]
}
 8008ffa:	4770      	bx	lr
 8008ffc:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 8008ffe:	4b02      	ldr	r3, [pc, #8]	; (8009008 <chSchReadyI+0x38>)
 8009000:	4a02      	ldr	r2, [pc, #8]	; (800900c <chSchReadyI+0x3c>)
 8009002:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 8009004:	e7fe      	b.n	8009004 <chSchReadyI+0x34>
 8009006:	bf00      	nop
 8009008:	20002454 	.word	0x20002454
 800900c:	0801280c 	.word	0x0801280c

08009010 <chThdDequeueNextI.constprop.41>:
 *
 * @notapi
 */
static inline bool queue_notempty(const threads_queue_t *tqp) {

  return (bool)(tqp->next != (const thread_t *)tqp);
 8009010:	6803      	ldr	r3, [r0, #0]
 *
 * @iclass
 */
void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg) {

  if (queue_notempty(tqp)) {
 8009012:	4298      	cmp	r0, r3
 8009014:	d010      	beq.n	8009038 <chThdDequeueNextI.constprop.41+0x28>
}

static inline thread_t *queue_fifo_remove(threads_queue_t *tqp) {
  thread_t *tp = tqp->next;

  tqp->next             = tp->queue.next;
 8009016:	681a      	ldr	r2, [r3, #0]
 8009018:	6002      	str	r2, [r0, #0]
  tqp->next->queue.prev = (thread_t *)tqp;
 800901a:	6050      	str	r0, [r2, #4]

  chDbgAssert(queue_notempty(tqp), "empty queue");

  tp = queue_fifo_remove(tqp);

  chDbgAssert(tp->state == CH_STATE_QUEUED, "invalid state");
 800901c:	f893 2020 	ldrb.w	r2, [r3, #32]
 8009020:	2a04      	cmp	r2, #4
 8009022:	d104      	bne.n	800902e <chThdDequeueNextI.constprop.41+0x1e>

  tp->u.rdymsg = msg;
 8009024:	2200      	movs	r2, #0
 8009026:	625a      	str	r2, [r3, #36]	; 0x24
  (void) chSchReadyI(tp);
 8009028:	4618      	mov	r0, r3
 800902a:	f7ff bfd1 	b.w	8008fd0 <chSchReadyI>
 800902e:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 8009030:	4b02      	ldr	r3, [pc, #8]	; (800903c <chThdDequeueNextI.constprop.41+0x2c>)
 8009032:	4a03      	ldr	r2, [pc, #12]	; (8009040 <chThdDequeueNextI.constprop.41+0x30>)
 8009034:	62da      	str	r2, [r3, #44]	; 0x2c
 8009036:	e7fe      	b.n	8009036 <chThdDequeueNextI.constprop.41+0x26>
    chThdDoDequeueNextI(tqp, msg);
  }
}
 8009038:	4770      	bx	lr
 800903a:	bf00      	nop
 800903c:	20002454 	.word	0x20002454
 8009040:	080127e0 	.word	0x080127e0
	...

08009050 <chEvtBroadcastFlagsI>:
 * @param[in] esp       pointer to the @p event_source_t structure
 * @param[in] flags     the flags set to be added to the listener flags mask
 *
 * @iclass
 */
void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags) {
 8009050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  event_listener_t *elp;

  chDbgCheckClassI();
  chDbgCheck(esp != NULL);

  elp = esp->next;
 8009052:	6804      	ldr	r4, [r0, #0]
  /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
  while (elp != (event_listener_t *)esp) {
 8009054:	42a0      	cmp	r0, r4
 8009056:	d021      	beq.n	800909c <chEvtBroadcastFlagsI+0x4c>
 8009058:	460d      	mov	r5, r1
 800905a:	4607      	mov	r7, r0
  /* Test on the AND/OR conditions wait states.*/
  if (((tp->state == CH_STATE_WTOREVT) &&
       ((tp->epending & tp->u.ewmask) != (eventmask_t)0)) ||
      ((tp->state == CH_STATE_WTANDEVT) &&
       ((tp->epending & tp->u.ewmask) == tp->u.ewmask))) {
    tp->u.rdymsg = MSG_OK;
 800905c:	2600      	movs	r6, #0
 800905e:	e004      	b.n	800906a <chEvtBroadcastFlagsI+0x1a>
       ((tp->epending & tp->u.ewmask) != (eventmask_t)0)) ||
 8009060:	2a0b      	cmp	r2, #11
 8009062:	d01c      	beq.n	800909e <chEvtBroadcastFlagsI+0x4e>
    elp = elp->next;
 8009064:	6824      	ldr	r4, [r4, #0]
  while (elp != (event_listener_t *)esp) {
 8009066:	42a7      	cmp	r7, r4
 8009068:	d018      	beq.n	800909c <chEvtBroadcastFlagsI+0x4c>
    elp->flags |= flags;
 800906a:	68e3      	ldr	r3, [r4, #12]
 800906c:	432b      	orrs	r3, r5
 800906e:	60e3      	str	r3, [r4, #12]
    if ((flags == (eventflags_t)0) ||
 8009070:	b115      	cbz	r5, 8009078 <chEvtBroadcastFlagsI+0x28>
        ((flags & elp->wflags) != (eventflags_t)0)) {
 8009072:	6923      	ldr	r3, [r4, #16]
    if ((flags == (eventflags_t)0) ||
 8009074:	421d      	tst	r5, r3
 8009076:	d0f5      	beq.n	8009064 <chEvtBroadcastFlagsI+0x14>
  tp->epending |= events;
 8009078:	e9d4 0301 	ldrd	r0, r3, [r4, #4]
 800907c:	6b41      	ldr	r1, [r0, #52]	; 0x34
  if (((tp->state == CH_STATE_WTOREVT) &&
 800907e:	f890 2020 	ldrb.w	r2, [r0, #32]
  tp->epending |= events;
 8009082:	430b      	orrs	r3, r1
  if (((tp->state == CH_STATE_WTOREVT) &&
 8009084:	2a0a      	cmp	r2, #10
  tp->epending |= events;
 8009086:	6343      	str	r3, [r0, #52]	; 0x34
  if (((tp->state == CH_STATE_WTOREVT) &&
 8009088:	d1ea      	bne.n	8009060 <chEvtBroadcastFlagsI+0x10>
       ((tp->epending & tp->u.ewmask) != (eventmask_t)0)) ||
 800908a:	6a42      	ldr	r2, [r0, #36]	; 0x24
  if (((tp->state == CH_STATE_WTOREVT) &&
 800908c:	4213      	tst	r3, r2
 800908e:	d0e9      	beq.n	8009064 <chEvtBroadcastFlagsI+0x14>
    tp->u.rdymsg = MSG_OK;
 8009090:	6246      	str	r6, [r0, #36]	; 0x24
    (void) chSchReadyI(tp);
 8009092:	f7ff ff9d 	bl	8008fd0 <chSchReadyI>
    elp = elp->next;
 8009096:	6824      	ldr	r4, [r4, #0]
  while (elp != (event_listener_t *)esp) {
 8009098:	42a7      	cmp	r7, r4
 800909a:	d1e6      	bne.n	800906a <chEvtBroadcastFlagsI+0x1a>
}
 800909c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
       ((tp->epending & tp->u.ewmask) == tp->u.ewmask))) {
 800909e:	6a42      	ldr	r2, [r0, #36]	; 0x24
      ((tp->state == CH_STATE_WTANDEVT) &&
 80090a0:	ea32 0303 	bics.w	r3, r2, r3
 80090a4:	d1de      	bne.n	8009064 <chEvtBroadcastFlagsI+0x14>
 80090a6:	e7f3      	b.n	8009090 <chEvtBroadcastFlagsI+0x40>
	...

080090b0 <wakeup>:
static void wakeup(void *p) {
 80090b0:	b508      	push	{r3, lr}
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 80090b2:	2320      	movs	r3, #32
 80090b4:	f383 8811 	msr	BASEPRI, r3
  switch (tp->state) {
 80090b8:	f890 3020 	ldrb.w	r3, [r0, #32]
 80090bc:	2b07      	cmp	r3, #7
 80090be:	d80d      	bhi.n	80090dc <wakeup+0x2c>
 80090c0:	e8df f003 	tbb	[pc, r3]
 80090c4:	150c0c11 	.word	0x150c0c11
 80090c8:	080c0408 	.word	0x080c0408
    chSemFastSignalI(tp->u.wtsemp);
 80090cc:	6a42      	ldr	r2, [r0, #36]	; 0x24
 */
static inline void chSemFastSignalI(semaphore_t *sp) {

  chDbgCheckClassI();

  sp->cnt++;
 80090ce:	6893      	ldr	r3, [r2, #8]
 80090d0:	3301      	adds	r3, #1
 80090d2:	6093      	str	r3, [r2, #8]
  return tp;
}

static inline thread_t *queue_dequeue(thread_t *tp) {

  tp->queue.prev->queue.next = tp->queue.next;
 80090d4:	e9d0 3200 	ldrd	r3, r2, [r0]
 80090d8:	6013      	str	r3, [r2, #0]
  tp->queue.next->queue.prev = tp->queue.prev;
 80090da:	605a      	str	r2, [r3, #4]
  tp->u.rdymsg = MSG_TIMEOUT;
 80090dc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80090e0:	6243      	str	r3, [r0, #36]	; 0x24
  (void) chSchReadyI(tp);
 80090e2:	f7ff ff75 	bl	8008fd0 <chSchReadyI>
 80090e6:	2300      	movs	r3, #0
 80090e8:	f383 8811 	msr	BASEPRI, r3
}
 80090ec:	bd08      	pop	{r3, pc}
    *tp->u.wttrp = NULL;
 80090ee:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80090f0:	2200      	movs	r2, #0
 80090f2:	601a      	str	r2, [r3, #0]
  tp->u.rdymsg = MSG_TIMEOUT;
 80090f4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80090f8:	6243      	str	r3, [r0, #36]	; 0x24
  (void) chSchReadyI(tp);
 80090fa:	f7ff ff69 	bl	8008fd0 <chSchReadyI>
 80090fe:	e7f2      	b.n	80090e6 <wakeup+0x36>

08009100 <_idle_thread>:
}
 8009100:	e7fe      	b.n	8009100 <_idle_thread>
 8009102:	bf00      	nop
	...

08009110 <serve_interrupt>:
static void serve_interrupt(SerialDriver *sdp) {
 8009110:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  USART_TypeDef *u = sdp->usart;
 8009114:	6d46      	ldr	r6, [r0, #84]	; 0x54
  uint32_t cr1 = u->CR1;
 8009116:	f8d6 a000 	ldr.w	sl, [r6]
  isr = u->ISR;
 800911a:	69f5      	ldr	r5, [r6, #28]
  u->ICR = isr;
 800911c:	6235      	str	r5, [r6, #32]
  if (isr & (USART_ISR_ORE | USART_ISR_NE | USART_ISR_FE  | USART_ISR_PE))
 800911e:	072b      	lsls	r3, r5, #28
static void serve_interrupt(SerialDriver *sdp) {
 8009120:	4604      	mov	r4, r0
  if (isr & (USART_ISR_ORE | USART_ISR_NE | USART_ISR_FE  | USART_ISR_PE))
 8009122:	f040 808d 	bne.w	8009240 <serve_interrupt+0x130>
  if (isr & USART_ISR_LBDF) {
 8009126:	05eb      	lsls	r3, r5, #23
 8009128:	d47e      	bmi.n	8009228 <serve_interrupt+0x118>
  while (isr & USART_ISR_RXNE) {
 800912a:	06af      	lsls	r7, r5, #26
 800912c:	d538      	bpl.n	80091a0 <serve_interrupt+0x90>
 800912e:	f104 080c 	add.w	r8, r4, #12
 8009132:	2720      	movs	r7, #32

  osalDbgCheckClassI();
  osalDbgCheck(sdp != NULL);

  if (iqIsEmptyI(&sdp->iqueue))
    chnAddFlagsI(sdp, CHN_INPUT_AVAILABLE);
 8009134:	f104 0904 	add.w	r9, r4, #4
 8009138:	e018      	b.n	800916c <serve_interrupt+0x5c>
msg_t iqPutI(input_queue_t *iqp, uint8_t b) {

  osalDbgCheckClassI();

  /* Queue space check.*/
  if (!iqIsFullI(iqp)) {
 800913a:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 800913e:	4293      	cmp	r3, r2
 8009140:	d025      	beq.n	800918e <serve_interrupt+0x7e>
    iqp->q_counter++;
 8009142:	6962      	ldr	r2, [r4, #20]
    *iqp->q_wrptr++ = b;
 8009144:	1c59      	adds	r1, r3, #1
    iqp->q_counter++;
 8009146:	3201      	adds	r2, #1
 8009148:	6162      	str	r2, [r4, #20]
    *iqp->q_wrptr++ = b;
 800914a:	6221      	str	r1, [r4, #32]
 800914c:	701d      	strb	r5, [r3, #0]
    if (iqp->q_wrptr >= iqp->q_top) {
 800914e:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8009152:	429a      	cmp	r2, r3
 8009154:	d301      	bcc.n	800915a <serve_interrupt+0x4a>
      iqp->q_wrptr = iqp->q_buffer;
 8009156:	69a3      	ldr	r3, [r4, #24]
 8009158:	6223      	str	r3, [r4, #32]
 *
 * @iclass
 */
static inline void osalThreadDequeueNextI(threads_queue_t *tqp, msg_t msg) {

  chThdDequeueNextI(tqp, msg);
 800915a:	4640      	mov	r0, r8
 800915c:	f7ff ff58 	bl	8009010 <chThdDequeueNextI.constprop.41>
 8009160:	2300      	movs	r3, #0
 8009162:	f383 8811 	msr	BASEPRI, r3
    isr = u->ISR;
 8009166:	69f5      	ldr	r5, [r6, #28]
  while (isr & USART_ISR_RXNE) {
 8009168:	06a8      	lsls	r0, r5, #26
 800916a:	d519      	bpl.n	80091a0 <serve_interrupt+0x90>
 800916c:	f387 8811 	msr	BASEPRI, r7
    sdIncomingDataI(sdp, (uint8_t)u->RDR & sdp->rxmask);
 8009170:	8cb2      	ldrh	r2, [r6, #36]	; 0x24
 8009172:	f894 505c 	ldrb.w	r5, [r4, #92]	; 0x5c
  if (iqIsEmptyI(&sdp->iqueue))
 8009176:	6963      	ldr	r3, [r4, #20]
 8009178:	4015      	ands	r5, r2
 800917a:	2b00      	cmp	r3, #0
 800917c:	d1dd      	bne.n	800913a <serve_interrupt+0x2a>
 * @iclass
 */
static inline void osalEventBroadcastFlagsI(event_source_t *esp,
                                            eventflags_t flags) {

  chEvtBroadcastFlagsI(esp, flags);
 800917e:	2104      	movs	r1, #4
 8009180:	4648      	mov	r0, r9
 8009182:	f7ff ff65 	bl	8009050 <chEvtBroadcastFlagsI>
  if (!iqIsFullI(iqp)) {
 8009186:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 800918a:	4293      	cmp	r3, r2
 800918c:	d1d9      	bne.n	8009142 <serve_interrupt+0x32>
 800918e:	6962      	ldr	r2, [r4, #20]
 8009190:	2a00      	cmp	r2, #0
 8009192:	d0d6      	beq.n	8009142 <serve_interrupt+0x32>
 8009194:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8009198:	4648      	mov	r0, r9
 800919a:	f7ff ff59 	bl	8009050 <chEvtBroadcastFlagsI>
 800919e:	e7df      	b.n	8009160 <serve_interrupt+0x50>
  if (cr1 & USART_CR1_TXEIE) {
 80091a0:	f01a 0f80 	tst.w	sl, #128	; 0x80
 80091a4:	d02f      	beq.n	8009206 <serve_interrupt+0xf6>
    while (isr & USART_ISR_TXE) {
 80091a6:	0629      	lsls	r1, r5, #24
 80091a8:	d52d      	bpl.n	8009206 <serve_interrupt+0xf6>
 80091aa:	f104 0930 	add.w	r9, r4, #48	; 0x30
 80091ae:	2720      	movs	r7, #32
 80091b0:	f04f 0800 	mov.w	r8, #0
 80091b4:	e014      	b.n	80091e0 <serve_interrupt+0xd0>

  /* Queue data check.*/
  if (!oqIsEmptyI(oqp)) {
    uint8_t b;

    oqp->q_counter++;
 80091b6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    b = *oqp->q_rdptr++;
    if (oqp->q_rdptr >= oqp->q_top) {
 80091b8:	6c21      	ldr	r1, [r4, #64]	; 0x40
    b = *oqp->q_rdptr++;
 80091ba:	1c58      	adds	r0, r3, #1
    oqp->q_counter++;
 80091bc:	3201      	adds	r2, #1
 80091be:	63a2      	str	r2, [r4, #56]	; 0x38
    b = *oqp->q_rdptr++;
 80091c0:	64a0      	str	r0, [r4, #72]	; 0x48
    if (oqp->q_rdptr >= oqp->q_top) {
 80091c2:	4288      	cmp	r0, r1
    b = *oqp->q_rdptr++;
 80091c4:	781d      	ldrb	r5, [r3, #0]
    if (oqp->q_rdptr >= oqp->q_top) {
 80091c6:	d301      	bcc.n	80091cc <serve_interrupt+0xbc>
      oqp->q_rdptr = oqp->q_buffer;
 80091c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80091ca:	64a3      	str	r3, [r4, #72]	; 0x48
  chThdDequeueNextI(tqp, msg);
 80091cc:	4648      	mov	r0, r9
      u->TDR = b;
 80091ce:	b2ad      	uxth	r5, r5
 80091d0:	f7ff ff1e 	bl	8009010 <chThdDequeueNextI.constprop.41>
 80091d4:	8535      	strh	r5, [r6, #40]	; 0x28
 80091d6:	f388 8811 	msr	BASEPRI, r8
      isr = u->ISR;
 80091da:	69f5      	ldr	r5, [r6, #28]
    while (isr & USART_ISR_TXE) {
 80091dc:	062b      	lsls	r3, r5, #24
 80091de:	d512      	bpl.n	8009206 <serve_interrupt+0xf6>
 80091e0:	f387 8811 	msr	BASEPRI, r7
  if (!oqIsEmptyI(oqp)) {
 80091e4:	e9d4 2311 	ldrd	r2, r3, [r4, #68]	; 0x44
 80091e8:	429a      	cmp	r2, r3
 80091ea:	d1e4      	bne.n	80091b6 <serve_interrupt+0xa6>
 80091ec:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80091ee:	2a00      	cmp	r2, #0
 80091f0:	d0e1      	beq.n	80091b6 <serve_interrupt+0xa6>
  chEvtBroadcastFlagsI(esp, flags);
 80091f2:	2108      	movs	r1, #8
 80091f4:	1d20      	adds	r0, r4, #4
 80091f6:	f7ff ff2b 	bl	8009050 <chEvtBroadcastFlagsI>
        u->CR1 = cr1 & ~USART_CR1_TXEIE;
 80091fa:	f02a 0380 	bic.w	r3, sl, #128	; 0x80
 80091fe:	6033      	str	r3, [r6, #0]
 8009200:	2300      	movs	r3, #0
 8009202:	f383 8811 	msr	BASEPRI, r3
  if ((cr1 & USART_CR1_TCIE) && (isr & USART_ISR_TC)) {
 8009206:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800920a:	d00b      	beq.n	8009224 <serve_interrupt+0x114>
 800920c:	066a      	lsls	r2, r5, #25
 800920e:	d509      	bpl.n	8009224 <serve_interrupt+0x114>
 8009210:	2320      	movs	r3, #32
 8009212:	f383 8811 	msr	BASEPRI, r3
    if (oqIsEmptyI(&sdp->oqueue)) {
 8009216:	e9d4 2311 	ldrd	r2, r3, [r4, #68]	; 0x44
 800921a:	429a      	cmp	r2, r3
 800921c:	d02a      	beq.n	8009274 <serve_interrupt+0x164>
 800921e:	2300      	movs	r3, #0
 8009220:	f383 8811 	msr	BASEPRI, r3
}
 8009224:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009228:	2320      	movs	r3, #32
 800922a:	f383 8811 	msr	BASEPRI, r3
 800922e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8009232:	1d20      	adds	r0, r4, #4
 8009234:	f7ff ff0c 	bl	8009050 <chEvtBroadcastFlagsI>
 8009238:	2300      	movs	r3, #0
 800923a:	f383 8811 	msr	BASEPRI, r3
 800923e:	e774      	b.n	800912a <serve_interrupt+0x1a>
    sts |= SD_OVERRUN_ERROR;
 8009240:	f015 0108 	ands.w	r1, r5, #8
 8009244:	bf18      	it	ne
 8009246:	2180      	movne	r1, #128	; 0x80
  if (isr & USART_ISR_PE)
 8009248:	07ef      	lsls	r7, r5, #31
    sts |= SD_PARITY_ERROR;
 800924a:	bf48      	it	mi
 800924c:	f041 0120 	orrmi.w	r1, r1, #32
  if (isr & USART_ISR_FE)
 8009250:	07a8      	lsls	r0, r5, #30
    sts |= SD_FRAMING_ERROR;
 8009252:	bf48      	it	mi
 8009254:	f041 0140 	orrmi.w	r1, r1, #64	; 0x40
  if (isr & USART_ISR_NE)
 8009258:	076a      	lsls	r2, r5, #29
    sts |= SD_NOISE_ERROR;
 800925a:	bf48      	it	mi
 800925c:	f441 7180 	orrmi.w	r1, r1, #256	; 0x100
 8009260:	2320      	movs	r3, #32
 8009262:	f383 8811 	msr	BASEPRI, r3
 8009266:	1d20      	adds	r0, r4, #4
 8009268:	f7ff fef2 	bl	8009050 <chEvtBroadcastFlagsI>
 800926c:	2300      	movs	r3, #0
 800926e:	f383 8811 	msr	BASEPRI, r3
 8009272:	e758      	b.n	8009126 <serve_interrupt+0x16>
    if (oqIsEmptyI(&sdp->oqueue)) {
 8009274:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009276:	2b00      	cmp	r3, #0
 8009278:	d0d1      	beq.n	800921e <serve_interrupt+0x10e>
 800927a:	1d20      	adds	r0, r4, #4
 800927c:	2110      	movs	r1, #16
 800927e:	f7ff fee7 	bl	8009050 <chEvtBroadcastFlagsI>
      u->CR1 = cr1 & ~USART_CR1_TCIE;
 8009282:	f02a 0340 	bic.w	r3, sl, #64	; 0x40
 8009286:	6033      	str	r3, [r6, #0]
 8009288:	e7c9      	b.n	800921e <serve_interrupt+0x10e>
 800928a:	bf00      	nop
 800928c:	0000      	movs	r0, r0
	...

08009290 <_pal_lld_disablepadevent>:
 * @notapi
 */
void _pal_lld_disablepadevent(ioportid_t port, iopadid_t pad) {
  uint32_t padmask, rtsr1, ftsr1;

  rtsr1 = EXTI->RTSR1;
 8009290:	4b19      	ldr	r3, [pc, #100]	; (80092f8 <_pal_lld_disablepadevent+0x68>)
void _pal_lld_disablepadevent(ioportid_t port, iopadid_t pad) {
 8009292:	b4f0      	push	{r4, r5, r6, r7}
  rtsr1 = EXTI->RTSR1;
 8009294:	689e      	ldr	r6, [r3, #8]
  ftsr1 = EXTI->FTSR1;
 8009296:	68dd      	ldr	r5, [r3, #12]

  /* Mask of the pad.*/
  padmask = 1U << (uint32_t)pad;
 8009298:	2201      	movs	r2, #1

  /* If either RTRS1 or FTSR1 is enabled then the channel is in use.*/
  if (((rtsr1 | ftsr1) & padmask) != 0U) {
 800929a:	ea46 0405 	orr.w	r4, r6, r5
  padmask = 1U << (uint32_t)pad;
 800929e:	408a      	lsls	r2, r1
  if (((rtsr1 | ftsr1) & padmask) != 0U) {
 80092a0:	4214      	tst	r4, r2
 80092a2:	d021      	beq.n	80092e8 <_pal_lld_disablepadevent+0x58>
    uint32_t cridx, croff, crport, portidx;

    /* Index and mask of the SYSCFG CR register to be used.*/
    cridx  = (uint32_t)pad >> 2U;
 80092a4:	088c      	lsrs	r4, r1, #2

    /* Port index is obtained assuming that GPIO ports are placed at regular
       0x400 intervals in memory space. So far this is true for all devices.*/
    portidx = (((uint32_t)port - (uint32_t)GPIOA) >> 10U) & 0xFU;

    crport = (SYSCFG->EXTICR[cridx] >> croff) & 0xFU;
 80092a6:	4f15      	ldr	r7, [pc, #84]	; (80092fc <_pal_lld_disablepadevent+0x6c>)
 80092a8:	3402      	adds	r4, #2
    portidx = (((uint32_t)port - (uint32_t)GPIOA) >> 10U) & 0xFU;
 80092aa:	f3c0 2083 	ubfx	r0, r0, #10, #4
    crport = (SYSCFG->EXTICR[cridx] >> croff) & 0xFU;
 80092ae:	f857 4024 	ldr.w	r4, [r7, r4, lsl #2]
    croff = ((uint32_t)pad & 3U) * 4U;
 80092b2:	f001 0703 	and.w	r7, r1, #3
 80092b6:	00bf      	lsls	r7, r7, #2
    crport = (SYSCFG->EXTICR[cridx] >> croff) & 0xFU;
 80092b8:	40fc      	lsrs	r4, r7
 80092ba:	f004 040f 	and.w	r4, r4, #15

    osalDbgAssert(crport == portidx, "channel mapped on different port");
 80092be:	42a0      	cmp	r0, r4
 80092c0:	d114      	bne.n	80092ec <_pal_lld_disablepadevent+0x5c>

    /* Disabling channel.*/
    EXTI->IMR1  &= ~padmask;
 80092c2:	681c      	ldr	r4, [r3, #0]
    EXTI->FTSR1  = ftsr1 & ~padmask;
    EXTI->PR1    = padmask;

#if PAL_USE_CALLBACKS || PAL_USE_WAIT
  /* Callback cleared and/or thread reset.*/
  _pal_clear_event(pad);
 80092c4:	4f0e      	ldr	r7, [pc, #56]	; (8009300 <_pal_lld_disablepadevent+0x70>)
    EXTI->IMR1  &= ~padmask;
 80092c6:	43d0      	mvns	r0, r2
 80092c8:	4004      	ands	r4, r0
 80092ca:	601c      	str	r4, [r3, #0]
    EXTI->EMR1  &= ~padmask;
 80092cc:	685c      	ldr	r4, [r3, #4]
    EXTI->RTSR1  = rtsr1 & ~padmask;
 80092ce:	4006      	ands	r6, r0
    EXTI->FTSR1  = ftsr1 & ~padmask;
 80092d0:	4005      	ands	r5, r0
    EXTI->EMR1  &= ~padmask;
 80092d2:	4020      	ands	r0, r4
 80092d4:	6058      	str	r0, [r3, #4]
  _pal_clear_event(pad);
 80092d6:	eb07 04c1 	add.w	r4, r7, r1, lsl #3
 80092da:	2000      	movs	r0, #0
    EXTI->RTSR1  = rtsr1 & ~padmask;
 80092dc:	609e      	str	r6, [r3, #8]
    EXTI->FTSR1  = ftsr1 & ~padmask;
 80092de:	60dd      	str	r5, [r3, #12]
    EXTI->PR1    = padmask;
 80092e0:	615a      	str	r2, [r3, #20]
  _pal_clear_event(pad);
 80092e2:	f847 0031 	str.w	r0, [r7, r1, lsl #3]
 80092e6:	6060      	str	r0, [r4, #4]
#endif
  }
}
 80092e8:	bcf0      	pop	{r4, r5, r6, r7}
 80092ea:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
 80092ec:	b672      	cpsid	i
 80092ee:	4b05      	ldr	r3, [pc, #20]	; (8009304 <_pal_lld_disablepadevent+0x74>)
 80092f0:	4a05      	ldr	r2, [pc, #20]	; (8009308 <_pal_lld_disablepadevent+0x78>)
 80092f2:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 80092f4:	e7fe      	b.n	80092f4 <_pal_lld_disablepadevent+0x64>
 80092f6:	bf00      	nop
 80092f8:	40010400 	.word	0x40010400
 80092fc:	40010000 	.word	0x40010000
 8009300:	200023d4 	.word	0x200023d4
 8009304:	20002454 	.word	0x20002454
 8009308:	08012928 	.word	0x08012928
 800930c:	00000000 	.word	0x00000000

08009310 <_pal_lld_setgroupmode>:
                           iomode_t mode) {
 8009310:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
      m4 = 15 << ((bit & 7) * 4);
 8009314:	f04f 0c0f 	mov.w	ip, #15
  uint32_t moder   = (mode & PAL_STM32_MODE_MASK) >> 0;
 8009318:	f002 0703 	and.w	r7, r2, #3
  uint32_t bit     = 0;
 800931c:	2600      	movs	r6, #0
  uint32_t pupdr   = (mode & PAL_STM32_PUPDR_MASK) >> 5;
 800931e:	0952      	lsrs	r2, r2, #5
      m1 = 1 << bit;
 8009320:	f04f 0801 	mov.w	r8, #1
      m2 = 3 << (bit * 2);
 8009324:	f04f 0e03 	mov.w	lr, #3
 8009328:	e00a      	b.n	8009340 <_pal_lld_setgroupmode+0x30>
          port->AFRL = (port->AFRL & ~m4) | altrmask;
 800932a:	6a03      	ldr	r3, [r0, #32]
 800932c:	401c      	ands	r4, r3
 800932e:	6204      	str	r4, [r0, #32]
      port->LOCKR   = (port->LOCKR & ~m1) | lockr;
 8009330:	69c3      	ldr	r3, [r0, #28]
 8009332:	401d      	ands	r5, r3
 8009334:	61c5      	str	r5, [r0, #28]
    if (!mask)
 8009336:	0849      	lsrs	r1, r1, #1
 8009338:	d03b      	beq.n	80093b2 <_pal_lld_setgroupmode+0xa2>
    pupdr <<= 2;
 800933a:	0092      	lsls	r2, r2, #2
    moder <<= 2;
 800933c:	00bf      	lsls	r7, r7, #2
    bit++;
 800933e:	3601      	adds	r6, #1
      altrmask = altr << ((bit & 7) * 4);
 8009340:	f006 0407 	and.w	r4, r6, #7
      m2 = 3 << (bit * 2);
 8009344:	0073      	lsls	r3, r6, #1
      altrmask = altr << ((bit & 7) * 4);
 8009346:	00a4      	lsls	r4, r4, #2
      m1 = 1 << bit;
 8009348:	fa08 f506 	lsl.w	r5, r8, r6
      m2 = 3 << (bit * 2);
 800934c:	fa0e f303 	lsl.w	r3, lr, r3
      m4 = 15 << ((bit & 7) * 4);
 8009350:	fa0c f404 	lsl.w	r4, ip, r4
    if ((mask & 1) != 0) {
 8009354:	f011 0f01 	tst.w	r1, #1
      port->OTYPER  = (port->OTYPER & ~m1) | otyper;
 8009358:	ea6f 0505 	mvn.w	r5, r5
      port->OSPEEDR = (port->OSPEEDR & ~m2) | ospeedr;
 800935c:	ea6f 0303 	mvn.w	r3, r3
 8009360:	ea6f 0404 	mvn.w	r4, r4
    if ((mask & 1) != 0) {
 8009364:	d0e7      	beq.n	8009336 <_pal_lld_setgroupmode+0x26>
      port->OTYPER  = (port->OTYPER & ~m1) | otyper;
 8009366:	f8d0 9004 	ldr.w	r9, [r0, #4]
 800936a:	ea09 0905 	and.w	r9, r9, r5
 800936e:	f8c0 9004 	str.w	r9, [r0, #4]
      port->ASCR    = (port->ASCR & ~m1) | ascr;
 8009372:	f8d0 902c 	ldr.w	r9, [r0, #44]	; 0x2c
 8009376:	ea05 0909 	and.w	r9, r5, r9
 800937a:	f8c0 902c 	str.w	r9, [r0, #44]	; 0x2c
      port->OSPEEDR = (port->OSPEEDR & ~m2) | ospeedr;
 800937e:	f8d0 9008 	ldr.w	r9, [r0, #8]
 8009382:	ea09 0903 	and.w	r9, r9, r3
 8009386:	f8c0 9008 	str.w	r9, [r0, #8]
      port->PUPDR   = (port->PUPDR & ~m2) | pupdr;
 800938a:	f8d0 900c 	ldr.w	r9, [r0, #12]
 800938e:	ea03 0909 	and.w	r9, r3, r9
 8009392:	ea49 0902 	orr.w	r9, r9, r2
 8009396:	f8c0 900c 	str.w	r9, [r0, #12]
        port->MODER   = (port->MODER & ~m2) | moder;
 800939a:	f8d0 9000 	ldr.w	r9, [r0]
 800939e:	ea03 0309 	and.w	r3, r3, r9
 80093a2:	433b      	orrs	r3, r7
        if (bit < 8)
 80093a4:	2e07      	cmp	r6, #7
        port->MODER   = (port->MODER & ~m2) | moder;
 80093a6:	6003      	str	r3, [r0, #0]
        if (bit < 8)
 80093a8:	d9bf      	bls.n	800932a <_pal_lld_setgroupmode+0x1a>
          port->AFRH = (port->AFRH & ~m4) | altrmask;
 80093aa:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80093ac:	401c      	ands	r4, r3
 80093ae:	6244      	str	r4, [r0, #36]	; 0x24
 80093b0:	e7be      	b.n	8009330 <_pal_lld_setgroupmode+0x20>
}
 80093b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80093b6:	bf00      	nop
	...

080093c0 <_ctl>:
  switch (operation) {
 80093c0:	b109      	cbz	r1, 80093c6 <_ctl+0x6>
}
 80093c2:	2000      	movs	r0, #0
 80093c4:	4770      	bx	lr
 80093c6:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 80093c8:	4b01      	ldr	r3, [pc, #4]	; (80093d0 <_ctl+0x10>)
 80093ca:	4a02      	ldr	r2, [pc, #8]	; (80093d4 <_ctl+0x14>)
 80093cc:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 80093ce:	e7fe      	b.n	80093ce <_ctl+0xe>
 80093d0:	20002454 	.word	0x20002454
 80093d4:	08012920 	.word	0x08012920
	...

080093e0 <gptStopTimerI>:
 */
void gptStopTimerI(GPTDriver *gptp) {

  osalDbgCheckClassI();
  osalDbgCheck(gptp != NULL);
  osalDbgAssert((gptp->state == GPT_READY) || (gptp->state == GPT_CONTINUOUS) ||
 80093e0:	7803      	ldrb	r3, [r0, #0]
 80093e2:	3b02      	subs	r3, #2
 80093e4:	2b02      	cmp	r3, #2
 80093e6:	d80a      	bhi.n	80093fe <gptStopTimerI+0x1e>
 *
 * @notapi
 */
void gpt_lld_stop_timer(GPTDriver *gptp) {

  gptp->tim->CR1 = 0;                           /* Initially stopped.       */
 80093e8:	68c3      	ldr	r3, [r0, #12]
 80093ea:	2200      	movs	r2, #0
                (gptp->state == GPT_ONESHOT),
                "invalid state");

  gptp->state = GPT_READY;
 80093ec:	2102      	movs	r1, #2
 80093ee:	7001      	strb	r1, [r0, #0]
 80093f0:	601a      	str	r2, [r3, #0]
  gptp->tim->SR = 0;                            /* Clear pending IRQs.      */
 80093f2:	611a      	str	r2, [r3, #16]

  /* All interrupts disabled.*/
  gptp->tim->DIER &= ~STM32_TIM_DIER_IRQ_MASK;
 80093f4:	68da      	ldr	r2, [r3, #12]
 80093f6:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80093fa:	60da      	str	r2, [r3, #12]
  gpt_lld_stop_timer(gptp);
}
 80093fc:	4770      	bx	lr
 80093fe:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 8009400:	4b01      	ldr	r3, [pc, #4]	; (8009408 <gptStopTimerI+0x28>)
 8009402:	4a02      	ldr	r2, [pc, #8]	; (800940c <gptStopTimerI+0x2c>)
 8009404:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 8009406:	e7fe      	b.n	8009406 <gptStopTimerI+0x26>
 8009408:	20002454 	.word	0x20002454
 800940c:	08012910 	.word	0x08012910

08009410 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver>:
            static void _gpt_callback_(GPTDriver* gptp)
 8009410:	b570      	push	{r4, r5, r6, lr}
          if(rx_status==rx_status_codes::RECEIVING)
 8009412:	4c69      	ldr	r4, [pc, #420]	; (80095b8 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x1a8>)
 8009414:	f8d4 3470 	ldr.w	r3, [r4, #1136]	; 0x470
 8009418:	2b01      	cmp	r3, #1
 800941a:	d052      	beq.n	80094c2 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xb2>
          if(tx_status==tx_status_codes::SENDING)
 800941c:	f8d4 3890 	ldr.w	r3, [r4, #2192]	; 0x890
 8009420:	2b01      	cmp	r3, #1
 8009422:	d000      	beq.n	8009426 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x16>
            { _ctx_.tc_interrupt(); }
 8009424:	bd70      	pop	{r4, r5, r6, pc}
            if(tx_interrupt_counter==0)
 8009426:	f8d4 2894 	ldr.w	r2, [r4, #2196]	; 0x894
 800942a:	2a00      	cmp	r2, #0
 800942c:	d141      	bne.n	80094b2 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xa2>
              if(tx_bit_counter>=tx_frame_bits)
 800942e:	f8d4 088c 	ldr.w	r0, [r4, #2188]	; 0x88c
 8009432:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8009434:	4288      	cmp	r0, r1
 8009436:	d32a      	bcc.n	800948e <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x7e>
 8009438:	f8d4 387c 	ldr.w	r3, [r4, #2172]	; 0x87c
 800943c:	2b00      	cmp	r3, #0
 800943e:	f2c0 8097 	blt.w	8009570 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x160>
      if(_first_==_last_) _init_();
 8009442:	f8d4 0880 	ldr.w	r0, [r4, #2176]	; 0x880
      t=_buffer_p_[_first_];
 8009446:	eb04 0183 	add.w	r1, r4, r3, lsl #2
      if(_first_==_last_) _init_();
 800944a:	4283      	cmp	r3, r0
      t=_buffer_p_[_first_];
 800944c:	f8d1 147c 	ldr.w	r1, [r1, #1148]	; 0x47c
      if(_first_==_last_) _init_();
 8009450:	f000 8085 	beq.w	800955e <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x14e>
      else { _first_=(_first_+1)%LENGTH; _items_--; }
 8009454:	f8d4 2884 	ldr.w	r2, [r4, #2180]	; 0x884
 8009458:	3301      	adds	r3, #1
 800945a:	b2db      	uxtb	r3, r3
 800945c:	3a01      	subs	r2, #1
 800945e:	f8c4 387c 	str.w	r3, [r4, #2172]	; 0x87c
 8009462:	f8c4 2884 	str.w	r2, [r4, #2180]	; 0x884
                  tx_data=data_to_send; tx_bit_counter=0; 
 8009466:	2300      	movs	r3, #0
 8009468:	f8c4 1888 	str.w	r1, [r4, #2184]	; 0x888
 800946c:	f8c4 388c 	str.w	r3, [r4, #2188]	; 0x88c
                if((tx_data>>tx_bit_counter) & 1) 
 8009470:	f8d4 2888 	ldr.w	r2, [r4, #2184]	; 0x888
 8009474:	68e0      	ldr	r0, [r4, #12]
 8009476:	f8d4 588c 	ldr.w	r5, [r4, #2188]	; 0x88c
 800947a:	68a1      	ldr	r1, [r4, #8]
 800947c:	2301      	movs	r3, #1
 800947e:	4083      	lsls	r3, r0
 8009480:	40ea      	lsrs	r2, r5
 8009482:	b29b      	uxth	r3, r3
 8009484:	07d0      	lsls	r0, r2, #31
                  palSetPad(tx_port,tx_pin);
 8009486:	bf4c      	ite	mi
 8009488:	830b      	strhmi	r3, [r1, #24]
                else palClearPad(tx_port,tx_pin);
 800948a:	834b      	strhpl	r3, [r1, #26]
 800948c:	e00c      	b.n	80094a8 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x98>
                if((tx_data>>tx_bit_counter) & 1) 
 800948e:	f8d4 2888 	ldr.w	r2, [r4, #2184]	; 0x888
 8009492:	68e1      	ldr	r1, [r4, #12]
 8009494:	f8d4 088c 	ldr.w	r0, [r4, #2188]	; 0x88c
 8009498:	68a5      	ldr	r5, [r4, #8]
 800949a:	40c2      	lsrs	r2, r0
 800949c:	408b      	lsls	r3, r1
 800949e:	b29b      	uxth	r3, r3
 80094a0:	07d2      	lsls	r2, r2, #31
                  palSetPad(tx_port,tx_pin);
 80094a2:	bf4c      	ite	mi
 80094a4:	832b      	strhmi	r3, [r5, #24]
                else palClearPad(tx_port,tx_pin);
 80094a6:	836b      	strhpl	r3, [r5, #26]
              else { set_outgoing_bit(); tx_bit_counter++; }
 80094a8:	f8d4 388c 	ldr.w	r3, [r4, #2188]	; 0x88c
 80094ac:	3301      	adds	r3, #1
 80094ae:	f8c4 388c 	str.w	r3, [r4, #2188]	; 0x88c
            tx_interrupt_counter=(tx_interrupt_counter+1)&0x3;
 80094b2:	f8d4 3894 	ldr.w	r3, [r4, #2196]	; 0x894
 80094b6:	3301      	adds	r3, #1
 80094b8:	f003 0303 	and.w	r3, r3, #3
 80094bc:	f8c4 3894 	str.w	r3, [r4, #2196]	; 0x894
            { _ctx_.tc_interrupt(); }
 80094c0:	bd70      	pop	{r4, r5, r6, pc}
            if(rx_interrupt_counter==1)
 80094c2:	f8d4 5478 	ldr.w	r5, [r4, #1144]	; 0x478
 80094c6:	2d01      	cmp	r5, #1
 80094c8:	d007      	beq.n	80094da <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xca>
            rx_interrupt_counter=(rx_interrupt_counter+1)&0x3;
 80094ca:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 80094ce:	3301      	adds	r3, #1
 80094d0:	f003 0303 	and.w	r3, r3, #3
 80094d4:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
 80094d8:	e7a0      	b.n	800941c <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xc>
              { rx_data |= (rx_bit<<rx_bit_counter); }
 80094da:	f8d4 346c 	ldr.w	r3, [r4, #1132]	; 0x46c
 80094de:	f8d4 0468 	ldr.w	r0, [r4, #1128]	; 0x468
 80094e2:	f8d4 1464 	ldr.w	r1, [r4, #1124]	; 0x464
              if(rx_bit_counter==rx_frame_bits)
 80094e6:	6c62      	ldr	r2, [r4, #68]	; 0x44
              { rx_data |= (rx_bit<<rx_bit_counter); }
 80094e8:	4083      	lsls	r3, r0
 80094ea:	430b      	orrs	r3, r1
 80094ec:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
              rx_bit_counter++;
 80094f0:	f8d4 3468 	ldr.w	r3, [r4, #1128]	; 0x468
 80094f4:	3301      	adds	r3, #1
 80094f6:	f8c4 3468 	str.w	r3, [r4, #1128]	; 0x468
              if(rx_bit_counter==rx_frame_bits)
 80094fa:	f8d4 3468 	ldr.w	r3, [r4, #1128]	; 0x468
 80094fe:	4293      	cmp	r3, r2
 8009500:	d1e3      	bne.n	80094ca <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xba>
                if(stop_bits==stop_bit_codes::TWO_STOP_BITS)
 8009502:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009504:	2b02      	cmp	r3, #2
 8009506:	d109      	bne.n	800951c <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x10c>
              { rx_data |= (rx_bit<<rx_bit_counter); }
 8009508:	f8d4 346c 	ldr.w	r3, [r4, #1132]	; 0x46c
 800950c:	f8d4 1468 	ldr.w	r1, [r4, #1128]	; 0x468
 8009510:	f8d4 2464 	ldr.w	r2, [r4, #1124]	; 0x464
 8009514:	408b      	lsls	r3, r1
 8009516:	4313      	orrs	r3, r2
 8009518:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
                if(tx_status==tx_status_codes::IDLE) 
 800951c:	f8d4 6890 	ldr.w	r6, [r4, #2192]	; 0x890
 8009520:	b36e      	cbz	r6, 800957e <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x16e>

    // push implementation for a circular fifo
    // when is full, we overwrite the first element 
    bool _push_(const T& t,bool_to_type<true>)
    {
      int new_last=(_last_+1)%LENGTH;
 8009522:	f8d4 345c 	ldr.w	r3, [r4, #1116]	; 0x45c

      if(new_last==_first_) // full?
 8009526:	f8d4 1458 	ldr.w	r1, [r4, #1112]	; 0x458
                  (rx_buffer.push(static_cast<uint32_t>(rx_data)))?
 800952a:	f8d4 0464 	ldr.w	r0, [r4, #1124]	; 0x464
      int new_last=(_last_+1)%LENGTH;
 800952e:	3301      	adds	r3, #1
 8009530:	b2db      	uxtb	r3, r3
      if(new_last==_first_) // full?
 8009532:	428b      	cmp	r3, r1
 8009534:	d02c      	beq.n	8009590 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x180>
      }

      _last_=new_last;
      _buffer_p_[_last_]=t;

      if(_first_<0) _first_=_last_;
 8009536:	2900      	cmp	r1, #0
      _buffer_p_[_last_]=t;
 8009538:	eb04 0283 	add.w	r2, r4, r3, lsl #2
      _last_=new_last;
 800953c:	f8c4 345c 	str.w	r3, [r4, #1116]	; 0x45c
      if(_first_<0) _first_=_last_;
 8009540:	bfb8      	it	lt
 8009542:	f8c4 3458 	strlt.w	r3, [r4, #1112]	; 0x458

      _items_++;
 8009546:	f8d4 3460 	ldr.w	r3, [r4, #1120]	; 0x460
      _buffer_p_[_last_]=t;
 800954a:	6590      	str	r0, [r2, #88]	; 0x58
      _items_++;
 800954c:	3301      	adds	r3, #1
 800954e:	f8c4 3460 	str.w	r3, [r4, #1120]	; 0x460
                rx_status=rx_status_codes::LISTENING;
 8009552:	2300      	movs	r3, #0
                rx_data_status=(
 8009554:	f8c4 5474 	str.w	r5, [r4, #1140]	; 0x474
                rx_status=rx_status_codes::LISTENING;
 8009558:	f8c4 3470 	str.w	r3, [r4, #1136]	; 0x470
 800955c:	e7b5      	b.n	80094ca <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xba>
    void _init_() { _first_=_last_=-1; _items_=0; }
 800955e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009562:	f8c4 2884 	str.w	r2, [r4, #2180]	; 0x884
 8009566:	f8c4 3880 	str.w	r3, [r4, #2176]	; 0x880
 800956a:	f8c4 387c 	str.w	r3, [r4, #2172]	; 0x87c
 800956e:	e77a      	b.n	8009466 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x56>
                  if(rx_status==rx_status_codes::LISTENING) 
 8009570:	f8d4 5470 	ldr.w	r5, [r4, #1136]	; 0x470
 8009574:	b1bd      	cbz	r5, 80095a6 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x196>
                  tx_status=tx_status_codes::IDLE;
 8009576:	2300      	movs	r3, #0
 8009578:	f8c4 3890 	str.w	r3, [r4, #2192]	; 0x890
 800957c:	e799      	b.n	80094b2 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xa2>
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800957e:	2320      	movs	r3, #32
 8009580:	f383 8811 	msr	BASEPRI, r3
                { interrupt_guard guard; gptStopTimerI(TIMER); }
 8009584:	480d      	ldr	r0, [pc, #52]	; (80095bc <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x1ac>)
 8009586:	f7ff ff2b 	bl	80093e0 <gptStopTimerI>
 800958a:	f386 8811 	msr	BASEPRI, r6
 800958e:	e7c8      	b.n	8009522 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x112>
        _first_=(_first_+1)%LENGTH;
 8009590:	1c5a      	adds	r2, r3, #1
        _last_=new_last; _buffer_p_[_last_]=t;
 8009592:	eb04 0183 	add.w	r1, r4, r3, lsl #2
        _first_=(_first_+1)%LENGTH;
 8009596:	b2d2      	uxtb	r2, r2
        _last_=new_last; _buffer_p_[_last_]=t;
 8009598:	f8c4 345c 	str.w	r3, [r4, #1116]	; 0x45c
        _first_=(_first_+1)%LENGTH;
 800959c:	f8c4 2458 	str.w	r2, [r4, #1112]	; 0x458
        _last_=new_last; _buffer_p_[_last_]=t;
 80095a0:	6588      	str	r0, [r1, #88]	; 0x58
                  (rx_buffer.push(static_cast<uint32_t>(rx_data)))?
 80095a2:	2502      	movs	r5, #2
 80095a4:	e7d5      	b.n	8009552 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x142>
 80095a6:	2320      	movs	r3, #32
 80095a8:	f383 8811 	msr	BASEPRI, r3
                  { interrupt_guard guard; gptStopTimerI(TIMER); }
 80095ac:	4803      	ldr	r0, [pc, #12]	; (80095bc <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x1ac>)
 80095ae:	f7ff ff17 	bl	80093e0 <gptStopTimerI>
 80095b2:	f385 8811 	msr	BASEPRI, r5
 80095b6:	e7de      	b.n	8009576 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x166>
 80095b8:	20001b38 	.word	0x20001b38
 80095bc:	200011c8 	.word	0x200011c8

080095c0 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver>:
            static void _gpt_callback_(GPTDriver* gptp)
 80095c0:	b570      	push	{r4, r5, r6, lr}
          if(rx_status==rx_status_codes::RECEIVING)
 80095c2:	4c69      	ldr	r4, [pc, #420]	; (8009768 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x1a8>)
 80095c4:	f8d4 3470 	ldr.w	r3, [r4, #1136]	; 0x470
 80095c8:	2b01      	cmp	r3, #1
 80095ca:	d052      	beq.n	8009672 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xb2>
          if(tx_status==tx_status_codes::SENDING)
 80095cc:	f8d4 3890 	ldr.w	r3, [r4, #2192]	; 0x890
 80095d0:	2b01      	cmp	r3, #1
 80095d2:	d000      	beq.n	80095d6 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x16>
            { _ctx_.tc_interrupt(); }
 80095d4:	bd70      	pop	{r4, r5, r6, pc}
            if(tx_interrupt_counter==0)
 80095d6:	f8d4 2894 	ldr.w	r2, [r4, #2196]	; 0x894
 80095da:	2a00      	cmp	r2, #0
 80095dc:	d141      	bne.n	8009662 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xa2>
              if(tx_bit_counter>=tx_frame_bits)
 80095de:	f8d4 088c 	ldr.w	r0, [r4, #2188]	; 0x88c
 80095e2:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80095e4:	4288      	cmp	r0, r1
 80095e6:	d32a      	bcc.n	800963e <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x7e>
      if(_first_<0) return false;
 80095e8:	f8d4 387c 	ldr.w	r3, [r4, #2172]	; 0x87c
 80095ec:	2b00      	cmp	r3, #0
 80095ee:	f2c0 8097 	blt.w	8009720 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x160>
      if(_first_==_last_) _init_();
 80095f2:	f8d4 0880 	ldr.w	r0, [r4, #2176]	; 0x880
      t=_buffer_p_[_first_];
 80095f6:	eb04 0183 	add.w	r1, r4, r3, lsl #2
      if(_first_==_last_) _init_();
 80095fa:	4283      	cmp	r3, r0
      t=_buffer_p_[_first_];
 80095fc:	f8d1 147c 	ldr.w	r1, [r1, #1148]	; 0x47c
      if(_first_==_last_) _init_();
 8009600:	f000 8085 	beq.w	800970e <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x14e>
      else { _first_=(_first_+1)%LENGTH; _items_--; }
 8009604:	f8d4 2884 	ldr.w	r2, [r4, #2180]	; 0x884
 8009608:	3301      	adds	r3, #1
 800960a:	b2db      	uxtb	r3, r3
 800960c:	3a01      	subs	r2, #1
 800960e:	f8c4 387c 	str.w	r3, [r4, #2172]	; 0x87c
 8009612:	f8c4 2884 	str.w	r2, [r4, #2180]	; 0x884
                  tx_data=data_to_send; tx_bit_counter=0; 
 8009616:	2300      	movs	r3, #0
 8009618:	f8c4 1888 	str.w	r1, [r4, #2184]	; 0x888
 800961c:	f8c4 388c 	str.w	r3, [r4, #2188]	; 0x88c
                if((tx_data>>tx_bit_counter) & 1) 
 8009620:	f8d4 2888 	ldr.w	r2, [r4, #2184]	; 0x888
 8009624:	68e0      	ldr	r0, [r4, #12]
 8009626:	f8d4 588c 	ldr.w	r5, [r4, #2188]	; 0x88c
 800962a:	68a1      	ldr	r1, [r4, #8]
 800962c:	2301      	movs	r3, #1
 800962e:	4083      	lsls	r3, r0
 8009630:	40ea      	lsrs	r2, r5
 8009632:	b29b      	uxth	r3, r3
 8009634:	07d0      	lsls	r0, r2, #31
                  palSetPad(tx_port,tx_pin);
 8009636:	bf4c      	ite	mi
 8009638:	830b      	strhmi	r3, [r1, #24]
                else palClearPad(tx_port,tx_pin);
 800963a:	834b      	strhpl	r3, [r1, #26]
 800963c:	e00c      	b.n	8009658 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x98>
                if((tx_data>>tx_bit_counter) & 1) 
 800963e:	f8d4 2888 	ldr.w	r2, [r4, #2184]	; 0x888
 8009642:	68e1      	ldr	r1, [r4, #12]
 8009644:	f8d4 088c 	ldr.w	r0, [r4, #2188]	; 0x88c
 8009648:	68a5      	ldr	r5, [r4, #8]
 800964a:	40c2      	lsrs	r2, r0
 800964c:	408b      	lsls	r3, r1
 800964e:	b29b      	uxth	r3, r3
 8009650:	07d2      	lsls	r2, r2, #31
                  palSetPad(tx_port,tx_pin);
 8009652:	bf4c      	ite	mi
 8009654:	832b      	strhmi	r3, [r5, #24]
                else palClearPad(tx_port,tx_pin);
 8009656:	836b      	strhpl	r3, [r5, #26]
              else { set_outgoing_bit(); tx_bit_counter++; }
 8009658:	f8d4 388c 	ldr.w	r3, [r4, #2188]	; 0x88c
 800965c:	3301      	adds	r3, #1
 800965e:	f8c4 388c 	str.w	r3, [r4, #2188]	; 0x88c
            tx_interrupt_counter=(tx_interrupt_counter+1)&0x3;
 8009662:	f8d4 3894 	ldr.w	r3, [r4, #2196]	; 0x894
 8009666:	3301      	adds	r3, #1
 8009668:	f003 0303 	and.w	r3, r3, #3
 800966c:	f8c4 3894 	str.w	r3, [r4, #2196]	; 0x894
            { _ctx_.tc_interrupt(); }
 8009670:	bd70      	pop	{r4, r5, r6, pc}
            if(rx_interrupt_counter==1)
 8009672:	f8d4 5478 	ldr.w	r5, [r4, #1144]	; 0x478
 8009676:	2d01      	cmp	r5, #1
 8009678:	d007      	beq.n	800968a <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xca>
            rx_interrupt_counter=(rx_interrupt_counter+1)&0x3;
 800967a:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 800967e:	3301      	adds	r3, #1
 8009680:	f003 0303 	and.w	r3, r3, #3
 8009684:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
 8009688:	e7a0      	b.n	80095cc <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xc>
              { rx_data |= (rx_bit<<rx_bit_counter); }
 800968a:	f8d4 346c 	ldr.w	r3, [r4, #1132]	; 0x46c
 800968e:	f8d4 0468 	ldr.w	r0, [r4, #1128]	; 0x468
 8009692:	f8d4 1464 	ldr.w	r1, [r4, #1124]	; 0x464
              if(rx_bit_counter==rx_frame_bits)
 8009696:	6c62      	ldr	r2, [r4, #68]	; 0x44
              { rx_data |= (rx_bit<<rx_bit_counter); }
 8009698:	4083      	lsls	r3, r0
 800969a:	430b      	orrs	r3, r1
 800969c:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
              rx_bit_counter++;
 80096a0:	f8d4 3468 	ldr.w	r3, [r4, #1128]	; 0x468
 80096a4:	3301      	adds	r3, #1
 80096a6:	f8c4 3468 	str.w	r3, [r4, #1128]	; 0x468
              if(rx_bit_counter==rx_frame_bits)
 80096aa:	f8d4 3468 	ldr.w	r3, [r4, #1128]	; 0x468
 80096ae:	4293      	cmp	r3, r2
 80096b0:	d1e3      	bne.n	800967a <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xba>
                if(stop_bits==stop_bit_codes::TWO_STOP_BITS)
 80096b2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80096b4:	2b02      	cmp	r3, #2
 80096b6:	d109      	bne.n	80096cc <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x10c>
              { rx_data |= (rx_bit<<rx_bit_counter); }
 80096b8:	f8d4 346c 	ldr.w	r3, [r4, #1132]	; 0x46c
 80096bc:	f8d4 1468 	ldr.w	r1, [r4, #1128]	; 0x468
 80096c0:	f8d4 2464 	ldr.w	r2, [r4, #1124]	; 0x464
 80096c4:	408b      	lsls	r3, r1
 80096c6:	4313      	orrs	r3, r2
 80096c8:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
                if(tx_status==tx_status_codes::IDLE) 
 80096cc:	f8d4 6890 	ldr.w	r6, [r4, #2192]	; 0x890
 80096d0:	b36e      	cbz	r6, 800972e <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x16e>
      int new_last=(_last_+1)%LENGTH;
 80096d2:	f8d4 345c 	ldr.w	r3, [r4, #1116]	; 0x45c
      if(new_last==_first_) // full?
 80096d6:	f8d4 1458 	ldr.w	r1, [r4, #1112]	; 0x458
                  (rx_buffer.push(static_cast<uint32_t>(rx_data)))?
 80096da:	f8d4 0464 	ldr.w	r0, [r4, #1124]	; 0x464
      int new_last=(_last_+1)%LENGTH;
 80096de:	3301      	adds	r3, #1
 80096e0:	b2db      	uxtb	r3, r3
      if(new_last==_first_) // full?
 80096e2:	428b      	cmp	r3, r1
 80096e4:	d02c      	beq.n	8009740 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x180>
      if(_first_<0) _first_=_last_;
 80096e6:	2900      	cmp	r1, #0
      _buffer_p_[_last_]=t;
 80096e8:	eb04 0283 	add.w	r2, r4, r3, lsl #2
      _last_=new_last;
 80096ec:	f8c4 345c 	str.w	r3, [r4, #1116]	; 0x45c
      if(_first_<0) _first_=_last_;
 80096f0:	bfb8      	it	lt
 80096f2:	f8c4 3458 	strlt.w	r3, [r4, #1112]	; 0x458
      _items_++;
 80096f6:	f8d4 3460 	ldr.w	r3, [r4, #1120]	; 0x460
      _buffer_p_[_last_]=t;
 80096fa:	6590      	str	r0, [r2, #88]	; 0x58
      _items_++;
 80096fc:	3301      	adds	r3, #1
 80096fe:	f8c4 3460 	str.w	r3, [r4, #1120]	; 0x460
                rx_status=rx_status_codes::LISTENING;
 8009702:	2300      	movs	r3, #0
                rx_data_status=(
 8009704:	f8c4 5474 	str.w	r5, [r4, #1140]	; 0x474
                rx_status=rx_status_codes::LISTENING;
 8009708:	f8c4 3470 	str.w	r3, [r4, #1136]	; 0x470
 800970c:	e7b5      	b.n	800967a <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xba>
    void _init_() { _first_=_last_=-1; _items_=0; }
 800970e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009712:	f8c4 2884 	str.w	r2, [r4, #2180]	; 0x884
 8009716:	f8c4 3880 	str.w	r3, [r4, #2176]	; 0x880
 800971a:	f8c4 387c 	str.w	r3, [r4, #2172]	; 0x87c
 800971e:	e77a      	b.n	8009616 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x56>
                  if(rx_status==rx_status_codes::LISTENING) 
 8009720:	f8d4 5470 	ldr.w	r5, [r4, #1136]	; 0x470
 8009724:	b1bd      	cbz	r5, 8009756 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x196>
                  tx_status=tx_status_codes::IDLE;
 8009726:	2300      	movs	r3, #0
 8009728:	f8c4 3890 	str.w	r3, [r4, #2192]	; 0x890
 800972c:	e799      	b.n	8009662 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0xa2>
 800972e:	2320      	movs	r3, #32
 8009730:	f383 8811 	msr	BASEPRI, r3
                { interrupt_guard guard; gptStopTimerI(TIMER); }
 8009734:	480d      	ldr	r0, [pc, #52]	; (800976c <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x1ac>)
 8009736:	f7ff fe53 	bl	80093e0 <gptStopTimerI>
 800973a:	f386 8811 	msr	BASEPRI, r6
 800973e:	e7c8      	b.n	80096d2 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x112>
        _first_=(_first_+1)%LENGTH;
 8009740:	1c5a      	adds	r2, r3, #1
        _last_=new_last; _buffer_p_[_last_]=t;
 8009742:	eb04 0183 	add.w	r1, r4, r3, lsl #2
        _first_=(_first_+1)%LENGTH;
 8009746:	b2d2      	uxtb	r2, r2
        _last_=new_last; _buffer_p_[_last_]=t;
 8009748:	f8c4 345c 	str.w	r3, [r4, #1116]	; 0x45c
        _first_=(_first_+1)%LENGTH;
 800974c:	f8c4 2458 	str.w	r2, [r4, #1112]	; 0x458
        _last_=new_last; _buffer_p_[_last_]=t;
 8009750:	6588      	str	r0, [r1, #88]	; 0x58
                  (rx_buffer.push(static_cast<uint32_t>(rx_data)))?
 8009752:	2502      	movs	r5, #2
 8009754:	e7d5      	b.n	8009702 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x142>
 8009756:	2320      	movs	r3, #32
 8009758:	f383 8811 	msr	BASEPRI, r3
                  { interrupt_guard guard; gptStopTimerI(TIMER); }
 800975c:	4803      	ldr	r0, [pc, #12]	; (800976c <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x1ac>)
 800975e:	f7ff fe3f 	bl	80093e0 <gptStopTimerI>
 8009762:	f385 8811 	msr	BASEPRI, r5
 8009766:	e7de      	b.n	8009726 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE14_gpt_callback_EP9GPTDriver+0x166>
 8009768:	200012a0 	.word	0x200012a0
 800976c:	200011b8 	.word	0x200011b8

08009770 <gptStartContinuousI>:
  osalDbgAssert(gptp->state == GPT_READY,
 8009770:	7803      	ldrb	r3, [r0, #0]
 8009772:	2b02      	cmp	r3, #2
 8009774:	d114      	bne.n	80097a0 <gptStartContinuousI+0x30>
  if (NULL != gptp->config->callback)
 8009776:	6842      	ldr	r2, [r0, #4]
  gptp->state = GPT_CONTINUOUS;
 8009778:	2303      	movs	r3, #3
void gptStartContinuousI(GPTDriver *gptp, gptcnt_t interval) {
 800977a:	b410      	push	{r4}
  gptp->state = GPT_CONTINUOUS;
 800977c:	7003      	strb	r3, [r0, #0]
  gptp->tim->ARR = (uint32_t)(interval - 1U);   /* Time constant.           */
 800977e:	68c3      	ldr	r3, [r0, #12]
  if (NULL != gptp->config->callback)
 8009780:	6850      	ldr	r0, [r2, #4]
  gptp->tim->ARR = (uint32_t)(interval - 1U);   /* Time constant.           */
 8009782:	3901      	subs	r1, #1
  gptp->tim->CNT = 0;                           /* Reset counter.           */
 8009784:	2200      	movs	r2, #0
  gptp->tim->EGR = STM32_TIM_EGR_UG;            /* Update event.            */
 8009786:	2401      	movs	r4, #1
  gptp->tim->ARR = (uint32_t)(interval - 1U);   /* Time constant.           */
 8009788:	62d9      	str	r1, [r3, #44]	; 0x2c
  gptp->tim->EGR = STM32_TIM_EGR_UG;            /* Update event.            */
 800978a:	615c      	str	r4, [r3, #20]
  gptp->tim->CNT = 0;                           /* Reset counter.           */
 800978c:	625a      	str	r2, [r3, #36]	; 0x24
  gptp->tim->SR = 0;                            /* Clear pending IRQs.      */
 800978e:	611a      	str	r2, [r3, #16]
  if (NULL != gptp->config->callback)
 8009790:	b110      	cbz	r0, 8009798 <gptStartContinuousI+0x28>
    gptp->tim->DIER |= STM32_TIM_DIER_UIE;      /* Update Event IRQ enabled.*/
 8009792:	68da      	ldr	r2, [r3, #12]
 8009794:	4322      	orrs	r2, r4
 8009796:	60da      	str	r2, [r3, #12]
  gptp->tim->CR1 = STM32_TIM_CR1_ARPE | STM32_TIM_CR1_URS | STM32_TIM_CR1_CEN;
 8009798:	2285      	movs	r2, #133	; 0x85
 800979a:	601a      	str	r2, [r3, #0]
}
 800979c:	bc10      	pop	{r4}
 800979e:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
 80097a0:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 80097a2:	4b02      	ldr	r3, [pc, #8]	; (80097ac <gptStartContinuousI+0x3c>)
 80097a4:	4a02      	ldr	r2, [pc, #8]	; (80097b0 <gptStartContinuousI+0x40>)
 80097a6:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 80097a8:	e7fe      	b.n	80097a8 <gptStartContinuousI+0x38>
 80097aa:	bf00      	nop
 80097ac:	20002454 	.word	0x20002454
 80097b0:	080128e4 	.word	0x080128e4
	...

080097c0 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE13_rx_callback_EPv>:
            static void _rx_callback_(void* obj) 
 80097c0:	b570      	push	{r4, r5, r6, lr}
            (palReadPad(rx_port,rx_pin)==PAL_HIGH)? 1:0;
 80097c2:	4c18      	ldr	r4, [pc, #96]	; (8009824 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE13_rx_callback_EPv+0x64>)
 80097c4:	e9d4 3200 	ldrd	r3, r2, [r4]
 80097c8:	691b      	ldr	r3, [r3, #16]
 80097ca:	40d3      	lsrs	r3, r2
          register uint32_t sampled_bit= 
 80097cc:	f013 0301 	ands.w	r3, r3, #1
 80097d0:	d004      	beq.n	80097dc <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE13_rx_callback_EPv+0x1c>
          switch(rx_status)
 80097d2:	f8d4 3470 	ldr.w	r3, [r4, #1136]	; 0x470
 80097d6:	2b01      	cmp	r3, #1
 80097d8:	d005      	beq.n	80097e6 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE13_rx_callback_EPv+0x26>
            { reinterpret_cast<uart*>(obj)->_ctx_.rx_interrupt(); }
 80097da:	bd70      	pop	{r4, r5, r6, pc}
          switch(rx_status)
 80097dc:	f8d4 2470 	ldr.w	r2, [r4, #1136]	; 0x470
 80097e0:	b122      	cbz	r2, 80097ec <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE13_rx_callback_EPv+0x2c>
 80097e2:	2a01      	cmp	r2, #1
 80097e4:	d1f9      	bne.n	80097da <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE13_rx_callback_EPv+0x1a>
              rx_bit=sampled_bit;
 80097e6:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
            { reinterpret_cast<uart*>(obj)->_ctx_.rx_interrupt(); }
 80097ea:	bd70      	pop	{r4, r5, r6, pc}
                rx_status=rx_status_codes::RECEIVING;
 80097ec:	2501      	movs	r5, #1
 80097ee:	f8c4 5470 	str.w	r5, [r4, #1136]	; 0x470
                rx_data=rx_bit_counter=rx_bit=0;
 80097f2:	f8c4 246c 	str.w	r2, [r4, #1132]	; 0x46c
 80097f6:	f8c4 2468 	str.w	r2, [r4, #1128]	; 0x468
 80097fa:	f8c4 2464 	str.w	r2, [r4, #1124]	; 0x464
                rx_interrupt_counter=0;
 80097fe:	f8c4 2478 	str.w	r2, [r4, #1144]	; 0x478
                if(tx_status==tx_status_codes::IDLE) 
 8009802:	f8d4 6890 	ldr.w	r6, [r4, #2192]	; 0x890
 8009806:	2e00      	cmp	r6, #0
 8009808:	d1e7      	bne.n	80097da <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE13_rx_callback_EPv+0x1a>
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800980a:	2320      	movs	r3, #32
 800980c:	f383 8811 	msr	BASEPRI, r3
                    gptStartContinuousI(TIMER,bit_1st_quarter);
 8009810:	4805      	ldr	r0, [pc, #20]	; (8009828 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EE13_rx_callback_EPv+0x68>)
 8009812:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8009814:	f7ff ffac 	bl	8009770 <gptStartContinuousI>
 8009818:	f386 8811 	msr	BASEPRI, r6
                  rx_interrupt_counter=1; }
 800981c:	f8c4 5478 	str.w	r5, [r4, #1144]	; 0x478
            { reinterpret_cast<uart*>(obj)->_ctx_.rx_interrupt(); }
 8009820:	bd70      	pop	{r4, r5, r6, pc}
 8009822:	bf00      	nop
 8009824:	20001b38 	.word	0x20001b38
 8009828:	200011c8 	.word	0x200011c8
 800982c:	00000000 	.word	0x00000000

08009830 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE13_rx_callback_EPv>:
            static void _rx_callback_(void* obj) 
 8009830:	b570      	push	{r4, r5, r6, lr}
            (palReadPad(rx_port,rx_pin)==PAL_HIGH)? 1:0;
 8009832:	4c18      	ldr	r4, [pc, #96]	; (8009894 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE13_rx_callback_EPv+0x64>)
 8009834:	e9d4 3200 	ldrd	r3, r2, [r4]
 8009838:	691b      	ldr	r3, [r3, #16]
 800983a:	40d3      	lsrs	r3, r2
          register uint32_t sampled_bit= 
 800983c:	f013 0301 	ands.w	r3, r3, #1
 8009840:	d004      	beq.n	800984c <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE13_rx_callback_EPv+0x1c>
          switch(rx_status)
 8009842:	f8d4 3470 	ldr.w	r3, [r4, #1136]	; 0x470
 8009846:	2b01      	cmp	r3, #1
 8009848:	d005      	beq.n	8009856 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE13_rx_callback_EPv+0x26>
            { reinterpret_cast<uart*>(obj)->_ctx_.rx_interrupt(); }
 800984a:	bd70      	pop	{r4, r5, r6, pc}
          switch(rx_status)
 800984c:	f8d4 2470 	ldr.w	r2, [r4, #1136]	; 0x470
 8009850:	b122      	cbz	r2, 800985c <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE13_rx_callback_EPv+0x2c>
 8009852:	2a01      	cmp	r2, #1
 8009854:	d1f9      	bne.n	800984a <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE13_rx_callback_EPv+0x1a>
              rx_bit=sampled_bit;
 8009856:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
            { reinterpret_cast<uart*>(obj)->_ctx_.rx_interrupt(); }
 800985a:	bd70      	pop	{r4, r5, r6, pc}
                rx_status=rx_status_codes::RECEIVING;
 800985c:	2501      	movs	r5, #1
 800985e:	f8c4 5470 	str.w	r5, [r4, #1136]	; 0x470
                rx_data=rx_bit_counter=rx_bit=0;
 8009862:	f8c4 246c 	str.w	r2, [r4, #1132]	; 0x46c
 8009866:	f8c4 2468 	str.w	r2, [r4, #1128]	; 0x468
 800986a:	f8c4 2464 	str.w	r2, [r4, #1124]	; 0x464
                rx_interrupt_counter=0;
 800986e:	f8c4 2478 	str.w	r2, [r4, #1144]	; 0x478
                if(tx_status==tx_status_codes::IDLE) 
 8009872:	f8d4 6890 	ldr.w	r6, [r4, #2192]	; 0x890
 8009876:	2e00      	cmp	r6, #0
 8009878:	d1e7      	bne.n	800984a <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE13_rx_callback_EPv+0x1a>
 800987a:	2320      	movs	r3, #32
 800987c:	f383 8811 	msr	BASEPRI, r3
                    gptStartContinuousI(TIMER,bit_1st_quarter);
 8009880:	4805      	ldr	r0, [pc, #20]	; (8009898 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE13_rx_callback_EPv+0x68>)
 8009882:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8009884:	f7ff ff74 	bl	8009770 <gptStartContinuousI>
 8009888:	f386 8811 	msr	BASEPRI, r6
                  rx_interrupt_counter=1; }
 800988c:	f8c4 5478 	str.w	r5, [r4, #1144]	; 0x478
            { reinterpret_cast<uart*>(obj)->_ctx_.rx_interrupt(); }
 8009890:	bd70      	pop	{r4, r5, r6, pc}
 8009892:	bf00      	nop
 8009894:	200012a0 	.word	0x200012a0
 8009898:	200011b8 	.word	0x200011b8
 800989c:	00000000 	.word	0x00000000

080098a0 <gptStop>:
 80098a0:	2320      	movs	r3, #32
 80098a2:	f383 8811 	msr	BASEPRI, r3
  osalDbgAssert((gptp->state == GPT_STOP) || (gptp->state == GPT_READY),
 80098a6:	7803      	ldrb	r3, [r0, #0]
 80098a8:	1e5a      	subs	r2, r3, #1
 80098aa:	2a01      	cmp	r2, #1
 80098ac:	d814      	bhi.n	80098d8 <gptStop+0x38>
  if (gptp->state == GPT_READY) {
 80098ae:	2b02      	cmp	r3, #2
void gptStop(GPTDriver *gptp) {
 80098b0:	b410      	push	{r4}
 80098b2:	d016      	beq.n	80098e2 <gptStop+0x42>
 80098b4:	4b24      	ldr	r3, [pc, #144]	; (8009948 <gptStop+0xa8>)
  gptp->state  = GPT_STOP;
 80098b6:	2201      	movs	r2, #1
 80098b8:	7002      	strb	r2, [r0, #0]
 80098ba:	681a      	ldr	r2, [r3, #0]
  gptp->config = NULL;
 80098bc:	2100      	movs	r1, #0
 80098be:	429a      	cmp	r2, r3
 80098c0:	6041      	str	r1, [r0, #4]
 80098c2:	d004      	beq.n	80098ce <gptStop+0x2e>
 80098c4:	6999      	ldr	r1, [r3, #24]
 80098c6:	6892      	ldr	r2, [r2, #8]
 80098c8:	6889      	ldr	r1, [r1, #8]
 80098ca:	4291      	cmp	r1, r2
 80098cc:	d326      	bcc.n	800991c <gptStop+0x7c>
 80098ce:	2300      	movs	r3, #0
 80098d0:	f383 8811 	msr	BASEPRI, r3
}
 80098d4:	bc10      	pop	{r4}
 80098d6:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
 80098d8:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 80098da:	4b1b      	ldr	r3, [pc, #108]	; (8009948 <gptStop+0xa8>)
 80098dc:	4a1b      	ldr	r2, [pc, #108]	; (800994c <gptStop+0xac>)
 80098de:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 80098e0:	e7fe      	b.n	80098e0 <gptStop+0x40>
    if (&GPTD1 == gptp) {
 80098e2:	491b      	ldr	r1, [pc, #108]	; (8009950 <gptStop+0xb0>)
    gptp->tim->CR1  = 0;                        /* Timer disabled.          */
 80098e4:	68c2      	ldr	r2, [r0, #12]
 80098e6:	2300      	movs	r3, #0
    if (&GPTD1 == gptp) {
 80098e8:	4288      	cmp	r0, r1
    gptp->tim->CR1  = 0;                        /* Timer disabled.          */
 80098ea:	6013      	str	r3, [r2, #0]
    gptp->tim->DIER = 0;                        /* All IRQs disabled.       */
 80098ec:	60d3      	str	r3, [r2, #12]
    gptp->tim->SR   = 0;                        /* Clear pending IRQs.      */
 80098ee:	6113      	str	r3, [r2, #16]
    if (&GPTD1 == gptp) {
 80098f0:	d018      	beq.n	8009924 <gptStop+0x84>
    if (&GPTD3 == gptp) {
 80098f2:	4a18      	ldr	r2, [pc, #96]	; (8009954 <gptStop+0xb4>)
 80098f4:	4290      	cmp	r0, r2
 80098f6:	d1dd      	bne.n	80098b4 <gptStop+0x14>
 *
 * @param[in] n         the interrupt number
 */
void nvicDisableVector(uint32_t n) {

  NVIC->ICER[n >> 5U] = 1U << (n & 0x1FU);
 80098f8:	4917      	ldr	r1, [pc, #92]	; (8009958 <gptStop+0xb8>)
      rccDisableTIM3();
 80098fa:	4a18      	ldr	r2, [pc, #96]	; (800995c <gptStop+0xbc>)
 80098fc:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
 8009900:	f8c1 4080 	str.w	r4, [r1, #128]	; 0x80
#if defined(__CORE_CM0_H_GENERIC)
  NVIC->IP[_IP_IDX(n)] = NVIC->IP[_IP_IDX(n)] & ~(0xFFU << _BIT_SHIFT(n));
#else
  NVIC->IP[n] = 0U;
 8009904:	f881 331d 	strb.w	r3, [r1, #797]	; 0x31d
 8009908:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800990a:	f023 0302 	bic.w	r3, r3, #2
 800990e:	6593      	str	r3, [r2, #88]	; 0x58
 8009910:	6f93      	ldr	r3, [r2, #120]	; 0x78
 8009912:	f023 0302 	bic.w	r3, r3, #2
 8009916:	6793      	str	r3, [r2, #120]	; 0x78
 8009918:	6f93      	ldr	r3, [r2, #120]	; 0x78
 800991a:	e7cb      	b.n	80098b4 <gptStop+0x14>
 800991c:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800991e:	4a10      	ldr	r2, [pc, #64]	; (8009960 <gptStop+0xc0>)
 8009920:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 8009922:	e7fe      	b.n	8009922 <gptStop+0x82>
      rccDisableTIM1();
 8009924:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8009928:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800992c:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800992e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009932:	661a      	str	r2, [r3, #96]	; 0x60
 8009934:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 8009938:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800993c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8009940:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    if (&GPTD3 == gptp) {
 8009944:	e7b6      	b.n	80098b4 <gptStop+0x14>
 8009946:	bf00      	nop
 8009948:	20002454 	.word	0x20002454
 800994c:	080128dc 	.word	0x080128dc
 8009950:	200011b8 	.word	0x200011b8
 8009954:	200011c8 	.word	0x200011c8
 8009958:	e000e100 	.word	0xe000e100
 800995c:	40021000 	.word	0x40021000
 8009960:	0801278c 	.word	0x0801278c
	...

08009970 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev>:
            ~uart() { end(); }
 8009970:	b570      	push	{r4, r5, r6, lr}
 8009972:	4d1b      	ldr	r5, [pc, #108]	; (80099e0 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x70>)
 8009974:	4606      	mov	r6, r0
                while(tx_status!=tx_status_codes::IDLE) 
 8009976:	f8d5 3890 	ldr.w	r3, [r5, #2192]	; 0x890
 800997a:	2b00      	cmp	r3, #0
 800997c:	d1fb      	bne.n	8009976 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x6>
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800997e:	2320      	movs	r3, #32
 8009980:	f383 8811 	msr	BASEPRI, r3
 8009984:	4c17      	ldr	r4, [pc, #92]	; (80099e4 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x74>)
  gptStopTimerI(gptp);
 8009986:	4818      	ldr	r0, [pc, #96]	; (80099e8 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x78>)
 8009988:	f7ff fd2a 	bl	80093e0 <gptStopTimerI>
 800998c:	6823      	ldr	r3, [r4, #0]
 800998e:	42a3      	cmp	r3, r4
 8009990:	d004      	beq.n	800999c <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x2c>
 8009992:	69a2      	ldr	r2, [r4, #24]
 8009994:	689b      	ldr	r3, [r3, #8]
 8009996:	6892      	ldr	r2, [r2, #8]
 8009998:	429a      	cmp	r2, r3
 800999a:	d319      	bcc.n	80099d0 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x60>
 800999c:	2300      	movs	r3, #0
 800999e:	f383 8811 	msr	BASEPRI, r3
                gptStopTimer(TIMER); gptStop(TIMER);
 80099a2:	4811      	ldr	r0, [pc, #68]	; (80099e8 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x78>)
 80099a4:	f7ff ff7c 	bl	80098a0 <gptStop>
 80099a8:	2320      	movs	r3, #32
 80099aa:	f383 8811 	msr	BASEPRI, r3
                palDisablePadEvent(rx_port,rx_pin);
 80099ae:	e9d5 0100 	ldrd	r0, r1, [r5]
 80099b2:	f7ff fc6d 	bl	8009290 <_pal_lld_disablepadevent>
 80099b6:	6823      	ldr	r3, [r4, #0]
 80099b8:	42a3      	cmp	r3, r4
 80099ba:	d004      	beq.n	80099c6 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x56>
 80099bc:	69a2      	ldr	r2, [r4, #24]
 80099be:	689b      	ldr	r3, [r3, #8]
 80099c0:	6892      	ldr	r2, [r2, #8]
 80099c2:	429a      	cmp	r2, r3
 80099c4:	d308      	bcc.n	80099d8 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x68>
 80099c6:	2300      	movs	r3, #0
 80099c8:	f383 8811 	msr	BASEPRI, r3
            ~uart() { end(); }
 80099cc:	4630      	mov	r0, r6
 80099ce:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("cpsid i" : : : "memory");
 80099d0:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 80099d2:	4b06      	ldr	r3, [pc, #24]	; (80099ec <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x7c>)
 80099d4:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 80099d6:	e7fe      	b.n	80099d6 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x66>
 80099d8:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 80099da:	4b05      	ldr	r3, [pc, #20]	; (80099f0 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x80>)
 80099dc:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 80099de:	e7fe      	b.n	80099de <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD3EELj256ELj256EED1Ev+0x6e>
 80099e0:	20001b38 	.word	0x20001b38
 80099e4:	20002454 	.word	0x20002454
 80099e8:	200011c8 	.word	0x200011c8
 80099ec:	0801278c 	.word	0x0801278c
 80099f0:	08012780 	.word	0x08012780
	...

08009a00 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev>:
 8009a00:	b570      	push	{r4, r5, r6, lr}
 8009a02:	4d1b      	ldr	r5, [pc, #108]	; (8009a70 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x70>)
 8009a04:	4606      	mov	r6, r0
                while(tx_status!=tx_status_codes::IDLE) 
 8009a06:	f8d5 3890 	ldr.w	r3, [r5, #2192]	; 0x890
 8009a0a:	2b00      	cmp	r3, #0
 8009a0c:	d1fb      	bne.n	8009a06 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x6>
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 8009a0e:	2320      	movs	r3, #32
 8009a10:	f383 8811 	msr	BASEPRI, r3
 8009a14:	4c17      	ldr	r4, [pc, #92]	; (8009a74 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x74>)
 8009a16:	4818      	ldr	r0, [pc, #96]	; (8009a78 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x78>)
 8009a18:	f7ff fce2 	bl	80093e0 <gptStopTimerI>
 8009a1c:	6823      	ldr	r3, [r4, #0]
 8009a1e:	42a3      	cmp	r3, r4
 8009a20:	d004      	beq.n	8009a2c <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x2c>
 8009a22:	69a2      	ldr	r2, [r4, #24]
 8009a24:	689b      	ldr	r3, [r3, #8]
 8009a26:	6892      	ldr	r2, [r2, #8]
 8009a28:	429a      	cmp	r2, r3
 8009a2a:	d319      	bcc.n	8009a60 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x60>
 8009a2c:	2300      	movs	r3, #0
 8009a2e:	f383 8811 	msr	BASEPRI, r3
                gptStopTimer(TIMER); gptStop(TIMER);
 8009a32:	4811      	ldr	r0, [pc, #68]	; (8009a78 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x78>)
 8009a34:	f7ff ff34 	bl	80098a0 <gptStop>
 8009a38:	2320      	movs	r3, #32
 8009a3a:	f383 8811 	msr	BASEPRI, r3
                palDisablePadEvent(rx_port,rx_pin);
 8009a3e:	e9d5 0100 	ldrd	r0, r1, [r5]
 8009a42:	f7ff fc25 	bl	8009290 <_pal_lld_disablepadevent>
 8009a46:	6823      	ldr	r3, [r4, #0]
 8009a48:	42a3      	cmp	r3, r4
 8009a4a:	d004      	beq.n	8009a56 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x56>
 8009a4c:	69a2      	ldr	r2, [r4, #24]
 8009a4e:	689b      	ldr	r3, [r3, #8]
 8009a50:	6892      	ldr	r2, [r2, #8]
 8009a52:	429a      	cmp	r2, r3
 8009a54:	d308      	bcc.n	8009a68 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x68>
 8009a56:	2300      	movs	r3, #0
 8009a58:	f383 8811 	msr	BASEPRI, r3
            ~uart() { end(); }
 8009a5c:	4630      	mov	r0, r6
 8009a5e:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("cpsid i" : : : "memory");
 8009a60:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 8009a62:	4b06      	ldr	r3, [pc, #24]	; (8009a7c <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x7c>)
 8009a64:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 8009a66:	e7fe      	b.n	8009a66 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x66>
 8009a68:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 8009a6a:	4b05      	ldr	r3, [pc, #20]	; (8009a80 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x80>)
 8009a6c:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 8009a6e:	e7fe      	b.n	8009a6e <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EED1Ev+0x6e>
 8009a70:	200012a0 	.word	0x200012a0
 8009a74:	20002454 	.word	0x20002454
 8009a78:	200011b8 	.word	0x200011b8
 8009a7c:	0801278c 	.word	0x0801278c
 8009a80:	08012780 	.word	0x08012780
	...

08009a90 <gptStart>:
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 8009a90:	2320      	movs	r3, #32
 8009a92:	f383 8811 	msr	BASEPRI, r3
  osalDbgAssert((gptp->state == GPT_STOP) || (gptp->state == GPT_READY),
 8009a96:	7803      	ldrb	r3, [r0, #0]
 8009a98:	1e5a      	subs	r2, r3, #1
 8009a9a:	2a01      	cmp	r2, #1
 8009a9c:	d82d      	bhi.n	8009afa <gptStart+0x6a>
  if (gptp->state == GPT_STOP) {
 8009a9e:	2b01      	cmp	r3, #1
void gptStart(GPTDriver *gptp, const GPTConfig *config) {
 8009aa0:	b470      	push	{r4, r5, r6}
  gptp->config = config;
 8009aa2:	6041      	str	r1, [r0, #4]
 8009aa4:	d02e      	beq.n	8009b04 <gptStart+0x74>
  psc = (uint16_t)((gptp->clock / gptp->config->frequency) - 1);
 8009aa6:	6884      	ldr	r4, [r0, #8]
 8009aa8:	680a      	ldr	r2, [r1, #0]
 8009aaa:	fbb4 f3f2 	udiv	r3, r4, r2
 8009aae:	3b01      	subs	r3, #1
 8009ab0:	b29b      	uxth	r3, r3
  osalDbgAssert(((uint32_t)(psc + 1) * gptp->config->frequency) == gptp->clock,
 8009ab2:	fb03 2202 	mla	r2, r3, r2, r2
 8009ab6:	4294      	cmp	r4, r2
 8009ab8:	d11a      	bne.n	8009af0 <gptStart+0x60>
  gptp->tim->DIER = gptp->config->dier &        /* DMA-related DIER bits.   */
 8009aba:	68cc      	ldr	r4, [r1, #12]
  gptp->tim->CR1  = 0;                          /* Initially stopped.       */
 8009abc:	68c2      	ldr	r2, [r0, #12]
  gptp->tim->CR2  = gptp->config->cr2;
 8009abe:	688e      	ldr	r6, [r1, #8]
 8009ac0:	4931      	ldr	r1, [pc, #196]	; (8009b88 <gptStart+0xf8>)
  gptp->tim->CR1  = 0;                          /* Initially stopped.       */
 8009ac2:	2500      	movs	r5, #0
 8009ac4:	6015      	str	r5, [r2, #0]
  gptp->tim->DIER = gptp->config->dier &        /* DMA-related DIER bits.   */
 8009ac6:	f024 04ff 	bic.w	r4, r4, #255	; 0xff
  gptp->tim->CR2  = gptp->config->cr2;
 8009aca:	6056      	str	r6, [r2, #4]
  gptp->state = GPT_READY;
 8009acc:	2602      	movs	r6, #2
  gptp->tim->PSC  = psc;                        /* Prescaler value.         */
 8009ace:	6293      	str	r3, [r2, #40]	; 0x28
  gptp->tim->SR   = 0;                          /* Clear pending IRQs.      */
 8009ad0:	6115      	str	r5, [r2, #16]
  gptp->tim->DIER = gptp->config->dier &        /* DMA-related DIER bits.   */
 8009ad2:	60d4      	str	r4, [r2, #12]
 8009ad4:	7006      	strb	r6, [r0, #0]
 8009ad6:	680b      	ldr	r3, [r1, #0]
 8009ad8:	428b      	cmp	r3, r1
 8009ada:	d004      	beq.n	8009ae6 <gptStart+0x56>
 8009adc:	698a      	ldr	r2, [r1, #24]
 8009ade:	689b      	ldr	r3, [r3, #8]
 8009ae0:	6892      	ldr	r2, [r2, #8]
 8009ae2:	429a      	cmp	r2, r3
 8009ae4:	d333      	bcc.n	8009b4e <gptStart+0xbe>
 8009ae6:	2300      	movs	r3, #0
 8009ae8:	f383 8811 	msr	BASEPRI, r3
}
 8009aec:	bc70      	pop	{r4, r5, r6}
 8009aee:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
 8009af0:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 8009af2:	4b25      	ldr	r3, [pc, #148]	; (8009b88 <gptStart+0xf8>)
 8009af4:	4a25      	ldr	r2, [pc, #148]	; (8009b8c <gptStart+0xfc>)
 8009af6:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 8009af8:	e7fe      	b.n	8009af8 <gptStart+0x68>
 8009afa:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 8009afc:	4b22      	ldr	r3, [pc, #136]	; (8009b88 <gptStart+0xf8>)
 8009afe:	4a24      	ldr	r2, [pc, #144]	; (8009b90 <gptStart+0x100>)
 8009b00:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 8009b02:	e7fe      	b.n	8009b02 <gptStart+0x72>
    if (&GPTD1 == gptp) {
 8009b04:	4b23      	ldr	r3, [pc, #140]	; (8009b94 <gptStart+0x104>)
 8009b06:	4298      	cmp	r0, r3
 8009b08:	d025      	beq.n	8009b56 <gptStart+0xc6>
    if (&GPTD3 == gptp) {
 8009b0a:	4b23      	ldr	r3, [pc, #140]	; (8009b98 <gptStart+0x108>)
 8009b0c:	4298      	cmp	r0, r3
 8009b0e:	d1ca      	bne.n	8009aa6 <gptStart+0x16>
      rccEnableTIM3(true);
 8009b10:	4b22      	ldr	r3, [pc, #136]	; (8009b9c <gptStart+0x10c>)
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 8009b12:	4a23      	ldr	r2, [pc, #140]	; (8009ba0 <gptStart+0x110>)
 8009b14:	6d9c      	ldr	r4, [r3, #88]	; 0x58
      gptp->clock = STM32_TIMCLK1;
 8009b16:	4d23      	ldr	r5, [pc, #140]	; (8009ba4 <gptStart+0x114>)
      rccEnableTIM3(true);
 8009b18:	f044 0402 	orr.w	r4, r4, #2
 8009b1c:	659c      	str	r4, [r3, #88]	; 0x58
 8009b1e:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8009b20:	f044 0402 	orr.w	r4, r4, #2
 8009b24:	679c      	str	r4, [r3, #120]	; 0x78
 8009b26:	6f9c      	ldr	r4, [r3, #120]	; 0x78
      rccResetTIM3();
 8009b28:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8009b2a:	f044 0402 	orr.w	r4, r4, #2
 8009b2e:	639c      	str	r4, [r3, #56]	; 0x38
 8009b30:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8009b32:	f024 0402 	bic.w	r4, r4, #2
 8009b36:	639c      	str	r4, [r3, #56]	; 0x38
 8009b38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b3a:	2470      	movs	r4, #112	; 0x70
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 8009b3c:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 8009b40:	f882 431d 	strb.w	r4, [r2, #797]	; 0x31d
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 8009b44:	f8c2 3180 	str.w	r3, [r2, #384]	; 0x180
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 8009b48:	6013      	str	r3, [r2, #0]
      gptp->clock = STM32_TIMCLK1;
 8009b4a:	6085      	str	r5, [r0, #8]
 8009b4c:	e7ab      	b.n	8009aa6 <gptStart+0x16>
 8009b4e:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 8009b50:	4b15      	ldr	r3, [pc, #84]	; (8009ba8 <gptStart+0x118>)
 8009b52:	62cb      	str	r3, [r1, #44]	; 0x2c
  }
 8009b54:	e7fe      	b.n	8009b54 <gptStart+0xc4>
      rccEnableTIM1(true);
 8009b56:	4b11      	ldr	r3, [pc, #68]	; (8009b9c <gptStart+0x10c>)
      gptp->clock = STM32_TIMCLK2;
 8009b58:	4c12      	ldr	r4, [pc, #72]	; (8009ba4 <gptStart+0x114>)
      rccEnableTIM1(true);
 8009b5a:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8009b5c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009b60:	661a      	str	r2, [r3, #96]	; 0x60
 8009b62:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 8009b66:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009b6a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8009b6e:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
      rccResetTIM1();
 8009b72:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8009b74:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009b78:	641a      	str	r2, [r3, #64]	; 0x40
 8009b7a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8009b7c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009b80:	641a      	str	r2, [r3, #64]	; 0x40
 8009b82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
      gptp->clock = STM32_TIMCLK2;
 8009b84:	6084      	str	r4, [r0, #8]
    if (&GPTD3 == gptp) {
 8009b86:	e78e      	b.n	8009aa6 <gptStart+0x16>
 8009b88:	20002454 	.word	0x20002454
 8009b8c:	080128c0 	.word	0x080128c0
 8009b90:	080128b4 	.word	0x080128b4
 8009b94:	200011b8 	.word	0x200011b8
 8009b98:	200011c8 	.word	0x200011c8
 8009b9c:	40021000 	.word	0x40021000
 8009ba0:	e000e100 	.word	0xe000e100
 8009ba4:	07270e00 	.word	0x07270e00
 8009ba8:	0801278c 	.word	0x0801278c
 8009bac:	00000000 	.word	0x00000000

08009bb0 <stSetAlarm>:
 *
 * @notapi
 */
static inline bool st_lld_is_alarm_active(void) {

  return (bool)((STM32_ST_TIM->DIER & STM32_TIM_DIER_CC1IE) != 0);
 8009bb0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009bb4:	68da      	ldr	r2, [r3, #12]
 *
 * @api
 */
void stSetAlarm(systime_t abstime) {

  osalDbgAssert(stIsAlarmActive() != false, "not active");
 8009bb6:	0792      	lsls	r2, r2, #30
 8009bb8:	d501      	bpl.n	8009bbe <stSetAlarm+0xe>
  STM32_ST_TIM->CCR[0] = (uint32_t)time;
 8009bba:	6358      	str	r0, [r3, #52]	; 0x34

  st_lld_set_alarm(abstime);
}
 8009bbc:	4770      	bx	lr
 8009bbe:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 8009bc0:	4b01      	ldr	r3, [pc, #4]	; (8009bc8 <stSetAlarm+0x18>)
 8009bc2:	4a02      	ldr	r2, [pc, #8]	; (8009bcc <stSetAlarm+0x1c>)
 8009bc4:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 8009bc6:	e7fe      	b.n	8009bc6 <stSetAlarm+0x16>
 8009bc8:	20002454 	.word	0x20002454
 8009bcc:	080128d0 	.word	0x080128d0

08009bd0 <chprintf.constprop.33>:
 * @return              The number of bytes that would have been
 *                      written to @p chp if no stream error occurs
 *
 * @api
 */
int chprintf(BaseSequentialStream *chp, const char *fmt, ...) {
 8009bd0:	b40e      	push	{r1, r2, r3}
 8009bd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009bd6:	b086      	sub	sp, #24
 8009bd8:	ae0f      	add	r6, sp, #60	; 0x3c
  int n = 0;
 8009bda:	f04f 0800 	mov.w	r8, #0
int chprintf(BaseSequentialStream *chp, const char *fmt, ...) {
 8009bde:	f856 2b04 	ldr.w	r2, [r6], #4
  va_list ap;
  int formatted_bytes;

  va_start(ap, fmt);
 8009be2:	9602      	str	r6, [sp, #8]
    c = *fmt++;
 8009be4:	4617      	mov	r7, r2
 8009be6:	f8df 924c 	ldr.w	r9, [pc, #588]	; 8009e34 <chprintf.constprop.33+0x264>
 8009bea:	f817 1b01 	ldrb.w	r1, [r7], #1
    if (c == 0)
 8009bee:	b171      	cbz	r1, 8009c0e <chprintf.constprop.33+0x3e>
    if (c != '%') {
 8009bf0:	2925      	cmp	r1, #37	; 0x25
 8009bf2:	d012      	beq.n	8009c1a <chprintf.constprop.33+0x4a>
      streamPut(chp, (uint8_t)c);
 8009bf4:	f8d9 3000 	ldr.w	r3, [r9]
 8009bf8:	488e      	ldr	r0, [pc, #568]	; (8009e34 <chprintf.constprop.33+0x264>)
 8009bfa:	68db      	ldr	r3, [r3, #12]
      n++;
 8009bfc:	f108 0801 	add.w	r8, r8, #1
      streamPut(chp, (uint8_t)c);
 8009c00:	4798      	blx	r3
int chprintf(BaseSequentialStream *chp, const char *fmt, ...) {
 8009c02:	463a      	mov	r2, r7
    c = *fmt++;
 8009c04:	4617      	mov	r7, r2
 8009c06:	f817 1b01 	ldrb.w	r1, [r7], #1
    if (c == 0)
 8009c0a:	2900      	cmp	r1, #0
 8009c0c:	d1f0      	bne.n	8009bf0 <chprintf.constprop.33+0x20>
  formatted_bytes = chvprintf(chp, fmt, ap);
  va_end(ap);

  return formatted_bytes;
}
 8009c0e:	4640      	mov	r0, r8
 8009c10:	b006      	add	sp, #24
 8009c12:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c16:	b003      	add	sp, #12
 8009c18:	4770      	bx	lr
    if (*fmt == '-') {
 8009c1a:	7853      	ldrb	r3, [r2, #1]
 8009c1c:	2b2d      	cmp	r3, #45	; 0x2d
 8009c1e:	bf03      	ittte	eq
 8009c20:	7893      	ldrbeq	r3, [r2, #2]
      fmt++;
 8009c22:	1c97      	addeq	r7, r2, #2
      left_align = TRUE;
 8009c24:	f04f 0c01 	moveq.w	ip, #1
    left_align = FALSE;
 8009c28:	f04f 0c00 	movne.w	ip, #0
    if (*fmt == '0') {
 8009c2c:	2b30      	cmp	r3, #48	; 0x30
      filler = '0';
 8009c2e:	bf03      	ittte	eq
 8009c30:	469a      	moveq	sl, r3
    if (*fmt == '0') {
 8009c32:	787b      	ldrbeq	r3, [r7, #1]
      fmt++;
 8009c34:	3701      	addeq	r7, #1
    filler = ' ';
 8009c36:	f04f 0a20 	movne.w	sl, #32
 8009c3a:	1c78      	adds	r0, r7, #1
    width = 0;
 8009c3c:	2100      	movs	r1, #0
 8009c3e:	e007      	b.n	8009c50 <chprintf.constprop.33+0x80>
        c = va_arg(ap, int);
 8009c40:	f854 2b04 	ldr.w	r2, [r4], #4
 8009c44:	b2d2      	uxtb	r2, r2
 8009c46:	4626      	mov	r6, r4
 8009c48:	f810 3b01 	ldrb.w	r3, [r0], #1
      width = width * 10 + c;
 8009c4c:	eb02 0145 	add.w	r1, r2, r5, lsl #1
      if (c >= '0' && c <= '9')
 8009c50:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8009c54:	b2d2      	uxtb	r2, r2
 8009c56:	2a09      	cmp	r2, #9
        c = va_arg(ap, int);
 8009c58:	4634      	mov	r4, r6
      c = *fmt++;
 8009c5a:	4607      	mov	r7, r0
      width = width * 10 + c;
 8009c5c:	eb01 0581 	add.w	r5, r1, r1, lsl #2
      if (c >= '0' && c <= '9')
 8009c60:	d9f2      	bls.n	8009c48 <chprintf.constprop.33+0x78>
      else if (c == '*')
 8009c62:	2b2a      	cmp	r3, #42	; 0x2a
 8009c64:	d0ec      	beq.n	8009c40 <chprintf.constprop.33+0x70>
    if (c == '.') {
 8009c66:	2b2e      	cmp	r3, #46	; 0x2e
    precision = 0;
 8009c68:	f04f 0000 	mov.w	r0, #0
    if (c == '.') {
 8009c6c:	d045      	beq.n	8009cfa <chprintf.constprop.33+0x12a>
    if (c == 'l' || c == 'L') {
 8009c6e:	f003 02df 	and.w	r2, r3, #223	; 0xdf
 8009c72:	2a4c      	cmp	r2, #76	; 0x4c
 8009c74:	d051      	beq.n	8009d1a <chprintf.constprop.33+0x14a>
    switch (c) {
 8009c76:	f1a3 0444 	sub.w	r4, r3, #68	; 0x44
 8009c7a:	2c34      	cmp	r4, #52	; 0x34
 8009c7c:	f200 8144 	bhi.w	8009f08 <chprintf.constprop.33+0x338>
 8009c80:	e8df f014 	tbh	[pc, r4, lsl #1]
 8009c84:	01420115 	.word	0x01420115
 8009c88:	01420142 	.word	0x01420142
 8009c8c:	01150142 	.word	0x01150142
 8009c90:	01420142 	.word	0x01420142
 8009c94:	01420142 	.word	0x01420142
 8009c98:	018a0142 	.word	0x018a0142
 8009c9c:	01420142 	.word	0x01420142
 8009ca0:	01420142 	.word	0x01420142
 8009ca4:	01840142 	.word	0x01840142
 8009ca8:	01420142 	.word	0x01420142
 8009cac:	01420188 	.word	0x01420188
 8009cb0:	01420142 	.word	0x01420142
 8009cb4:	01420142 	.word	0x01420142
 8009cb8:	01420142 	.word	0x01420142
 8009cbc:	01420142 	.word	0x01420142
 8009cc0:	00b60142 	.word	0x00b60142
 8009cc4:	01420115 	.word	0x01420115
 8009cc8:	01420142 	.word	0x01420142
 8009ccc:	01150142 	.word	0x01150142
 8009cd0:	01420142 	.word	0x01420142
 8009cd4:	01420142 	.word	0x01420142
 8009cd8:	018a0142 	.word	0x018a0142
 8009cdc:	01420142 	.word	0x01420142
 8009ce0:	008c0142 	.word	0x008c0142
 8009ce4:	01840142 	.word	0x01840142
 8009ce8:	01420142 	.word	0x01420142
 8009cec:	0188      	.short	0x0188
          c = va_arg(ap, int);
 8009cee:	f854 2b04 	ldr.w	r2, [r4], #4
 8009cf2:	b2d2      	uxtb	r2, r2
 8009cf4:	4626      	mov	r6, r4
        precision += c;
 8009cf6:	eb02 0045 	add.w	r0, r2, r5, lsl #1
        c = *fmt++;
 8009cfa:	f817 3b01 	ldrb.w	r3, [r7], #1
        if (c >= '0' && c <= '9')
 8009cfe:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8009d02:	b2d2      	uxtb	r2, r2
 8009d04:	2a09      	cmp	r2, #9
          c = va_arg(ap, int);
 8009d06:	4634      	mov	r4, r6
        precision *= 10;
 8009d08:	eb00 0580 	add.w	r5, r0, r0, lsl #2
        if (c >= '0' && c <= '9')
 8009d0c:	d9f3      	bls.n	8009cf6 <chprintf.constprop.33+0x126>
        else if (c == '*')
 8009d0e:	2b2a      	cmp	r3, #42	; 0x2a
 8009d10:	d0ed      	beq.n	8009cee <chprintf.constprop.33+0x11e>
    if (c == 'l' || c == 'L') {
 8009d12:	f003 02df 	and.w	r2, r3, #223	; 0xdf
 8009d16:	2a4c      	cmp	r2, #76	; 0x4c
 8009d18:	d1ad      	bne.n	8009c76 <chprintf.constprop.33+0xa6>
      if (*fmt)
 8009d1a:	783a      	ldrb	r2, [r7, #0]
 8009d1c:	2a00      	cmp	r2, #0
 8009d1e:	f000 80f3 	beq.w	8009f08 <chprintf.constprop.33+0x338>
    switch (c) {
 8009d22:	f1a2 0344 	sub.w	r3, r2, #68	; 0x44
 8009d26:	3701      	adds	r7, #1
 8009d28:	2b34      	cmp	r3, #52	; 0x34
 8009d2a:	f200 80ec 	bhi.w	8009f06 <chprintf.constprop.33+0x336>
 8009d2e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8009d32:	00be      	.short	0x00be
 8009d34:	00ea00ea 	.word	0x00ea00ea
 8009d38:	00ea00ea 	.word	0x00ea00ea
 8009d3c:	00ea00be 	.word	0x00ea00be
 8009d40:	00ea00ea 	.word	0x00ea00ea
 8009d44:	00ea00ea 	.word	0x00ea00ea
 8009d48:	00ea00fc 	.word	0x00ea00fc
 8009d4c:	00ea00ea 	.word	0x00ea00ea
 8009d50:	00ea00ea 	.word	0x00ea00ea
 8009d54:	00ea0125 	.word	0x00ea0125
 8009d58:	012900ea 	.word	0x012900ea
 8009d5c:	00ea00ea 	.word	0x00ea00ea
 8009d60:	00ea00ea 	.word	0x00ea00ea
 8009d64:	00ea00ea 	.word	0x00ea00ea
 8009d68:	00ea00ea 	.word	0x00ea00ea
 8009d6c:	00ea00ea 	.word	0x00ea00ea
 8009d70:	00be005f 	.word	0x00be005f
 8009d74:	00ea00ea 	.word	0x00ea00ea
 8009d78:	00ea00ea 	.word	0x00ea00ea
 8009d7c:	00ea00be 	.word	0x00ea00be
 8009d80:	00ea00ea 	.word	0x00ea00ea
 8009d84:	00ea00ea 	.word	0x00ea00ea
 8009d88:	00ea00fc 	.word	0x00ea00fc
 8009d8c:	00ea00ea 	.word	0x00ea00ea
 8009d90:	00ea0035 	.word	0x00ea0035
 8009d94:	00ea0125 	.word	0x00ea0125
 8009d98:	012900ea 	.word	0x012900ea
      if ((s = va_arg(ap, char *)) == 0)
 8009d9c:	f856 5b04 	ldr.w	r5, [r6], #4
 8009da0:	2d00      	cmp	r5, #0
 8009da2:	f000 8114 	beq.w	8009fce <chprintf.constprop.33+0x3fe>
 8009da6:	782b      	ldrb	r3, [r5, #0]
        precision = 32767;
 8009da8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8009dac:	2800      	cmp	r0, #0
 8009dae:	bf08      	it	eq
 8009db0:	4610      	moveq	r0, r2
      for (p = s; *p && (--precision >= 0); p++)
 8009db2:	2b00      	cmp	r3, #0
 8009db4:	f000 8112 	beq.w	8009fdc <chprintf.constprop.33+0x40c>
    precision = 0;
 8009db8:	462c      	mov	r4, r5
 8009dba:	e001      	b.n	8009dc0 <chprintf.constprop.33+0x1f0>
      for (p = s; *p && (--precision >= 0); p++)
 8009dbc:	42c3      	cmn	r3, r0
 8009dbe:	d405      	bmi.n	8009dcc <chprintf.constprop.33+0x1fc>
 8009dc0:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 8009dc4:	43e3      	mvns	r3, r4
 8009dc6:	442b      	add	r3, r5
 8009dc8:	2a00      	cmp	r2, #0
 8009dca:	d1f7      	bne.n	8009dbc <chprintf.constprop.33+0x1ec>
 8009dcc:	1b64      	subs	r4, r4, r5
    if ((width -= i) < 0)
 8009dce:	ebb1 0b04 	subs.w	fp, r1, r4
 8009dd2:	f104 32ff 	add.w	r2, r4, #4294967295	; 0xffffffff
      filler = ' ';
 8009dd6:	f04f 0a20 	mov.w	sl, #32
    if ((width -= i) < 0)
 8009dda:	d515      	bpl.n	8009e08 <chprintf.constprop.33+0x238>
    if (left_align == FALSE)
 8009ddc:	f1bc 0f00 	cmp.w	ip, #0
 8009de0:	f040 809c 	bne.w	8009f1c <chprintf.constprop.33+0x34c>
    while (--i >= 0) {
 8009de4:	2a00      	cmp	r2, #0
      width = -width;
 8009de6:	bfa8      	it	ge
 8009de8:	46e3      	movge	fp, ip
    while (--i >= 0) {
 8009dea:	da38      	bge.n	8009e5e <chprintf.constprop.33+0x28e>
int chprintf(BaseSequentialStream *chp, const char *fmt, ...) {
 8009dec:	463a      	mov	r2, r7
 8009dee:	e709      	b.n	8009c04 <chprintf.constprop.33+0x34>
      *p++ = va_arg(ap, int);
 8009df0:	f856 3b04 	ldr.w	r3, [r6], #4
 8009df4:	f88d 300c 	strb.w	r3, [sp, #12]
 8009df8:	2200      	movs	r2, #0
 8009dfa:	2401      	movs	r4, #1
      filler = ' ';
 8009dfc:	f04f 0a20 	mov.w	sl, #32
    s = tmpbuf;
 8009e00:	ad03      	add	r5, sp, #12
    if ((width -= i) < 0)
 8009e02:	ebb1 0b04 	subs.w	fp, r1, r4
 8009e06:	d4e9      	bmi.n	8009ddc <chprintf.constprop.33+0x20c>
    if (left_align == FALSE)
 8009e08:	f1bc 0f00 	cmp.w	ip, #0
 8009e0c:	f040 8083 	bne.w	8009f16 <chprintf.constprop.33+0x346>
      width = -width;
 8009e10:	1a64      	subs	r4, r4, r1
    if (width < 0) {
 8009e12:	f1bb 0f00 	cmp.w	fp, #0
 8009e16:	d07d      	beq.n	8009f14 <chprintf.constprop.33+0x344>
      if (*s == '-' && filler == '0') {
 8009e18:	7829      	ldrb	r1, [r5, #0]
 8009e1a:	f8d9 3000 	ldr.w	r3, [r9]
 8009e1e:	292d      	cmp	r1, #45	; 0x2d
 8009e20:	68db      	ldr	r3, [r3, #12]
 8009e22:	f000 80c4 	beq.w	8009fae <chprintf.constprop.33+0x3de>
    if (width < 0) {
 8009e26:	46c3      	mov	fp, r8
 8009e28:	9401      	str	r4, [sp, #4]
 8009e2a:	46b8      	mov	r8, r7
 8009e2c:	4637      	mov	r7, r6
 8009e2e:	4616      	mov	r6, r2
 8009e30:	e005      	b.n	8009e3e <chprintf.constprop.33+0x26e>
 8009e32:	bf00      	nop
 8009e34:	200011d8 	.word	0x200011d8
 8009e38:	f8d9 3000 	ldr.w	r3, [r9]
 8009e3c:	68db      	ldr	r3, [r3, #12]
        streamPut(chp, (uint8_t)filler);
 8009e3e:	4651      	mov	r1, sl
 8009e40:	4648      	mov	r0, r9
 8009e42:	4798      	blx	r3
      } while (++width != 0);
 8009e44:	3401      	adds	r4, #1
 8009e46:	d1f7      	bne.n	8009e38 <chprintf.constprop.33+0x268>
 8009e48:	4632      	mov	r2, r6
 8009e4a:	463e      	mov	r6, r7
 8009e4c:	4647      	mov	r7, r8
 8009e4e:	46d8      	mov	r8, fp
 8009e50:	46a3      	mov	fp, r4
 8009e52:	9c01      	ldr	r4, [sp, #4]
    while (--i >= 0) {
 8009e54:	2a00      	cmp	r2, #0
 8009e56:	eba8 0804 	sub.w	r8, r8, r4
 8009e5a:	f6ff aed2 	blt.w	8009c02 <chprintf.constprop.33+0x32>
 8009e5e:	f8cd 8004 	str.w	r8, [sp, #4]
 8009e62:	18ac      	adds	r4, r5, r2
 8009e64:	46b8      	mov	r8, r7
 8009e66:	4637      	mov	r7, r6
 8009e68:	4616      	mov	r6, r2
      streamPut(chp, (uint8_t)*s++);
 8009e6a:	f8d9 3000 	ldr.w	r3, [r9]
 8009e6e:	f815 1b01 	ldrb.w	r1, [r5], #1
 8009e72:	68db      	ldr	r3, [r3, #12]
 8009e74:	4648      	mov	r0, r9
 8009e76:	4798      	blx	r3
 8009e78:	1b63      	subs	r3, r4, r5
    while (--i >= 0) {
 8009e7a:	2b00      	cmp	r3, #0
 8009e7c:	daf5      	bge.n	8009e6a <chprintf.constprop.33+0x29a>
 8009e7e:	4632      	mov	r2, r6
 8009e80:	463e      	mov	r6, r7
 8009e82:	4647      	mov	r7, r8
 8009e84:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8009e88:	f108 0801 	add.w	r8, r8, #1
 8009e8c:	4490      	add	r8, r2
    while (width) {
 8009e8e:	f1bb 0f00 	cmp.w	fp, #0
 8009e92:	f43f aeb6 	beq.w	8009c02 <chprintf.constprop.33+0x32>
 8009e96:	465c      	mov	r4, fp
      streamPut(chp, (uint8_t)filler);
 8009e98:	f8d9 3000 	ldr.w	r3, [r9]
 8009e9c:	4651      	mov	r1, sl
 8009e9e:	68db      	ldr	r3, [r3, #12]
 8009ea0:	4648      	mov	r0, r9
 8009ea2:	4798      	blx	r3
    while (width) {
 8009ea4:	3c01      	subs	r4, #1
 8009ea6:	d1f7      	bne.n	8009e98 <chprintf.constprop.33+0x2c8>
 8009ea8:	44d8      	add	r8, fp
int chprintf(BaseSequentialStream *chp, const char *fmt, ...) {
 8009eaa:	463a      	mov	r2, r7
 8009eac:	e6aa      	b.n	8009c04 <chprintf.constprop.33+0x34>
        l = va_arg(ap, int);
 8009eae:	f8d6 e000 	ldr.w	lr, [r6]
 8009eb2:	1d33      	adds	r3, r6, #4
      if (l < 0) {
 8009eb4:	f1be 0f00 	cmp.w	lr, #0
        l = va_arg(ap, int);
 8009eb8:	461e      	mov	r6, r3
      if (l < 0) {
 8009eba:	db6f      	blt.n	8009f9c <chprintf.constprop.33+0x3cc>
    p = tmpbuf;
 8009ebc:	ad03      	add	r5, sp, #12
 8009ebe:	462b      	mov	r3, r5
  q = p + MAX_FILLER;
 8009ec0:	f103 020b 	add.w	r2, r3, #11
 8009ec4:	9201      	str	r2, [sp, #4]
 8009ec6:	4614      	mov	r4, r2
    i = (int)(l % radix);
 8009ec8:	f8df b138 	ldr.w	fp, [pc, #312]	; 800a004 <chprintf.constprop.33+0x434>
 8009ecc:	e000      	b.n	8009ed0 <chprintf.constprop.33+0x300>
  } while ((ll /= radix) != 0);
 8009ece:	4686      	mov	lr, r0
    i = (int)(l % radix);
 8009ed0:	fbab 200e 	umull	r2, r0, fp, lr
 8009ed4:	08c0      	lsrs	r0, r0, #3
 8009ed6:	eb00 0280 	add.w	r2, r0, r0, lsl #2
 8009eda:	ebae 0242 	sub.w	r2, lr, r2, lsl #1
    i += '0';
 8009ede:	3230      	adds	r2, #48	; 0x30
    *--q = i;
 8009ee0:	b2d2      	uxtb	r2, r2
  } while ((ll /= radix) != 0);
 8009ee2:	f1be 0f09 	cmp.w	lr, #9
    *--q = i;
 8009ee6:	f804 2d01 	strb.w	r2, [r4, #-1]!
  } while ((ll /= radix) != 0);
 8009eea:	dcf0      	bgt.n	8009ece <chprintf.constprop.33+0x2fe>
  i = (int)(p + MAX_FILLER - q);
 8009eec:	9801      	ldr	r0, [sp, #4]
 8009eee:	1b00      	subs	r0, r0, r4
 8009ef0:	4418      	add	r0, r3
 8009ef2:	e001      	b.n	8009ef8 <chprintf.constprop.33+0x328>
 8009ef4:	f814 2f01 	ldrb.w	r2, [r4, #1]!
    *p++ = *q++;
 8009ef8:	f803 2b01 	strb.w	r2, [r3], #1
  while (--i);
 8009efc:	4283      	cmp	r3, r0
 8009efe:	d1f9      	bne.n	8009ef4 <chprintf.constprop.33+0x324>
 8009f00:	1b5c      	subs	r4, r3, r5
 8009f02:	1e62      	subs	r2, r4, #1
 8009f04:	e77d      	b.n	8009e02 <chprintf.constprop.33+0x232>
    switch (c) {
 8009f06:	4613      	mov	r3, r2
      *p++ = c;
 8009f08:	f88d 300c 	strb.w	r3, [sp, #12]
 8009f0c:	2200      	movs	r2, #0
 8009f0e:	2401      	movs	r4, #1
    s = tmpbuf;
 8009f10:	ad03      	add	r5, sp, #12
 8009f12:	e776      	b.n	8009e02 <chprintf.constprop.33+0x232>
      width = -width;
 8009f14:	46a3      	mov	fp, r4
    while (--i >= 0) {
 8009f16:	2a00      	cmp	r2, #0
 8009f18:	daa1      	bge.n	8009e5e <chprintf.constprop.33+0x28e>
 8009f1a:	e7b8      	b.n	8009e8e <chprintf.constprop.33+0x2be>
 8009f1c:	2a00      	cmp	r2, #0
      width = 0;
 8009f1e:	bfa8      	it	ge
 8009f20:	f04f 0b00 	movge.w	fp, #0
    while (--i >= 0) {
 8009f24:	da9b      	bge.n	8009e5e <chprintf.constprop.33+0x28e>
int chprintf(BaseSequentialStream *chp, const char *fmt, ...) {
 8009f26:	463a      	mov	r2, r7
 8009f28:	e66c      	b.n	8009c04 <chprintf.constprop.33+0x34>
 8009f2a:	f856 0b04 	ldr.w	r0, [r6], #4
    switch (c) {
 8009f2e:	2508      	movs	r5, #8
  q = p + MAX_FILLER;
 8009f30:	f10d 0317 	add.w	r3, sp, #23
 8009f34:	e000      	b.n	8009f38 <chprintf.constprop.33+0x368>
  } while ((ll /= radix) != 0);
 8009f36:	4673      	mov	r3, lr
    i = (int)(l % radix);
 8009f38:	4604      	mov	r4, r0
 8009f3a:	fbb0 f0f5 	udiv	r0, r0, r5
 8009f3e:	fb05 4b10 	mls	fp, r5, r0, r4
    i += '0';
 8009f42:	f10b 0230 	add.w	r2, fp, #48	; 0x30
    if (i > '9')
 8009f46:	2a39      	cmp	r2, #57	; 0x39
      i += 'A' - '0' - 10;
 8009f48:	bfc8      	it	gt
 8009f4a:	f10b 0237 	addgt.w	r2, fp, #55	; 0x37
    *--q = i;
 8009f4e:	b2d2      	uxtb	r2, r2
  } while ((ll /= radix) != 0);
 8009f50:	42ac      	cmp	r4, r5
    *--q = i;
 8009f52:	f103 3eff 	add.w	lr, r3, #4294967295	; 0xffffffff
 8009f56:	f803 2c01 	strb.w	r2, [r3, #-1]
  } while ((ll /= radix) != 0);
 8009f5a:	d2ec      	bcs.n	8009f36 <chprintf.constprop.33+0x366>
  i = (int)(p + MAX_FILLER - q);
 8009f5c:	f10d 0017 	add.w	r0, sp, #23
 8009f60:	eba0 040e 	sub.w	r4, r0, lr
 8009f64:	ad03      	add	r5, sp, #12
 8009f66:	4628      	mov	r0, r5
 8009f68:	44a6      	add	lr, r4
 8009f6a:	e001      	b.n	8009f70 <chprintf.constprop.33+0x3a0>
 8009f6c:	f813 2b01 	ldrb.w	r2, [r3], #1
    *p++ = *q++;
 8009f70:	f800 2b01 	strb.w	r2, [r0], #1
  while (--i);
 8009f74:	4573      	cmp	r3, lr
 8009f76:	d1f9      	bne.n	8009f6c <chprintf.constprop.33+0x39c>
 8009f78:	1e62      	subs	r2, r4, #1
 8009f7a:	e742      	b.n	8009e02 <chprintf.constprop.33+0x232>
 8009f7c:	f856 0b04 	ldr.w	r0, [r6], #4
    switch (c) {
 8009f80:	250a      	movs	r5, #10
 8009f82:	e7d5      	b.n	8009f30 <chprintf.constprop.33+0x360>
 8009f84:	f856 0b04 	ldr.w	r0, [r6], #4
 8009f88:	2510      	movs	r5, #16
 8009f8a:	e7d1      	b.n	8009f30 <chprintf.constprop.33+0x360>
 8009f8c:	250a      	movs	r5, #10
 8009f8e:	f856 0b04 	ldr.w	r0, [r6], #4
 8009f92:	e7cd      	b.n	8009f30 <chprintf.constprop.33+0x360>
 8009f94:	2510      	movs	r5, #16
 8009f96:	e7fa      	b.n	8009f8e <chprintf.constprop.33+0x3be>
 8009f98:	2508      	movs	r5, #8
 8009f9a:	e7f8      	b.n	8009f8e <chprintf.constprop.33+0x3be>
        *p++ = '-';
 8009f9c:	232d      	movs	r3, #45	; 0x2d
 8009f9e:	f88d 300c 	strb.w	r3, [sp, #12]
        l = -l;
 8009fa2:	f1ce 0e00 	rsb	lr, lr, #0
        *p++ = '-';
 8009fa6:	f10d 030d 	add.w	r3, sp, #13
 8009faa:	ad03      	add	r5, sp, #12
 8009fac:	e788      	b.n	8009ec0 <chprintf.constprop.33+0x2f0>
      if (*s == '-' && filler == '0') {
 8009fae:	f1ba 0f30 	cmp.w	sl, #48	; 0x30
 8009fb2:	f47f af38 	bne.w	8009e26 <chprintf.constprop.33+0x256>
        streamPut(chp, (uint8_t)*s++);
 8009fb6:	4648      	mov	r0, r9
 8009fb8:	9201      	str	r2, [sp, #4]
 8009fba:	4798      	blx	r3
 8009fbc:	f8d9 3000 	ldr.w	r3, [r9]
 8009fc0:	9a01      	ldr	r2, [sp, #4]
 8009fc2:	68db      	ldr	r3, [r3, #12]
 8009fc4:	f108 0801 	add.w	r8, r8, #1
 8009fc8:	3501      	adds	r5, #1
 8009fca:	3a01      	subs	r2, #1
 8009fcc:	e72b      	b.n	8009e26 <chprintf.constprop.33+0x256>
        s = "(null)";
 8009fce:	4d0c      	ldr	r5, [pc, #48]	; (800a000 <chprintf.constprop.33+0x430>)
      if (precision == 0)
 8009fd0:	2800      	cmp	r0, #0
 8009fd2:	f47f aef1 	bne.w	8009db8 <chprintf.constprop.33+0x1e8>
        precision = 32767;
 8009fd6:	f647 70ff 	movw	r0, #32767	; 0x7fff
 8009fda:	e6ed      	b.n	8009db8 <chprintf.constprop.33+0x1e8>
    if (left_align == FALSE)
 8009fdc:	f1bc 0f00 	cmp.w	ip, #0
 8009fe0:	d106      	bne.n	8009ff0 <chprintf.constprop.33+0x420>
      width = -width;
 8009fe2:	424c      	negs	r4, r1
    if (width < 0) {
 8009fe4:	b141      	cbz	r1, 8009ff8 <chprintf.constprop.33+0x428>
      filler = ' ';
 8009fe6:	f04f 0a20 	mov.w	sl, #32
    if (width < 0) {
 8009fea:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009fee:	e713      	b.n	8009e18 <chprintf.constprop.33+0x248>
    if (left_align == FALSE)
 8009ff0:	468b      	mov	fp, r1
      filler = ' ';
 8009ff2:	f04f 0a20 	mov.w	sl, #32
 8009ff6:	e74a      	b.n	8009e8e <chprintf.constprop.33+0x2be>
      width = -width;
 8009ff8:	46a3      	mov	fp, r4
      filler = ' ';
 8009ffa:	f04f 0a20 	mov.w	sl, #32
 8009ffe:	e746      	b.n	8009e8e <chprintf.constprop.33+0x2be>
 800a000:	080135d4 	.word	0x080135d4
 800a004:	cccccccd 	.word	0xcccccccd
	...

0800a010 <chSchGoSleepS>:
  thread_t *otp = currp;
 800a010:	4b08      	ldr	r3, [pc, #32]	; (800a034 <chSchGoSleepS+0x24>)
 800a012:	6999      	ldr	r1, [r3, #24]
  thread_t *tp = tqp->next;
 800a014:	681a      	ldr	r2, [r3, #0]
void chSchGoSleepS(tstate_t newstate) {
 800a016:	b410      	push	{r4}
  otp->state = newstate;
 800a018:	f881 0020 	strb.w	r0, [r1, #32]
  tqp->next             = tp->queue.next;
 800a01c:	6810      	ldr	r0, [r2, #0]
 800a01e:	6018      	str	r0, [r3, #0]
  currp->state = CH_STATE_CURRENT;
 800a020:	2401      	movs	r4, #1
  tqp->next->queue.prev = (thread_t *)tqp;
 800a022:	6043      	str	r3, [r0, #4]
 800a024:	f882 4020 	strb.w	r4, [r2, #32]
  chSysSwitch(currp, otp);
 800a028:	4610      	mov	r0, r2
}
 800a02a:	bc10      	pop	{r4}
  currp = queue_fifo_remove(&ch.rlist.queue);
 800a02c:	619a      	str	r2, [r3, #24]
  chSysSwitch(currp, otp);
 800a02e:	f7f6 b957 	b.w	80002e0 <_port_switch>
 800a032:	bf00      	nop
 800a034:	20002454 	.word	0x20002454
	...

0800a040 <chSchGoSleepTimeoutS>:
msg_t chSchGoSleepTimeoutS(tstate_t newstate, sysinterval_t timeout) {
 800a040:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (TIME_INFINITE != timeout) {
 800a044:	1c4b      	adds	r3, r1, #1
msg_t chSchGoSleepTimeoutS(tstate_t newstate, sysinterval_t timeout) {
 800a046:	b086      	sub	sp, #24
  if (TIME_INFINITE != timeout) {
 800a048:	d056      	beq.n	800a0f8 <chSchGoSleepTimeoutS+0xb8>
    chVTDoSetI(&vt, timeout, wakeup, currp);
 800a04a:	4d49      	ldr	r5, [pc, #292]	; (800a170 <chSchGoSleepTimeoutS+0x130>)
    if (delay < (sysinterval_t)CH_CFG_ST_TIMEDELTA) {
      delay = (sysinterval_t)CH_CFG_ST_TIMEDELTA;
    }

    /* Special case where the timers list is empty.*/
    if (&ch.vtlist == (virtual_timers_list_t *)ch.vtlist.next) {
 800a04c:	462e      	mov	r6, r5
 800a04e:	2902      	cmp	r1, #2
 800a050:	f856 4f1c 	ldr.w	r4, [r6, #28]!
  vtp->par = par;
 800a054:	69ab      	ldr	r3, [r5, #24]
 800a056:	9305      	str	r3, [sp, #20]
  return (systime_t)STM32_ST_TIM->CNT;
 800a058:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800a05c:	4607      	mov	r7, r0
void chVTDoSetI(virtual_timer_t *vtp, sysinterval_t delay,
 800a05e:	bf38      	it	cc
 800a060:	2102      	movcc	r1, #2
  vtp->func = vtfunc;
 800a062:	4844      	ldr	r0, [pc, #272]	; (800a174 <chSchGoSleepTimeoutS+0x134>)
 800a064:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800a066:	9004      	str	r0, [sp, #16]
    if (&ch.vtlist == (virtual_timers_list_t *)ch.vtlist.next) {
 800a068:	42b4      	cmp	r4, r6
 800a06a:	d04d      	beq.n	800a108 <chSchGoSleepTimeoutS+0xc8>
    /* Pointer to the first element in the delta list, which is non-empty.*/
    p = ch.vtlist.next;

    /* Delay as delta from 'lasttime'. Note, it can overflow and the value
       becomes lower than 'now'.*/
    delta = chTimeDiffX(ch.vtlist.lasttime, now) + delay;
 800a06c:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800a06e:	68a2      	ldr	r2, [r4, #8]
 */
static inline sysinterval_t chTimeDiffX(systime_t start, systime_t end) {

  /*lint -save -e9033 [10.8] This cast is required by the operation, it is
    known that the destination type can be wider.*/
  return (sysinterval_t)((systime_t)(end - start));
 800a070:	1a1b      	subs	r3, r3, r0
 800a072:	1859      	adds	r1, r3, r1

    if (delta < chTimeDiffX(ch.vtlist.lasttime, now)) {
 800a074:	d335      	bcc.n	800a0e2 <chSchGoSleepTimeoutS+0xa2>
      /* Scenario where a very large delay excedeed the numeric range, it
         requires a special handling. We need to skip the first element and
         adjust the delta to wrap back in the previous numeric range.*/
      delta -= p->delta;
      p = p->next;
 800a076:	6824      	ldr	r4, [r4, #0]
      delta -= p->delta;
 800a078:	1a89      	subs	r1, r1, r2
 800a07a:	68a2      	ldr	r2, [r4, #8]
  p = ch.vtlist.next;
#endif /* CH_CFG_ST_TIMEDELTA == 0 */

  /* The delta list is scanned in order to find the correct position for
     this timer. */
  while (p->delta < delta) {
 800a07c:	428a      	cmp	r2, r1
    /* Debug assert if the timer is already in the list.*/
    chDbgAssert(p != vtp, "timer already armed");
 800a07e:	f10d 0804 	add.w	r8, sp, #4
  while (p->delta < delta) {
 800a082:	d206      	bcs.n	800a092 <chSchGoSleepTimeoutS+0x52>
    chDbgAssert(p != vtp, "timer already armed");
 800a084:	4544      	cmp	r4, r8
 800a086:	d033      	beq.n	800a0f0 <chSchGoSleepTimeoutS+0xb0>

    delta -= p->delta;
    p = p->next;
 800a088:	6824      	ldr	r4, [r4, #0]
    delta -= p->delta;
 800a08a:	1a89      	subs	r1, r1, r2
  while (p->delta < delta) {
 800a08c:	68a2      	ldr	r2, [r4, #8]
 800a08e:	4291      	cmp	r1, r2
 800a090:	d8f8      	bhi.n	800a084 <chSchGoSleepTimeoutS+0x44>
  }

  /* The timer is inserted in the delta list.*/
  vtp->next = p;
  vtp->prev = vtp->next->prev;
 800a092:	6863      	ldr	r3, [r4, #4]
 800a094:	e9cd 4301 	strd	r4, r3, [sp, #4]
  vtp->prev->next = vtp;
 800a098:	f8c3 8000 	str.w	r8, [r3]
  p->prev = vtp;
 800a09c:	f8c4 8004 	str.w	r8, [r4, #4]
  vtp->delta = delta;
 800a0a0:	9103      	str	r1, [sp, #12]

  /* Calculate new delta for the following entry.*/
  p->delta -= delta;
 800a0a2:	68a3      	ldr	r3, [r4, #8]
 800a0a4:	1a59      	subs	r1, r3, r1

  /* Special case when the timer is in last position in the list, the
     value in the header must be restored.*/
  ch.vtlist.delta = (sysinterval_t)-1;
 800a0a6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
  p->delta -= delta;
 800a0aa:	60a1      	str	r1, [r4, #8]
  ch.vtlist.delta = (sysinterval_t)-1;
 800a0ac:	626b      	str	r3, [r5, #36]	; 0x24
    chSchGoSleepS(newstate);
 800a0ae:	4638      	mov	r0, r7
 800a0b0:	f7ff ffae 	bl	800a010 <chSchGoSleepS>
    if (chVTIsArmedI(&vt)) {
 800a0b4:	9b04      	ldr	r3, [sp, #16]
 800a0b6:	b17b      	cbz	r3, 800a0d8 <chSchGoSleepTimeoutS+0x98>
#else /* CH_CFG_ST_TIMEDELTA > 0 */
  sysinterval_t nowdelta, delta;

  /* If the timer is not the first of the list then it is simply unlinked
     else the operation is more complex.*/
  if (ch.vtlist.next != vtp) {
 800a0b8:	69ea      	ldr	r2, [r5, #28]
 800a0ba:	9b01      	ldr	r3, [sp, #4]
 800a0bc:	4542      	cmp	r2, r8
 800a0be:	d035      	beq.n	800a12c <chSchGoSleepTimeoutS+0xec>
    /* Removing the element from the delta list.*/
    vtp->prev->next = vtp->next;
 800a0c0:	9a02      	ldr	r2, [sp, #8]
 800a0c2:	6013      	str	r3, [r2, #0]
    vtp->next->prev = vtp->prev;
 800a0c4:	9b01      	ldr	r3, [sp, #4]
    vtp->func = NULL;
 800a0c6:	2100      	movs	r1, #0

    /* Adding delta to the next element, if it is not the last one.*/
    if (&ch.vtlist != (virtual_timers_list_t *)vtp->next)
 800a0c8:	42b3      	cmp	r3, r6
    vtp->next->prev = vtp->prev;
 800a0ca:	605a      	str	r2, [r3, #4]
    vtp->func = NULL;
 800a0cc:	9104      	str	r1, [sp, #16]
    if (&ch.vtlist != (virtual_timers_list_t *)vtp->next)
 800a0ce:	d003      	beq.n	800a0d8 <chSchGoSleepTimeoutS+0x98>
      vtp->next->delta += vtp->delta;
 800a0d0:	689a      	ldr	r2, [r3, #8]
 800a0d2:	9903      	ldr	r1, [sp, #12]
 800a0d4:	440a      	add	r2, r1
 800a0d6:	609a      	str	r2, [r3, #8]
  return currp->u.rdymsg;
 800a0d8:	69ab      	ldr	r3, [r5, #24]
}
 800a0da:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800a0dc:	b006      	add	sp, #24
 800a0de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    else if (delta < p->delta) {
 800a0e2:	4291      	cmp	r1, r2
 800a0e4:	d2ca      	bcs.n	800a07c <chSchGoSleepTimeoutS+0x3c>
 *
 * @notapi
 */
static inline void port_timer_set_alarm(systime_t time) {

  stSetAlarm(time);
 800a0e6:	4408      	add	r0, r1
 800a0e8:	f7ff fd62 	bl	8009bb0 <stSetAlarm>
 800a0ec:	68a2      	ldr	r2, [r4, #8]
 800a0ee:	e7c5      	b.n	800a07c <chSchGoSleepTimeoutS+0x3c>
 800a0f0:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800a0f2:	4b21      	ldr	r3, [pc, #132]	; (800a178 <chSchGoSleepTimeoutS+0x138>)
 800a0f4:	62eb      	str	r3, [r5, #44]	; 0x2c
  }
 800a0f6:	e7fe      	b.n	800a0f6 <chSchGoSleepTimeoutS+0xb6>
    chSchGoSleepS(newstate);
 800a0f8:	4d1d      	ldr	r5, [pc, #116]	; (800a170 <chSchGoSleepTimeoutS+0x130>)
 800a0fa:	f7ff ff89 	bl	800a010 <chSchGoSleepS>
  return currp->u.rdymsg;
 800a0fe:	69ab      	ldr	r3, [r5, #24]
}
 800a100:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800a102:	b006      	add	sp, #24
 800a104:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ch.vtlist.lasttime = now;
 800a108:	62ab      	str	r3, [r5, #40]	; 0x28
      vtp->delta = delay;
 800a10a:	9103      	str	r1, [sp, #12]
  return (bool)((STM32_ST_TIM->DIER & STM32_TIM_DIER_CC1IE) != 0);
 800a10c:	68d0      	ldr	r0, [r2, #12]
      vtp->next = (virtual_timer_t *)&ch.vtlist;
 800a10e:	9401      	str	r4, [sp, #4]
      ch.vtlist.next = vtp;
 800a110:	f10d 0804 	add.w	r8, sp, #4
  osalDbgAssert(stIsAlarmActive() == false, "already active");
 800a114:	f010 0002 	ands.w	r0, r0, #2
      vtp->prev = (virtual_timer_t *)&ch.vtlist;
 800a118:	9402      	str	r4, [sp, #8]
      ch.vtlist.prev = vtp;
 800a11a:	e9c5 8807 	strd	r8, r8, [r5, #28]
 800a11e:	d11f      	bne.n	800a160 <chSchGoSleepTimeoutS+0x120>
  return systime + (systime_t)interval;
 800a120:	440b      	add	r3, r1
  STM32_ST_TIM->DIER   = STM32_TIM_DIER_CC1IE;
 800a122:	2102      	movs	r1, #2
  STM32_ST_TIM->CCR[0] = (uint32_t)time;
 800a124:	6353      	str	r3, [r2, #52]	; 0x34
  STM32_ST_TIM->SR     = 0;
 800a126:	6110      	str	r0, [r2, #16]
  STM32_ST_TIM->DIER   = STM32_TIM_DIER_CC1IE;
 800a128:	60d1      	str	r1, [r2, #12]
 800a12a:	e7c0      	b.n	800a0ae <chSchGoSleepTimeoutS+0x6e>
  }

  /* Removing the first timer from the list.*/
  ch.vtlist.next = vtp->next;
  ch.vtlist.next->prev = (virtual_timer_t *)&ch.vtlist;
  vtp->func = NULL;
 800a12c:	2200      	movs	r2, #0

  /* If the list become empty then the alarm timer is stopped and done.*/
  if (&ch.vtlist == (virtual_timers_list_t *)ch.vtlist.next) {
 800a12e:	42b3      	cmp	r3, r6
  ch.vtlist.next = vtp->next;
 800a130:	61eb      	str	r3, [r5, #28]
  ch.vtlist.next->prev = (virtual_timer_t *)&ch.vtlist;
 800a132:	605e      	str	r6, [r3, #4]
  vtp->func = NULL;
 800a134:	9204      	str	r2, [sp, #16]
  if (&ch.vtlist == (virtual_timers_list_t *)ch.vtlist.next) {
 800a136:	d017      	beq.n	800a168 <chSchGoSleepTimeoutS+0x128>

    return;
  }

  /* The delta of the removed timer is added to the new first timer.*/
  ch.vtlist.next->delta += vtp->delta;
 800a138:	689a      	ldr	r2, [r3, #8]
 800a13a:	9903      	ldr	r1, [sp, #12]
/*  if (ch.vtlist.next->delta == 0) {
    return;
  }*/

  /* Distance in ticks between the last alarm event and current time.*/
  nowdelta = chTimeDiffX(ch.vtlist.lasttime, chVTGetSystemTimeX());
 800a13c:	6aa8      	ldr	r0, [r5, #40]	; 0x28
  ch.vtlist.next->delta += vtp->delta;
 800a13e:	440a      	add	r2, r1
  return (systime_t)STM32_ST_TIM->CNT;
 800a140:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 800a144:	609a      	str	r2, [r3, #8]
 800a146:	6a4b      	ldr	r3, [r1, #36]	; 0x24
  return (sysinterval_t)((systime_t)(end - start));
 800a148:	1a19      	subs	r1, r3, r0

  /* If the current time surpassed the time of the next element in list
     then the event interrupt is already pending, just return.*/
  if (nowdelta >= ch.vtlist.next->delta) {
 800a14a:	428a      	cmp	r2, r1
 800a14c:	d9c4      	bls.n	800a0d8 <chSchGoSleepTimeoutS+0x98>
    return;
  }

  /* Distance from the next scheduled event and now.*/
  delta = ch.vtlist.next->delta - nowdelta;
 800a14e:	1ac3      	subs	r3, r0, r3
 800a150:	4413      	add	r3, r2

  /* Making sure to not schedule an event closer than CH_CFG_ST_TIMEDELTA
     ticks from now.*/
  if (delta < (sysinterval_t)CH_CFG_ST_TIMEDELTA) {
 800a152:	2b01      	cmp	r3, #1
    delta = nowdelta + (sysinterval_t)CH_CFG_ST_TIMEDELTA;
 800a154:	bf98      	it	ls
 800a156:	1c8a      	addls	r2, r1, #2
 800a158:	4410      	add	r0, r2
 800a15a:	f7ff fd29 	bl	8009bb0 <stSetAlarm>
 800a15e:	e7bb      	b.n	800a0d8 <chSchGoSleepTimeoutS+0x98>
 800a160:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800a162:	4b06      	ldr	r3, [pc, #24]	; (800a17c <chSchGoSleepTimeoutS+0x13c>)
 800a164:	62eb      	str	r3, [r5, #44]	; 0x2c
  }
 800a166:	e7fe      	b.n	800a166 <chSchGoSleepTimeoutS+0x126>
  STM32_ST_TIM->DIER = 0;
 800a168:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800a16c:	60da      	str	r2, [r3, #12]
    return;
 800a16e:	e7b3      	b.n	800a0d8 <chSchGoSleepTimeoutS+0x98>
 800a170:	20002454 	.word	0x20002454
 800a174:	080090b1 	.word	0x080090b1
 800a178:	08012818 	.word	0x08012818
 800a17c:	080128a4 	.word	0x080128a4

0800a180 <chThdEnqueueTimeoutS>:
  if (TIME_IMMEDIATE == timeout) {
 800a180:	b161      	cbz	r1, 800a19c <chThdEnqueueTimeoutS+0x1c>
  queue_insert(currp, tqp);
 800a182:	4b08      	ldr	r3, [pc, #32]	; (800a1a4 <chThdEnqueueTimeoutS+0x24>)
msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout) {
 800a184:	b410      	push	{r4}
 800a186:	4602      	mov	r2, r0
  tp->queue.prev             = tqp->prev;
 800a188:	6844      	ldr	r4, [r0, #4]
  queue_insert(currp, tqp);
 800a18a:	699b      	ldr	r3, [r3, #24]
  return chSchGoSleepTimeoutS(CH_STATE_QUEUED, timeout);
 800a18c:	2004      	movs	r0, #4
 800a18e:	e9c3 2400 	strd	r2, r4, [r3]
  tp->queue.prev->queue.next = tp;
 800a192:	6023      	str	r3, [r4, #0]
  tqp->prev                  = tp;
 800a194:	6053      	str	r3, [r2, #4]
}
 800a196:	bc10      	pop	{r4}
  return chSchGoSleepTimeoutS(CH_STATE_QUEUED, timeout);
 800a198:	f7ff bf52 	b.w	800a040 <chSchGoSleepTimeoutS>
}
 800a19c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a1a0:	4770      	bx	lr
 800a1a2:	bf00      	nop
 800a1a4:	20002454 	.word	0x20002454
	...

0800a1b0 <oqPutTimeout>:
msg_t oqPutTimeout(output_queue_t *oqp, uint8_t b, sysinterval_t timeout) {
 800a1b0:	b570      	push	{r4, r5, r6, lr}
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800a1b2:	2320      	movs	r3, #32
 800a1b4:	4604      	mov	r4, r0
 800a1b6:	460e      	mov	r6, r1
 800a1b8:	4615      	mov	r5, r2
 800a1ba:	f383 8811 	msr	BASEPRI, r3
  _dbg_check_lock();
 800a1be:	e003      	b.n	800a1c8 <oqPutTimeout+0x18>
  return chThdEnqueueTimeoutS(tqp, timeout);
 800a1c0:	f7ff ffde 	bl	800a180 <chThdEnqueueTimeoutS>
    if (msg < MSG_OK) {
 800a1c4:	2800      	cmp	r0, #0
 800a1c6:	db21      	blt.n	800a20c <oqPutTimeout+0x5c>
  while (oqIsFullI(oqp)) {
 800a1c8:	68a3      	ldr	r3, [r4, #8]
 800a1ca:	4629      	mov	r1, r5
 800a1cc:	4620      	mov	r0, r4
 800a1ce:	2b00      	cmp	r3, #0
 800a1d0:	d0f6      	beq.n	800a1c0 <oqPutTimeout+0x10>
  *oqp->q_wrptr++ = b;
 800a1d2:	6962      	ldr	r2, [r4, #20]
  oqp->q_counter--;
 800a1d4:	68a3      	ldr	r3, [r4, #8]
  *oqp->q_wrptr++ = b;
 800a1d6:	1c51      	adds	r1, r2, #1
  oqp->q_counter--;
 800a1d8:	3b01      	subs	r3, #1
  *oqp->q_wrptr++ = b;
 800a1da:	6161      	str	r1, [r4, #20]
  oqp->q_counter--;
 800a1dc:	60a3      	str	r3, [r4, #8]
  *oqp->q_wrptr++ = b;
 800a1de:	7016      	strb	r6, [r2, #0]
  if (oqp->q_wrptr >= oqp->q_top) {
 800a1e0:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 800a1e4:	429a      	cmp	r2, r3
    oqp->q_wrptr = oqp->q_buffer;
 800a1e6:	bf24      	itt	cs
 800a1e8:	68e3      	ldrcs	r3, [r4, #12]
 800a1ea:	6163      	strcs	r3, [r4, #20]
  if (oqp->q_notify != NULL) {
 800a1ec:	69e3      	ldr	r3, [r4, #28]
 800a1ee:	b103      	cbz	r3, 800a1f2 <oqPutTimeout+0x42>
    oqp->q_notify(oqp);
 800a1f0:	4798      	blx	r3
  chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 800a1f2:	4b11      	ldr	r3, [pc, #68]	; (800a238 <oqPutTimeout+0x88>)
 800a1f4:	681a      	ldr	r2, [r3, #0]
 800a1f6:	429a      	cmp	r2, r3
 800a1f8:	d004      	beq.n	800a204 <oqPutTimeout+0x54>
 800a1fa:	6999      	ldr	r1, [r3, #24]
 800a1fc:	6892      	ldr	r2, [r2, #8]
 800a1fe:	6889      	ldr	r1, [r1, #8]
 800a200:	4291      	cmp	r1, r2
 800a202:	d310      	bcc.n	800a226 <oqPutTimeout+0x76>
 800a204:	2000      	movs	r0, #0
 800a206:	f380 8811 	msr	BASEPRI, r0
}
 800a20a:	bd70      	pop	{r4, r5, r6, pc}
 800a20c:	4b0a      	ldr	r3, [pc, #40]	; (800a238 <oqPutTimeout+0x88>)
 800a20e:	681a      	ldr	r2, [r3, #0]
 800a210:	429a      	cmp	r2, r3
 800a212:	d004      	beq.n	800a21e <oqPutTimeout+0x6e>
 800a214:	6999      	ldr	r1, [r3, #24]
 800a216:	6892      	ldr	r2, [r2, #8]
 800a218:	6889      	ldr	r1, [r1, #8]
 800a21a:	4291      	cmp	r1, r2
 800a21c:	d307      	bcc.n	800a22e <oqPutTimeout+0x7e>
 800a21e:	2300      	movs	r3, #0
 800a220:	f383 8811 	msr	BASEPRI, r3
 800a224:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("cpsid i" : : : "memory");
 800a226:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800a228:	4a04      	ldr	r2, [pc, #16]	; (800a23c <oqPutTimeout+0x8c>)
 800a22a:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 800a22c:	e7fe      	b.n	800a22c <oqPutTimeout+0x7c>
 800a22e:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800a230:	4a02      	ldr	r2, [pc, #8]	; (800a23c <oqPutTimeout+0x8c>)
 800a232:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 800a234:	e7fe      	b.n	800a234 <oqPutTimeout+0x84>
 800a236:	bf00      	nop
 800a238:	20002454 	.word	0x20002454
 800a23c:	080127f4 	.word	0x080127f4

0800a240 <_putt>:
  return oqPutTimeout(&((SerialDriver *)ip)->oqueue, b, timeout);
 800a240:	3030      	adds	r0, #48	; 0x30
 800a242:	f7ff bfb5 	b.w	800a1b0 <oqPutTimeout>
 800a246:	bf00      	nop
	...

0800a250 <_put>:
  return oqPutTimeout(&((SerialDriver *)ip)->oqueue, b, TIME_INFINITE);
 800a250:	3030      	adds	r0, #48	; 0x30
 800a252:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800a256:	f7ff bfab 	b.w	800a1b0 <oqPutTimeout>
 800a25a:	bf00      	nop
 800a25c:	0000      	movs	r0, r0
	...

0800a260 <iqGetTimeout>:
msg_t iqGetTimeout(input_queue_t *iqp, sysinterval_t timeout) {
 800a260:	b538      	push	{r3, r4, r5, lr}
 800a262:	4604      	mov	r4, r0
 800a264:	460d      	mov	r5, r1
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800a266:	2320      	movs	r3, #32
 800a268:	f383 8811 	msr	BASEPRI, r3
  _dbg_check_lock();
 800a26c:	e003      	b.n	800a276 <iqGetTimeout+0x16>
 800a26e:	f7ff ff87 	bl	800a180 <chThdEnqueueTimeoutS>
    if (msg < MSG_OK) {
 800a272:	2800      	cmp	r0, #0
 800a274:	db23      	blt.n	800a2be <iqGetTimeout+0x5e>
  while (iqIsEmptyI(iqp)) {
 800a276:	68a3      	ldr	r3, [r4, #8]
 800a278:	4629      	mov	r1, r5
 800a27a:	4620      	mov	r0, r4
 800a27c:	2b00      	cmp	r3, #0
 800a27e:	d0f6      	beq.n	800a26e <iqGetTimeout+0xe>
  b = *iqp->q_rdptr++;
 800a280:	69a1      	ldr	r1, [r4, #24]
  iqp->q_counter--;
 800a282:	68a3      	ldr	r3, [r4, #8]
  if (iqp->q_rdptr >= iqp->q_top) {
 800a284:	6920      	ldr	r0, [r4, #16]
  b = *iqp->q_rdptr++;
 800a286:	1c4a      	adds	r2, r1, #1
  iqp->q_counter--;
 800a288:	3b01      	subs	r3, #1
  if (iqp->q_rdptr >= iqp->q_top) {
 800a28a:	4282      	cmp	r2, r0
  iqp->q_counter--;
 800a28c:	60a3      	str	r3, [r4, #8]
  b = *iqp->q_rdptr++;
 800a28e:	61a2      	str	r2, [r4, #24]
    iqp->q_rdptr = iqp->q_buffer;
 800a290:	bf28      	it	cs
 800a292:	68e3      	ldrcs	r3, [r4, #12]
  b = *iqp->q_rdptr++;
 800a294:	780d      	ldrb	r5, [r1, #0]
    iqp->q_rdptr = iqp->q_buffer;
 800a296:	bf28      	it	cs
 800a298:	61a3      	strcs	r3, [r4, #24]
  if (iqp->q_notify != NULL) {
 800a29a:	69e3      	ldr	r3, [r4, #28]
 800a29c:	b10b      	cbz	r3, 800a2a2 <iqGetTimeout+0x42>
    iqp->q_notify(iqp);
 800a29e:	4620      	mov	r0, r4
 800a2a0:	4798      	blx	r3
  chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 800a2a2:	4b11      	ldr	r3, [pc, #68]	; (800a2e8 <iqGetTimeout+0x88>)
 800a2a4:	681a      	ldr	r2, [r3, #0]
 800a2a6:	429a      	cmp	r2, r3
 800a2a8:	d004      	beq.n	800a2b4 <iqGetTimeout+0x54>
 800a2aa:	6999      	ldr	r1, [r3, #24]
 800a2ac:	6892      	ldr	r2, [r2, #8]
 800a2ae:	6889      	ldr	r1, [r1, #8]
 800a2b0:	4291      	cmp	r1, r2
 800a2b2:	d311      	bcc.n	800a2d8 <iqGetTimeout+0x78>
 800a2b4:	2300      	movs	r3, #0
 800a2b6:	f383 8811 	msr	BASEPRI, r3
  return (msg_t)b;
 800a2ba:	4628      	mov	r0, r5
}
 800a2bc:	bd38      	pop	{r3, r4, r5, pc}
 800a2be:	4b0a      	ldr	r3, [pc, #40]	; (800a2e8 <iqGetTimeout+0x88>)
 800a2c0:	681a      	ldr	r2, [r3, #0]
 800a2c2:	429a      	cmp	r2, r3
 800a2c4:	d004      	beq.n	800a2d0 <iqGetTimeout+0x70>
 800a2c6:	6999      	ldr	r1, [r3, #24]
 800a2c8:	6892      	ldr	r2, [r2, #8]
 800a2ca:	6889      	ldr	r1, [r1, #8]
 800a2cc:	4291      	cmp	r1, r2
 800a2ce:	d307      	bcc.n	800a2e0 <iqGetTimeout+0x80>
 800a2d0:	2300      	movs	r3, #0
 800a2d2:	f383 8811 	msr	BASEPRI, r3
 800a2d6:	bd38      	pop	{r3, r4, r5, pc}
  __ASM volatile ("cpsid i" : : : "memory");
 800a2d8:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800a2da:	4a04      	ldr	r2, [pc, #16]	; (800a2ec <iqGetTimeout+0x8c>)
 800a2dc:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 800a2de:	e7fe      	b.n	800a2de <iqGetTimeout+0x7e>
 800a2e0:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800a2e2:	4a02      	ldr	r2, [pc, #8]	; (800a2ec <iqGetTimeout+0x8c>)
 800a2e4:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 800a2e6:	e7fe      	b.n	800a2e6 <iqGetTimeout+0x86>
 800a2e8:	20002454 	.word	0x20002454
 800a2ec:	080127f4 	.word	0x080127f4

0800a2f0 <_gett>:
  return iqGetTimeout(&((SerialDriver *)ip)->iqueue, timeout);
 800a2f0:	300c      	adds	r0, #12
 800a2f2:	f7ff bfb5 	b.w	800a260 <iqGetTimeout>
 800a2f6:	bf00      	nop
	...

0800a300 <_get>:
  return iqGetTimeout(&((SerialDriver *)ip)->iqueue, TIME_INFINITE);
 800a300:	300c      	adds	r0, #12
 800a302:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a306:	f7ff bfab 	b.w	800a260 <iqGetTimeout>
 800a30a:	bf00      	nop
 800a30c:	0000      	movs	r0, r0
	...

0800a310 <oqWriteTimeout>:
 * @return              The number of bytes effectively transferred.
 *
 * @api
 */
size_t oqWriteTimeout(output_queue_t *oqp, const uint8_t *bp,
                      size_t n, sysinterval_t timeout) {
 800a310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a314:	b085      	sub	sp, #20
 800a316:	e9cd 3202 	strd	r3, r2, [sp, #8]
  qnotify_t nfy = oqp->q_notify;
 800a31a:	f8d0 901c 	ldr.w	r9, [r0, #28]
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800a31e:	2320      	movs	r3, #32
 800a320:	f383 8811 	msr	BASEPRI, r3

  osalDbgCheck(n > 0U);

  osalSysLock();

  while (n > 0U) {
 800a324:	2a00      	cmp	r2, #0
 800a326:	d07a      	beq.n	800a41e <oqWriteTimeout+0x10e>
 800a328:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800a428 <oqWriteTimeout+0x118>
 800a32c:	9e03      	ldr	r6, [sp, #12]
 800a32e:	9300      	str	r3, [sp, #0]
 800a330:	4604      	mov	r4, r0
 800a332:	460f      	mov	r7, r1
 800a334:	f04f 0b00 	mov.w	fp, #0
  if (n > oqGetEmptyI(oqp)) {
 800a338:	68a2      	ldr	r2, [r4, #8]
 800a33a:	42b2      	cmp	r2, r6
  s1 = (size_t)(oqp->q_top - oqp->q_wrptr);
 800a33c:	e9d4 2004 	ldrd	r2, r0, [r4, #16]
    n = oqGetEmptyI(oqp);
 800a340:	bf34      	ite	cc
 800a342:	68a5      	ldrcc	r5, [r4, #8]
  if (n > oqGetEmptyI(oqp)) {
 800a344:	4635      	movcs	r5, r6
  s1 = (size_t)(oqp->q_top - oqp->q_wrptr);
 800a346:	eba2 0a00 	sub.w	sl, r2, r0
  if (n < s1) {
 800a34a:	45aa      	cmp	sl, r5
 800a34c:	d855      	bhi.n	800a3fa <oqWriteTimeout+0xea>
  else if (n > s1) {
 800a34e:	d242      	bcs.n	800a3d6 <oqWriteTimeout+0xc6>
    s2 = n - s1;
 800a350:	eba5 030a 	sub.w	r3, r5, sl
    memcpy((void *)oqp->q_wrptr, (const void *)bp, s1);
 800a354:	4652      	mov	r2, sl
 800a356:	4639      	mov	r1, r7
    s2 = n - s1;
 800a358:	9301      	str	r3, [sp, #4]
    memcpy((void *)oqp->q_wrptr, (const void *)bp, s1);
 800a35a:	f7fd fbd9 	bl	8007b10 <memcpy>
    memcpy((void *)oqp->q_buffer, (const void *)bp, s2);
 800a35e:	eb07 010a 	add.w	r1, r7, sl
 800a362:	f8dd a004 	ldr.w	sl, [sp, #4]
 800a366:	68e0      	ldr	r0, [r4, #12]
 800a368:	4652      	mov	r2, sl
 800a36a:	f7fd fbd1 	bl	8007b10 <memcpy>
    oqp->q_wrptr = oqp->q_buffer + s2;
 800a36e:	68e2      	ldr	r2, [r4, #12]
 800a370:	4653      	mov	r3, sl
 800a372:	18d3      	adds	r3, r2, r3
 800a374:	6163      	str	r3, [r4, #20]
  oqp->q_counter -= n;
 800a376:	68a2      	ldr	r2, [r4, #8]
 800a378:	1b52      	subs	r2, r2, r5
 800a37a:	60a2      	str	r2, [r4, #8]
    size_t done;

    done = oq_write(oqp, bp, n);
    if (done == (size_t)0) {
 800a37c:	2d00      	cmp	r5, #0
 800a37e:	d035      	beq.n	800a3ec <oqWriteTimeout+0xdc>
      }
    }
    else {
      /* Inform the low side that the queue has at least one character
         available.*/
      if (nfy != NULL) {
 800a380:	f1b9 0f00 	cmp.w	r9, #0
 800a384:	d001      	beq.n	800a38a <oqWriteTimeout+0x7a>
        nfy(oqp);
 800a386:	4620      	mov	r0, r4
 800a388:	47c8      	blx	r9
 800a38a:	f8d8 2000 	ldr.w	r2, [r8]
 800a38e:	4542      	cmp	r2, r8
 800a390:	d005      	beq.n	800a39e <oqWriteTimeout+0x8e>
 800a392:	f8d8 1018 	ldr.w	r1, [r8, #24]
 800a396:	6892      	ldr	r2, [r2, #8]
 800a398:	6889      	ldr	r1, [r1, #8]
 800a39a:	4291      	cmp	r1, r2
 800a39c:	d335      	bcc.n	800a40a <oqWriteTimeout+0xfa>
 800a39e:	f38b 8811 	msr	BASEPRI, fp
      }

      /* Giving a preemption chance in a controlled point.*/
      osalSysUnlock();

      n  -= done;
 800a3a2:	1b76      	subs	r6, r6, r5
      bp += done;
 800a3a4:	442f      	add	r7, r5
 800a3a6:	9b00      	ldr	r3, [sp, #0]
 800a3a8:	f383 8811 	msr	BASEPRI, r3
  while (n > 0U) {
 800a3ac:	2e00      	cmp	r6, #0
 800a3ae:	d1c3      	bne.n	800a338 <oqWriteTimeout+0x28>
  if (n > oqGetEmptyI(oqp)) {
 800a3b0:	2600      	movs	r6, #0
 800a3b2:	f8d8 3000 	ldr.w	r3, [r8]
 800a3b6:	4543      	cmp	r3, r8
 800a3b8:	d005      	beq.n	800a3c6 <oqWriteTimeout+0xb6>
 800a3ba:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800a3be:	689b      	ldr	r3, [r3, #8]
 800a3c0:	6892      	ldr	r2, [r2, #8]
 800a3c2:	429a      	cmp	r2, r3
 800a3c4:	d326      	bcc.n	800a414 <oqWriteTimeout+0x104>
 800a3c6:	2300      	movs	r3, #0
 800a3c8:	f383 8811 	msr	BASEPRI, r3
    }
  }

  osalSysUnlock();
  return max - n;
}
 800a3cc:	9b03      	ldr	r3, [sp, #12]
 800a3ce:	1b98      	subs	r0, r3, r6
 800a3d0:	b005      	add	sp, #20
 800a3d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    memcpy((void *)oqp->q_wrptr, (const void *)bp, n);
 800a3d6:	462a      	mov	r2, r5
 800a3d8:	4639      	mov	r1, r7
 800a3da:	f7fd fb99 	bl	8007b10 <memcpy>
    oqp->q_wrptr = oqp->q_buffer;
 800a3de:	68e2      	ldr	r2, [r4, #12]
 800a3e0:	6162      	str	r2, [r4, #20]
  oqp->q_counter -= n;
 800a3e2:	68a2      	ldr	r2, [r4, #8]
 800a3e4:	1b52      	subs	r2, r2, r5
 800a3e6:	60a2      	str	r2, [r4, #8]
    if (done == (size_t)0) {
 800a3e8:	2d00      	cmp	r5, #0
 800a3ea:	d1c9      	bne.n	800a380 <oqWriteTimeout+0x70>
 800a3ec:	9902      	ldr	r1, [sp, #8]
 800a3ee:	4620      	mov	r0, r4
 800a3f0:	f7ff fec6 	bl	800a180 <chThdEnqueueTimeoutS>
      if (msg != MSG_OK) {
 800a3f4:	2800      	cmp	r0, #0
 800a3f6:	d09f      	beq.n	800a338 <oqWriteTimeout+0x28>
 800a3f8:	e7db      	b.n	800a3b2 <oqWriteTimeout+0xa2>
    memcpy((void *)oqp->q_wrptr, (const void *)bp, n);
 800a3fa:	462a      	mov	r2, r5
 800a3fc:	4639      	mov	r1, r7
 800a3fe:	f7fd fb87 	bl	8007b10 <memcpy>
    oqp->q_wrptr += n;
 800a402:	6962      	ldr	r2, [r4, #20]
 800a404:	442a      	add	r2, r5
 800a406:	6162      	str	r2, [r4, #20]
 800a408:	e7b5      	b.n	800a376 <oqWriteTimeout+0x66>
  __ASM volatile ("cpsid i" : : : "memory");
 800a40a:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800a40c:	4b05      	ldr	r3, [pc, #20]	; (800a424 <oqWriteTimeout+0x114>)
 800a40e:	f8c8 302c 	str.w	r3, [r8, #44]	; 0x2c
  }
 800a412:	e7fe      	b.n	800a412 <oqWriteTimeout+0x102>
 800a414:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800a416:	4b03      	ldr	r3, [pc, #12]	; (800a424 <oqWriteTimeout+0x114>)
 800a418:	f8c8 302c 	str.w	r3, [r8, #44]	; 0x2c
  }
 800a41c:	e7fe      	b.n	800a41c <oqWriteTimeout+0x10c>
 800a41e:	f8df 8008 	ldr.w	r8, [pc, #8]	; 800a428 <oqWriteTimeout+0x118>
 800a422:	e7c5      	b.n	800a3b0 <oqWriteTimeout+0xa0>
 800a424:	080127f4 	.word	0x080127f4
 800a428:	20002454 	.word	0x20002454
 800a42c:	00000000 	.word	0x00000000

0800a430 <_writet>:
  return oqWriteTimeout(&((SerialDriver *)ip)->oqueue, bp, n, timeout);
 800a430:	3030      	adds	r0, #48	; 0x30
 800a432:	f7ff bf6d 	b.w	800a310 <oqWriteTimeout>
 800a436:	bf00      	nop
	...

0800a440 <_write>:
  return oqWriteTimeout(&((SerialDriver *)ip)->oqueue, bp,
 800a440:	3030      	adds	r0, #48	; 0x30
 800a442:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a446:	f7ff bf63 	b.w	800a310 <oqWriteTimeout>
 800a44a:	bf00      	nop
 800a44c:	0000      	movs	r0, r0
	...

0800a450 <iqReadTimeout>:
                     size_t n, sysinterval_t timeout) {
 800a450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a454:	b085      	sub	sp, #20
 800a456:	e9cd 3202 	strd	r3, r2, [sp, #8]
  qnotify_t nfy = iqp->q_notify;
 800a45a:	f8d0 901c 	ldr.w	r9, [r0, #28]
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800a45e:	2320      	movs	r3, #32
 800a460:	f383 8811 	msr	BASEPRI, r3
  while (n > 0U) {
 800a464:	2a00      	cmp	r2, #0
 800a466:	d07a      	beq.n	800a55e <iqReadTimeout+0x10e>
 800a468:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800a568 <iqReadTimeout+0x118>
 800a46c:	9e03      	ldr	r6, [sp, #12]
 800a46e:	9300      	str	r3, [sp, #0]
 800a470:	4604      	mov	r4, r0
 800a472:	460f      	mov	r7, r1
 800a474:	f04f 0b00 	mov.w	fp, #0
  if (n > iqGetFullI(iqp)) {
 800a478:	68a2      	ldr	r2, [r4, #8]
  s1 = (size_t)(iqp->q_top - iqp->q_rdptr);
 800a47a:	69a1      	ldr	r1, [r4, #24]
  if (n > iqGetFullI(iqp)) {
 800a47c:	42b2      	cmp	r2, r6
  s1 = (size_t)(iqp->q_top - iqp->q_rdptr);
 800a47e:	6922      	ldr	r2, [r4, #16]
    n = iqGetFullI(iqp);
 800a480:	bf34      	ite	cc
 800a482:	68a5      	ldrcc	r5, [r4, #8]
  if (n > iqGetFullI(iqp)) {
 800a484:	4635      	movcs	r5, r6
  s1 = (size_t)(iqp->q_top - iqp->q_rdptr);
 800a486:	eba2 0a01 	sub.w	sl, r2, r1
  if (n < s1) {
 800a48a:	45aa      	cmp	sl, r5
 800a48c:	d855      	bhi.n	800a53a <iqReadTimeout+0xea>
  else if (n > s1) {
 800a48e:	d242      	bcs.n	800a516 <iqReadTimeout+0xc6>
    s2 = n - s1;
 800a490:	eba5 030a 	sub.w	r3, r5, sl
    memcpy((void *)bp, (void *)iqp->q_rdptr, s1);
 800a494:	4652      	mov	r2, sl
 800a496:	4638      	mov	r0, r7
    s2 = n - s1;
 800a498:	9301      	str	r3, [sp, #4]
    memcpy((void *)bp, (void *)iqp->q_rdptr, s1);
 800a49a:	f7fd fb39 	bl	8007b10 <memcpy>
    memcpy((void *)bp, (void *)iqp->q_buffer, s2);
 800a49e:	eb07 000a 	add.w	r0, r7, sl
 800a4a2:	f8dd a004 	ldr.w	sl, [sp, #4]
 800a4a6:	68e1      	ldr	r1, [r4, #12]
 800a4a8:	4652      	mov	r2, sl
 800a4aa:	f7fd fb31 	bl	8007b10 <memcpy>
    iqp->q_rdptr = iqp->q_buffer + s2;
 800a4ae:	68e2      	ldr	r2, [r4, #12]
 800a4b0:	4653      	mov	r3, sl
 800a4b2:	18d3      	adds	r3, r2, r3
 800a4b4:	61a3      	str	r3, [r4, #24]
  iqp->q_counter -= n;
 800a4b6:	68a2      	ldr	r2, [r4, #8]
 800a4b8:	1b52      	subs	r2, r2, r5
 800a4ba:	60a2      	str	r2, [r4, #8]
    if (done == (size_t)0) {
 800a4bc:	2d00      	cmp	r5, #0
 800a4be:	d035      	beq.n	800a52c <iqReadTimeout+0xdc>
      if (nfy != NULL) {
 800a4c0:	f1b9 0f00 	cmp.w	r9, #0
 800a4c4:	d001      	beq.n	800a4ca <iqReadTimeout+0x7a>
        nfy(iqp);
 800a4c6:	4620      	mov	r0, r4
 800a4c8:	47c8      	blx	r9
 800a4ca:	f8d8 2000 	ldr.w	r2, [r8]
 800a4ce:	4542      	cmp	r2, r8
 800a4d0:	d005      	beq.n	800a4de <iqReadTimeout+0x8e>
 800a4d2:	f8d8 1018 	ldr.w	r1, [r8, #24]
 800a4d6:	6892      	ldr	r2, [r2, #8]
 800a4d8:	6889      	ldr	r1, [r1, #8]
 800a4da:	4291      	cmp	r1, r2
 800a4dc:	d335      	bcc.n	800a54a <iqReadTimeout+0xfa>
 800a4de:	f38b 8811 	msr	BASEPRI, fp
      n  -= done;
 800a4e2:	1b76      	subs	r6, r6, r5
      bp += done;
 800a4e4:	442f      	add	r7, r5
 800a4e6:	9b00      	ldr	r3, [sp, #0]
 800a4e8:	f383 8811 	msr	BASEPRI, r3
  while (n > 0U) {
 800a4ec:	2e00      	cmp	r6, #0
 800a4ee:	d1c3      	bne.n	800a478 <iqReadTimeout+0x28>
  if (n > iqGetFullI(iqp)) {
 800a4f0:	2600      	movs	r6, #0
 800a4f2:	f8d8 3000 	ldr.w	r3, [r8]
 800a4f6:	4543      	cmp	r3, r8
 800a4f8:	d005      	beq.n	800a506 <iqReadTimeout+0xb6>
 800a4fa:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800a4fe:	689b      	ldr	r3, [r3, #8]
 800a500:	6892      	ldr	r2, [r2, #8]
 800a502:	429a      	cmp	r2, r3
 800a504:	d326      	bcc.n	800a554 <iqReadTimeout+0x104>
 800a506:	2300      	movs	r3, #0
 800a508:	f383 8811 	msr	BASEPRI, r3
}
 800a50c:	9b03      	ldr	r3, [sp, #12]
 800a50e:	1b98      	subs	r0, r3, r6
 800a510:	b005      	add	sp, #20
 800a512:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    memcpy((void *)bp, (void *)iqp->q_rdptr, n);
 800a516:	462a      	mov	r2, r5
 800a518:	4638      	mov	r0, r7
 800a51a:	f7fd faf9 	bl	8007b10 <memcpy>
    iqp->q_rdptr = iqp->q_buffer;
 800a51e:	68e2      	ldr	r2, [r4, #12]
 800a520:	61a2      	str	r2, [r4, #24]
  iqp->q_counter -= n;
 800a522:	68a2      	ldr	r2, [r4, #8]
 800a524:	1b52      	subs	r2, r2, r5
 800a526:	60a2      	str	r2, [r4, #8]
    if (done == (size_t)0) {
 800a528:	2d00      	cmp	r5, #0
 800a52a:	d1c9      	bne.n	800a4c0 <iqReadTimeout+0x70>
 800a52c:	9902      	ldr	r1, [sp, #8]
 800a52e:	4620      	mov	r0, r4
 800a530:	f7ff fe26 	bl	800a180 <chThdEnqueueTimeoutS>
      if (msg != MSG_OK) {
 800a534:	2800      	cmp	r0, #0
 800a536:	d09f      	beq.n	800a478 <iqReadTimeout+0x28>
 800a538:	e7db      	b.n	800a4f2 <iqReadTimeout+0xa2>
    memcpy((void *)bp, (void *)iqp->q_rdptr, n);
 800a53a:	462a      	mov	r2, r5
 800a53c:	4638      	mov	r0, r7
 800a53e:	f7fd fae7 	bl	8007b10 <memcpy>
    iqp->q_rdptr += n;
 800a542:	69a2      	ldr	r2, [r4, #24]
 800a544:	442a      	add	r2, r5
 800a546:	61a2      	str	r2, [r4, #24]
 800a548:	e7b5      	b.n	800a4b6 <iqReadTimeout+0x66>
  __ASM volatile ("cpsid i" : : : "memory");
 800a54a:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800a54c:	4b05      	ldr	r3, [pc, #20]	; (800a564 <iqReadTimeout+0x114>)
 800a54e:	f8c8 302c 	str.w	r3, [r8, #44]	; 0x2c
  }
 800a552:	e7fe      	b.n	800a552 <iqReadTimeout+0x102>
 800a554:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800a556:	4b03      	ldr	r3, [pc, #12]	; (800a564 <iqReadTimeout+0x114>)
 800a558:	f8c8 302c 	str.w	r3, [r8, #44]	; 0x2c
  }
 800a55c:	e7fe      	b.n	800a55c <iqReadTimeout+0x10c>
 800a55e:	f8df 8008 	ldr.w	r8, [pc, #8]	; 800a568 <iqReadTimeout+0x118>
 800a562:	e7c5      	b.n	800a4f0 <iqReadTimeout+0xa0>
 800a564:	080127f4 	.word	0x080127f4
 800a568:	20002454 	.word	0x20002454
 800a56c:	00000000 	.word	0x00000000

0800a570 <_readt>:
  return iqReadTimeout(&((SerialDriver *)ip)->iqueue, bp, n, timeout);
 800a570:	300c      	adds	r0, #12
 800a572:	f7ff bf6d 	b.w	800a450 <iqReadTimeout>
 800a576:	bf00      	nop
	...

0800a580 <_read>:
  return iqReadTimeout(&((SerialDriver *)ip)->iqueue, bp,
 800a580:	300c      	adds	r0, #12
 800a582:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a586:	f7ff bf63 	b.w	800a450 <iqReadTimeout>
 800a58a:	bf00      	nop
 800a58c:	0000      	movs	r0, r0
	...

0800a590 <_GLOBAL__sub_I_my_soft_uart_1>:
            uart() { _mode_=mode_codes::INVALID_MODE; }
 800a590:	4b23      	ldr	r3, [pc, #140]	; (800a620 <_GLOBAL__sub_I_my_soft_uart_1+0x90>)

uart<
  &GPTD1, // we are using TIM1 for the GPT
  RX_BUF_LENGTH,
  TX_BUF_LENGTH
> my_soft_uart_1;
 800a592:	4a24      	ldr	r2, [pc, #144]	; (800a624 <_GLOBAL__sub_I_my_soft_uart_1+0x94>)
 800a594:	4924      	ldr	r1, [pc, #144]	; (800a628 <_GLOBAL__sub_I_my_soft_uart_1+0x98>)
    my_soft_uart_1.set_tx_mode();
    my_soft_uart_2.set_rx_mode();

    if(DELAY_MS) chThdSleepMilliseconds(DELAY_MS);
  }
}
 800a596:	b570      	push	{r4, r5, r6, lr}
> my_soft_uart_1;
 800a598:	4618      	mov	r0, r3
 800a59a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800a59e:	601c      	str	r4, [r3, #0]
          uart<TIMER,RX_BUFFER_LENGTH,TX_BUFFER_LENGTH>::_ctx_;
 800a5a0:	4e22      	ldr	r6, [pc, #136]	; (800a62c <_GLOBAL__sub_I_my_soft_uart_1+0x9c>)
 800a5a2:	f002 faff 	bl	800cba4 <__aeabi_atexit>
            uart() { _mode_=mode_codes::INVALID_MODE; }
 800a5a6:	4822      	ldr	r0, [pc, #136]	; (800a630 <_GLOBAL__sub_I_my_soft_uart_1+0xa0>)
> my_soft_uart_2;
 800a5a8:	4a1e      	ldr	r2, [pc, #120]	; (800a624 <_GLOBAL__sub_I_my_soft_uart_1+0x94>)
 800a5aa:	4922      	ldr	r1, [pc, #136]	; (800a634 <_GLOBAL__sub_I_my_soft_uart_1+0xa4>)
 800a5ac:	6004      	str	r4, [r0, #0]
 800a5ae:	f002 faf9 	bl	800cba4 <__aeabi_atexit>
          uart<TIMER,RX_BUFFER_LENGTH,TX_BUFFER_LENGTH>::_ctx_;
 800a5b2:	6833      	ldr	r3, [r6, #0]
 800a5b4:	f013 0301 	ands.w	r3, r3, #1
 800a5b8:	d005      	beq.n	800a5c6 <_GLOBAL__sub_I_my_soft_uart_1+0x36>
 800a5ba:	4d1f      	ldr	r5, [pc, #124]	; (800a638 <_GLOBAL__sub_I_my_soft_uart_1+0xa8>)
 800a5bc:	682b      	ldr	r3, [r5, #0]
 800a5be:	f013 0301 	ands.w	r3, r3, #1
 800a5c2:	d015      	beq.n	800a5f0 <_GLOBAL__sub_I_my_soft_uart_1+0x60>
}
 800a5c4:	bd70      	pop	{r4, r5, r6, pc}
    void _init_() { _first_=_last_=-1; _items_=0; }
 800a5c6:	4d1d      	ldr	r5, [pc, #116]	; (800a63c <_GLOBAL__sub_I_my_soft_uart_1+0xac>)
 800a5c8:	4a16      	ldr	r2, [pc, #88]	; (800a624 <_GLOBAL__sub_I_my_soft_uart_1+0x94>)
 800a5ca:	f8c5 3460 	str.w	r3, [r5, #1120]	; 0x460
 800a5ce:	491c      	ldr	r1, [pc, #112]	; (800a640 <_GLOBAL__sub_I_my_soft_uart_1+0xb0>)
 800a5d0:	f8c5 3884 	str.w	r3, [r5, #2180]	; 0x884
 800a5d4:	f8c5 445c 	str.w	r4, [r5, #1116]	; 0x45c
 800a5d8:	2301      	movs	r3, #1
 800a5da:	f8c5 4458 	str.w	r4, [r5, #1112]	; 0x458
 800a5de:	f8c5 4880 	str.w	r4, [r5, #2176]	; 0x880
 800a5e2:	f8c5 487c 	str.w	r4, [r5, #2172]	; 0x87c
 800a5e6:	4628      	mov	r0, r5
 800a5e8:	6033      	str	r3, [r6, #0]
 800a5ea:	f002 fadb 	bl	800cba4 <__aeabi_atexit>
 800a5ee:	e7e4      	b.n	800a5ba <_GLOBAL__sub_I_my_soft_uart_1+0x2a>
 800a5f0:	4c14      	ldr	r4, [pc, #80]	; (800a644 <_GLOBAL__sub_I_my_soft_uart_1+0xb4>)
 800a5f2:	4a0c      	ldr	r2, [pc, #48]	; (800a624 <_GLOBAL__sub_I_my_soft_uart_1+0x94>)
 800a5f4:	f8c4 3460 	str.w	r3, [r4, #1120]	; 0x460
 800a5f8:	f8c4 3884 	str.w	r3, [r4, #2180]	; 0x884
 800a5fc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a600:	f8c4 345c 	str.w	r3, [r4, #1116]	; 0x45c
 800a604:	f8c4 3458 	str.w	r3, [r4, #1112]	; 0x458
 800a608:	f8c4 3880 	str.w	r3, [r4, #2176]	; 0x880
 800a60c:	f8c4 387c 	str.w	r3, [r4, #2172]	; 0x87c
 800a610:	2301      	movs	r3, #1
 800a612:	4620      	mov	r0, r4
 800a614:	602b      	str	r3, [r5, #0]
 800a616:	490c      	ldr	r1, [pc, #48]	; (800a648 <_GLOBAL__sub_I_my_soft_uart_1+0xb8>)
 800a618:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a61c:	f002 bac2 	b.w	800cba4 <__aeabi_atexit>
 800a620:	20002614 	.word	0x20002614
 800a624:	200023d0 	.word	0x200023d0
 800a628:	08009a01 	.word	0x08009a01
 800a62c:	20001298 	.word	0x20001298
 800a630:	20002618 	.word	0x20002618
 800a634:	08009971 	.word	0x08009971
 800a638:	2000129c 	.word	0x2000129c
 800a63c:	200012a0 	.word	0x200012a0
 800a640:	08008d01 	.word	0x08008d01
 800a644:	20001b38 	.word	0x20001b38
 800a648:	08008d01 	.word	0x08008d01
 800a64c:	00000000 	.word	0x00000000

0800a650 <_fini>:
 * @brief   Board-specific initialization code.
 * @todo    Add your board-specific code, if any.
 */
void boardInit(void) {

}
 800a650:	4770      	bx	lr
 800a652:	bf00      	nop
	...

0800a660 <_kill>:
#undef errno
extern int errno;
int _kill(int pid, int sig) {
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800a660:	4b02      	ldr	r3, [pc, #8]	; (800a66c <_kill+0xc>)
 800a662:	2216      	movs	r2, #22
 800a664:	601a      	str	r2, [r3, #0]
  return -1;
}
 800a666:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a66a:	4770      	bx	lr
 800a66c:	200026d4 	.word	0x200026d4

0800a670 <_getpid>:
}
 800a670:	2001      	movs	r0, #1
 800a672:	4770      	bx	lr
	...

0800a680 <_exit>:
 800a680:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800a682:	4b02      	ldr	r3, [pc, #8]	; (800a68c <_exit+0xc>)
 800a684:	4a02      	ldr	r2, [pc, #8]	; (800a690 <_exit+0x10>)
 800a686:	62da      	str	r2, [r3, #44]	; 0x2c
  }
 800a688:	e7fe      	b.n	800a688 <_exit+0x8>
 800a68a:	bf00      	nop
 800a68c:	20002454 	.word	0x20002454
 800a690:	0801294c 	.word	0x0801294c
	...

0800a6a0 <_isatty_r>:
{
  (void)r;
  (void)fd;

  return 1;
}
 800a6a0:	2001      	movs	r0, #1
 800a6a2:	4770      	bx	lr
	...

0800a6b0 <_fstat_r>:
{
 800a6b0:	b508      	push	{r3, lr}
  memset(st, 0, sizeof(*st));
 800a6b2:	4610      	mov	r0, r2
 800a6b4:	2100      	movs	r1, #0
 800a6b6:	2258      	movs	r2, #88	; 0x58
 800a6b8:	f003 fb76 	bl	800dda8 <memset>
  st->st_mode = S_IFCHR;
 800a6bc:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800a6c0:	6042      	str	r2, [r0, #4]
}
 800a6c2:	2000      	movs	r0, #0
 800a6c4:	bd08      	pop	{r3, pc}
 800a6c6:	bf00      	nop
	...

0800a6d0 <_sbrk_r>:
{
 800a6d0:	b510      	push	{r4, lr}
 *
 * @api
 */
static inline void *chCoreAlloc(size_t size) {

  return chCoreAllocAlignedWithOffset(size, PORT_NATURAL_ALIGN, 0U);
 800a6d2:	2200      	movs	r2, #0
 800a6d4:	4604      	mov	r4, r0
 800a6d6:	4608      	mov	r0, r1
 800a6d8:	2104      	movs	r1, #4
 800a6da:	f7fe fc01 	bl	8008ee0 <chCoreAllocAlignedWithOffset>
  if (p == NULL) {
 800a6de:	b100      	cbz	r0, 800a6e2 <_sbrk_r+0x12>
}
 800a6e0:	bd10      	pop	{r4, pc}
    __errno_r(r) = ENOMEM;
 800a6e2:	230c      	movs	r3, #12
 800a6e4:	6023      	str	r3, [r4, #0]
    return (caddr_t)-1;
 800a6e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
 800a6ea:	bd10      	pop	{r4, pc}
 800a6ec:	0000      	movs	r0, r0
	...

0800a6f0 <_close_r>:
}
 800a6f0:	2000      	movs	r0, #0
 800a6f2:	4770      	bx	lr
	...

0800a700 <_write_r>:
}
 800a700:	4618      	mov	r0, r3
 800a702:	4770      	bx	lr
	...

0800a710 <_lseek_r>:
}
 800a710:	2000      	movs	r0, #0
 800a712:	4770      	bx	lr
	...

0800a720 <_read_r>:
  __errno_r(r) = EINVAL;
 800a720:	2316      	movs	r3, #22
 800a722:	6003      	str	r3, [r0, #0]
}
 800a724:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a728:	4770      	bx	lr
 800a72a:	bf00      	nop
 800a72c:	0000      	movs	r0, r0
	...

0800a730 <SVC_Handler>:
  __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 800a730:	f3ef 8309 	mrs	r3, PSP
  ctxp++;
 800a734:	3320      	adds	r3, #32
  __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 800a736:	f383 8809 	msr	PSP, r3
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800a73a:	2300      	movs	r3, #0
 800a73c:	f383 8811 	msr	BASEPRI, r3
}
 800a740:	4770      	bx	lr
 800a742:	bf00      	nop
	...

0800a750 <chThdExit>:
void chThdExit(msg_t msg) {
 800a750:	b508      	push	{r3, lr}
 800a752:	2320      	movs	r3, #32
 800a754:	f383 8811 	msr	BASEPRI, r3
  thread_t *tp = currp;
 800a758:	4d10      	ldr	r5, [pc, #64]	; (800a79c <chThdExit+0x4c>)
 800a75a:	69ac      	ldr	r4, [r5, #24]
  return (bool)(tlp->next != (thread_t *)tlp);
 800a75c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  tp->u.exitcode = msg;
 800a75e:	6260      	str	r0, [r4, #36]	; 0x24
  while (list_notempty(&tp->waiting)) {
 800a760:	f104 0628 	add.w	r6, r4, #40	; 0x28
 800a764:	42b3      	cmp	r3, r6
 800a766:	d007      	beq.n	800a778 <chThdExit+0x28>
  tlp->next = tp->queue.next;
 800a768:	681a      	ldr	r2, [r3, #0]
 800a76a:	62a2      	str	r2, [r4, #40]	; 0x28
    (void) chSchReadyI(list_remove(&tp->waiting));
 800a76c:	4618      	mov	r0, r3
 800a76e:	f7fe fc2f 	bl	8008fd0 <chSchReadyI>
  return (bool)(tlp->next != (thread_t *)tlp);
 800a772:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  while (list_notempty(&tp->waiting)) {
 800a774:	42b3      	cmp	r3, r6
 800a776:	d1f7      	bne.n	800a768 <chThdExit+0x18>
  if ((tp->refs == (trefs_t)0) &&
 800a778:	f894 3022 	ldrb.w	r3, [r4, #34]	; 0x22
 800a77c:	b93b      	cbnz	r3, 800a78e <chThdExit+0x3e>
 800a77e:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800a782:	079b      	lsls	r3, r3, #30
 800a784:	d103      	bne.n	800a78e <chThdExit+0x3e>
    REG_REMOVE(tp);
 800a786:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 800a78a:	6113      	str	r3, [r2, #16]
 800a78c:	615a      	str	r2, [r3, #20]
  chSchGoSleepS(CH_STATE_FINAL);
 800a78e:	200f      	movs	r0, #15
 800a790:	f7ff fc3e 	bl	800a010 <chSchGoSleepS>
  __ASM volatile ("cpsid i" : : : "memory");
 800a794:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800a796:	4b02      	ldr	r3, [pc, #8]	; (800a7a0 <chThdExit+0x50>)
 800a798:	62eb      	str	r3, [r5, #44]	; 0x2c
  }
 800a79a:	e7fe      	b.n	800a79a <chThdExit+0x4a>
 800a79c:	20002454 	.word	0x20002454
 800a7a0:	08012888 	.word	0x08012888
	...

0800a7b0 <chSchDoReschedule>:
 * @note    Not a user function, it is meant to be invoked by the scheduler
 *          itself.
 *
 * @special
 */
void chSchDoRescheduleAhead(void) {
 800a7b0:	b510      	push	{r4, lr}
  thread_t *otp = currp;
 800a7b2:	4c09      	ldr	r4, [pc, #36]	; (800a7d8 <chSchDoReschedule+0x28>)
  thread_t *tp = tqp->next;
 800a7b4:	6823      	ldr	r3, [r4, #0]
 800a7b6:	69a0      	ldr	r0, [r4, #24]
  tqp->next             = tp->queue.next;
 800a7b8:	681a      	ldr	r2, [r3, #0]
 800a7ba:	6022      	str	r2, [r4, #0]

  /* Picks the first thread from the ready queue and makes it current.*/
  currp = queue_fifo_remove(&ch.rlist.queue);
  currp->state = CH_STATE_CURRENT;
 800a7bc:	2101      	movs	r1, #1
  tqp->next->queue.prev = (thread_t *)tqp;
 800a7be:	6054      	str	r4, [r2, #4]
 800a7c0:	f883 1020 	strb.w	r1, [r3, #32]
  currp = queue_fifo_remove(&ch.rlist.queue);
 800a7c4:	61a3      	str	r3, [r4, #24]
  if (otp->prio == IDLEPRIO) {
    CH_CFG_IDLE_LEAVE_HOOK();
  }

  /* Placing in ready list ahead of peers.*/
  otp = chSchReadyAheadI(otp);
 800a7c6:	f7fe fbe3 	bl	8008f90 <chSchReadyAheadI>

  /* Swap operation as tail call.*/
  chSysSwitch(currp, otp);
 800a7ca:	4601      	mov	r1, r0
 800a7cc:	69a0      	ldr	r0, [r4, #24]
}
 800a7ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  chSysSwitch(currp, otp);
 800a7d2:	f7f5 bd85 	b.w	80002e0 <_port_switch>
 800a7d6:	bf00      	nop
 800a7d8:	20002454 	.word	0x20002454
 800a7dc:	00000000 	.word	0x00000000

0800a7e0 <main>:
void hal_lld_init(void) {

  /* Reset of all peripherals.
     Note, GPIOs are not reset because initialized before this point in
     board files.*/
  rccResetAHB1(~0);
 800a7e0:	4bbc      	ldr	r3, [pc, #752]	; (800aad4 <main+0x2f4>)
 800a7e2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a7e6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
{
 800a7e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a7ec:	2000      	movs	r0, #0
 800a7ee:	6299      	str	r1, [r3, #40]	; 0x28
 800a7f0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800a7f2:	6298      	str	r0, [r3, #40]	; 0x28
 800a7f4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
  rccResetAHB2(~STM32_GPIO_EN_MASK);
 800a7f6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a7f8:	ea6f 52c2 	mvn.w	r2, r2, lsl #23
 800a7fc:	ea6f 52d2 	mvn.w	r2, r2, lsr #23
 800a800:	62da      	str	r2, [r3, #44]	; 0x2c
 800a802:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a804:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800a808:	62da      	str	r2, [r3, #44]	; 0x2c
 800a80a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  rccResetAHB3(~0);
 800a80c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a80e:	6319      	str	r1, [r3, #48]	; 0x30
 800a810:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a812:	6318      	str	r0, [r3, #48]	; 0x30
 800a814:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  rccResetAPB1R1(~RCC_APB1RSTR1_PWRRST);
 800a816:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800a818:	f062 5280 	orn	r2, r2, #268435456	; 0x10000000
 800a81c:	639a      	str	r2, [r3, #56]	; 0x38
 800a81e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800a820:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 800a824:	639a      	str	r2, [r3, #56]	; 0x38
 800a826:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  rccResetAPB1R2(~0);
 800a828:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a82a:	63d9      	str	r1, [r3, #60]	; 0x3c
 800a82c:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a82e:	63d8      	str	r0, [r3, #60]	; 0x3c
 800a830:	6bda      	ldr	r2, [r3, #60]	; 0x3c
  rccResetAPB2(~0);
 800a832:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800a834:	6419      	str	r1, [r3, #64]	; 0x40
 800a836:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800a838:	6418      	str	r0, [r3, #64]	; 0x40
 800a83a:	6c1a      	ldr	r2, [r3, #64]	; 0x40

  /* PWR clock enabled.*/
  rccEnablePWRInterface(true);
 800a83c:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800a83e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800a842:	659a      	str	r2, [r3, #88]	; 0x58
 800a844:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800a846:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800a84a:	679a      	str	r2, [r3, #120]	; 0x78
 800a84c:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  if ((RCC->BDCR & STM32_RTCSEL_MASK) != STM32_RTCSEL) {
 800a84e:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 800a852:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800a856:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800a85a:	b089      	sub	sp, #36	; 0x24
 800a85c:	d005      	beq.n	800a86a <main+0x8a>
    RCC->BDCR = RCC_BDCR_BDRST;
 800a85e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800a862:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    RCC->BDCR = 0;
 800a866:	f8c3 0090 	str.w	r0, [r3, #144]	; 0x90
  RCC->BDCR |= STM32_LSCOSEL;
 800a86a:	4a9a      	ldr	r2, [pc, #616]	; (800aad4 <main+0x2f4>)
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a86c:	4b9a      	ldr	r3, [pc, #616]	; (800aad8 <main+0x2f8>)
 800a86e:	f8d2 1090 	ldr.w	r1, [r2, #144]	; 0x90
 800a872:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a876:	2540      	movs	r5, #64	; 0x40
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a878:	2260      	movs	r2, #96	; 0x60
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a87a:	2180      	movs	r1, #128	; 0x80
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a87c:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a880:	f44f 7080 	mov.w	r0, #256	; 0x100
 800a884:	f8c3 5180 	str.w	r5, [r3, #384]	; 0x180
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a888:	601d      	str	r5, [r3, #0]
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a88a:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a88e:	f44f 7500 	mov.w	r5, #512	; 0x200
 800a892:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a896:	6019      	str	r1, [r3, #0]
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a898:	f44f 6180 	mov.w	r1, #1024	; 0x400
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a89c:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308

  /* Programmable voltage detector enable.*/
#if STM32_PVD_ENABLE
  PWR->CR2 = PWR_CR2_PVDE | (STM32_PLS & STM32_PLS_MASK);
#else
  PWR->CR2 = 0;
 800a8a0:	4c8e      	ldr	r4, [pc, #568]	; (800aadc <main+0x2fc>)
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a8a2:	f8c3 0180 	str.w	r0, [r3, #384]	; 0x180
 800a8a6:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a8aa:	6018      	str	r0, [r3, #0]
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a8ac:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a8b0:	f8c3 5180 	str.w	r5, [r3, #384]	; 0x180
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a8b4:	601d      	str	r5, [r3, #0]
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a8b6:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a8ba:	f44f 0500 	mov.w	r5, #8388608	; 0x800000
 800a8be:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a8c2:	6019      	str	r1, [r3, #0]
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a8c4:	2170      	movs	r1, #112	; 0x70
 800a8c6:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a8ca:	f8c3 5180 	str.w	r5, [r3, #384]	; 0x180
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a8ce:	601d      	str	r5, [r3, #0]
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a8d0:	f883 2328 	strb.w	r2, [r3, #808]	; 0x328
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a8d4:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
 800a8d8:	f8c3 0184 	str.w	r0, [r3, #388]	; 0x184
 800a8dc:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a8e0:	6058      	str	r0, [r3, #4]
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a8e2:	f883 1318 	strb.w	r1, [r3, #792]	; 0x318
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a8e6:	f04f 6080 	mov.w	r0, #67108864	; 0x4000000
 800a8ea:	f8c3 6180 	str.w	r6, [r3, #384]	; 0x180
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a8ee:	601e      	str	r6, [r3, #0]
 800a8f0:	2600      	movs	r6, #0
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a8f2:	f883 1319 	strb.w	r1, [r3, #793]	; 0x319
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a8f6:	f8c3 5180 	str.w	r5, [r3, #384]	; 0x180
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a8fa:	601d      	str	r5, [r3, #0]
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a8fc:	f883 131a 	strb.w	r1, [r3, #794]	; 0x31a
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a900:	f8c3 0180 	str.w	r0, [r3, #384]	; 0x180
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a904:	6018      	str	r0, [r3, #0]
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a906:	f883 131b 	strb.w	r1, [r3, #795]	; 0x31b
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a90a:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a90e:	601a      	str	r2, [r3, #0]
 800a910:	6066      	str	r6, [r4, #4]
  PWR->CR2 |= PWR_CR2_USV;
#endif /* HAL_USE_USB */

  /* Enabling independent VDDIO2 required by GPIOG.*/
#if STM32_HAS_GPIOG
  PWR->CR2 |= PWR_CR2_IOSV;
 800a912:	6863      	ldr	r3, [r4, #4]
 800a914:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a918:	6063      	str	r3, [r4, #4]
 800a91a:	4b71      	ldr	r3, [pc, #452]	; (800aae0 <main+0x300>)
 800a91c:	461a      	mov	r2, r3
 800a91e:	3280      	adds	r2, #128	; 0x80
    _pal_init_event(i);
 800a920:	e9c3 6600 	strd	r6, r6, [r3]
 800a924:	3308      	adds	r3, #8
  for (i = 0; i < 16; i++) {
 800a926:	429a      	cmp	r2, r3
 800a928:	d1fa      	bne.n	800a920 <main+0x140>
  sdp->vmt = &vmt;
 800a92a:	4b6e      	ldr	r3, [pc, #440]	; (800aae4 <main+0x304>)
 800a92c:	f8df c1ec 	ldr.w	ip, [pc, #492]	; 800ab1c <main+0x33c>
  iqp->q_buffer  = bp;
 800a930:	f8df 91ec 	ldr.w	r9, [pc, #492]	; 800ab20 <main+0x340>

#if STM32_SERIAL_USE_USART3
  sdObjectInit(&SD3);
  iqObjectInit(&SD3.iqueue, sd_in_buf3, sizeof sd_in_buf3, NULL, &SD3);
  oqObjectInit(&SD3.oqueue, sd_out_buf3, sizeof sd_out_buf3, notify3, &SD3);
  SD3.usart = USART3;
 800a934:	f8df e1ec 	ldr.w	lr, [pc, #492]	; 800ab24 <main+0x344>
  GPTD1.tim = STM32_TIM1;
 800a938:	4c6b      	ldr	r4, [pc, #428]	; (800aae8 <main+0x308>)
  GPTD3.tim = STM32_TIM3;
 800a93a:	486c      	ldr	r0, [pc, #432]	; (800aaec <main+0x30c>)
  oqp->q_buffer  = bp;
 800a93c:	496c      	ldr	r1, [pc, #432]	; (800aaf0 <main+0x310>)
  oqp->q_notify  = onfy;
 800a93e:	f8df 81e8 	ldr.w	r8, [pc, #488]	; 800ab28 <main+0x348>
 800a942:	4d6c      	ldr	r5, [pc, #432]	; (800aaf4 <main+0x314>)
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a944:	4a64      	ldr	r2, [pc, #400]	; (800aad8 <main+0x2f8>)
  iqp->q_buffer  = bp;
 800a946:	f8c3 9018 	str.w	r9, [r3, #24]
 800a94a:	461f      	mov	r7, r3
  iqp->q_wrptr   = bp;
 800a94c:	e9c3 9908 	strd	r9, r9, [r3, #32]
 800a950:	f847 cb04 	str.w	ip, [r7], #4
  oqp->q_notify  = onfy;
 800a954:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 800a958:	f8c3 e054 	str.w	lr, [r3, #84]	; 0x54
 *
 * @init
 */
static inline void chEvtObjectInit(event_source_t *esp) {

  esp->next = (event_listener_t *)esp;
 800a95c:	605f      	str	r7, [r3, #4]
  iqp->q_top     = bp + size;
 800a95e:	f109 0910 	add.w	r9, r9, #16
  gptp->state  = GPT_STOP;
 800a962:	2701      	movs	r7, #1
  GPTD1.tim = STM32_TIM1;
 800a964:	f50e 4e64 	add.w	lr, lr, #58368	; 0xe400
  GPTD3.tim = STM32_TIM3;
 800a968:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800ab2c <main+0x34c>
 800a96c:	f8c3 901c 	str.w	r9, [r3, #28]
  oqp->q_buffer  = bp;
 800a970:	63d9      	str	r1, [r3, #60]	; 0x3c
  oqp->q_counter = size;
 800a972:	f04f 0910 	mov.w	r9, #16
  oqp->q_wrptr   = bp;
 800a976:	e9c3 1111 	strd	r1, r1, [r3, #68]	; 0x44
  GPTD1.tim = STM32_TIM1;
 800a97a:	f8c4 e00c 	str.w	lr, [r4, #12]
 800a97e:	7007      	strb	r7, [r0, #0]
  gptp->config = NULL;
 800a980:	6046      	str	r6, [r0, #4]
  GPTD3.tim = STM32_TIM3;
 800a982:	f8c0 800c 	str.w	r8, [r0, #12]
 800a986:	f04f 0ec0 	mov.w	lr, #192	; 0xc0
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a98a:	f04f 0880 	mov.w	r8, #128	; 0x80
  tqp->next = (thread_t *)tqp;
 800a98e:	f103 000c 	add.w	r0, r3, #12
  oqp->q_top     = bp + size;
 800a992:	3110      	adds	r1, #16
  iqp->q_counter = 0;
 800a994:	615e      	str	r6, [r3, #20]
  iqp->q_notify  = infy;
 800a996:	629e      	str	r6, [r3, #40]	; 0x28
  oqp->q_top     = bp + size;
 800a998:	6419      	str	r1, [r3, #64]	; 0x40
  oqp->q_counter = size;
 800a99a:	f8c3 9038 	str.w	r9, [r3, #56]	; 0x38
 800a99e:	6066      	str	r6, [r4, #4]
  gptp->state  = GPT_STOP;
 800a9a0:	7027      	strb	r7, [r4, #0]
  sdp->state = SD_STOP;
 800a9a2:	721f      	strb	r7, [r3, #8]
  iqp->q_link    = link;
 800a9a4:	62db      	str	r3, [r3, #44]	; 0x2c
  oqp->q_link    = link;
 800a9a6:	651b      	str	r3, [r3, #80]	; 0x50
  sdp->vmt = &vmt;
 800a9a8:	4629      	mov	r1, r5
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a9aa:	f882 e327 	strb.w	lr, [r2, #807]	; 0x327
  SD3.clock = STM32_USART3CLK;
 800a9ae:	4c52      	ldr	r4, [pc, #328]	; (800aaf8 <main+0x318>)
 800a9b0:	60d8      	str	r0, [r3, #12]
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a9b2:	f8c2 8184 	str.w	r8, [r2, #388]	; 0x184
  tqp->prev = (thread_t *)tqp;
 800a9b6:	6118      	str	r0, [r3, #16]
  tqp->next = (thread_t *)tqp;
 800a9b8:	f103 0030 	add.w	r0, r3, #48	; 0x30
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a9bc:	f8c2 8004 	str.w	r8, [r2, #4]
  tqp->prev = (thread_t *)tqp;
 800a9c0:	e9c3 000c 	strd	r0, r0, [r3, #48]	; 0x30
 800a9c4:	659c      	str	r4, [r3, #88]	; 0x58
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a9c6:	2040      	movs	r0, #64	; 0x40

#if OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING
  /* Free running counter mode.*/

  /* Enabling timer clock.*/
  ST_ENABLE_CLOCK();
 800a9c8:	4b42      	ldr	r3, [pc, #264]	; (800aad4 <main+0x2f4>)
 800a9ca:	f841 cb04 	str.w	ip, [r1], #4
  iqp->q_counter = 0;
 800a9ce:	616e      	str	r6, [r5, #20]
  oqp->q_counter = size;
 800a9d0:	f8c5 9038 	str.w	r9, [r5, #56]	; 0x38
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800a9d4:	f882 e346 	strb.w	lr, [r2, #838]	; 0x346
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800a9d8:	f8c2 0188 	str.w	r0, [r2, #392]	; 0x188
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800a9dc:	6090      	str	r0, [r2, #8]
 800a9de:	6d98      	ldr	r0, [r3, #88]	; 0x58
 800a9e0:	6069      	str	r1, [r5, #4]
 800a9e2:	4338      	orrs	r0, r7
 800a9e4:	6598      	str	r0, [r3, #88]	; 0x58
 800a9e6:	6f99      	ldr	r1, [r3, #120]	; 0x78

  /* Enabling the stop mode during debug for this timer.*/
  ST_ENABLE_STOP();
 800a9e8:	f8df e144 	ldr.w	lr, [pc, #324]	; 800ab30 <main+0x350>
  sdp->state = SD_STOP;
 800a9ec:	722f      	strb	r7, [r5, #8]
  ST_ENABLE_CLOCK();
 800a9ee:	4339      	orrs	r1, r7
 800a9f0:	6799      	str	r1, [r3, #120]	; 0x78
  oqp->q_buffer  = bp;
 800a9f2:	4942      	ldr	r1, [pc, #264]	; (800aafc <main+0x31c>)
 800a9f4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
  iqp->q_buffer  = bp;
 800a9f6:	4842      	ldr	r0, [pc, #264]	; (800ab00 <main+0x320>)
  ST_ENABLE_STOP();
 800a9f8:	f8de 3008 	ldr.w	r3, [lr, #8]
  oqp->q_buffer  = bp;
 800a9fc:	63e9      	str	r1, [r5, #60]	; 0x3c
  oqp->q_wrptr   = bp;
 800a9fe:	e9c5 1111 	strd	r1, r1, [r5, #68]	; 0x44
  oqp->q_top     = bp + size;
 800aa02:	4449      	add	r1, r9
 800aa04:	6429      	str	r1, [r5, #64]	; 0x40
  oqp->q_notify  = onfy;
 800aa06:	493f      	ldr	r1, [pc, #252]	; (800ab04 <main+0x324>)
  iqp->q_buffer  = bp;
 800aa08:	61a8      	str	r0, [r5, #24]
  iqp->q_wrptr   = bp;
 800aa0a:	e9c5 0008 	strd	r0, r0, [r5, #32]
  oqp->q_notify  = onfy;
 800aa0e:	64e9      	str	r1, [r5, #76]	; 0x4c
  iqp->q_top     = bp + size;
 800aa10:	4448      	add	r0, r9

#if STM32_SERIAL_USE_LPUART1
  sdObjectInit(&LPSD1);
  iqObjectInit(&LPSD1.iqueue, sd_in_buflp1, sizeof sd_in_buflp1, NULL, &LPSD1);
  oqObjectInit(&LPSD1.oqueue, sd_out_buflp1, sizeof sd_out_buflp1, notifylp1, &LPSD1);
  LPSD1.usart = LPUART1;
 800aa12:	493d      	ldr	r1, [pc, #244]	; (800ab08 <main+0x328>)
  LPSD1.clock = STM32_LPUART1CLK;
 800aa14:	65ac      	str	r4, [r5, #88]	; 0x58
 800aa16:	ea43 0c07 	orr.w	ip, r3, r7
  tqp->next = (thread_t *)tqp;
 800aa1a:	4c3c      	ldr	r4, [pc, #240]	; (800ab0c <main+0x32c>)
 800aa1c:	61e8      	str	r0, [r5, #28]

  /* Initializing the counter in free running mode.*/
  STM32_ST_TIM->PSC    = (ST_CLOCK_SRC / OSAL_ST_FREQUENCY) - 1;
 800aa1e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  LPSD1.usart = LPUART1;
 800aa22:	6569      	str	r1, [r5, #84]	; 0x54
 800aa24:	f105 0030 	add.w	r0, r5, #48	; 0x30
 800aa28:	f105 010c 	add.w	r1, r5, #12
  iqp->q_notify  = infy;
 800aa2c:	62ae      	str	r6, [r5, #40]	; 0x28
  iqp->q_link    = link;
 800aa2e:	62ed      	str	r5, [r5, #44]	; 0x2c
  oqp->q_link    = link;
 800aa30:	652d      	str	r5, [r5, #80]	; 0x50
  ST_ENABLE_STOP();
 800aa32:	f8ce c008 	str.w	ip, [lr, #8]
  tqp->prev = (thread_t *)tqp;
 800aa36:	e9c5 1103 	strd	r1, r1, [r5, #12]
 800aa3a:	e9c5 000c 	strd	r0, r0, [r5, #48]	; 0x30
  STM32_ST_TIM->ARR    = ST_ARR_INIT;
 800aa3e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800aa42:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
  STM32_ST_TIM->PSC    = (ST_CLOCK_SRC / OSAL_ST_FREQUENCY) - 1;
 800aa46:	f642 6cdf 	movw	ip, #11999	; 0x2edf
 800aa4a:	f8c3 c028 	str.w	ip, [r3, #40]	; 0x28
  STM32_ST_TIM->ARR    = ST_ARR_INIT;
 800aa4e:	62d9      	str	r1, [r3, #44]	; 0x2c
  ch.vtlist.next = (virtual_timer_t *)&ch.vtlist;
 800aa50:	f104 0c1c 	add.w	ip, r4, #28
  STM32_ST_TIM->CCMR1  = 0;
 800aa54:	619e      	str	r6, [r3, #24]
  STM32_ST_TIM->CCR[0] = 0;
 800aa56:	635e      	str	r6, [r3, #52]	; 0x34
  STM32_ST_TIM->DIER   = 0;
 800aa58:	60de      	str	r6, [r3, #12]
  STM32_ST_TIM->CR2    = 0;
 800aa5a:	605e      	str	r6, [r3, #4]
  STM32_ST_TIM->EGR    = TIM_EGR_UG;
 800aa5c:	615f      	str	r7, [r3, #20]
  STM32_ST_TIM->CR1    = TIM_CR1_CEN;
 800aa5e:	601f      	str	r7, [r3, #0]
  NVIC->IP[n] = NVIC_PRIORITY_MASK(prio);
 800aa60:	f882 831c 	strb.w	r8, [r2, #796]	; 0x31c
  tmp->cumulative = (rttime_t)0;
 800aa64:	2300      	movs	r3, #0
  NVIC->ICPR[n >> 5U] = 1U << (n & 0x1FU);
 800aa66:	f8c2 0180 	str.w	r0, [r2, #384]	; 0x180
  NVIC->ISER[n >> 5U] = 1U << (n & 0x1FU);
 800aa6a:	6010      	str	r0, [r2, #0]
 800aa6c:	2200      	movs	r2, #0
  chTMStartMeasurementX(&tm);
 800aa6e:	a802      	add	r0, sp, #8
 800aa70:	e9c4 4400 	strd	r4, r4, [r4]
  tmp->cumulative = (rttime_t)0;
 800aa74:	e9cd 2306 	strd	r2, r3, [sp, #24]
  tmp->worst      = (rtcnt_t)0;
 800aa78:	e9cd 1602 	strd	r1, r6, [sp, #8]
  ch.vtlist.delta = (sysinterval_t)-1;
 800aa7c:	6261      	str	r1, [r4, #36]	; 0x24
  ch.vtlist.prev = (virtual_timer_t *)&ch.vtlist;
 800aa7e:	e9c4 cc07 	strd	ip, ip, [r4, #28]
  tmp->n          = (ucnt_t)0;
 800aa82:	e9cd 6604 	strd	r6, r6, [sp, #16]
  ch.rlist.prio = NOPRIO;
 800aa86:	60a6      	str	r6, [r4, #8]
  ch.rlist.older = (thread_t *)&ch.rlist;
 800aa88:	e9c4 4404 	strd	r4, r4, [r4, #16]
  ch.vtlist.lasttime = (systime_t)0;
 800aa8c:	62a6      	str	r6, [r4, #40]	; 0x28
  ch.tm.offset = (rtcnt_t)0;
 800aa8e:	6766      	str	r6, [r4, #116]	; 0x74
  chTMStartMeasurementX(&tm);
 800aa90:	f7fe f916 	bl	8008cc0 <chTMStartMeasurementX.constprop.25>
  chTMStopMeasurementX(&tm);
 800aa94:	a802      	add	r0, sp, #8
 800aa96:	f7fe fa53 	bl	8008f40 <chTMStopMeasurementX>
 *
 * @notapi
 */
void _heap_init(void) {

  default_heap.provider = chCoreAllocAlignedWithOffset;
 800aa9a:	491d      	ldr	r1, [pc, #116]	; (800ab10 <main+0x330>)
  ch.tm.offset = tm.last;
 800aa9c:	9a04      	ldr	r2, [sp, #16]
  tqp->next = (thread_t *)tqp;
 800aa9e:	4b1d      	ldr	r3, [pc, #116]	; (800ab14 <main+0x334>)
 800aaa0:	6762      	str	r2, [r4, #116]	; 0x74
 800aaa2:	4a1d      	ldr	r2, [pc, #116]	; (800ab18 <main+0x338>)
 800aaa4:	600a      	str	r2, [r1, #0]
 800aaa6:	f101 020c 	add.w	r2, r1, #12
  H_NEXT(&default_heap.header) = NULL;
  H_PAGES(&default_heap.header) = 0;
 800aaaa:	e9c1 6601 	strd	r6, r6, [r1, #4]
void chMtxObjectInit(mutex_t *mp) {

  chDbgCheck(mp != NULL);

  queue_init(&mp->queue);
  mp->owner = NULL;
 800aaae:	614e      	str	r6, [r1, #20]
  tqp->prev = (thread_t *)tqp;
 800aab0:	e9c1 2203 	strd	r2, r2, [r1, #12]
/* Module local functions.                                                   */
/*===========================================================================*/

static inline void dyn_list_init(dyn_list_t *dlp) {

  dlp->next = (dyn_element_t *)dlp;
 800aab4:	eb03 0109 	add.w	r1, r3, r9
             (size >= sizeof(void *)) &&
             (align >= PORT_NATURAL_ALIGN) &&
             MEM_IS_VALID_ALIGNMENT(align));

  mp->next = NULL;
  mp->object_size = size;
 800aab8:	2214      	movs	r2, #20
 800aaba:	6119      	str	r1, [r3, #16]
 800aabc:	619a      	str	r2, [r3, #24]
 800aabe:	f103 0124 	add.w	r1, r3, #36	; 0x24
 800aac2:	f103 0228 	add.w	r2, r3, #40	; 0x28
 800aac6:	6259      	str	r1, [r3, #36]	; 0x24
 800aac8:	629a      	str	r2, [r3, #40]	; 0x28
 800aaca:	211c      	movs	r1, #28
 800aacc:	f103 023c 	add.w	r2, r3, #60	; 0x3c
 800aad0:	6319      	str	r1, [r3, #48]	; 0x30
 800aad2:	e02f      	b.n	800ab34 <main+0x354>
 800aad4:	40021000 	.word	0x40021000
 800aad8:	e000e100 	.word	0xe000e100
 800aadc:	40007000 	.word	0x40007000
 800aae0:	200023d4 	.word	0x200023d4
 800aae4:	20001238 	.word	0x20001238
 800aae8:	200011b8 	.word	0x200011b8
 800aaec:	200011c8 	.word	0x200011c8
 800aaf0:	2000263c 	.word	0x2000263c
 800aaf4:	200011d8 	.word	0x200011d8
 800aaf8:	07270e00 	.word	0x07270e00
 800aafc:	2000264c 	.word	0x2000264c
 800ab00:	2000262c 	.word	0x2000262c
 800ab04:	08008e31 	.word	0x08008e31
 800ab08:	40008000 	.word	0x40008000
 800ab0c:	20002454 	.word	0x20002454
 800ab10:	200025f8 	.word	0x200025f8
 800ab14:	200024cc 	.word	0x200024cc
 800ab18:	08008ee1 	.word	0x08008ee1
 800ab1c:	08012af0 	.word	0x08012af0
 800ab20:	2000261c 	.word	0x2000261c
 800ab24:	40004800 	.word	0x40004800
 800ab28:	08008e21 	.word	0x08008e21
 800ab2c:	40000400 	.word	0x40000400
 800ab30:	e0042000 	.word	0xe0042000
 800ab34:	63da      	str	r2, [r3, #60]	; 0x3c
 800ab36:	f103 0140 	add.w	r1, r3, #64	; 0x40
 800ab3a:	f103 0244 	add.w	r2, r3, #68	; 0x44
 800ab3e:	6419      	str	r1, [r3, #64]	; 0x40
 800ab40:	645a      	str	r2, [r3, #68]	; 0x44
  mp->align = align;
 800ab42:	2104      	movs	r1, #4
  mp->provider = provider;
 800ab44:	4ac8      	ldr	r2, [pc, #800]	; (800ae68 <main+0x688>)
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800ab46:	48c9      	ldr	r0, [pc, #804]	; (800ae6c <main+0x68c>)
 800ab48:	609e      	str	r6, [r3, #8]
  mp->next = NULL;
 800ab4a:	615e      	str	r6, [r3, #20]
 800ab4c:	62de      	str	r6, [r3, #44]	; 0x2c
  mp->align = align;
 800ab4e:	61d9      	str	r1, [r3, #28]
 800ab50:	6359      	str	r1, [r3, #52]	; 0x34
  mp->provider = provider;
 800ab52:	621a      	str	r2, [r3, #32]
 800ab54:	639a      	str	r2, [r3, #56]	; 0x38
  ch_memcore.nextmem = __heap_base__;
 800ab56:	f8df c354 	ldr.w	ip, [pc, #852]	; 800aeac <main+0x6cc>
 800ab5a:	49c5      	ldr	r1, [pc, #788]	; (800ae70 <main+0x690>)
  tp->prio      = prio;
 800ab5c:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
 800ab60:	e9c3 3300 	strd	r3, r3, [r3]
  ch_memcore.endmem  = __heap_end__;
 800ab64:	4bc3      	ldr	r3, [pc, #780]	; (800ae74 <main+0x694>)
  tp->flags     = CH_FLAG_MODE_STATIC;
 800ab66:	f884 6051 	strb.w	r6, [r4, #81]	; 0x51
 800ab6a:	e9cc 1300 	strd	r1, r3, [ip]
  tp->realprio  = prio;
 800ab6e:	f8c4 806c 	str.w	r8, [r4, #108]	; 0x6c
  tp->epending  = (eventmask_t)0;
 800ab72:	e9c4 6619 	strd	r6, r6, [r4, #100]	; 0x64
  tp->refs      = (trefs_t)1;
 800ab76:	f884 7052 	strb.w	r7, [r4, #82]	; 0x52
 800ab7a:	68c2      	ldr	r2, [r0, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  reg_value  =  (reg_value                                   |
 800ab7c:	4bbe      	ldr	r3, [pc, #760]	; (800ae78 <main+0x698>)
  REG_INSERT(tp);
 800ab7e:	6961      	ldr	r1, [r4, #20]
  tp->name      = name;
 800ab80:	f8df c32c 	ldr.w	ip, [pc, #812]	; 800aeb0 <main+0x6d0>
 800ab84:	f8c4 c048 	str.w	ip, [r4, #72]	; 0x48
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800ab88:	f64f 0eff 	movw	lr, #63743	; 0xf8ff
 800ab8c:	ea02 020e 	and.w	r2, r2, lr
  reg_value  =  (reg_value                                   |
 800ab90:	4313      	orrs	r3, r2
  CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 800ab92:	f8df c320 	ldr.w	ip, [pc, #800]	; 800aeb4 <main+0x6d4>
  REG_INSERT(tp);
 800ab96:	6461      	str	r1, [r4, #68]	; 0x44
 800ab98:	f104 0230 	add.w	r2, r4, #48	; 0x30
 800ab9c:	6424      	str	r4, [r4, #64]	; 0x40
 800ab9e:	610a      	str	r2, [r1, #16]
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
  SCB->AIRCR =  reg_value;
 800aba0:	60c3      	str	r3, [r0, #12]
 800aba2:	f8dc 300c 	ldr.w	r3, [ip, #12]
  DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 800aba6:	49b5      	ldr	r1, [pc, #724]	; (800ae7c <main+0x69c>)
 800aba8:	6162      	str	r2, [r4, #20]
  CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 800abaa:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800abae:	f8cc 300c 	str.w	r3, [ip, #12]
  DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 800abb2:	680b      	ldr	r3, [r1, #0]
  currp = _thread_init(&ch.mainthread, (const char *)&ch_debug, NORMALPRIO);
 800abb4:	61a2      	str	r2, [r4, #24]
  currp->state = CH_STATE_CURRENT;
 800abb6:	f884 7050 	strb.w	r7, [r4, #80]	; 0x50
 800abba:	433b      	orrs	r3, r7
  tlp->next = (thread_t *)tlp;
 800abbc:	f104 0c58 	add.w	ip, r4, #88	; 0x58
  tqp->next = (thread_t *)tqp;
 800abc0:	f104 075c 	add.w	r7, r4, #92	; 0x5c
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800abc4:	2220      	movs	r2, #32
  currp->wabase = NULL;
 800abc6:	64e6      	str	r6, [r4, #76]	; 0x4c
 800abc8:	600b      	str	r3, [r1, #0]
  tlp->next = (thread_t *)tlp;
 800abca:	f8c4 c058 	str.w	ip, [r4, #88]	; 0x58
 800abce:	f880 901f 	strb.w	r9, [r0, #31]
  tqp->next = (thread_t *)tqp;
 800abd2:	65e7      	str	r7, [r4, #92]	; 0x5c
 800abd4:	f880 2022 	strb.w	r2, [r0, #34]	; 0x22
  tqp->prev = (thread_t *)tqp;
 800abd8:	6627      	str	r7, [r4, #96]	; 0x60
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800abda:	f386 8811 	msr	BASEPRI, r6
  __ASM volatile ("cpsie i" : : : "memory");
 800abde:	b662      	cpsie	i
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800abe0:	f382 8811 	msr	BASEPRI, r2
 */
thread_t *chRegFirstThread(void) {
  thread_t *tp;

  chSysLock();
  tp = ch.rlist.newer;
 800abe4:	6922      	ldr	r2, [r4, #16]
 800abe6:	6821      	ldr	r1, [r4, #0]
#if CH_CFG_USE_DYNAMIC == TRUE
  tp->refs++;
 800abe8:	f892 3022 	ldrb.w	r3, [r2, #34]	; 0x22
 800abec:	42a1      	cmp	r1, r4
 800abee:	f103 0301 	add.w	r3, r3, #1
 800abf2:	f882 3022 	strb.w	r3, [r2, #34]	; 0x22
 800abf6:	d005      	beq.n	800ac04 <main+0x424>
 800abf8:	69a0      	ldr	r0, [r4, #24]
 800abfa:	688b      	ldr	r3, [r1, #8]
 800abfc:	6881      	ldr	r1, [r0, #8]
 800abfe:	4299      	cmp	r1, r3
 800ac00:	f0c0 83b8 	bcc.w	800b374 <main+0xb94>
 800ac04:	f04f 0a00 	mov.w	sl, #0
 800ac08:	f38a 8811 	msr	BASEPRI, sl
 800ac0c:	4e9c      	ldr	r6, [pc, #624]	; (800ae80 <main+0x6a0>)
  thread_t *ctp;

  /* Scanning registry.*/
  ctp = chRegFirstThread();
  do {
    if (chThdGetWorkingAreaX(ctp) == wa) {
 800ac0e:	69d3      	ldr	r3, [r2, #28]
 800ac10:	42b3      	cmp	r3, r6
 800ac12:	f000 85f1 	beq.w	800b7f8 <main+0x1018>
 800ac16:	2320      	movs	r3, #32
 800ac18:	f383 8811 	msr	BASEPRI, r3
  ntp = tp->newer;
 800ac1c:	f8d2 b010 	ldr.w	fp, [r2, #16]
  if (ntp == (thread_t *)&ch.rlist) {
 800ac20:	45a3      	cmp	fp, r4
 800ac22:	f000 83dd 	beq.w	800b3e0 <main+0xc00>
    chDbgAssert(ntp->refs < (trefs_t)255, "too many references");
 800ac26:	f89b 3022 	ldrb.w	r3, [fp, #34]	; 0x22
 800ac2a:	2bff      	cmp	r3, #255	; 0xff
 800ac2c:	f000 83db 	beq.w	800b3e6 <main+0xc06>
    ntp->refs++;
 800ac30:	3301      	adds	r3, #1
 800ac32:	f88b 3022 	strb.w	r3, [fp, #34]	; 0x22
 800ac36:	6823      	ldr	r3, [r4, #0]
 800ac38:	42a3      	cmp	r3, r4
 800ac3a:	d005      	beq.n	800ac48 <main+0x468>
 800ac3c:	69a1      	ldr	r1, [r4, #24]
 800ac3e:	689b      	ldr	r3, [r3, #8]
 800ac40:	6889      	ldr	r1, [r1, #8]
 800ac42:	4299      	cmp	r1, r3
 800ac44:	f0c0 83d7 	bcc.w	800b3f6 <main+0xc16>
 800ac48:	f38a 8811 	msr	BASEPRI, sl
 800ac4c:	2320      	movs	r3, #32
 800ac4e:	f383 8811 	msr	BASEPRI, r3
  chDbgAssert(tp->refs > (trefs_t)0, "not referenced");
 800ac52:	f892 3022 	ldrb.w	r3, [r2, #34]	; 0x22
 800ac56:	2b00      	cmp	r3, #0
 800ac58:	f000 8390 	beq.w	800b37c <main+0xb9c>
  tp->refs--;
 800ac5c:	3b01      	subs	r3, #1
 800ac5e:	f882 3022 	strb.w	r3, [r2, #34]	; 0x22
  if ((tp->refs == (trefs_t)0) && (tp->state == CH_STATE_FINAL)) {
 800ac62:	6a11      	ldr	r1, [r2, #32]
 800ac64:	6823      	ldr	r3, [r4, #0]
 800ac66:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 800ac6a:	290f      	cmp	r1, #15
 800ac6c:	f000 838a 	beq.w	800b384 <main+0xba4>
 800ac70:	42a3      	cmp	r3, r4
 800ac72:	d005      	beq.n	800ac80 <main+0x4a0>
 800ac74:	69a2      	ldr	r2, [r4, #24]
 800ac76:	689b      	ldr	r3, [r3, #8]
 800ac78:	6892      	ldr	r2, [r2, #8]
 800ac7a:	429a      	cmp	r2, r3
 800ac7c:	f0c0 83b7 	bcc.w	800b3ee <main+0xc0e>
 800ac80:	f38a 8811 	msr	BASEPRI, sl
  return ntp;
 800ac84:	465a      	mov	r2, fp
      return ctp;
    }
    ctp = chRegNextThread(ctp);
  } while (ctp != NULL);
 800ac86:	f1bb 0f00 	cmp.w	fp, #0
 800ac8a:	d1c0      	bne.n	800ac0e <main+0x42e>
 800ac8c:	2320      	movs	r3, #32
 800ac8e:	f383 8811 	msr	BASEPRI, r3
  PORT_SETUP_CONTEXT(tp, tdp->wbase, tp, tdp->funcp, tdp->arg);
 800ac92:	4a7c      	ldr	r2, [pc, #496]	; (800ae84 <main+0x6a4>)
 800ac94:	4b7c      	ldr	r3, [pc, #496]	; (800ae88 <main+0x6a8>)
 800ac96:	66f2      	str	r2, [r6, #108]	; 0x6c
  tp->state     = CH_STATE_WTSTART;
 800ac98:	2202      	movs	r2, #2
 800ac9a:	f8a6 20b0 	strh.w	r2, [r6, #176]	; 0xb0
  tp->prio      = prio;
 800ac9e:	2201      	movs	r2, #1
  REG_INSERT(tp);
 800aca0:	6961      	ldr	r1, [r4, #20]
  PORT_SETUP_CONTEXT(tp, tdp->wbase, tp, tdp->funcp, tdp->arg);
 800aca2:	487a      	ldr	r0, [pc, #488]	; (800ae8c <main+0x6ac>)
  tp->realprio  = prio;
 800aca4:	f8c6 20cc 	str.w	r2, [r6, #204]	; 0xcc
  tp->prio      = prio;
 800aca8:	e9c6 2326 	strd	r2, r3, [r6, #152]	; 0x98
  tp->refs      = (trefs_t)1;
 800acac:	f886 20b2 	strb.w	r2, [r6, #178]	; 0xb2
  chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 800acb0:	6822      	ldr	r2, [r4, #0]
  PORT_SETUP_CONTEXT(tp, tdp->wbase, tp, tdp->funcp, tdp->arg);
 800acb2:	f8c6 008c 	str.w	r0, [r6, #140]	; 0x8c
  REG_INSERT(tp);
 800acb6:	f103 0724 	add.w	r7, r3, #36	; 0x24
  tp->name      = name;
 800acba:	4875      	ldr	r0, [pc, #468]	; (800ae90 <main+0x6b0>)
 800acbc:	f8c6 00a8 	str.w	r0, [r6, #168]	; 0xa8
  REG_INSERT(tp);
 800acc0:	f8c6 10a4 	str.w	r1, [r6, #164]	; 0xa4
  tp->wabase = tdp->wbase;
 800acc4:	f8c6 60ac 	str.w	r6, [r6, #172]	; 0xac
  PORT_SETUP_CONTEXT(tp, tdp->wbase, tp, tdp->funcp, tdp->arg);
 800acc8:	f8c6 b070 	str.w	fp, [r6, #112]	; 0x70
  tp->epending  = (eventmask_t)0;
 800accc:	e9c6 bb31 	strd	fp, fp, [r6, #196]	; 0xc4
  REG_INSERT(tp);
 800acd0:	f8c6 40a0 	str.w	r4, [r6, #160]	; 0xa0
 800acd4:	42a2      	cmp	r2, r4
 800acd6:	610f      	str	r7, [r1, #16]
  tlp->next = (thread_t *)tlp;
 800acd8:	f103 014c 	add.w	r1, r3, #76	; 0x4c
  tqp->next = (thread_t *)tqp;
 800acdc:	f103 0350 	add.w	r3, r3, #80	; 0x50
 800ace0:	6167      	str	r7, [r4, #20]
 800ace2:	e9c6 132e 	strd	r1, r3, [r6, #184]	; 0xb8
  tqp->prev = (thread_t *)tqp;
 800ace6:	f8c6 30c0 	str.w	r3, [r6, #192]	; 0xc0
  thread_t *otp = currp;
 800acea:	69a0      	ldr	r0, [r4, #24]
  chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 800acec:	d004      	beq.n	800acf8 <main+0x518>
 800acee:	6893      	ldr	r3, [r2, #8]
 800acf0:	6882      	ldr	r2, [r0, #8]
 800acf2:	429a      	cmp	r2, r3
 800acf4:	f0c0 8665 	bcc.w	800b9c2 <main+0x11e2>
  ntp->u.rdymsg = msg;
 800acf8:	2300      	movs	r3, #0
 800acfa:	f8c6 30b4 	str.w	r3, [r6, #180]	; 0xb4
  if (ntp->prio <= otp->prio) {
 800acfe:	6883      	ldr	r3, [r0, #8]
 800ad00:	2b00      	cmp	r3, #0
 800ad02:	f000 864a 	beq.w	800b99a <main+0x11ba>
    (void) chSchReadyI(ntp);
 800ad06:	4863      	ldr	r0, [pc, #396]	; (800ae94 <main+0x6b4>)
 800ad08:	f7fe f962 	bl	8008fd0 <chSchReadyI>
 800ad0c:	6823      	ldr	r3, [r4, #0]
 800ad0e:	42a3      	cmp	r3, r4
 800ad10:	d005      	beq.n	800ad1e <main+0x53e>
 800ad12:	69a2      	ldr	r2, [r4, #24]
 800ad14:	689b      	ldr	r3, [r3, #8]
 800ad16:	6892      	ldr	r2, [r2, #8]
 800ad18:	429a      	cmp	r2, r3
 800ad1a:	f0c0 8656 	bcc.w	800b9ca <main+0x11ea>
 800ad1e:	2300      	movs	r3, #0
 800ad20:	f383 8811 	msr	BASEPRI, r3
 800ad24:	2320      	movs	r3, #32
 800ad26:	f383 8811 	msr	BASEPRI, r3
  osalDbgAssert((sdp->state == SD_STOP) || (sdp->state == SD_READY),
 800ad2a:	7a2b      	ldrb	r3, [r5, #8]
 800ad2c:	1e5a      	subs	r2, r3, #1
 800ad2e:	2a01      	cmp	r2, #1
 800ad30:	f200 862f 	bhi.w	800b992 <main+0x11b2>
void sd_lld_start(SerialDriver *sdp, const SerialConfig *config) {

  if (config == NULL)
    config = &default_config;

  if (sdp->state == SD_STOP) {
 800ad34:	2b01      	cmp	r3, #1
 800ad36:	d109      	bne.n	800ad4c <main+0x56c>
      rccEnableUART8(true);
    }
#endif
#if STM32_SERIAL_USE_LPUART1
    if (&LPSD1 == sdp) {
      rccEnableLPUART1(true);
 800ad38:	4b57      	ldr	r3, [pc, #348]	; (800ae98 <main+0x6b8>)
 800ad3a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800ad3c:	f042 0201 	orr.w	r2, r2, #1
 800ad40:	65da      	str	r2, [r3, #92]	; 0x5c
 800ad42:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 800ad44:	f042 0201 	orr.w	r2, r2, #1
 800ad48:	67da      	str	r2, [r3, #124]	; 0x7c
 800ad4a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
  USART_TypeDef *u = sdp->usart;
 800ad4c:	e9d5 6115 	ldrd	r6, r1, [r5, #84]	; 0x54
    fck = (uint32_t)(((uint64_t)sdp->clock * 256 ) / config->speed);
 800ad50:	f44f 4216 	mov.w	r2, #38400	; 0x9600
 800ad54:	0208      	lsls	r0, r1, #8
 800ad56:	2300      	movs	r3, #0
 800ad58:	0e09      	lsrs	r1, r1, #24
 800ad5a:	f7fd fdf3 	bl	8008944 <__aeabi_uldivmod>
 800ad5e:	6823      	ldr	r3, [r4, #0]
  u->BRR = fck;
 800ad60:	60f0      	str	r0, [r6, #12]
  u->CR2 = config->cr2 | USART_CR2_LBDIE;
 800ad62:	2140      	movs	r1, #64	; 0x40
 800ad64:	6071      	str	r1, [r6, #4]
  u->CR3 = config->cr3 | USART_CR3_EIE;
 800ad66:	2201      	movs	r2, #1
  u->CR1 = config->cr1 | USART_CR1_UE | USART_CR1_PEIE |
 800ad68:	f240 112d 	movw	r1, #301	; 0x12d
  u->CR3 = config->cr3 | USART_CR3_EIE;
 800ad6c:	60b2      	str	r2, [r6, #8]
 800ad6e:	42a3      	cmp	r3, r4
  u->CR1 = config->cr1 | USART_CR1_UE | USART_CR1_PEIE |
 800ad70:	6031      	str	r1, [r6, #0]
  u->ICR = 0xFFFFFFFFU;
 800ad72:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
  sdp->state = SD_READY;
 800ad76:	f04f 0102 	mov.w	r1, #2
 800ad7a:	6232      	str	r2, [r6, #32]
 800ad7c:	7229      	strb	r1, [r5, #8]
    sdp->rxmask = 0xFF;
 800ad7e:	f885 205c 	strb.w	r2, [r5, #92]	; 0x5c
 800ad82:	d005      	beq.n	800ad90 <main+0x5b0>
 800ad84:	69a2      	ldr	r2, [r4, #24]
 800ad86:	689b      	ldr	r3, [r3, #8]
 800ad88:	6892      	ldr	r2, [r2, #8]
 800ad8a:	429a      	cmp	r2, r3
 800ad8c:	f0c0 8611 	bcc.w	800b9b2 <main+0x11d2>
 800ad90:	2700      	movs	r7, #0
 800ad92:	f387 8811 	msr	BASEPRI, r7
          bit_rate=the_bit_rate;
 800ad96:	4e41      	ldr	r6, [pc, #260]	; (800ae9c <main+0x6bc>)
          rx_port=the_rx_port; rx_pin=the_rx_pin;
 800ad98:	f8df b11c 	ldr.w	fp, [pc, #284]	; 800aeb8 <main+0x6d8>
              _mode_=mode_codes::INVALID_MODE;
 800ad9c:	f8df a11c 	ldr.w	sl, [pc, #284]	; 800aebc <main+0x6dc>
          rx_status=rx_status_codes::LISTENING;
 800ada0:	f8c6 7470 	str.w	r7, [r6, #1136]	; 0x470
          tc_tick=double(1)/double(_gpt_config_.frequency);
 800ada4:	f20f 09a8 	addw	r9, pc, #168	; 0xa8
 800ada8:	e9d9 8900 	ldrd	r8, r9, [r9]
          bit_1st_quarter=static_cast<uint32_t>(bit_time/(4*tc_tick));
 800adac:	f44f 7582 	mov.w	r5, #260	; 0x104
 800adb0:	6335      	str	r5, [r6, #48]	; 0x30
          bit_1st_half=(bit_1st_quarter<<1);
 800adb2:	f44f 7502 	mov.w	r5, #520	; 0x208
          tc_tick=double(1)/double(_gpt_config_.frequency);
 800adb6:	e9c6 8904 	strd	r8, r9, [r6, #16]
          bit_1st_half=(bit_1st_quarter<<1);
 800adba:	62f5      	str	r5, [r6, #44]	; 0x2c
          bit_time=double(1)/double(bit_rate);
 800adbc:	f20f 0998 	addw	r9, pc, #152	; 0x98
 800adc0:	e9d9 8900 	ldrd	r8, r9, [r9]
          bit_ticks=(bit_1st_half<<1);
 800adc4:	f44f 6582 	mov.w	r5, #1040	; 0x410
 800adc8:	62b5      	str	r5, [r6, #40]	; 0x28
          data_bits=the_data_bits; parity=the_parity; stop_bits=the_stop_bits;
 800adca:	2508      	movs	r5, #8
 800adcc:	63b5      	str	r5, [r6, #56]	; 0x38
 800adce:	2501      	movs	r5, #1
          bit_time=double(1)/double(bit_rate);
 800add0:	e9c6 8906 	strd	r8, r9, [r6, #24]
          data_bits=the_data_bits; parity=the_parity; stop_bits=the_stop_bits;
 800add4:	e9c6 550f 	strd	r5, r5, [r6, #60]	; 0x3c
          frame_time=tx_frame_bits*bit_time;
 800add8:	f20f 0984 	addw	r9, pc, #132	; 0x84
 800addc:	e9d9 8900 	ldrd	r8, r9, [r9]
          parity_bit_pos=1 + // the start bit
 800ade0:	2509      	movs	r5, #9
              _mode_=mode_codes::INVALID_MODE;
 800ade2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
          parity_bit_pos=1 + // the start bit
 800ade6:	64f5      	str	r5, [r6, #76]	; 0x4c
          rx_port=the_rx_port; rx_pin=the_rx_pin;
 800ade8:	6075      	str	r5, [r6, #4]
          tx_port=the_tx_port; tx_pin=the_tx_pin;
 800adea:	60f5      	str	r5, [r6, #12]
          bit_rate=the_bit_rate;
 800adec:	f44f 5216 	mov.w	r2, #9600	; 0x2580
          first_stop_bit_pos=parity_bit_pos +
 800adf0:	250a      	movs	r5, #10
          rx_data_status=rx_data_status_codes::NO_DATA_AVAILABLE;
 800adf2:	f8c6 7474 	str.w	r7, [r6, #1140]	; 0x474
 800adf6:	f8c6 345c 	str.w	r3, [r6, #1116]	; 0x45c
 800adfa:	f8c6 7460 	str.w	r7, [r6, #1120]	; 0x460
 800adfe:	f8c6 3458 	str.w	r3, [r6, #1112]	; 0x458
          rx_interrupt_counter=0;
 800ae02:	f8c6 7478 	str.w	r7, [r6, #1144]	; 0x478
 800ae06:	f8c6 3880 	str.w	r3, [r6, #2176]	; 0x880
          tx_status=tx_status_codes::IDLE;
 800ae0a:	f8c6 7890 	str.w	r7, [r6, #2192]	; 0x890
 800ae0e:	f8c6 387c 	str.w	r3, [r6, #2172]	; 0x87c
          bit_rate=the_bit_rate;
 800ae12:	6372      	str	r2, [r6, #52]	; 0x34
 800ae14:	f8c6 7884 	str.w	r7, [r6, #2180]	; 0x884
          rx_frame_bits=1 + // the start bit
 800ae18:	220b      	movs	r2, #11
          first_stop_bit_pos=parity_bit_pos +
 800ae1a:	6535      	str	r5, [r6, #80]	; 0x50
          gptStart(TIMER,&_gpt_config_);
 800ae1c:	4920      	ldr	r1, [pc, #128]	; (800aea0 <main+0x6c0>)
 800ae1e:	4821      	ldr	r0, [pc, #132]	; (800aea4 <main+0x6c4>)
              _mode_=mode_codes::INVALID_MODE;
 800ae20:	f8ca 3000 	str.w	r3, [sl]
          data_mask=(1<<static_cast<uint32_t>(data_bits))-1;
 800ae24:	25ff      	movs	r5, #255	; 0xff
          tx_frame_bits=rx_frame_bits;
 800ae26:	e9c6 2211 	strd	r2, r2, [r6, #68]	; 0x44
          frame_time=tx_frame_bits*bit_time;
 800ae2a:	e9c6 8908 	strd	r8, r9, [r6, #32]
          data_mask=(1<<static_cast<uint32_t>(data_bits))-1;
 800ae2e:	6575      	str	r5, [r6, #84]	; 0x54
          tx_interrupt_counter=0;
 800ae30:	f8c6 7894 	str.w	r7, [r6, #2196]	; 0x894
          bit_rate=the_bit_rate;
 800ae34:	4d1c      	ldr	r5, [pc, #112]	; (800aea8 <main+0x6c8>)
          rx_port=the_rx_port; rx_pin=the_rx_pin;
 800ae36:	f8c6 b000 	str.w	fp, [r6]
          tx_port=the_tx_port; tx_pin=the_tx_pin;
 800ae3a:	f8c6 b008 	str.w	fp, [r6, #8]
          gptStart(TIMER,&_gpt_config_);
 800ae3e:	f7fe fe27 	bl	8009a90 <gptStart>
                palSetPadMode(
 800ae42:	4658      	mov	r0, fp
 800ae44:	2201      	movs	r2, #1
 800ae46:	f44f 7100 	mov.w	r1, #512	; 0x200
 800ae4a:	e039      	b.n	800aec0 <main+0x6e0>
 800ae4c:	f3af 8000 	nop.w
 800ae50:	9abcaf48 	.word	0x9abcaf48
 800ae54:	3e7ad7f2 	.word	0x3e7ad7f2
 800ae58:	b4e81b4f 	.word	0xb4e81b4f
 800ae5c:	3f1b4e81 	.word	0x3f1b4e81
 800ae60:	2c5f92c6 	.word	0x2c5f92c6
 800ae64:	3f52c5f9 	.word	0x3f52c5f9
 800ae68:	08008ea1 	.word	0x08008ea1
 800ae6c:	e000ed00 	.word	0xe000ed00
 800ae70:	200026d8 	.word	0x200026d8
 800ae74:	200a0000 	.word	0x200a0000
 800ae78:	05fa0300 	.word	0x05fa0300
 800ae7c:	e0001000 	.word	0xe0001000
 800ae80:	20002518 	.word	0x20002518
 800ae84:	08009101 	.word	0x08009101
 800ae88:	20002584 	.word	0x20002584
 800ae8c:	080002f1 	.word	0x080002f1
 800ae90:	08012a68 	.word	0x08012a68
 800ae94:	200025a8 	.word	0x200025a8
 800ae98:	40021000 	.word	0x40021000
 800ae9c:	200012a0 	.word	0x200012a0
 800aea0:	08012760 	.word	0x08012760
 800aea4:	200011b8 	.word	0x200011b8
 800aea8:	20001b38 	.word	0x20001b38
 800aeac:	200025f0 	.word	0x200025f0
 800aeb0:	08012958 	.word	0x08012958
 800aeb4:	e000edf0 	.word	0xe000edf0
 800aeb8:	48000400 	.word	0x48000400
 800aebc:	20002614 	.word	0x20002614
 800aec0:	f7fe fa26 	bl	8009310 <_pal_lld_setgroupmode>
                palSetPad(rx_tx_port,rx_tx_pin);
 800aec4:	f44f 7100 	mov.w	r1, #512	; 0x200
                _mode_=mode_codes::TX_MODE;
 800aec8:	2202      	movs	r2, #2
          bit_rate=the_bit_rate;
 800aeca:	f44f 5316 	mov.w	r3, #9600	; 0x2580
                palSetPad(rx_tx_port,rx_tx_pin);
 800aece:	f8ab 1018 	strh.w	r1, [fp, #24]
                _mode_=mode_codes::TX_MODE;
 800aed2:	f8ca 2000 	str.w	r2, [sl]
          bit_rate=the_bit_rate;
 800aed6:	636b      	str	r3, [r5, #52]	; 0x34
          tc_tick=double(1)/double(_gpt_config_.frequency);
 800aed8:	a3cb      	add	r3, pc, #812	; (adr r3, 800b208 <main+0xa28>)
 800aeda:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aede:	e9c5 2304 	strd	r2, r3, [r5, #16]
          bit_time=double(1)/double(bit_rate);
 800aee2:	a3cb      	add	r3, pc, #812	; (adr r3, 800b210 <main+0xa30>)
 800aee4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aee8:	e9c5 2306 	strd	r2, r3, [r5, #24]
          bit_1st_quarter=static_cast<uint32_t>(bit_time/(4*tc_tick));
 800aeec:	f44f 7382 	mov.w	r3, #260	; 0x104
 800aef0:	632b      	str	r3, [r5, #48]	; 0x30
          bit_1st_half=(bit_1st_quarter<<1);
 800aef2:	f44f 7302 	mov.w	r3, #520	; 0x208
 800aef6:	62eb      	str	r3, [r5, #44]	; 0x2c
          bit_ticks=(bit_1st_half<<1);
 800aef8:	f44f 6382 	mov.w	r3, #1040	; 0x410
          data_bits=the_data_bits; parity=the_parity; stop_bits=the_stop_bits;
 800aefc:	f04f 0c08 	mov.w	ip, #8
          bit_ticks=(bit_1st_half<<1);
 800af00:	62ab      	str	r3, [r5, #40]	; 0x28
          data_bits=the_data_bits; parity=the_parity; stop_bits=the_stop_bits;
 800af02:	2301      	movs	r3, #1
 800af04:	e9c5 c30e 	strd	ip, r3, [r5, #56]	; 0x38
 800af08:	642b      	str	r3, [r5, #64]	; 0x40
          rx_frame_bits=1 + // the start bit
 800af0a:	230b      	movs	r3, #11
          tx_frame_bits=rx_frame_bits;
 800af0c:	e9c5 3311 	strd	r3, r3, [r5, #68]	; 0x44
          frame_time=tx_frame_bits*bit_time;
 800af10:	a3c1      	add	r3, pc, #772	; (adr r3, 800b218 <main+0xa38>)
 800af12:	e9d3 2300 	ldrd	r2, r3, [r3]
          first_stop_bit_pos=parity_bit_pos +
 800af16:	f04f 0e09 	mov.w	lr, #9
          frame_time=tx_frame_bits*bit_time;
 800af1a:	e9c5 2308 	strd	r2, r3, [r5, #32]
          first_stop_bit_pos=parity_bit_pos +
 800af1e:	230a      	movs	r3, #10
 800af20:	e9c5 e313 	strd	lr, r3, [r5, #76]	; 0x4c
          data_mask=(1<<static_cast<uint32_t>(data_bits))-1;
 800af24:	23ff      	movs	r3, #255	; 0xff
 800af26:	656b      	str	r3, [r5, #84]	; 0x54
              _mode_=mode_codes::INVALID_MODE;
 800af28:	f8df 9324 	ldr.w	r9, [pc, #804]	; 800b250 <main+0xa70>
          gptStart(TIMER,&_gpt_config_);
 800af2c:	49bc      	ldr	r1, [pc, #752]	; (800b220 <main+0xa40>)
 800af2e:	48bd      	ldr	r0, [pc, #756]	; (800b224 <main+0xa44>)
          rx_status=rx_status_codes::LISTENING;
 800af30:	f8c5 7470 	str.w	r7, [r5, #1136]	; 0x470
          rx_port=the_rx_port; rx_pin=the_rx_pin;
 800af34:	2308      	movs	r3, #8
 800af36:	606b      	str	r3, [r5, #4]
          tx_port=the_tx_port; tx_pin=the_tx_pin;
 800af38:	2208      	movs	r2, #8
 800af3a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
          rx_data_status=rx_data_status_codes::NO_DATA_AVAILABLE;
 800af3e:	f8c5 7474 	str.w	r7, [r5, #1140]	; 0x474
 800af42:	f8c5 345c 	str.w	r3, [r5, #1116]	; 0x45c
 800af46:	f8c5 7460 	str.w	r7, [r5, #1120]	; 0x460
 800af4a:	f8c5 3458 	str.w	r3, [r5, #1112]	; 0x458
          rx_interrupt_counter=0;
 800af4e:	f8c5 7478 	str.w	r7, [r5, #1144]	; 0x478
          tx_port=the_tx_port; tx_pin=the_tx_pin;
 800af52:	60ea      	str	r2, [r5, #12]
 800af54:	f8c5 3880 	str.w	r3, [r5, #2176]	; 0x880
 800af58:	f8c5 387c 	str.w	r3, [r5, #2172]	; 0x87c
              _mode_=mode_codes::INVALID_MODE;
 800af5c:	f8c9 3000 	str.w	r3, [r9]
          tx_status=tx_status_codes::IDLE;
 800af60:	f8c5 7890 	str.w	r7, [r5, #2192]	; 0x890
          rx_port=the_rx_port; rx_pin=the_rx_pin;
 800af64:	f8c5 b000 	str.w	fp, [r5]
 800af68:	f8c5 7884 	str.w	r7, [r5, #2180]	; 0x884
          tx_port=the_tx_port; tx_pin=the_tx_pin;
 800af6c:	f8c5 b008 	str.w	fp, [r5, #8]
          tx_interrupt_counter=0;
 800af70:	f8c5 7894 	str.w	r7, [r5, #2196]	; 0x894
          gptStart(TIMER,&_gpt_config_);
 800af74:	f7fe fd8c 	bl	8009a90 <gptStart>
                palSetPadMode(
 800af78:	4658      	mov	r0, fp
 800af7a:	2220      	movs	r2, #32
 800af7c:	f44f 7180 	mov.w	r1, #256	; 0x100
 800af80:	f7fe f9c6 	bl	8009310 <_pal_lld_setgroupmode>
 800af84:	2020      	movs	r0, #32
 800af86:	f380 8811 	msr	BASEPRI, r0
void palSetPadCallbackI(ioportid_t port, iopadid_t pad,
                        palcallback_t cb, void *arg) {

  palevent_t *pep = pal_lld_get_pad_event(port, pad);
  pep->cb = cb;
  pep->arg = arg;
 800af8a:	4ba7      	ldr	r3, [pc, #668]	; (800b228 <main+0xa48>)
  pep->cb = cb;
 800af8c:	4aa7      	ldr	r2, [pc, #668]	; (800b22c <main+0xa4c>)
  pep->arg = arg;
 800af8e:	f8c3 9044 	str.w	r9, [r3, #68]	; 0x44
  pep->cb = cb;
 800af92:	641a      	str	r2, [r3, #64]	; 0x40
  chSysUnlock();
 800af94:	f7fd fe9c 	bl	8008cd0 <_ZL11chSysUnlockv>
 800af98:	f380 8811 	msr	BASEPRI, r0
                palEnablePadEvent(
 800af9c:	2108      	movs	r1, #8
 800af9e:	4658      	mov	r0, fp
 800afa0:	f7fd fe56 	bl	8008c50 <_pal_lld_enablepadevent.constprop.31>
    chprintf(
 800afa4:	f8df 82ac 	ldr.w	r8, [pc, #684]	; 800b254 <main+0xa74>
 800afa8:	f7fd fe92 	bl	8008cd0 <_ZL11chSysUnlockv>
                _mode_=mode_codes::RX_MODE;
 800afac:	2301      	movs	r3, #1
  uint32_t counter=0;
 800afae:	46bb      	mov	fp, r7
 800afb0:	f8c9 3000 	str.w	r3, [r9]
 800afb4:	2320      	movs	r3, #32
 800afb6:	f383 8811 	msr	BASEPRI, r3
 800afba:	6823      	ldr	r3, [r4, #0]
  return (systime_t)STM32_ST_TIM->CNT;
 800afbc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800afc0:	42a3      	cmp	r3, r4
 800afc2:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800afc4:	d005      	beq.n	800afd2 <main+0x7f2>
 800afc6:	69a1      	ldr	r1, [r4, #24]
 800afc8:	689b      	ldr	r3, [r3, #8]
 800afca:	6889      	ldr	r1, [r1, #8]
 800afcc:	4299      	cmp	r1, r3
 800afce:	f0c0 84f4 	bcc.w	800b9ba <main+0x11da>
 800afd2:	2700      	movs	r7, #0
 800afd4:	f387 8811 	msr	BASEPRI, r7
    chprintf(
 800afd8:	4995      	ldr	r1, [pc, #596]	; (800b230 <main+0xa50>)
 800afda:	465b      	mov	r3, fp
 800afdc:	4640      	mov	r0, r8
 800afde:	f7fe fdf7 	bl	8009bd0 <chprintf.constprop.33>
 800afe2:	2220      	movs	r2, #32
                )? _ctx_.is_tx_full(): false
 800afe4:	f8da 3000 	ldr.w	r3, [sl]
 800afe8:	f033 0302 	bics.w	r3, r3, #2
 800afec:	f000 820b 	beq.w	800b406 <main+0xc26>
 800aff0:	2120      	movs	r1, #32
 800aff2:	2200      	movs	r2, #0
 800aff4:	f381 8811 	msr	BASEPRI, r1
 800aff8:	6823      	ldr	r3, [r4, #0]
    int items() { return _items_; }
 800affa:	f8d5 0460 	ldr.w	r0, [r5, #1120]	; 0x460
 800affe:	42a3      	cmp	r3, r4
 800b000:	d005      	beq.n	800b00e <main+0x82e>
 800b002:	69a7      	ldr	r7, [r4, #24]
 800b004:	689b      	ldr	r3, [r3, #8]
 800b006:	68bf      	ldr	r7, [r7, #8]
 800b008:	429f      	cmp	r7, r3
 800b00a:	f0c0 82b7 	bcc.w	800b57c <main+0xd9c>
 800b00e:	f382 8811 	msr	BASEPRI, r2
    while(my_soft_uart_2.available()<=0) { /* nothing */ }
 800b012:	2800      	cmp	r0, #0
 800b014:	ddee      	ble.n	800aff4 <main+0x814>
                )? 
 800b016:	f8d9 3000 	ldr.w	r3, [r9]
 800b01a:	2b01      	cmp	r3, #1
 800b01c:	f240 84a1 	bls.w	800b962 <main+0x1182>
 800b020:	2700      	movs	r7, #0
 800b022:	2320      	movs	r3, #32
 800b024:	f383 8811 	msr	BASEPRI, r3
 800b028:	6823      	ldr	r3, [r4, #0]
 800b02a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b02e:	42a3      	cmp	r3, r4
 800b030:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800b032:	d005      	beq.n	800b040 <main+0x860>
 800b034:	69a1      	ldr	r1, [r4, #24]
 800b036:	689b      	ldr	r3, [r3, #8]
 800b038:	6889      	ldr	r1, [r1, #8]
 800b03a:	4299      	cmp	r1, r3
 800b03c:	f0c0 8498 	bcc.w	800b970 <main+0x1190>
 800b040:	2300      	movs	r3, #0
 800b042:	f383 8811 	msr	BASEPRI, r3
    chprintf(
 800b046:	497b      	ldr	r1, [pc, #492]	; (800b234 <main+0xa54>)
 800b048:	9b02      	ldr	r3, [sp, #8]
 800b04a:	4640      	mov	r0, r8
 800b04c:	f7fe fdc0 	bl	8009bd0 <chprintf.constprop.33>
    if(my_soft_uart_2.bad_status(status))
 800b050:	f017 0f1c 	tst.w	r7, #28
 800b054:	d00b      	beq.n	800b06e <main+0x88e>
      if(my_soft_uart_2.bad_start_bit(status))
 800b056:	077a      	lsls	r2, r7, #29
 800b058:	f100 8294 	bmi.w	800b584 <main+0xda4>
      else if(my_soft_uart_2.bad_parity(status))
 800b05c:	073b      	lsls	r3, r7, #28
 800b05e:	f100 8296 	bmi.w	800b58e <main+0xdae>
      else if(my_soft_uart_2.bad_stop_bit(status))
 800b062:	06f8      	lsls	r0, r7, #27
 800b064:	d503      	bpl.n	800b06e <main+0x88e>
        chprintf((BaseSequentialStream *) &LPSD1," [BAD_STOP_BIT]");
 800b066:	4974      	ldr	r1, [pc, #464]	; (800b238 <main+0xa58>)
 800b068:	4640      	mov	r0, r8
 800b06a:	f7fe fdb1 	bl	8009bd0 <chprintf.constprop.33>
    chprintf((BaseSequentialStream *) &LPSD1,"\r\n");
 800b06e:	4973      	ldr	r1, [pc, #460]	; (800b23c <main+0xa5c>)
 800b070:	4640      	mov	r0, r8
 800b072:	f7fe fdad 	bl	8009bd0 <chprintf.constprop.33>
                (_mode_==mode_codes::INVALID_MODE) ||
 800b076:	f8d9 3000 	ldr.w	r3, [r9]
 800b07a:	1c5a      	adds	r2, r3, #1
              if( 
 800b07c:	2a01      	cmp	r2, #1
 800b07e:	d929      	bls.n	800b0d4 <main+0x8f4>
              if(_mode_==mode_codes::TX_MODE) return true;
 800b080:	2b02      	cmp	r3, #2
 800b082:	d027      	beq.n	800b0d4 <main+0x8f4>
              while(_ctx_.rx_status==rx_status_codes::RECEIVING) { /* do nothing */ } 
 800b084:	f8d5 3470 	ldr.w	r3, [r5, #1136]	; 0x470
 800b088:	2b01      	cmp	r3, #1
 800b08a:	d0fb      	beq.n	800b084 <main+0x8a4>
 800b08c:	2320      	movs	r3, #32
 800b08e:	f383 8811 	msr	BASEPRI, r3
              palDisablePadEvent(_ctx_.rx_port,_ctx_.rx_pin);
 800b092:	e9d5 0100 	ldrd	r0, r1, [r5]
 800b096:	f7fe f8fb 	bl	8009290 <_pal_lld_disablepadevent>
 800b09a:	6823      	ldr	r3, [r4, #0]
 800b09c:	42a3      	cmp	r3, r4
 800b09e:	d005      	beq.n	800b0ac <main+0x8cc>
 800b0a0:	69a2      	ldr	r2, [r4, #24]
 800b0a2:	689b      	ldr	r3, [r3, #8]
 800b0a4:	6892      	ldr	r2, [r2, #8]
 800b0a6:	429a      	cmp	r2, r3
 800b0a8:	f0c0 8276 	bcc.w	800b598 <main+0xdb8>
 800b0ac:	2300      	movs	r3, #0
 800b0ae:	f383 8811 	msr	BASEPRI, r3
              palSetPadMode(
 800b0b2:	e9d5 0102 	ldrd	r0, r1, [r5, #8]
 800b0b6:	2701      	movs	r7, #1
 800b0b8:	fa07 f101 	lsl.w	r1, r7, r1
 800b0bc:	463a      	mov	r2, r7
 800b0be:	f7fe f927 	bl	8009310 <_pal_lld_setgroupmode>
              palSetPad(_ctx_.tx_port,_ctx_.tx_pin);
 800b0c2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b0c6:	fa07 f303 	lsl.w	r3, r7, r3
 800b0ca:	b29b      	uxth	r3, r3
              _mode_=mode_codes::TX_MODE;
 800b0cc:	2102      	movs	r1, #2
              palSetPad(_ctx_.tx_port,_ctx_.tx_pin);
 800b0ce:	8313      	strh	r3, [r2, #24]
              _mode_=mode_codes::TX_MODE;
 800b0d0:	f8c9 1000 	str.w	r1, [r9]
                (_mode_==mode_codes::INVALID_MODE) ||
 800b0d4:	f8da 3000 	ldr.w	r3, [sl]
 800b0d8:	1c5a      	adds	r2, r3, #1
              if( 
 800b0da:	2a01      	cmp	r2, #1
 800b0dc:	d93a      	bls.n	800b154 <main+0x974>
              if(_mode_==mode_codes::RX_MODE) return true; 
 800b0de:	2b01      	cmp	r3, #1
 800b0e0:	d038      	beq.n	800b154 <main+0x974>
                while(tx_status!=tx_status_codes::IDLE) 
 800b0e2:	f8d6 3890 	ldr.w	r3, [r6, #2192]	; 0x890
 800b0e6:	2b00      	cmp	r3, #0
 800b0e8:	d1fb      	bne.n	800b0e2 <main+0x902>
              palSetPadMode(
 800b0ea:	e9d6 0300 	ldrd	r0, r3, [r6]
 800b0ee:	2101      	movs	r1, #1
 800b0f0:	4099      	lsls	r1, r3
 800b0f2:	2220      	movs	r2, #32
 800b0f4:	f7fe f90c 	bl	8009310 <_pal_lld_setgroupmode>
 800b0f8:	2320      	movs	r3, #32
 800b0fa:	f383 8811 	msr	BASEPRI, r3
 800b0fe:	494a      	ldr	r1, [pc, #296]	; (800b228 <main+0xa48>)
              palSetPadCallback(
 800b100:	6873      	ldr	r3, [r6, #4]
 800b102:	6822      	ldr	r2, [r4, #0]
 800b104:	484e      	ldr	r0, [pc, #312]	; (800b240 <main+0xa60>)
 800b106:	f841 0033 	str.w	r0, [r1, r3, lsl #3]
  pep->arg = arg;
 800b10a:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800b10e:	42a2      	cmp	r2, r4
 800b110:	f8c3 a004 	str.w	sl, [r3, #4]
 800b114:	d005      	beq.n	800b122 <main+0x942>
 800b116:	69a1      	ldr	r1, [r4, #24]
 800b118:	6893      	ldr	r3, [r2, #8]
 800b11a:	688a      	ldr	r2, [r1, #8]
 800b11c:	429a      	cmp	r2, r3
 800b11e:	f0c0 82f2 	bcc.w	800b706 <main+0xf26>
 800b122:	2300      	movs	r3, #0
 800b124:	f383 8811 	msr	BASEPRI, r3
 800b128:	2320      	movs	r3, #32
 800b12a:	f383 8811 	msr	BASEPRI, r3
              palEnablePadEvent(
 800b12e:	e9d6 0100 	ldrd	r0, r1, [r6]
 800b132:	f7fd fd8d 	bl	8008c50 <_pal_lld_enablepadevent.constprop.31>
 800b136:	6823      	ldr	r3, [r4, #0]
 800b138:	42a3      	cmp	r3, r4
 800b13a:	d005      	beq.n	800b148 <main+0x968>
 800b13c:	69a2      	ldr	r2, [r4, #24]
 800b13e:	689b      	ldr	r3, [r3, #8]
 800b140:	6892      	ldr	r2, [r2, #8]
 800b142:	429a      	cmp	r2, r3
 800b144:	f0c0 82e3 	bcc.w	800b70e <main+0xf2e>
 800b148:	2300      	movs	r3, #0
 800b14a:	f383 8811 	msr	BASEPRI, r3
              _mode_=mode_codes::RX_MODE;
 800b14e:	2301      	movs	r3, #1
 800b150:	f8ca 3000 	str.w	r3, [sl]
 800b154:	2320      	movs	r3, #32
 800b156:	f383 8811 	msr	BASEPRI, r3
 800b15a:	6823      	ldr	r3, [r4, #0]
 800b15c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b160:	42a3      	cmp	r3, r4
 800b162:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800b164:	d005      	beq.n	800b172 <main+0x992>
 800b166:	69a1      	ldr	r1, [r4, #24]
 800b168:	689b      	ldr	r3, [r3, #8]
 800b16a:	6889      	ldr	r1, [r1, #8]
 800b16c:	4299      	cmp	r1, r3
 800b16e:	f0c0 82fb 	bcc.w	800b768 <main+0xf88>
 800b172:	2700      	movs	r7, #0
 800b174:	f387 8811 	msr	BASEPRI, r7
    chprintf(
 800b178:	4932      	ldr	r1, [pc, #200]	; (800b244 <main+0xa64>)
 800b17a:	9b02      	ldr	r3, [sp, #8]
 800b17c:	4640      	mov	r0, r8
 800b17e:	f7fe fd27 	bl	8009bd0 <chprintf.constprop.33>
 800b182:	2220      	movs	r2, #32
                )? _ctx_.is_tx_full(): false
 800b184:	f8d9 3000 	ldr.w	r3, [r9]
 800b188:	f033 0302 	bics.w	r3, r3, #2
 800b18c:	f000 8208 	beq.w	800b5a0 <main+0xdc0>
 800b190:	2120      	movs	r1, #32
 800b192:	2200      	movs	r2, #0
 800b194:	f381 8811 	msr	BASEPRI, r1
 800b198:	6823      	ldr	r3, [r4, #0]
 800b19a:	f8d6 0460 	ldr.w	r0, [r6, #1120]	; 0x460
 800b19e:	42a3      	cmp	r3, r4
 800b1a0:	d005      	beq.n	800b1ae <main+0x9ce>
 800b1a2:	69a7      	ldr	r7, [r4, #24]
 800b1a4:	689b      	ldr	r3, [r3, #8]
 800b1a6:	68bf      	ldr	r7, [r7, #8]
 800b1a8:	429f      	cmp	r7, r3
 800b1aa:	f0c0 82b4 	bcc.w	800b716 <main+0xf36>
 800b1ae:	f382 8811 	msr	BASEPRI, r2
    while(my_soft_uart_1.available()<=0) { /* nothing */ }
 800b1b2:	2800      	cmp	r0, #0
 800b1b4:	ddee      	ble.n	800b194 <main+0x9b4>
                )? 
 800b1b6:	f8da 3000 	ldr.w	r3, [sl]
 800b1ba:	2b01      	cmp	r3, #1
 800b1bc:	f240 82af 	bls.w	800b71e <main+0xf3e>
 800b1c0:	2700      	movs	r7, #0
 800b1c2:	2320      	movs	r3, #32
 800b1c4:	f383 8811 	msr	BASEPRI, r3
 800b1c8:	6823      	ldr	r3, [r4, #0]
 800b1ca:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b1ce:	42a3      	cmp	r3, r4
 800b1d0:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800b1d2:	d005      	beq.n	800b1e0 <main+0xa00>
 800b1d4:	69a1      	ldr	r1, [r4, #24]
 800b1d6:	689b      	ldr	r3, [r3, #8]
 800b1d8:	6889      	ldr	r1, [r1, #8]
 800b1da:	4299      	cmp	r1, r3
 800b1dc:	f0c0 82c8 	bcc.w	800b770 <main+0xf90>
 800b1e0:	2300      	movs	r3, #0
 800b1e2:	f383 8811 	msr	BASEPRI, r3
    chprintf(
 800b1e6:	4918      	ldr	r1, [pc, #96]	; (800b248 <main+0xa68>)
 800b1e8:	9b02      	ldr	r3, [sp, #8]
 800b1ea:	4640      	mov	r0, r8
 800b1ec:	f7fe fcf0 	bl	8009bd0 <chprintf.constprop.33>
    if(my_soft_uart_1.bad_status(status))
 800b1f0:	f017 0f1c 	tst.w	r7, #28
 800b1f4:	d032      	beq.n	800b25c <main+0xa7c>
      if(my_soft_uart_1.bad_start_bit(status))
 800b1f6:	0779      	lsls	r1, r7, #29
 800b1f8:	f140 8297 	bpl.w	800b72a <main+0xf4a>
        chprintf((BaseSequentialStream *) &LPSD1," [BAD_START_BIT]");
 800b1fc:	4913      	ldr	r1, [pc, #76]	; (800b24c <main+0xa6c>)
 800b1fe:	4640      	mov	r0, r8
 800b200:	e02a      	b.n	800b258 <main+0xa78>
 800b202:	bf00      	nop
 800b204:	f3af 8000 	nop.w
 800b208:	9abcaf48 	.word	0x9abcaf48
 800b20c:	3e7ad7f2 	.word	0x3e7ad7f2
 800b210:	b4e81b4f 	.word	0xb4e81b4f
 800b214:	3f1b4e81 	.word	0x3f1b4e81
 800b218:	2c5f92c6 	.word	0x2c5f92c6
 800b21c:	3f52c5f9 	.word	0x3f52c5f9
 800b220:	08012770 	.word	0x08012770
 800b224:	200011c8 	.word	0x200011c8
 800b228:	200023d4 	.word	0x200023d4
 800b22c:	080097c1 	.word	0x080097c1
 800b230:	08012970 	.word	0x08012970
 800b234:	080129bc 	.word	0x080129bc
 800b238:	08012a04 	.word	0x08012a04
 800b23c:	08012a14 	.word	0x08012a14
 800b240:	08009831 	.word	0x08009831
 800b244:	08012a18 	.word	0x08012a18
 800b248:	08012a44 	.word	0x08012a44
 800b24c:	080129e0 	.word	0x080129e0
 800b250:	20002618 	.word	0x20002618
 800b254:	200011d8 	.word	0x200011d8
 800b258:	f7fe fcba 	bl	8009bd0 <chprintf.constprop.33>
    chprintf((BaseSequentialStream *) &LPSD1,"\r\n");
 800b25c:	49b4      	ldr	r1, [pc, #720]	; (800b530 <main+0xd50>)
 800b25e:	4640      	mov	r0, r8
 800b260:	f7fe fcb6 	bl	8009bd0 <chprintf.constprop.33>
                (_mode_==mode_codes::INVALID_MODE) ||
 800b264:	f8da 3000 	ldr.w	r3, [sl]
 800b268:	1c5a      	adds	r2, r3, #1
              if( 
 800b26a:	2a01      	cmp	r2, #1
 800b26c:	d929      	bls.n	800b2c2 <main+0xae2>
              if(_mode_==mode_codes::TX_MODE) return true;
 800b26e:	2b02      	cmp	r3, #2
 800b270:	d027      	beq.n	800b2c2 <main+0xae2>
              while(_ctx_.rx_status==rx_status_codes::RECEIVING) { /* do nothing */ } 
 800b272:	f8d6 3470 	ldr.w	r3, [r6, #1136]	; 0x470
 800b276:	2b01      	cmp	r3, #1
 800b278:	d0fb      	beq.n	800b272 <main+0xa92>
 800b27a:	2320      	movs	r3, #32
 800b27c:	f383 8811 	msr	BASEPRI, r3
              palDisablePadEvent(_ctx_.rx_port,_ctx_.rx_pin);
 800b280:	e9d6 0100 	ldrd	r0, r1, [r6]
 800b284:	f7fe f804 	bl	8009290 <_pal_lld_disablepadevent>
 800b288:	6823      	ldr	r3, [r4, #0]
 800b28a:	42a3      	cmp	r3, r4
 800b28c:	d005      	beq.n	800b29a <main+0xaba>
 800b28e:	69a2      	ldr	r2, [r4, #24]
 800b290:	689b      	ldr	r3, [r3, #8]
 800b292:	6892      	ldr	r2, [r2, #8]
 800b294:	429a      	cmp	r2, r3
 800b296:	f0c0 8252 	bcc.w	800b73e <main+0xf5e>
 800b29a:	2300      	movs	r3, #0
 800b29c:	f383 8811 	msr	BASEPRI, r3
              palSetPadMode(
 800b2a0:	e9d6 0102 	ldrd	r0, r1, [r6, #8]
 800b2a4:	2701      	movs	r7, #1
 800b2a6:	fa07 f101 	lsl.w	r1, r7, r1
 800b2aa:	463a      	mov	r2, r7
 800b2ac:	f7fe f830 	bl	8009310 <_pal_lld_setgroupmode>
              palSetPad(_ctx_.tx_port,_ctx_.tx_pin);
 800b2b0:	e9d6 2302 	ldrd	r2, r3, [r6, #8]
 800b2b4:	fa07 f303 	lsl.w	r3, r7, r3
 800b2b8:	b29b      	uxth	r3, r3
              _mode_=mode_codes::TX_MODE;
 800b2ba:	2102      	movs	r1, #2
              palSetPad(_ctx_.tx_port,_ctx_.tx_pin);
 800b2bc:	8313      	strh	r3, [r2, #24]
              _mode_=mode_codes::TX_MODE;
 800b2be:	f8ca 1000 	str.w	r1, [sl]
                (_mode_==mode_codes::INVALID_MODE) ||
 800b2c2:	f8d9 3000 	ldr.w	r3, [r9]
 800b2c6:	1c5a      	adds	r2, r3, #1
              if( 
 800b2c8:	2a01      	cmp	r2, #1
 800b2ca:	d93a      	bls.n	800b342 <main+0xb62>
              if(_mode_==mode_codes::RX_MODE) return true; 
 800b2cc:	2b01      	cmp	r3, #1
 800b2ce:	d038      	beq.n	800b342 <main+0xb62>
                while(tx_status!=tx_status_codes::IDLE) 
 800b2d0:	f8d5 3890 	ldr.w	r3, [r5, #2192]	; 0x890
 800b2d4:	2b00      	cmp	r3, #0
 800b2d6:	d1fb      	bne.n	800b2d0 <main+0xaf0>
              palSetPadMode(
 800b2d8:	e9d5 0300 	ldrd	r0, r3, [r5]
 800b2dc:	2101      	movs	r1, #1
 800b2de:	4099      	lsls	r1, r3
 800b2e0:	2220      	movs	r2, #32
 800b2e2:	f7fe f815 	bl	8009310 <_pal_lld_setgroupmode>
 800b2e6:	2320      	movs	r3, #32
 800b2e8:	f383 8811 	msr	BASEPRI, r3
  pep->cb = cb;
 800b2ec:	4991      	ldr	r1, [pc, #580]	; (800b534 <main+0xd54>)
              palSetPadCallback(
 800b2ee:	686b      	ldr	r3, [r5, #4]
 800b2f0:	6822      	ldr	r2, [r4, #0]
 800b2f2:	4891      	ldr	r0, [pc, #580]	; (800b538 <main+0xd58>)
 800b2f4:	f841 0033 	str.w	r0, [r1, r3, lsl #3]
  pep->arg = arg;
 800b2f8:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800b2fc:	42a2      	cmp	r2, r4
 800b2fe:	f8c3 9004 	str.w	r9, [r3, #4]
 800b302:	d005      	beq.n	800b310 <main+0xb30>
 800b304:	69a1      	ldr	r1, [r4, #24]
 800b306:	6893      	ldr	r3, [r2, #8]
 800b308:	688a      	ldr	r2, [r1, #8]
 800b30a:	429a      	cmp	r2, r3
 800b30c:	f0c0 8228 	bcc.w	800b760 <main+0xf80>
 800b310:	2300      	movs	r3, #0
 800b312:	f383 8811 	msr	BASEPRI, r3
 800b316:	2320      	movs	r3, #32
 800b318:	f383 8811 	msr	BASEPRI, r3
              palEnablePadEvent(
 800b31c:	e9d5 0100 	ldrd	r0, r1, [r5]
 800b320:	f7fd fc96 	bl	8008c50 <_pal_lld_enablepadevent.constprop.31>
 800b324:	6823      	ldr	r3, [r4, #0]
 800b326:	42a3      	cmp	r3, r4
 800b328:	d005      	beq.n	800b336 <main+0xb56>
 800b32a:	69a2      	ldr	r2, [r4, #24]
 800b32c:	689b      	ldr	r3, [r3, #8]
 800b32e:	6892      	ldr	r2, [r2, #8]
 800b330:	429a      	cmp	r2, r3
 800b332:	f0c0 8211 	bcc.w	800b758 <main+0xf78>
 800b336:	2300      	movs	r3, #0
 800b338:	f383 8811 	msr	BASEPRI, r3
              _mode_=mode_codes::RX_MODE;
 800b33c:	2301      	movs	r3, #1
 800b33e:	f8c9 3000 	str.w	r3, [r9]
 800b342:	2320      	movs	r3, #32
 800b344:	f383 8811 	msr	BASEPRI, r3
  (void) chSchGoSleepTimeoutS(CH_STATE_SLEEPING, ticks);
 800b348:	f242 7110 	movw	r1, #10000	; 0x2710
 800b34c:	2008      	movs	r0, #8
 800b34e:	f7fe fe77 	bl	800a040 <chSchGoSleepTimeoutS>
 800b352:	6823      	ldr	r3, [r4, #0]
 800b354:	42a3      	cmp	r3, r4
 800b356:	d005      	beq.n	800b364 <main+0xb84>
 800b358:	69a2      	ldr	r2, [r4, #24]
 800b35a:	689b      	ldr	r3, [r3, #8]
 800b35c:	6892      	ldr	r2, [r2, #8]
 800b35e:	429a      	cmp	r2, r3
 800b360:	f0c0 81f6 	bcc.w	800b750 <main+0xf70>
    counter=(++counter)&0xff;
 800b364:	f10b 0b01 	add.w	fp, fp, #1
 800b368:	fa5f fb8b 	uxtb.w	fp, fp
 800b36c:	2300      	movs	r3, #0
 800b36e:	f383 8811 	msr	BASEPRI, r3
 800b372:	e61f      	b.n	800afb4 <main+0x7d4>
  __ASM volatile ("cpsid i" : : : "memory");
 800b374:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b376:	4b71      	ldr	r3, [pc, #452]	; (800b53c <main+0xd5c>)
 800b378:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b37a:	e7fe      	b.n	800b37a <main+0xb9a>
 800b37c:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b37e:	4b70      	ldr	r3, [pc, #448]	; (800b540 <main+0xd60>)
 800b380:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b382:	e7fe      	b.n	800b382 <main+0xba2>
    REG_REMOVE(tp);
 800b384:	e9d2 0104 	ldrd	r0, r1, [r2, #16]
 800b388:	6108      	str	r0, [r1, #16]
 800b38a:	6910      	ldr	r0, [r2, #16]
 800b38c:	42a3      	cmp	r3, r4
 800b38e:	6141      	str	r1, [r0, #20]
 800b390:	d004      	beq.n	800b39c <main+0xbbc>
 800b392:	69a1      	ldr	r1, [r4, #24]
 800b394:	689b      	ldr	r3, [r3, #8]
 800b396:	6889      	ldr	r1, [r1, #8]
 800b398:	4299      	cmp	r1, r3
 800b39a:	d330      	bcc.n	800b3fe <main+0xc1e>
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800b39c:	f38a 8811 	msr	BASEPRI, sl
    switch (tp->flags & CH_FLAG_MODE_MASK) {
 800b3a0:	f892 3021 	ldrb.w	r3, [r2, #33]	; 0x21
 800b3a4:	f003 0303 	and.w	r3, r3, #3
 800b3a8:	2b01      	cmp	r3, #1
 800b3aa:	f000 81e5 	beq.w	800b778 <main+0xf98>
 800b3ae:	2b02      	cmp	r3, #2
 800b3b0:	f47f ac68 	bne.w	800ac84 <main+0x4a4>
      chPoolFree(tp->mpool, chThdGetWorkingAreaX(tp));
 800b3b4:	6c11      	ldr	r1, [r2, #64]	; 0x40
 800b3b6:	69d2      	ldr	r2, [r2, #28]
 800b3b8:	2320      	movs	r3, #32
 800b3ba:	f383 8811 	msr	BASEPRI, r3
 800b3be:	6823      	ldr	r3, [r4, #0]
  chDbgCheckClassI();
  chDbgCheck((mp != NULL) &&
             (objp != NULL) &&
             MEM_IS_ALIGNED(objp, mp->align));

  php->next = mp->next;
 800b3c0:	6808      	ldr	r0, [r1, #0]
 800b3c2:	6010      	str	r0, [r2, #0]
 800b3c4:	42a3      	cmp	r3, r4
  mp->next = php;
 800b3c6:	600a      	str	r2, [r1, #0]
 800b3c8:	f43f ac5a 	beq.w	800ac80 <main+0x4a0>
 800b3cc:	69a2      	ldr	r2, [r4, #24]
 800b3ce:	689b      	ldr	r3, [r3, #8]
 800b3d0:	6892      	ldr	r2, [r2, #8]
 800b3d2:	429a      	cmp	r2, r3
 800b3d4:	f4bf ac54 	bcs.w	800ac80 <main+0x4a0>
  __ASM volatile ("cpsid i" : : : "memory");
 800b3d8:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b3da:	4b5a      	ldr	r3, [pc, #360]	; (800b544 <main+0xd64>)
 800b3dc:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b3de:	e7fe      	b.n	800b3de <main+0xbfe>
    ntp = NULL;
 800b3e0:	f04f 0b00 	mov.w	fp, #0
 800b3e4:	e427      	b.n	800ac36 <main+0x456>
 800b3e6:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b3e8:	4b57      	ldr	r3, [pc, #348]	; (800b548 <main+0xd68>)
 800b3ea:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b3ec:	e7fe      	b.n	800b3ec <main+0xc0c>
 800b3ee:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b3f0:	4b56      	ldr	r3, [pc, #344]	; (800b54c <main+0xd6c>)
 800b3f2:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b3f4:	e7fe      	b.n	800b3f4 <main+0xc14>
 800b3f6:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b3f8:	4b50      	ldr	r3, [pc, #320]	; (800b53c <main+0xd5c>)
 800b3fa:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b3fc:	e7fe      	b.n	800b3fc <main+0xc1c>
 800b3fe:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b400:	4b52      	ldr	r3, [pc, #328]	; (800b54c <main+0xd6c>)
 800b402:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b404:	e7fe      	b.n	800b404 <main+0xc24>
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800b406:	f382 8811 	msr	BASEPRI, r2
 800b40a:	6823      	ldr	r3, [r4, #0]
    bool is_full() { return (_items_==LENGTH); }
 800b40c:	f8d6 1884 	ldr.w	r1, [r6, #2180]	; 0x884
 800b410:	42a3      	cmp	r3, r4
 800b412:	d004      	beq.n	800b41e <main+0xc3e>
 800b414:	69a0      	ldr	r0, [r4, #24]
 800b416:	689b      	ldr	r3, [r3, #8]
 800b418:	6880      	ldr	r0, [r0, #8]
 800b41a:	4298      	cmp	r0, r3
 800b41c:	d37f      	bcc.n	800b51e <main+0xd3e>
 800b41e:	f387 8811 	msr	BASEPRI, r7
                )? _ctx_.is_tx_full(): false
 800b422:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800b426:	f43f addd 	beq.w	800afe4 <main+0x804>
                )? _ctx_.set_tx_data(data): false
 800b42a:	f8da 3000 	ldr.w	r3, [sl]
 800b42e:	f033 0302 	bics.w	r3, r3, #2
 800b432:	f47f addd 	bne.w	800aff0 <main+0x810>
        >::_uart_ctx_::set_tx_data(
          uint32_t data
        )
        {
          // setting the data to send
          uint32_t data_to_send=data&data_mask;
 800b436:	6d71      	ldr	r1, [r6, #84]	; 0x54
         
          // setting the parity bit
          if(parity!=parity_codes::NO_PARITY)
 800b438:	f8d6 c03c 	ldr.w	ip, [r6, #60]	; 0x3c
          uint32_t data_to_send=data&data_mask;
 800b43c:	ea0b 0101 	and.w	r1, fp, r1
 800b440:	004b      	lsls	r3, r1, #1
          if(parity!=parity_codes::NO_PARITY)
 800b442:	f1bc 0f00 	cmp.w	ip, #0
 800b446:	d015      	beq.n	800b474 <main+0xc94>
          {
            register uint32_t data_parity=get_even_parity(
              data_to_send,
              static_cast<uint32_t>(data_bits)
 800b448:	f8d6 e038 	ldr.w	lr, [r6, #56]	; 0x38
                uint32_t odd_parity=data&1;
 800b44c:	f001 0201 	and.w	r2, r1, #1
                for(uint32_t bit=1; bit<bits; bit++)
 800b450:	2701      	movs	r7, #1
 800b452:	e001      	b.n	800b458 <main+0xc78>
                  odd_parity=odd_parity^((data>>bit)&1);
 800b454:	4042      	eors	r2, r0
                for(uint32_t bit=1; bit<bits; bit++)
 800b456:	3701      	adds	r7, #1
                  odd_parity=odd_parity^((data>>bit)&1);
 800b458:	fa21 f007 	lsr.w	r0, r1, r7
                for(uint32_t bit=1; bit<bits; bit++)
 800b45c:	45be      	cmp	lr, r7
                  odd_parity=odd_parity^((data>>bit)&1);
 800b45e:	f000 0001 	and.w	r0, r0, #1
                for(uint32_t bit=1; bit<bits; bit++)
 800b462:	d8f7      	bhi.n	800b454 <main+0xc74>
            );
      
            if(parity==parity_codes::ODD_PARITY) 
 800b464:	f1bc 0f02 	cmp.w	ip, #2
              data_parity=data_parity^1;
      
            data_to_send=
              (data_to_send<<1)|(data_parity<<parity_bit_pos);
 800b468:	6cf1      	ldr	r1, [r6, #76]	; 0x4c
              data_parity=data_parity^1;
 800b46a:	bf08      	it	eq
 800b46c:	f082 0201 	eoreq.w	r2, r2, #1
              (data_to_send<<1)|(data_parity<<parity_bit_pos);
 800b470:	408a      	lsls	r2, r1
 800b472:	4313      	orrs	r3, r2
          }
          else data_to_send=(data_to_send<<1);
      
          // setting the stop bits
          if(stop_bits==stop_bit_codes::ONE_STOP_BIT)
 800b474:	6c32      	ldr	r2, [r6, #64]	; 0x40
 800b476:	6d31      	ldr	r1, [r6, #80]	; 0x50
 800b478:	2a01      	cmp	r2, #1
            data_to_send=data_to_send|(1<<first_stop_bit_pos);
          else
            data_to_send=data_to_send|(0x3<<first_stop_bit_pos);
 800b47a:	bf18      	it	ne
 800b47c:	2203      	movne	r2, #3
 800b47e:	408a      	lsls	r2, r1
 800b480:	4313      	orrs	r3, r2
 800b482:	2220      	movs	r2, #32
 800b484:	f382 8811 	msr	BASEPRI, r2
      int new_last=(_last_+1)%LENGTH;
 800b488:	f8d6 2880 	ldr.w	r2, [r6, #2176]	; 0x880
      if(new_last==_first_) // full?
 800b48c:	f8d6 087c 	ldr.w	r0, [r6, #2172]	; 0x87c
      int new_last=(_last_+1)%LENGTH;
 800b490:	3201      	adds	r2, #1
 800b492:	b2d2      	uxtb	r2, r2
      if(new_last==_first_) // full?
 800b494:	4282      	cmp	r2, r0
 800b496:	d036      	beq.n	800b506 <main+0xd26>
      _buffer_p_[_last_]=t;
 800b498:	eb06 0182 	add.w	r1, r6, r2, lsl #2
      if(_first_<0) _first_=_last_;
 800b49c:	2800      	cmp	r0, #0
      _buffer_p_[_last_]=t;
 800b49e:	f8c1 347c 	str.w	r3, [r1, #1148]	; 0x47c
      _items_++;
 800b4a2:	f8d6 1884 	ldr.w	r1, [r6, #2180]	; 0x884
      _last_=new_last;
 800b4a6:	f8c6 2880 	str.w	r2, [r6, #2176]	; 0x880
      _items_++;
 800b4aa:	f101 0101 	add.w	r1, r1, #1
 800b4ae:	f8c6 1884 	str.w	r1, [r6, #2180]	; 0x884
      
          not_full=tx_buffer.push(data_to_send);
      
          if(!not_full) return false;
      
          if(tx_status==tx_status_codes::IDLE)
 800b4b2:	f8d6 0890 	ldr.w	r0, [r6, #2192]	; 0x890
      if(_first_<0) _first_=_last_;
 800b4b6:	bfb8      	it	lt
 800b4b8:	f8c6 287c 	strlt.w	r2, [r6, #2172]	; 0x87c
 800b4bc:	b9d0      	cbnz	r0, 800b4f4 <main+0xd14>
      if(_first_<0) return false;
 800b4be:	f8d6 187c 	ldr.w	r1, [r6, #2172]	; 0x87c
 800b4c2:	2900      	cmp	r1, #0
 800b4c4:	db0f      	blt.n	800b4e6 <main+0xd06>
      t=_buffer_p_[_first_];
 800b4c6:	eb06 0381 	add.w	r3, r6, r1, lsl #2
      if(_first_==_last_) _init_();
 800b4ca:	428a      	cmp	r2, r1
      t=_buffer_p_[_first_];
 800b4cc:	f8d3 347c 	ldr.w	r3, [r3, #1148]	; 0x47c
      if(_first_==_last_) _init_();
 800b4d0:	f000 8252 	beq.w	800b978 <main+0x1198>
      else { _first_=(_first_+1)%LENGTH; _items_--; }
 800b4d4:	f8d6 0884 	ldr.w	r0, [r6, #2180]	; 0x884
 800b4d8:	1c4a      	adds	r2, r1, #1
 800b4da:	b2d2      	uxtb	r2, r2
 800b4dc:	3801      	subs	r0, #1
 800b4de:	f8c6 287c 	str.w	r2, [r6, #2172]	; 0x87c
 800b4e2:	f8c6 0884 	str.w	r0, [r6, #2180]	; 0x884
          {
            tx_buffer.pop(data_to_send); 
            tx_data=data_to_send; tx_bit_counter=0; 
 800b4e6:	2200      	movs	r2, #0
 800b4e8:	f8c6 3888 	str.w	r3, [r6, #2184]	; 0x888
 800b4ec:	f8c6 288c 	str.w	r2, [r6, #2188]	; 0x88c
            tx_interrupt_counter=0;
 800b4f0:	f8c6 2894 	str.w	r2, [r6, #2196]	; 0x894
          }
      
          if(
            (rx_status==rx_status_codes::LISTENING)
 800b4f4:	f8d6 3470 	ldr.w	r3, [r6, #1136]	; 0x470
            && (tx_status==tx_status_codes::IDLE) 
 800b4f8:	b913      	cbnz	r3, 800b500 <main+0xd20>
 800b4fa:	f8d6 3890 	ldr.w	r3, [r6, #2192]	; 0x890
 800b4fe:	b34b      	cbz	r3, 800b554 <main+0xd74>
          ) gptStartContinuous(TIMER,bit_1st_quarter);
      
          tx_status=tx_status_codes::SENDING;
 800b500:	2301      	movs	r3, #1
 800b502:	f8c6 3890 	str.w	r3, [r6, #2192]	; 0x890
 800b506:	6823      	ldr	r3, [r4, #0]
 800b508:	42a3      	cmp	r3, r4
 800b50a:	d004      	beq.n	800b516 <main+0xd36>
 800b50c:	69a2      	ldr	r2, [r4, #24]
 800b50e:	689b      	ldr	r3, [r3, #8]
 800b510:	6892      	ldr	r2, [r2, #8]
 800b512:	429a      	cmp	r2, r3
 800b514:	d307      	bcc.n	800b526 <main+0xd46>
 800b516:	2300      	movs	r3, #0
 800b518:	f383 8811 	msr	BASEPRI, r3
 800b51c:	e568      	b.n	800aff0 <main+0x810>
  __ASM volatile ("cpsid i" : : : "memory");
 800b51e:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b520:	4b0b      	ldr	r3, [pc, #44]	; (800b550 <main+0xd70>)
 800b522:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b524:	e7fe      	b.n	800b524 <main+0xd44>
 800b526:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b528:	4b09      	ldr	r3, [pc, #36]	; (800b550 <main+0xd70>)
 800b52a:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b52c:	e7fe      	b.n	800b52c <main+0xd4c>
 800b52e:	bf00      	nop
 800b530:	08012a14 	.word	0x08012a14
 800b534:	200023d4 	.word	0x200023d4
 800b538:	080097c1 	.word	0x080097c1
 800b53c:	08012800 	.word	0x08012800
 800b540:	08012878 	.word	0x08012878
 800b544:	080127c8 	.word	0x080127c8
 800b548:	08012894 	.word	0x08012894
 800b54c:	080127a4 	.word	0x080127a4
 800b550:	08012780 	.word	0x08012780
          ) gptStartContinuous(TIMER,bit_1st_quarter);
 800b554:	6b31      	ldr	r1, [r6, #48]	; 0x30
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800b556:	2320      	movs	r3, #32
 800b558:	f383 8811 	msr	BASEPRI, r3
  gptStartContinuousI(gptp, interval);
 800b55c:	48af      	ldr	r0, [pc, #700]	; (800b81c <main+0x103c>)
 800b55e:	f7fe f907 	bl	8009770 <gptStartContinuousI>
 800b562:	6823      	ldr	r3, [r4, #0]
 800b564:	42a3      	cmp	r3, r4
 800b566:	d005      	beq.n	800b574 <main+0xd94>
 800b568:	69a2      	ldr	r2, [r4, #24]
 800b56a:	689b      	ldr	r3, [r3, #8]
 800b56c:	6892      	ldr	r2, [r2, #8]
 800b56e:	429a      	cmp	r2, r3
 800b570:	f0c0 820b 	bcc.w	800b98a <main+0x11aa>
 800b574:	2300      	movs	r3, #0
 800b576:	f383 8811 	msr	BASEPRI, r3
 800b57a:	e7c1      	b.n	800b500 <main+0xd20>
  __ASM volatile ("cpsid i" : : : "memory");
 800b57c:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b57e:	4ba8      	ldr	r3, [pc, #672]	; (800b820 <main+0x1040>)
 800b580:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b582:	e7fe      	b.n	800b582 <main+0xda2>
        chprintf((BaseSequentialStream *) &LPSD1," [BAD_START_BIT]");
 800b584:	49a7      	ldr	r1, [pc, #668]	; (800b824 <main+0x1044>)
 800b586:	4640      	mov	r0, r8
 800b588:	f7fe fb22 	bl	8009bd0 <chprintf.constprop.33>
 800b58c:	e56f      	b.n	800b06e <main+0x88e>
        chprintf((BaseSequentialStream *) &LPSD1," [BAD_PARITY]");
 800b58e:	49a6      	ldr	r1, [pc, #664]	; (800b828 <main+0x1048>)
 800b590:	4640      	mov	r0, r8
 800b592:	f7fe fb1d 	bl	8009bd0 <chprintf.constprop.33>
 800b596:	e56a      	b.n	800b06e <main+0x88e>
 800b598:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b59a:	4ba1      	ldr	r3, [pc, #644]	; (800b820 <main+0x1040>)
 800b59c:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b59e:	e7fe      	b.n	800b59e <main+0xdbe>
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800b5a0:	f382 8811 	msr	BASEPRI, r2
 800b5a4:	6823      	ldr	r3, [r4, #0]
    bool is_full() { return (_items_==LENGTH); }
 800b5a6:	f8d5 1884 	ldr.w	r1, [r5, #2180]	; 0x884
 800b5aa:	42a3      	cmp	r3, r4
 800b5ac:	d004      	beq.n	800b5b8 <main+0xdd8>
 800b5ae:	69a0      	ldr	r0, [r4, #24]
 800b5b0:	689b      	ldr	r3, [r3, #8]
 800b5b2:	6880      	ldr	r0, [r0, #8]
 800b5b4:	4298      	cmp	r0, r3
 800b5b6:	d37e      	bcc.n	800b6b6 <main+0xed6>
 800b5b8:	f387 8811 	msr	BASEPRI, r7
                )? _ctx_.is_tx_full(): false
 800b5bc:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800b5c0:	f43f ade0 	beq.w	800b184 <main+0x9a4>
                )? _ctx_.set_tx_data(data): false
 800b5c4:	f8d9 3000 	ldr.w	r3, [r9]
    my_soft_uart_2.set_tx_data(data);
 800b5c8:	9902      	ldr	r1, [sp, #8]
 800b5ca:	f033 0302 	bics.w	r3, r3, #2
 800b5ce:	f47f addf 	bne.w	800b190 <main+0x9b0>
          uint32_t data_to_send=data&data_mask;
 800b5d2:	6d6b      	ldr	r3, [r5, #84]	; 0x54
          if(parity!=parity_codes::NO_PARITY)
 800b5d4:	f8d5 c03c 	ldr.w	ip, [r5, #60]	; 0x3c
          uint32_t data_to_send=data&data_mask;
 800b5d8:	4019      	ands	r1, r3
 800b5da:	004b      	lsls	r3, r1, #1
          if(parity!=parity_codes::NO_PARITY)
 800b5dc:	f1bc 0f00 	cmp.w	ip, #0
 800b5e0:	d015      	beq.n	800b60e <main+0xe2e>
              static_cast<uint32_t>(data_bits)
 800b5e2:	f8d5 e038 	ldr.w	lr, [r5, #56]	; 0x38
                uint32_t odd_parity=data&1;
 800b5e6:	f001 0201 	and.w	r2, r1, #1
                for(uint32_t bit=1; bit<bits; bit++)
 800b5ea:	2701      	movs	r7, #1
 800b5ec:	e001      	b.n	800b5f2 <main+0xe12>
                  odd_parity=odd_parity^((data>>bit)&1);
 800b5ee:	4042      	eors	r2, r0
                for(uint32_t bit=1; bit<bits; bit++)
 800b5f0:	3701      	adds	r7, #1
                  odd_parity=odd_parity^((data>>bit)&1);
 800b5f2:	fa21 f007 	lsr.w	r0, r1, r7
                for(uint32_t bit=1; bit<bits; bit++)
 800b5f6:	45be      	cmp	lr, r7
                  odd_parity=odd_parity^((data>>bit)&1);
 800b5f8:	f000 0001 	and.w	r0, r0, #1
                for(uint32_t bit=1; bit<bits; bit++)
 800b5fc:	d8f7      	bhi.n	800b5ee <main+0xe0e>
            if(parity==parity_codes::ODD_PARITY) 
 800b5fe:	f1bc 0f02 	cmp.w	ip, #2
              (data_to_send<<1)|(data_parity<<parity_bit_pos);
 800b602:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
              data_parity=data_parity^1;
 800b604:	bf08      	it	eq
 800b606:	f082 0201 	eoreq.w	r2, r2, #1
              (data_to_send<<1)|(data_parity<<parity_bit_pos);
 800b60a:	408a      	lsls	r2, r1
 800b60c:	4313      	orrs	r3, r2
          if(stop_bits==stop_bit_codes::ONE_STOP_BIT)
 800b60e:	6c2a      	ldr	r2, [r5, #64]	; 0x40
 800b610:	6d29      	ldr	r1, [r5, #80]	; 0x50
 800b612:	2a01      	cmp	r2, #1
            data_to_send=data_to_send|(0x3<<first_stop_bit_pos);
 800b614:	bf18      	it	ne
 800b616:	2203      	movne	r2, #3
 800b618:	408a      	lsls	r2, r1
 800b61a:	4313      	orrs	r3, r2
 800b61c:	2220      	movs	r2, #32
 800b61e:	f382 8811 	msr	BASEPRI, r2
      int new_last=(_last_+1)%LENGTH;
 800b622:	f8d5 2880 	ldr.w	r2, [r5, #2176]	; 0x880
      if(new_last==_first_) // full?
 800b626:	f8d5 087c 	ldr.w	r0, [r5, #2172]	; 0x87c
      int new_last=(_last_+1)%LENGTH;
 800b62a:	3201      	adds	r2, #1
 800b62c:	b2d2      	uxtb	r2, r2
      if(new_last==_first_) // full?
 800b62e:	4282      	cmp	r2, r0
 800b630:	d035      	beq.n	800b69e <main+0xebe>
      _buffer_p_[_last_]=t;
 800b632:	eb05 0182 	add.w	r1, r5, r2, lsl #2
      if(_first_<0) _first_=_last_;
 800b636:	2800      	cmp	r0, #0
      _buffer_p_[_last_]=t;
 800b638:	f8c1 347c 	str.w	r3, [r1, #1148]	; 0x47c
      _items_++;
 800b63c:	f8d5 1884 	ldr.w	r1, [r5, #2180]	; 0x884
      _last_=new_last;
 800b640:	f8c5 2880 	str.w	r2, [r5, #2176]	; 0x880
      _items_++;
 800b644:	f101 0101 	add.w	r1, r1, #1
 800b648:	f8c5 1884 	str.w	r1, [r5, #2180]	; 0x884
          if(tx_status==tx_status_codes::IDLE)
 800b64c:	f8d5 0890 	ldr.w	r0, [r5, #2192]	; 0x890
      if(_first_<0) _first_=_last_;
 800b650:	bfb8      	it	lt
 800b652:	f8c5 287c 	strlt.w	r2, [r5, #2172]	; 0x87c
 800b656:	b9c8      	cbnz	r0, 800b68c <main+0xeac>
      if(_first_<0) return false;
 800b658:	f8d5 187c 	ldr.w	r1, [r5, #2172]	; 0x87c
 800b65c:	2900      	cmp	r1, #0
 800b65e:	db0e      	blt.n	800b67e <main+0xe9e>
      t=_buffer_p_[_first_];
 800b660:	eb05 0381 	add.w	r3, r5, r1, lsl #2
      if(_first_==_last_) _init_();
 800b664:	428a      	cmp	r2, r1
      t=_buffer_p_[_first_];
 800b666:	f8d3 347c 	ldr.w	r3, [r3, #1148]	; 0x47c
      if(_first_==_last_) _init_();
 800b66a:	d028      	beq.n	800b6be <main+0xede>
      else { _first_=(_first_+1)%LENGTH; _items_--; }
 800b66c:	f8d5 0884 	ldr.w	r0, [r5, #2180]	; 0x884
 800b670:	1c4a      	adds	r2, r1, #1
 800b672:	b2d2      	uxtb	r2, r2
 800b674:	3801      	subs	r0, #1
 800b676:	f8c5 287c 	str.w	r2, [r5, #2172]	; 0x87c
 800b67a:	f8c5 0884 	str.w	r0, [r5, #2180]	; 0x884
            tx_data=data_to_send; tx_bit_counter=0; 
 800b67e:	2200      	movs	r2, #0
 800b680:	f8c5 3888 	str.w	r3, [r5, #2184]	; 0x888
 800b684:	f8c5 288c 	str.w	r2, [r5, #2188]	; 0x88c
            tx_interrupt_counter=0;
 800b688:	f8c5 2894 	str.w	r2, [r5, #2196]	; 0x894
            (rx_status==rx_status_codes::LISTENING)
 800b68c:	f8d5 3470 	ldr.w	r3, [r5, #1136]	; 0x470
            && (tx_status==tx_status_codes::IDLE) 
 800b690:	b913      	cbnz	r3, 800b698 <main+0xeb8>
 800b692:	f8d5 3890 	ldr.w	r3, [r5, #2192]	; 0x890
 800b696:	b1db      	cbz	r3, 800b6d0 <main+0xef0>
          tx_status=tx_status_codes::SENDING;
 800b698:	2301      	movs	r3, #1
 800b69a:	f8c5 3890 	str.w	r3, [r5, #2192]	; 0x890
 800b69e:	6823      	ldr	r3, [r4, #0]
 800b6a0:	42a3      	cmp	r3, r4
 800b6a2:	d004      	beq.n	800b6ae <main+0xece>
 800b6a4:	69a2      	ldr	r2, [r4, #24]
 800b6a6:	689b      	ldr	r3, [r3, #8]
 800b6a8:	6892      	ldr	r2, [r2, #8]
 800b6aa:	429a      	cmp	r2, r3
 800b6ac:	d323      	bcc.n	800b6f6 <main+0xf16>
 800b6ae:	2300      	movs	r3, #0
 800b6b0:	f383 8811 	msr	BASEPRI, r3
 800b6b4:	e56c      	b.n	800b190 <main+0x9b0>
  __ASM volatile ("cpsid i" : : : "memory");
 800b6b6:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b6b8:	4b59      	ldr	r3, [pc, #356]	; (800b820 <main+0x1040>)
 800b6ba:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b6bc:	e7fe      	b.n	800b6bc <main+0xedc>
    void _init_() { _first_=_last_=-1; _items_=0; }
 800b6be:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800b6c2:	f8c5 0884 	str.w	r0, [r5, #2180]	; 0x884
 800b6c6:	f8c5 2880 	str.w	r2, [r5, #2176]	; 0x880
 800b6ca:	f8c5 287c 	str.w	r2, [r5, #2172]	; 0x87c
 800b6ce:	e7d6      	b.n	800b67e <main+0xe9e>
          ) gptStartContinuous(TIMER,bit_1st_quarter);
 800b6d0:	6b29      	ldr	r1, [r5, #48]	; 0x30
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800b6d2:	2320      	movs	r3, #32
 800b6d4:	f383 8811 	msr	BASEPRI, r3
 800b6d8:	4854      	ldr	r0, [pc, #336]	; (800b82c <main+0x104c>)
 800b6da:	f7fe f849 	bl	8009770 <gptStartContinuousI>
 800b6de:	6823      	ldr	r3, [r4, #0]
 800b6e0:	42a3      	cmp	r3, r4
 800b6e2:	d004      	beq.n	800b6ee <main+0xf0e>
 800b6e4:	69a2      	ldr	r2, [r4, #24]
 800b6e6:	689b      	ldr	r3, [r3, #8]
 800b6e8:	6892      	ldr	r2, [r2, #8]
 800b6ea:	429a      	cmp	r2, r3
 800b6ec:	d307      	bcc.n	800b6fe <main+0xf1e>
 800b6ee:	2300      	movs	r3, #0
 800b6f0:	f383 8811 	msr	BASEPRI, r3
 800b6f4:	e7d0      	b.n	800b698 <main+0xeb8>
  __ASM volatile ("cpsid i" : : : "memory");
 800b6f6:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b6f8:	4b49      	ldr	r3, [pc, #292]	; (800b820 <main+0x1040>)
 800b6fa:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b6fc:	e7fe      	b.n	800b6fc <main+0xf1c>
 800b6fe:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b700:	4b4b      	ldr	r3, [pc, #300]	; (800b830 <main+0x1050>)
 800b702:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b704:	e7fe      	b.n	800b704 <main+0xf24>
 800b706:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b708:	4b45      	ldr	r3, [pc, #276]	; (800b820 <main+0x1040>)
 800b70a:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b70c:	e7fe      	b.n	800b70c <main+0xf2c>
 800b70e:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b710:	4b43      	ldr	r3, [pc, #268]	; (800b820 <main+0x1040>)
 800b712:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b714:	e7fe      	b.n	800b714 <main+0xf34>
 800b716:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b718:	4b41      	ldr	r3, [pc, #260]	; (800b820 <main+0x1040>)
 800b71a:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b71c:	e7fe      	b.n	800b71c <main+0xf3c>
                )? 
 800b71e:	a902      	add	r1, sp, #8
 800b720:	4844      	ldr	r0, [pc, #272]	; (800b834 <main+0x1054>)
 800b722:	f7fd faf5 	bl	8008d10 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm>
 800b726:	4607      	mov	r7, r0
 800b728:	e54b      	b.n	800b1c2 <main+0x9e2>
      else if(my_soft_uart_1.bad_parity(status))
 800b72a:	073a      	lsls	r2, r7, #28
 800b72c:	d40b      	bmi.n	800b746 <main+0xf66>
      else if(my_soft_uart_1.bad_stop_bit(status))
 800b72e:	06fb      	lsls	r3, r7, #27
 800b730:	f57f ad94 	bpl.w	800b25c <main+0xa7c>
        chprintf((BaseSequentialStream *) &LPSD1," [BAD_STOP_BIT]");
 800b734:	4940      	ldr	r1, [pc, #256]	; (800b838 <main+0x1058>)
 800b736:	4640      	mov	r0, r8
 800b738:	f7fe fa4a 	bl	8009bd0 <chprintf.constprop.33>
 800b73c:	e58e      	b.n	800b25c <main+0xa7c>
 800b73e:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b740:	4b37      	ldr	r3, [pc, #220]	; (800b820 <main+0x1040>)
 800b742:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b744:	e7fe      	b.n	800b744 <main+0xf64>
        chprintf((BaseSequentialStream *) &LPSD1," [BAD_PARITY]");
 800b746:	4938      	ldr	r1, [pc, #224]	; (800b828 <main+0x1048>)
 800b748:	4640      	mov	r0, r8
 800b74a:	f7fe fa41 	bl	8009bd0 <chprintf.constprop.33>
 800b74e:	e585      	b.n	800b25c <main+0xa7c>
 800b750:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b752:	4b3a      	ldr	r3, [pc, #232]	; (800b83c <main+0x105c>)
 800b754:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b756:	e7fe      	b.n	800b756 <main+0xf76>
 800b758:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b75a:	4b31      	ldr	r3, [pc, #196]	; (800b820 <main+0x1040>)
 800b75c:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b75e:	e7fe      	b.n	800b75e <main+0xf7e>
 800b760:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b762:	4b2f      	ldr	r3, [pc, #188]	; (800b820 <main+0x1040>)
 800b764:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b766:	e7fe      	b.n	800b766 <main+0xf86>
 800b768:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b76a:	4b2d      	ldr	r3, [pc, #180]	; (800b820 <main+0x1040>)
 800b76c:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b76e:	e7fe      	b.n	800b76e <main+0xf8e>
 800b770:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b772:	4b2b      	ldr	r3, [pc, #172]	; (800b820 <main+0x1040>)
 800b774:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b776:	e7fe      	b.n	800b776 <main+0xf96>
      chHeapFree(chThdGetWorkingAreaX(tp));
 800b778:	f8d2 901c 	ldr.w	r9, [r2, #28]
  chDbgCheck((p != NULL) && MEM_IS_ALIGNED(p, CH_HEAP_ALIGNMENT));

  /*lint -save -e9087 [11.3] Safe cast.*/
  hp = (heap_header_t *)p - 1U;
  /*lint -restore*/
  heapp = H_HEAP(hp);
 800b77c:	e959 7302 	ldrd	r7, r3, [r9, #-8]
  qp = &heapp->header;

  /* Size is converted in number of elementary allocation units.*/
  H_PAGES(hp) = MEM_ALIGN_NEXT(H_SIZE(hp),
 800b780:	3307      	adds	r3, #7
                               CH_HEAP_ALIGNMENT) / CH_HEAP_ALIGNMENT;
 800b782:	08db      	lsrs	r3, r3, #3
  H_PAGES(hp) = MEM_ALIGN_NEXT(H_SIZE(hp),
 800b784:	f849 3c04 	str.w	r3, [r9, #-4]

  /* Taking heap mutex/semaphore.*/
  H_LOCK(heapp);
 800b788:	f107 010c 	add.w	r1, r7, #12
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800b78c:	2320      	movs	r3, #32
 800b78e:	f383 8811 	msr	BASEPRI, r3

  chDbgCheckClassS();
  chDbgCheck(mp != NULL);

  /* Is the mutex already locked? */
  if (mp->owner != NULL) {
 800b792:	6978      	ldr	r0, [r7, #20]
  thread_t *ctp = currp;
 800b794:	f8d4 8018 	ldr.w	r8, [r4, #24]
  if (mp->owner != NULL) {
 800b798:	2800      	cmp	r0, #0
 800b79a:	f000 808a 	beq.w	800b8b2 <main+0x10d2>
         priority of the running thread requesting the mutex.*/
      thread_t *tp = mp->owner;

      /* Does the running thread have higher priority than the mutex
         owning thread? */
      while (tp->prio < ctp->prio) {
 800b79e:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800b7a2:	6883      	ldr	r3, [r0, #8]
 800b7a4:	429a      	cmp	r2, r3
 800b7a6:	d907      	bls.n	800b7b8 <main+0xfd8>
        /* Make priority of thread tp match the running thread's priority.*/
        tp->prio = ctp->prio;

        /* The following states need priority queues reordering.*/
        switch (tp->state) {
 800b7a8:	f890 3020 	ldrb.w	r3, [r0, #32]
        tp->prio = ctp->prio;
 800b7ac:	6082      	str	r2, [r0, #8]
        switch (tp->state) {
 800b7ae:	2b06      	cmp	r3, #6
 800b7b0:	d066      	beq.n	800b880 <main+0x10a0>
 800b7b2:	2b07      	cmp	r3, #7
 800b7b4:	d048      	beq.n	800b848 <main+0x1068>
 800b7b6:	b31b      	cbz	r3, 800b800 <main+0x1020>
 800b7b8:	460a      	mov	r2, r1
 800b7ba:	e004      	b.n	800b7c6 <main+0xfe6>
  } while ((cp != (thread_t *)tqp) && (cp->prio >= tp->prio));
 800b7bc:	6890      	ldr	r0, [r2, #8]
 800b7be:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800b7c2:	4298      	cmp	r0, r3
 800b7c4:	d302      	bcc.n	800b7cc <main+0xfec>
    cp = cp->queue.next;
 800b7c6:	6812      	ldr	r2, [r2, #0]
  } while ((cp != (thread_t *)tqp) && (cp->prio >= tp->prio));
 800b7c8:	4291      	cmp	r1, r2
 800b7ca:	d1f7      	bne.n	800b7bc <main+0xfdc>
  tp->queue.prev             = cp->queue.prev;
 800b7cc:	6853      	ldr	r3, [r2, #4]
        break;
      }

      /* Sleep on the mutex.*/
      queue_prio_insert(ctp, &mp->queue);
      ctp->u.wtmtxp = mp;
 800b7ce:	9100      	str	r1, [sp, #0]
 800b7d0:	e9c8 2300 	strd	r2, r3, [r8]
      chSchGoSleepS(CH_STATE_WTMTX);
 800b7d4:	2006      	movs	r0, #6
  tp->queue.prev->queue.next = tp;
 800b7d6:	f8c3 8000 	str.w	r8, [r3]
  cp->queue.prev             = tp;
 800b7da:	f8c2 8004 	str.w	r8, [r2, #4]
      ctp->u.wtmtxp = mp;
 800b7de:	f8c8 1024 	str.w	r1, [r8, #36]	; 0x24
      chSchGoSleepS(CH_STATE_WTMTX);
 800b7e2:	f7fe fc15 	bl	800a010 <chSchGoSleepS>

      /* It is assumed that the thread performing the unlock operation assigns
         the mutex to this thread.*/
      chDbgAssert(mp->owner == ctp, "not owner");
 800b7e6:	697b      	ldr	r3, [r7, #20]
 800b7e8:	9900      	ldr	r1, [sp, #0]
 800b7ea:	4598      	cmp	r8, r3
 800b7ec:	f000 80f1 	beq.w	800b9d2 <main+0x11f2>
  __ASM volatile ("cpsid i" : : : "memory");
 800b7f0:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b7f2:	4b13      	ldr	r3, [pc, #76]	; (800b840 <main+0x1060>)
 800b7f4:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b7f6:	e7fe      	b.n	800b7f6 <main+0x1016>
 800b7f8:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b7fa:	4b12      	ldr	r3, [pc, #72]	; (800b844 <main+0x1064>)
 800b7fc:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b7fe:	e7fe      	b.n	800b7fe <main+0x101e>
  tp->queue.prev->queue.next = tp->queue.next;
 800b800:	e9d0 3200 	ldrd	r3, r2, [r0]
          tp->state = CH_STATE_CURRENT;
 800b804:	f04f 0c01 	mov.w	ip, #1
 800b808:	f880 c020 	strb.w	ip, [r0, #32]
 800b80c:	6013      	str	r3, [r2, #0]
  tp->queue.next->queue.prev = tp->queue.prev;
 800b80e:	605a      	str	r2, [r3, #4]
 800b810:	9100      	str	r1, [sp, #0]
          (void) chSchReadyI(queue_dequeue(tp));
 800b812:	f7fd fbdd 	bl	8008fd0 <chSchReadyI>
          break;
 800b816:	9900      	ldr	r1, [sp, #0]
 800b818:	e7ce      	b.n	800b7b8 <main+0xfd8>
 800b81a:	bf00      	nop
 800b81c:	200011b8 	.word	0x200011b8
 800b820:	08012780 	.word	0x08012780
 800b824:	080129e0 	.word	0x080129e0
 800b828:	080129f4 	.word	0x080129f4
 800b82c:	200011c8 	.word	0x200011c8
 800b830:	0801278c 	.word	0x0801278c
 800b834:	200012a0 	.word	0x200012a0
 800b838:	08012a04 	.word	0x08012a04
 800b83c:	080127a4 	.word	0x080127a4
 800b840:	08012824 	.word	0x08012824
 800b844:	08012844 	.word	0x08012844
  tp->queue.prev->queue.next = tp->queue.next;
 800b848:	e9d0 3c00 	ldrd	r3, ip, [r0]
          queue_prio_insert(queue_dequeue(tp), &tp->u.wtmtxp->queue);
 800b84c:	f8d0 e024 	ldr.w	lr, [r0, #36]	; 0x24
 800b850:	f8cc 3000 	str.w	r3, [ip]
  thread_t *cp = (thread_t *)tqp;
 800b854:	e9cd 1200 	strd	r1, r2, [sp]
  tp->queue.next->queue.prev = tp->queue.prev;
 800b858:	f8c3 c004 	str.w	ip, [r3, #4]
  thread_t *cp = (thread_t *)tqp;
 800b85c:	4673      	mov	r3, lr
 800b85e:	e003      	b.n	800b868 <main+0x1088>
  } while ((cp != (thread_t *)tqp) && (cp->prio >= tp->prio));
 800b860:	689a      	ldr	r2, [r3, #8]
 800b862:	9901      	ldr	r1, [sp, #4]
 800b864:	4291      	cmp	r1, r2
 800b866:	d802      	bhi.n	800b86e <main+0x108e>
    cp = cp->queue.next;
 800b868:	681b      	ldr	r3, [r3, #0]
  } while ((cp != (thread_t *)tqp) && (cp->prio >= tp->prio));
 800b86a:	459e      	cmp	lr, r3
 800b86c:	d1f8      	bne.n	800b860 <main+0x1080>
 800b86e:	469c      	mov	ip, r3
  tp->queue.prev             = cp->queue.prev;
 800b870:	685b      	ldr	r3, [r3, #4]
 800b872:	9900      	ldr	r1, [sp, #0]
 800b874:	e9c0 c300 	strd	ip, r3, [r0]
  tp->queue.prev->queue.next = tp;
 800b878:	6018      	str	r0, [r3, #0]
  cp->queue.prev             = tp;
 800b87a:	f8cc 0004 	str.w	r0, [ip, #4]
 800b87e:	e79b      	b.n	800b7b8 <main+0xfd8>
  tp->queue.prev->queue.next = tp->queue.next;
 800b880:	e9d0 3e00 	ldrd	r3, lr, [r0]
          queue_prio_insert(queue_dequeue(tp), &tp->u.wtmtxp->queue);
 800b884:	f8d0 c024 	ldr.w	ip, [r0, #36]	; 0x24
 800b888:	f8ce 3000 	str.w	r3, [lr]
  tp->queue.next->queue.prev = tp->queue.prev;
 800b88c:	f8c3 e004 	str.w	lr, [r3, #4]
  thread_t *cp = (thread_t *)tqp;
 800b890:	4663      	mov	r3, ip
 800b892:	4696      	mov	lr, r2
 800b894:	e002      	b.n	800b89c <main+0x10bc>
  } while ((cp != (thread_t *)tqp) && (cp->prio >= tp->prio));
 800b896:	689a      	ldr	r2, [r3, #8]
 800b898:	4596      	cmp	lr, r2
 800b89a:	d802      	bhi.n	800b8a2 <main+0x10c2>
    cp = cp->queue.next;
 800b89c:	681b      	ldr	r3, [r3, #0]
  } while ((cp != (thread_t *)tqp) && (cp->prio >= tp->prio));
 800b89e:	459c      	cmp	ip, r3
 800b8a0:	d1f9      	bne.n	800b896 <main+0x10b6>
  tp->queue.prev             = cp->queue.prev;
 800b8a2:	685a      	ldr	r2, [r3, #4]
 800b8a4:	e9c0 3200 	strd	r3, r2, [r0]
  tp->queue.prev->queue.next = tp;
 800b8a8:	6010      	str	r0, [r2, #0]
  cp->queue.prev             = tp;
 800b8aa:	6058      	str	r0, [r3, #4]
          tp = tp->u.wtmtxp->owner;
 800b8ac:	f8dc 0008 	ldr.w	r0, [ip, #8]
          continue;
 800b8b0:	e775      	b.n	800b79e <main+0xfbe>

    mp->cnt++;
#endif
    /* It was not owned, inserted in the owned mutexes list.*/
    mp->owner = ctp;
    mp->next = ctp->mtxlist;
 800b8b2:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
 800b8b6:	e9c7 8305 	strd	r8, r3, [r7, #20]
    ctp->mtxlist = mp;
 800b8ba:	f8c8 1038 	str.w	r1, [r8, #56]	; 0x38
 800b8be:	6822      	ldr	r2, [r4, #0]
 800b8c0:	42a2      	cmp	r2, r4
 800b8c2:	d005      	beq.n	800b8d0 <main+0x10f0>
 800b8c4:	69a3      	ldr	r3, [r4, #24]
 800b8c6:	6892      	ldr	r2, [r2, #8]
 800b8c8:	689b      	ldr	r3, [r3, #8]
 800b8ca:	4293      	cmp	r3, r2
 800b8cc:	f0c0 808a 	bcc.w	800b9e4 <main+0x1204>
  hp = (heap_header_t *)p - 1U;
 800b8d0:	f1a9 0008 	sub.w	r0, r9, #8
  qp = &heapp->header;
 800b8d4:	f107 0c04 	add.w	ip, r7, #4
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800b8d8:	f38a 8811 	msr	BASEPRI, sl
 800b8dc:	4662      	mov	r2, ip

  while (true) {
    chDbgAssert((hp < qp) || (hp >= H_LIMIT(qp)), "within free block");
 800b8de:	4290      	cmp	r0, r2
 800b8e0:	d305      	bcc.n	800b8ee <main+0x110e>
 800b8e2:	6853      	ldr	r3, [r2, #4]
 800b8e4:	3301      	adds	r3, #1
 800b8e6:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800b8ea:	4298      	cmp	r0, r3
 800b8ec:	d329      	bcc.n	800b942 <main+0x1162>

    if (((qp == &heapp->header) || (hp > qp)) &&
 800b8ee:	4594      	cmp	ip, r2
        ((H_NEXT(qp) == NULL) || (hp < H_NEXT(qp)))) {
 800b8f0:	6813      	ldr	r3, [r2, #0]
    if (((qp == &heapp->header) || (hp > qp)) &&
 800b8f2:	d001      	beq.n	800b8f8 <main+0x1118>
 800b8f4:	4290      	cmp	r0, r2
 800b8f6:	d928      	bls.n	800b94a <main+0x116a>
 800b8f8:	b10b      	cbz	r3, 800b8fe <main+0x111e>
        ((H_NEXT(qp) == NULL) || (hp < H_NEXT(qp)))) {
 800b8fa:	4298      	cmp	r0, r3
 800b8fc:	d225      	bcs.n	800b94a <main+0x116a>
      /* Insertion after qp.*/
      H_NEXT(hp) = H_NEXT(qp);
      H_NEXT(qp) = hp;
      /* Verifies if the newly inserted block should be merged.*/
      if (H_LIMIT(hp) == H_NEXT(hp)) {
 800b8fe:	f859 cc04 	ldr.w	ip, [r9, #-4]
      H_NEXT(hp) = H_NEXT(qp);
 800b902:	f849 3c08 	str.w	r3, [r9, #-8]
      H_NEXT(qp) = hp;
 800b906:	6010      	str	r0, [r2, #0]
      if (H_LIMIT(hp) == H_NEXT(hp)) {
 800b908:	f10c 0c01 	add.w	ip, ip, #1
 800b90c:	f859 3c08 	ldr.w	r3, [r9, #-8]
 800b910:	eb00 0ecc 	add.w	lr, r0, ip, lsl #3
 800b914:	4573      	cmp	r3, lr
 800b916:	d070      	beq.n	800b9fa <main+0x121a>
        /* Merge with the next block.*/
        H_PAGES(hp) += H_PAGES(H_NEXT(hp)) + 1U;
        H_NEXT(hp) = H_NEXT(H_NEXT(hp));
      }
      if ((H_LIMIT(qp) == hp)) {
 800b918:	f8d2 c004 	ldr.w	ip, [r2, #4]
 800b91c:	f10c 0301 	add.w	r3, ip, #1
 800b920:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800b924:	4298      	cmp	r0, r3
 800b926:	d061      	beq.n	800b9ec <main+0x120c>
 * @param[in] mp        pointer to the @p mutex_t structure
 *
 * @api
 */
void chMtxUnlock(mutex_t *mp) {
  thread_t *ctp = currp;
 800b928:	69a0      	ldr	r0, [r4, #24]
 800b92a:	2320      	movs	r3, #32
 800b92c:	f383 8811 	msr	BASEPRI, r3

  chDbgCheck(mp != NULL);

  chSysLock();

  chDbgAssert(ctp->mtxlist != NULL, "owned mutexes list empty");
 800b930:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800b932:	b192      	cbz	r2, 800b95a <main+0x117a>
  chDbgAssert(ctp->mtxlist->owner == ctp, "ownership failure");
 800b934:	6893      	ldr	r3, [r2, #8]
 800b936:	4298      	cmp	r0, r3
 800b938:	d009      	beq.n	800b94e <main+0x116e>
  __ASM volatile ("cpsid i" : : : "memory");
 800b93a:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b93c:	4b50      	ldr	r3, [pc, #320]	; (800ba80 <main+0x12a0>)
 800b93e:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b940:	e7fe      	b.n	800b940 <main+0x1160>
 800b942:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b944:	4b4f      	ldr	r3, [pc, #316]	; (800ba84 <main+0x12a4>)
 800b946:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b948:	e7fe      	b.n	800b948 <main+0x1168>
        H_PAGES(qp) += H_PAGES(hp) + 1U;
        H_NEXT(qp) = H_NEXT(hp);
      }
      break;
    }
    qp = H_NEXT(qp);
 800b94a:	461a      	mov	r2, r3
 800b94c:	e7c7      	b.n	800b8de <main+0x10fe>
  chDbgAssert(mp->cnt >= (cnt_t)1, "counter is not positive");

  if (--mp->cnt == (cnt_t)0) {
#endif

    chDbgAssert(ctp->mtxlist == mp, "not next in list");
 800b94e:	4291      	cmp	r1, r2
 800b950:	d05c      	beq.n	800ba0c <main+0x122c>
 800b952:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b954:	4b4a      	ldr	r3, [pc, #296]	; (800ba80 <main+0x12a0>)
 800b956:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b958:	e7fe      	b.n	800b958 <main+0x1178>
 800b95a:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b95c:	4b48      	ldr	r3, [pc, #288]	; (800ba80 <main+0x12a0>)
 800b95e:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b960:	e7fe      	b.n	800b960 <main+0x1180>
 800b962:	a902      	add	r1, sp, #8
 800b964:	4848      	ldr	r0, [pc, #288]	; (800ba88 <main+0x12a8>)
 800b966:	f7fd f9d3 	bl	8008d10 <_ZN9soft_uart7chibios4uartIXadL_Z5GPTD1EELj256ELj256EE10_uart_ctx_11get_rx_dataERm>
 800b96a:	4607      	mov	r7, r0
 800b96c:	f7ff bb59 	b.w	800b022 <main+0x842>
 800b970:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b972:	4b46      	ldr	r3, [pc, #280]	; (800ba8c <main+0x12ac>)
 800b974:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b976:	e7fe      	b.n	800b976 <main+0x1196>
 800b978:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800b97c:	f8c6 0884 	str.w	r0, [r6, #2180]	; 0x884
 800b980:	f8c6 2880 	str.w	r2, [r6, #2176]	; 0x880
 800b984:	f8c6 287c 	str.w	r2, [r6, #2172]	; 0x87c
 800b988:	e5ad      	b.n	800b4e6 <main+0xd06>
 800b98a:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b98c:	4b40      	ldr	r3, [pc, #256]	; (800ba90 <main+0x12b0>)
 800b98e:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b990:	e7fe      	b.n	800b990 <main+0x11b0>
 800b992:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b994:	4b3f      	ldr	r3, [pc, #252]	; (800ba94 <main+0x12b4>)
 800b996:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b998:	e7fe      	b.n	800b998 <main+0x11b8>
    otp = chSchReadyAheadI(otp);
 800b99a:	f7fd faf9 	bl	8008f90 <chSchReadyAheadI>
    ntp->state = CH_STATE_CURRENT;
 800b99e:	2301      	movs	r3, #1
    chSysSwitch(ntp, otp);
 800b9a0:	4601      	mov	r1, r0
    ntp->state = CH_STATE_CURRENT;
 800b9a2:	f886 30b0 	strb.w	r3, [r6, #176]	; 0xb0
    chSysSwitch(ntp, otp);
 800b9a6:	483c      	ldr	r0, [pc, #240]	; (800ba98 <main+0x12b8>)
    currp = ntp;
 800b9a8:	61a7      	str	r7, [r4, #24]
    chSysSwitch(ntp, otp);
 800b9aa:	f7f4 fc99 	bl	80002e0 <_port_switch>
 800b9ae:	f7ff b9ad 	b.w	800ad0c <main+0x52c>
 800b9b2:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b9b4:	4b39      	ldr	r3, [pc, #228]	; (800ba9c <main+0x12bc>)
 800b9b6:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b9b8:	e7fe      	b.n	800b9b8 <main+0x11d8>
 800b9ba:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b9bc:	4b33      	ldr	r3, [pc, #204]	; (800ba8c <main+0x12ac>)
 800b9be:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b9c0:	e7fe      	b.n	800b9c0 <main+0x11e0>
 800b9c2:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b9c4:	4b36      	ldr	r3, [pc, #216]	; (800baa0 <main+0x12c0>)
 800b9c6:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b9c8:	e7fe      	b.n	800b9c8 <main+0x11e8>
 800b9ca:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b9cc:	4b35      	ldr	r3, [pc, #212]	; (800baa4 <main+0x12c4>)
 800b9ce:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b9d0:	e7fe      	b.n	800b9d0 <main+0x11f0>
      chDbgAssert(ctp->mtxlist == mp, "not owned");
 800b9d2:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
 800b9d6:	4299      	cmp	r1, r3
 800b9d8:	f43f af71 	beq.w	800b8be <main+0x10de>
 800b9dc:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b9de:	4b32      	ldr	r3, [pc, #200]	; (800baa8 <main+0x12c8>)
 800b9e0:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b9e2:	e7fe      	b.n	800b9e2 <main+0x1202>
 800b9e4:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800b9e6:	4b31      	ldr	r3, [pc, #196]	; (800baac <main+0x12cc>)
 800b9e8:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800b9ea:	e7fe      	b.n	800b9ea <main+0x120a>
        H_NEXT(qp) = H_NEXT(hp);
 800b9ec:	e959 0302 	ldrd	r0, r3, [r9, #-8]
        H_PAGES(qp) += H_PAGES(hp) + 1U;
 800b9f0:	3301      	adds	r3, #1
 800b9f2:	4463      	add	r3, ip
        H_NEXT(qp) = H_NEXT(hp);
 800b9f4:	6010      	str	r0, [r2, #0]
        H_PAGES(qp) += H_PAGES(hp) + 1U;
 800b9f6:	6053      	str	r3, [r2, #4]
        H_NEXT(qp) = H_NEXT(hp);
 800b9f8:	e796      	b.n	800b928 <main+0x1148>
        H_NEXT(hp) = H_NEXT(H_NEXT(hp));
 800b9fa:	e9d3 3e00 	ldrd	r3, lr, [r3]
 800b9fe:	f849 3c08 	str.w	r3, [r9, #-8]
        H_PAGES(hp) += H_PAGES(H_NEXT(hp)) + 1U;
 800ba02:	eb0e 030c 	add.w	r3, lr, ip
 800ba06:	f849 3c04 	str.w	r3, [r9, #-4]
        H_NEXT(hp) = H_NEXT(H_NEXT(hp));
 800ba0a:	e785      	b.n	800b918 <main+0x1138>
  return (bool)(tqp->next != (const thread_t *)tqp);
 800ba0c:	68fb      	ldr	r3, [r7, #12]

    /* Removes the top mutex from the thread's owned mutexes list and marks
       it as not owned. Note, it is assumed to be the same mutex passed as
       parameter of this function.*/
    ctp->mtxlist = mp->next;
 800ba0e:	69b9      	ldr	r1, [r7, #24]
 800ba10:	6381      	str	r1, [r0, #56]	; 0x38

    /* If a thread is waiting on the mutex then the fun part begins.*/
    if (chMtxQueueNotEmptyS(mp)) {
 800ba12:	429a      	cmp	r2, r3
 800ba14:	d031      	beq.n	800ba7a <main+0x129a>
      thread_t *tp;

      /* Recalculates the optimal thread priority by scanning the owned
         mutexes list.*/
      tprio_t newprio = ctp->realprio;
 800ba16:	f8d0 c03c 	ldr.w	ip, [r0, #60]	; 0x3c
      lmp = ctp->mtxlist;
      while (lmp != NULL) {
 800ba1a:	b151      	cbz	r1, 800ba32 <main+0x1252>
 800ba1c:	f8d1 e000 	ldr.w	lr, [r1]
        /* If the highest priority thread waiting in the mutexes list has a
           greater priority than the current thread base priority then the
           final priority will have at least that priority.*/
        if (chMtxQueueNotEmptyS(lmp) &&
 800ba20:	4571      	cmp	r1, lr
 800ba22:	d004      	beq.n	800ba2e <main+0x124e>
 800ba24:	f8de e008 	ldr.w	lr, [lr, #8]
 800ba28:	45f4      	cmp	ip, lr
 800ba2a:	bf38      	it	cc
 800ba2c:	46f4      	movcc	ip, lr
            (lmp->queue.next->prio > newprio)) {
          newprio = lmp->queue.next->prio;
        }
        lmp = lmp->next;
 800ba2e:	68c9      	ldr	r1, [r1, #12]
 800ba30:	e7f3      	b.n	800ba1a <main+0x123a>
  tqp->next             = tp->queue.next;
 800ba32:	6819      	ldr	r1, [r3, #0]
      }

      /* Assigns to the current thread the highest priority among all the
         waiting threads.*/
      ctp->prio = newprio;
 800ba34:	f8c0 c008 	str.w	ip, [r0, #8]
#if CH_CFG_USE_MUTEXES_RECURSIVE == TRUE
      mp->cnt = (cnt_t)1;
#endif
      tp = queue_fifo_remove(&mp->queue);
      mp->owner = tp;
      mp->next = tp->mtxlist;
 800ba38:	f8d3 c038 	ldr.w	ip, [r3, #56]	; 0x38
 800ba3c:	60f9      	str	r1, [r7, #12]

      /* Note, not using chSchWakeupS() because that function expects the
         current thread to have the higher or equal priority than the ones
         in the ready list. This is not necessarily true here because we
         just changed priority.*/
      (void) chSchReadyI(tp);
 800ba3e:	4618      	mov	r0, r3
  tqp->next->queue.prev = (thread_t *)tqp;
 800ba40:	604a      	str	r2, [r1, #4]
      mp->next = tp->mtxlist;
 800ba42:	e9c7 3c05 	strd	r3, ip, [r7, #20]
      tp->mtxlist = mp;
 800ba46:	639a      	str	r2, [r3, #56]	; 0x38
      (void) chSchReadyI(tp);
 800ba48:	f7fd fac2 	bl	8008fd0 <chSchReadyI>
 */
static inline bool chSchIsRescRequiredI(void) {

  chDbgCheckClassI();

  return firstprio(&ch.rlist.queue) > currp->prio;
 800ba4c:	6822      	ldr	r2, [r4, #0]
 800ba4e:	69a3      	ldr	r3, [r4, #24]
  if (chSchIsRescRequiredI()) {
 800ba50:	6892      	ldr	r2, [r2, #8]
 800ba52:	689b      	ldr	r3, [r3, #8]
 800ba54:	429a      	cmp	r2, r3
 800ba56:	f67f a913 	bls.w	800ac80 <main+0x4a0>
    chSchDoRescheduleAhead();
 800ba5a:	f7fe fea9 	bl	800a7b0 <chSchDoReschedule>
 800ba5e:	6823      	ldr	r3, [r4, #0]
 800ba60:	42a3      	cmp	r3, r4
 800ba62:	f43f a90d 	beq.w	800ac80 <main+0x4a0>
 800ba66:	69a2      	ldr	r2, [r4, #24]
 800ba68:	689b      	ldr	r3, [r3, #8]
 800ba6a:	6892      	ldr	r2, [r2, #8]
 800ba6c:	429a      	cmp	r2, r3
 800ba6e:	f4bf a907 	bcs.w	800ac80 <main+0x4a0>
 800ba72:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800ba74:	4b0d      	ldr	r3, [pc, #52]	; (800baac <main+0x12cc>)
 800ba76:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800ba78:	e7fe      	b.n	800ba78 <main+0x1298>
      chSchRescheduleS();
    }
    else {
      mp->owner = NULL;
 800ba7a:	f8c7 a014 	str.w	sl, [r7, #20]
 800ba7e:	e7ee      	b.n	800ba5e <main+0x127e>
 800ba80:	0801285c 	.word	0x0801285c
 800ba84:	08012850 	.word	0x08012850
 800ba88:	20001b38 	.word	0x20001b38
 800ba8c:	08012780 	.word	0x08012780
 800ba90:	0801278c 	.word	0x0801278c
 800ba94:	08012944 	.word	0x08012944
 800ba98:	200025a8 	.word	0x200025a8
 800ba9c:	08012798 	.word	0x08012798
 800baa0:	08012868 	.word	0x08012868
 800baa4:	080127a4 	.word	0x080127a4
 800baa8:	08012824 	.word	0x08012824
 800baac:	080127b0 	.word	0x080127b0

0800bab0 <__early_init>:
  rccResetAHB2(STM32_GPIO_EN_MASK);
 800bab0:	4a85      	ldr	r2, [pc, #532]	; (800bcc8 <__early_init+0x218>)
  gpiop->OTYPER  = config->otyper;
 800bab2:	4886      	ldr	r0, [pc, #536]	; (800bccc <__early_init+0x21c>)
  rccResetAHB2(STM32_GPIO_EN_MASK);
 800bab4:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800bab6:	f240 11ff 	movw	r1, #511	; 0x1ff
 800baba:	430b      	orrs	r3, r1
void __early_init(void) {
 800babc:	b4f0      	push	{r4, r5, r6, r7}
  rccResetAHB2(STM32_GPIO_EN_MASK);
 800babe:	62d3      	str	r3, [r2, #44]	; 0x2c
 800bac0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
  gpiop->OSPEEDR = config->ospeedr;
 800bac2:	4e83      	ldr	r6, [pc, #524]	; (800bcd0 <__early_init+0x220>)
  gpiop->OTYPER  = config->otyper;
 800bac4:	4d83      	ldr	r5, [pc, #524]	; (800bcd4 <__early_init+0x224>)
 800bac6:	4c84      	ldr	r4, [pc, #528]	; (800bcd8 <__early_init+0x228>)
  rccResetAHB2(STM32_GPIO_EN_MASK);
 800bac8:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 800bacc:	f023 0301 	bic.w	r3, r3, #1
 800bad0:	62d3      	str	r3, [r2, #44]	; 0x2c
 800bad2:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
  rccEnableAHB2(STM32_GPIO_EN_MASK, true);
 800bad4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800bad6:	430b      	orrs	r3, r1
 800bad8:	64d3      	str	r3, [r2, #76]	; 0x4c
 800bada:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
 800badc:	430b      	orrs	r3, r1
  gpiop->OTYPER  = config->otyper;
 800bade:	f04f 4190 	mov.w	r1, #1207959552	; 0x48000000
  rccEnableAHB2(STM32_GPIO_EN_MASK, true);
 800bae2:	66d3      	str	r3, [r2, #108]	; 0x6c
  gpiop->OTYPER  = config->otyper;
 800bae4:	2300      	movs	r3, #0
  rccEnableAHB2(STM32_GPIO_EN_MASK, true);
 800bae6:	6ed7      	ldr	r7, [r2, #108]	; 0x6c
  gpiop->OTYPER  = config->otyper;
 800bae8:	604b      	str	r3, [r1, #4]
  gpiop->ASCR    = config->ascr;
 800baea:	62cb      	str	r3, [r1, #44]	; 0x2c
  gpiop->OSPEEDR = config->ospeedr;
 800baec:	608e      	str	r6, [r1, #8]
  gpiop->PUPDR   = config->pupdr;
 800baee:	f04f 56c0 	mov.w	r6, #402653184	; 0x18000000
 800baf2:	60ce      	str	r6, [r1, #12]
  gpiop->AFRH    = config->afrh;
 800baf4:	4e79      	ldr	r6, [pc, #484]	; (800bcdc <__early_init+0x22c>)
  gpiop->ODR     = config->odr;
 800baf6:	614b      	str	r3, [r1, #20]
  gpiop->AFRL    = config->afrl;
 800baf8:	620b      	str	r3, [r1, #32]
  gpiop->AFRH    = config->afrh;
 800bafa:	624e      	str	r6, [r1, #36]	; 0x24
  gpiop->MODER   = config->moder;
 800bafc:	4e78      	ldr	r6, [pc, #480]	; (800bce0 <__early_init+0x230>)
 800bafe:	600e      	str	r6, [r1, #0]
  gpiop->OSPEEDR = config->ospeedr;
 800bb00:	4e78      	ldr	r6, [pc, #480]	; (800bce4 <__early_init+0x234>)
  gpiop->LOCKR   = config->lockr;
 800bb02:	61cb      	str	r3, [r1, #28]
  gpiop->OTYPER  = config->otyper;
 800bb04:	606b      	str	r3, [r5, #4]
  gpiop->ASCR    = config->ascr;
 800bb06:	62eb      	str	r3, [r5, #44]	; 0x2c
  gpiop->OSPEEDR = config->ospeedr;
 800bb08:	60ae      	str	r6, [r5, #8]
  gpiop->MODER   = config->moder;
 800bb0a:	4e77      	ldr	r6, [pc, #476]	; (800bce8 <__early_init+0x238>)
  gpiop->PUPDR   = config->pupdr;
 800bb0c:	60eb      	str	r3, [r5, #12]
  gpiop->ODR     = config->odr;
 800bb0e:	616b      	str	r3, [r5, #20]
  gpiop->AFRL    = config->afrl;
 800bb10:	622b      	str	r3, [r5, #32]
  gpiop->AFRH    = config->afrh;
 800bb12:	626b      	str	r3, [r5, #36]	; 0x24
  gpiop->MODER   = config->moder;
 800bb14:	602e      	str	r6, [r5, #0]
  gpiop->OSPEEDR = config->ospeedr;
 800bb16:	f44f 4640 	mov.w	r6, #49152	; 0xc000
  gpiop->OTYPER  = config->otyper;
 800bb1a:	f501 5180 	add.w	r1, r1, #4096	; 0x1000
  gpiop->LOCKR   = config->lockr;
 800bb1e:	61eb      	str	r3, [r5, #28]
  gpiop->OTYPER  = config->otyper;
 800bb20:	f505 5580 	add.w	r5, r5, #4096	; 0x1000
 800bb24:	6063      	str	r3, [r4, #4]
  gpiop->ASCR    = config->ascr;
 800bb26:	62e3      	str	r3, [r4, #44]	; 0x2c
  gpiop->OSPEEDR = config->ospeedr;
 800bb28:	60a6      	str	r6, [r4, #8]
  gpiop->MODER   = config->moder;
 800bb2a:	4e70      	ldr	r6, [pc, #448]	; (800bcec <__early_init+0x23c>)
  gpiop->PUPDR   = config->pupdr;
 800bb2c:	60e3      	str	r3, [r4, #12]
  gpiop->ODR     = config->odr;
 800bb2e:	6163      	str	r3, [r4, #20]
  gpiop->AFRL    = config->afrl;
 800bb30:	6223      	str	r3, [r4, #32]
  gpiop->AFRH    = config->afrh;
 800bb32:	6263      	str	r3, [r4, #36]	; 0x24
  gpiop->MODER   = config->moder;
 800bb34:	6026      	str	r6, [r4, #0]
  gpiop->LOCKR   = config->lockr;
 800bb36:	61e3      	str	r3, [r4, #28]
  gpiop->MODER   = config->moder;
 800bb38:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
  gpiop->OTYPER  = config->otyper;
 800bb3c:	f504 5480 	add.w	r4, r4, #4096	; 0x1000
 800bb40:	6043      	str	r3, [r0, #4]
  gpiop->ASCR    = config->ascr;
 800bb42:	62c3      	str	r3, [r0, #44]	; 0x2c
  gpiop->OSPEEDR = config->ospeedr;
 800bb44:	6083      	str	r3, [r0, #8]
  gpiop->PUPDR   = config->pupdr;
 800bb46:	60c3      	str	r3, [r0, #12]
  gpiop->ODR     = config->odr;
 800bb48:	6143      	str	r3, [r0, #20]
  gpiop->AFRL    = config->afrl;
 800bb4a:	6203      	str	r3, [r0, #32]
  gpiop->AFRH    = config->afrh;
 800bb4c:	6243      	str	r3, [r0, #36]	; 0x24
  gpiop->MODER   = config->moder;
 800bb4e:	6006      	str	r6, [r0, #0]
  gpiop->LOCKR   = config->lockr;
 800bb50:	61c3      	str	r3, [r0, #28]
  gpiop->OTYPER  = config->otyper;
 800bb52:	604b      	str	r3, [r1, #4]
  gpiop->ASCR    = config->ascr;
 800bb54:	62cb      	str	r3, [r1, #44]	; 0x2c
  gpiop->OSPEEDR = config->ospeedr;
 800bb56:	608b      	str	r3, [r1, #8]
  gpiop->PUPDR   = config->pupdr;
 800bb58:	60cb      	str	r3, [r1, #12]
  gpiop->ODR     = config->odr;
 800bb5a:	614b      	str	r3, [r1, #20]
  gpiop->AFRL    = config->afrl;
 800bb5c:	620b      	str	r3, [r1, #32]
  gpiop->AFRH    = config->afrh;
 800bb5e:	624b      	str	r3, [r1, #36]	; 0x24
  gpiop->MODER   = config->moder;
 800bb60:	600e      	str	r6, [r1, #0]
  gpiop->LOCKR   = config->lockr;
 800bb62:	61cb      	str	r3, [r1, #28]
  gpiop->OTYPER  = config->otyper;
 800bb64:	606b      	str	r3, [r5, #4]
  gpiop->ASCR    = config->ascr;
 800bb66:	62eb      	str	r3, [r5, #44]	; 0x2c
  gpiop->OSPEEDR = config->ospeedr;
 800bb68:	60ab      	str	r3, [r5, #8]
  gpiop->PUPDR   = config->pupdr;
 800bb6a:	60eb      	str	r3, [r5, #12]
  gpiop->ODR     = config->odr;
 800bb6c:	616b      	str	r3, [r5, #20]
  gpiop->AFRL    = config->afrl;
 800bb6e:	622b      	str	r3, [r5, #32]
  gpiop->AFRH    = config->afrh;
 800bb70:	626b      	str	r3, [r5, #36]	; 0x24
  gpiop->MODER   = config->moder;
 800bb72:	602e      	str	r6, [r5, #0]
  gpiop->LOCKR   = config->lockr;
 800bb74:	61eb      	str	r3, [r5, #28]
  gpiop->OSPEEDR = config->ospeedr;
 800bb76:	f44f 5540 	mov.w	r5, #12288	; 0x3000
  gpiop->OTYPER  = config->otyper;
 800bb7a:	6063      	str	r3, [r4, #4]
  gpiop->ASCR    = config->ascr;
 800bb7c:	62e3      	str	r3, [r4, #44]	; 0x2c
  gpiop->OSPEEDR = config->ospeedr;
 800bb7e:	60a5      	str	r5, [r4, #8]
  gpiop->AFRL    = config->afrl;
 800bb80:	f04f 4500 	mov.w	r5, #2147483648	; 0x80000000
  gpiop->PUPDR   = config->pupdr;
 800bb84:	60e3      	str	r3, [r4, #12]
  gpiop->ODR     = config->odr;
 800bb86:	6163      	str	r3, [r4, #20]
  gpiop->AFRL    = config->afrl;
 800bb88:	6225      	str	r5, [r4, #32]
  gpiop->AFRH    = config->afrh;
 800bb8a:	2508      	movs	r5, #8
 800bb8c:	6265      	str	r5, [r4, #36]	; 0x24
  gpiop->OTYPER  = config->otyper;
 800bb8e:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
  gpiop->MODER   = config->moder;
 800bb92:	f46f 35b6 	mvn.w	r5, #93184	; 0x16c00
 800bb96:	6025      	str	r5, [r4, #0]
  gpiop->OTYPER  = config->otyper;
 800bb98:	f501 5180 	add.w	r1, r1, #4096	; 0x1000
  gpiop->LOCKR   = config->lockr;
 800bb9c:	61e3      	str	r3, [r4, #28]
  gpiop->MODER   = config->moder;
 800bb9e:	f06f 04c0 	mvn.w	r4, #192	; 0xc0
  gpiop->OTYPER  = config->otyper;
 800bba2:	6043      	str	r3, [r0, #4]
  gpiop->ASCR    = config->ascr;
 800bba4:	62c3      	str	r3, [r0, #44]	; 0x2c
  gpiop->OSPEEDR = config->ospeedr;
 800bba6:	6083      	str	r3, [r0, #8]
  gpiop->PUPDR   = config->pupdr;
 800bba8:	60c3      	str	r3, [r0, #12]
  gpiop->ODR     = config->odr;
 800bbaa:	6143      	str	r3, [r0, #20]
  gpiop->AFRL    = config->afrl;
 800bbac:	6203      	str	r3, [r0, #32]
  gpiop->AFRH    = config->afrh;
 800bbae:	6243      	str	r3, [r0, #36]	; 0x24
  gpiop->MODER   = config->moder;
 800bbb0:	6004      	str	r4, [r0, #0]
  gpiop->LOCKR   = config->lockr;
 800bbb2:	61c3      	str	r3, [r0, #28]
void stm32_clock_init(void) {

#if !STM32_NO_INIT
  /* PWR clock enable.*/
#if defined(HAL_USE_RTC) && defined(RCC_APB1ENR1_RTCAPBEN)
  RCC->APB1ENR1 = RCC_APB1ENR1_PWREN | RCC_APB1ENR1_RTCAPBEN;
 800bbb4:	4c4e      	ldr	r4, [pc, #312]	; (800bcf0 <__early_init+0x240>)
  gpiop->OTYPER  = config->otyper;
 800bbb6:	604b      	str	r3, [r1, #4]
  /* Initial clocks setup and wait for MSI stabilization, the MSI clock is
     always enabled because it is the fall back clock when PLL the fails.
     Trim fields are not altered from reset values.*/

  /* MSIRANGE can be set only when MSI is OFF or READY.*/
  RCC->CR = RCC_CR_MSION;
 800bbb8:	2001      	movs	r0, #1
  gpiop->ASCR    = config->ascr;
 800bbba:	62cb      	str	r3, [r1, #44]	; 0x2c
  gpiop->OSPEEDR = config->ospeedr;
 800bbbc:	608b      	str	r3, [r1, #8]
  gpiop->PUPDR   = config->pupdr;
 800bbbe:	60cb      	str	r3, [r1, #12]
  gpiop->ODR     = config->odr;
 800bbc0:	614b      	str	r3, [r1, #20]
  gpiop->AFRL    = config->afrl;
 800bbc2:	620b      	str	r3, [r1, #32]
  gpiop->AFRH    = config->afrh;
 800bbc4:	624b      	str	r3, [r1, #36]	; 0x24
  gpiop->MODER   = config->moder;
 800bbc6:	600e      	str	r6, [r1, #0]
  gpiop->LOCKR   = config->lockr;
 800bbc8:	61cb      	str	r3, [r1, #28]
  RCC->APB1ENR1 = RCC_APB1ENR1_PWREN | RCC_APB1ENR1_RTCAPBEN;
 800bbca:	6594      	str	r4, [r2, #88]	; 0x58
  while ((RCC->CR & RCC_CR_MSIRDY) == 0)
 800bbcc:	4613      	mov	r3, r2
  RCC->CR = RCC_CR_MSION;
 800bbce:	6010      	str	r0, [r2, #0]
  while ((RCC->CR & RCC_CR_MSIRDY) == 0)
 800bbd0:	681a      	ldr	r2, [r3, #0]
 800bbd2:	0795      	lsls	r5, r2, #30
 800bbd4:	d5fc      	bpl.n	800bbd0 <__early_init+0x120>
    ;                                       /* Wait until MSI is stable.    */

  /* Clocking from MSI, in case MSI was not the default source.*/
  RCC->CFGR = 0;
 800bbd6:	2200      	movs	r2, #0
  while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_MSI)
 800bbd8:	493b      	ldr	r1, [pc, #236]	; (800bcc8 <__early_init+0x218>)
  RCC->CFGR = 0;
 800bbda:	609a      	str	r2, [r3, #8]
  while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_MSI)
 800bbdc:	688b      	ldr	r3, [r1, #8]
 800bbde:	f013 0f0c 	tst.w	r3, #12
 800bbe2:	d1fb      	bne.n	800bbdc <__early_init+0x12c>
    ;                                       /* Wait until MSI is selected.  */

  /* Core voltage setup.*/
  PWR->CR1 = STM32_VOS;
 800bbe4:	4a43      	ldr	r2, [pc, #268]	; (800bcf4 <__early_init+0x244>)
 800bbe6:	f44f 7300 	mov.w	r3, #512	; 0x200
 800bbea:	6013      	str	r3, [r2, #0]
  while ((PWR->SR2 & PWR_SR2_VOSF) != 0)    /* Wait until regulator is      */
 800bbec:	6951      	ldr	r1, [r2, #20]
 800bbee:	f411 6180 	ands.w	r1, r1, #1024	; 0x400
 800bbf2:	d1fb      	bne.n	800bbec <__early_init+0x13c>
    ;                                       /* Wait until HSE is stable.    */
#endif

#if STM32_LSI_ENABLED
  /* LSI activation.*/
  RCC->CSR |= RCC_CSR_LSION;
 800bbf4:	4b34      	ldr	r3, [pc, #208]	; (800bcc8 <__early_init+0x218>)
  PWR->CR5 = STM32_R1MODE;
 800bbf6:	f8c2 1080 	str.w	r1, [r2, #128]	; 0x80
  RCC->CSR |= RCC_CSR_LSION;
 800bbfa:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800bbfe:	f042 0201 	orr.w	r2, r2, #1
 800bc02:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  while ((RCC->CSR & RCC_CSR_LSIRDY) == 0)
 800bc06:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800bc0a:	0794      	lsls	r4, r2, #30
 800bc0c:	d5fb      	bpl.n	800bc06 <__early_init+0x156>
    ;                                       /* Wait until LSI is stable.    */
#endif

  /* Backup domain access enabled and left open.*/
  PWR->CR1 |= PWR_CR1_DBP;
 800bc0e:	4939      	ldr	r1, [pc, #228]	; (800bcf4 <__early_init+0x244>)
  while ((RCC->BDCR & RCC_BDCR_LSERDY) == 0)
    ;                                       /* Wait until LSE is stable.    */
#endif

  /* Flash setup for selected MSI speed setting.*/
  FLASH->ACR = FLASH_ACR_DCEN | FLASH_ACR_ICEN | FLASH_ACR_PRFTEN |
 800bc10:	4839      	ldr	r0, [pc, #228]	; (800bcf8 <__early_init+0x248>)
  PWR->CR1 |= PWR_CR1_DBP;
 800bc12:	680a      	ldr	r2, [r1, #0]
  /* Changing MSIRANGE to configured value.*/
  RCC->CR |= STM32_MSIRANGE;

  /* Switching from MSISRANGE to MSIRANGE.*/
  RCC->CR |= RCC_CR_MSIRGSEL;
  while ((RCC->CR & RCC_CR_MSIRDY) == 0)
 800bc14:	4d2c      	ldr	r5, [pc, #176]	; (800bcc8 <__early_init+0x218>)
  PWR->CR1 |= PWR_CR1_DBP;
 800bc16:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  FLASH->ACR = FLASH_ACR_DCEN | FLASH_ACR_ICEN | FLASH_ACR_PRFTEN |
 800bc1a:	f44f 64e0 	mov.w	r4, #1792	; 0x700
  PWR->CR1 |= PWR_CR1_DBP;
 800bc1e:	600a      	str	r2, [r1, #0]
  FLASH->ACR = FLASH_ACR_DCEN | FLASH_ACR_ICEN | FLASH_ACR_PRFTEN |
 800bc20:	6004      	str	r4, [r0, #0]
  RCC->CR |= STM32_MSIRANGE;
 800bc22:	681a      	ldr	r2, [r3, #0]
 800bc24:	f042 0260 	orr.w	r2, r2, #96	; 0x60
 800bc28:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_MSIRGSEL;
 800bc2a:	681a      	ldr	r2, [r3, #0]
 800bc2c:	f042 0208 	orr.w	r2, r2, #8
 800bc30:	601a      	str	r2, [r3, #0]
  while ((RCC->CR & RCC_CR_MSIRDY) == 0)
 800bc32:	682b      	ldr	r3, [r5, #0]
 800bc34:	0798      	lsls	r0, r3, #30
 800bc36:	d5fc      	bpl.n	800bc32 <__early_init+0x182>
    ;

  /* MSI is configured SYSCLK source so wait for it to be stable as well.*/
  while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_MSI)
 800bc38:	4b23      	ldr	r3, [pc, #140]	; (800bcc8 <__early_init+0x218>)
 800bc3a:	689a      	ldr	r2, [r3, #8]
 800bc3c:	f012 0f0c 	tst.w	r2, #12
 800bc40:	d1fb      	bne.n	800bc3a <__early_init+0x18a>
  RCC->CR |= RCC_CR_MSIPLLEN;
#endif

  /* Updating MSISRANGE value. MSISRANGE can be set only when MSIRGSEL is high.
     This range is used exiting the Standby mode until MSIRGSEL is set.*/
  RCC->CSR |= STM32_MSISRANGE;
 800bc42:	f8d3 1094 	ldr.w	r1, [r3, #148]	; 0x94

#if STM32_ACTIVATE_PLL || STM32_ACTIVATE_PLLSAI1 || STM32_ACTIVATE_PLLSAI2
  /* PLLM and PLLSRC are common to all PLLs.*/
  RCC->PLLCFGR = STM32_PLLPDIV | STM32_PLLR  |
 800bc46:	482d      	ldr	r0, [pc, #180]	; (800bcfc <__early_init+0x24c>)
#if STM32_ACTIVATE_PLL
  /* PLL activation.*/
  RCC->CR |= RCC_CR_PLLON;

  /* Waiting for PLL lock.*/
  while ((RCC->CR & RCC_CR_PLLRDY) == 0)
 800bc48:	4a1f      	ldr	r2, [pc, #124]	; (800bcc8 <__early_init+0x218>)
  RCC->CSR |= STM32_MSISRANGE;
 800bc4a:	f441 61c0 	orr.w	r1, r1, #1536	; 0x600
 800bc4e:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
  RCC->PLLCFGR = STM32_PLLPDIV | STM32_PLLR  |
 800bc52:	60d8      	str	r0, [r3, #12]
  RCC->CR |= RCC_CR_PLLON;
 800bc54:	6819      	ldr	r1, [r3, #0]
 800bc56:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
 800bc5a:	6019      	str	r1, [r3, #0]
  while ((RCC->CR & RCC_CR_PLLRDY) == 0)
 800bc5c:	6813      	ldr	r3, [r2, #0]
 800bc5e:	0199      	lsls	r1, r3, #6
 800bc60:	d5fc      	bpl.n	800bc5c <__early_init+0x1ac>
    ;
#endif

#if STM32_ACTIVATE_PLLSAI1
  /* PLLSAI1 activation.*/
  RCC->PLLSAI1CFGR = STM32_PLLSAI1PDIV | STM32_PLLSAI1R |
 800bc62:	4b27      	ldr	r3, [pc, #156]	; (800bd00 <__early_init+0x250>)
 800bc64:	6113      	str	r3, [r2, #16]
                     STM32_PLLSAI1REN  | STM32_PLLSAI1Q |
                     STM32_PLLSAI1QEN  | STM32_PLLSAI1P |
                     STM32_PLLSAI1PEN  | STM32_PLLSAI1N |
                     STM32_PLLSAI1M;
  RCC->CR |= RCC_CR_PLLSAI1ON;
 800bc66:	6813      	ldr	r3, [r2, #0]

  /* Waiting for PLL lock.*/
  while ((RCC->CR & RCC_CR_PLLSAI1RDY) == 0)
 800bc68:	4917      	ldr	r1, [pc, #92]	; (800bcc8 <__early_init+0x218>)
  RCC->CR |= RCC_CR_PLLSAI1ON;
 800bc6a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800bc6e:	6013      	str	r3, [r2, #0]
  while ((RCC->CR & RCC_CR_PLLSAI1RDY) == 0)
 800bc70:	680b      	ldr	r3, [r1, #0]
 800bc72:	011b      	lsls	r3, r3, #4
 800bc74:	d5fc      	bpl.n	800bc70 <__early_init+0x1c0>
    ccipr |= STM32_SAI2SEL;
#endif
#if STM32_SAI1SEL != STM32_SAI1SEL_OFF
    ccipr |= STM32_SAI1SEL;
#endif
    RCC->CCIPR = ccipr;
 800bc76:	4a23      	ldr	r2, [pc, #140]	; (800bd04 <__early_init+0x254>)
  }

  /* Set flash WS's for SYSCLK source */
  if (STM32_FLASHBITS > STM32_MSI_FLASHBITS) {
    FLASH->ACR = (FLASH->ACR & ~FLASH_ACR_LATENCY_Msk) | STM32_FLASHBITS;
 800bc78:	4b1f      	ldr	r3, [pc, #124]	; (800bcf8 <__early_init+0x248>)
  RCC->CFGR = STM32_MCOPRE | STM32_MCOSEL | STM32_STOPWUCK |
 800bc7a:	2000      	movs	r0, #0
 800bc7c:	6088      	str	r0, [r1, #8]
    RCC->CCIPR = ccipr;
 800bc7e:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
    FLASH->ACR = (FLASH->ACR & ~FLASH_ACR_LATENCY_Msk) | STM32_FLASHBITS;
 800bc82:	681a      	ldr	r2, [r3, #0]
 800bc84:	f022 020f 	bic.w	r2, r2, #15
 800bc88:	f042 0204 	orr.w	r2, r2, #4
 800bc8c:	601a      	str	r2, [r3, #0]
    while ((FLASH->ACR & FLASH_ACR_LATENCY_Msk) !=
 800bc8e:	681a      	ldr	r2, [r3, #0]
 800bc90:	f002 020f 	and.w	r2, r2, #15
 800bc94:	2a04      	cmp	r2, #4
 800bc96:	d1fa      	bne.n	800bc8e <__early_init+0x1de>
    }
  }

  /* Switching to the configured SYSCLK source if it is different from MSI.*/
#if (STM32_SW != STM32_SW_MSI)
  RCC->CFGR |= STM32_SW;        /* Switches on the selected clock source.   */
 800bc98:	4b0b      	ldr	r3, [pc, #44]	; (800bcc8 <__early_init+0x218>)
 800bc9a:	689a      	ldr	r2, [r3, #8]
 800bc9c:	f042 0203 	orr.w	r2, r2, #3
 800bca0:	609a      	str	r2, [r3, #8]
  /* Wait until SYSCLK is stable.*/
  while ((RCC->CFGR & RCC_CFGR_SWS) != (STM32_SW << 2))
 800bca2:	689a      	ldr	r2, [r3, #8]
 800bca4:	f002 020c 	and.w	r2, r2, #12
 800bca8:	2a0c      	cmp	r2, #12
 800bcaa:	d1fa      	bne.n	800bca2 <__early_init+0x1f2>

#endif /* STM32_NO_INIT */

  /* SYSCFG clock enabled here because it is a multi-functional unit shared
     among multiple drivers.*/
  rccEnableAPB2(RCC_APB2ENR_SYSCFGEN, true);
 800bcac:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800bcae:	f042 0201 	orr.w	r2, r2, #1
 800bcb2:	661a      	str	r2, [r3, #96]	; 0x60
 800bcb4:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 800bcb8:	f042 0201 	orr.w	r2, r2, #1
 800bcbc:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800bcc0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
}
 800bcc4:	bcf0      	pop	{r4, r5, r6, r7}
 800bcc6:	4770      	bx	lr
 800bcc8:	40021000 	.word	0x40021000
 800bccc:	48000c00 	.word	0x48000c00
 800bcd0:	3ff30000 	.word	0x3ff30000
 800bcd4:	48000400 	.word	0x48000400
 800bcd8:	48000800 	.word	0x48000800
 800bcdc:	000aaa0a 	.word	0x000aaa0a
 800bce0:	eaaeffff 	.word	0xeaaeffff
 800bce4:	3000c0c0 	.word	0x3000c0c0
 800bce8:	dfff7fbf 	.word	0xdfff7fbf
 800bcec:	f3ff7fff 	.word	0xf3ff7fff
 800bcf0:	10000400 	.word	0x10000400
 800bcf4:	40007000 	.word	0x40007000
 800bcf8:	40022000 	.word	0x40022000
 800bcfc:	01203c01 	.word	0x01203c01
 800bd00:	34504800 	.word	0x34504800
 800bd04:	34015555 	.word	0x34015555
	...

0800bd10 <Vector158>:
OSAL_IRQ_HANDLER(STM32_LPUART1_HANDLER) {
 800bd10:	b508      	push	{r3, lr}
  serve_interrupt(&LPSD1);
 800bd12:	4803      	ldr	r0, [pc, #12]	; (800bd20 <Vector158+0x10>)
 800bd14:	f7fd f9fc 	bl	8009110 <serve_interrupt>
}
 800bd18:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  OSAL_IRQ_EPILOGUE();
 800bd1c:	f7fd b890 	b.w	8008e40 <_port_irq_epilogue>
 800bd20:	200011d8 	.word	0x200011d8
	...

0800bd30 <VectorDC>:
OSAL_IRQ_HANDLER(STM32_USART3_HANDLER) {
 800bd30:	b508      	push	{r3, lr}
  serve_interrupt(&SD3);
 800bd32:	4803      	ldr	r0, [pc, #12]	; (800bd40 <VectorDC+0x10>)
 800bd34:	f7fd f9ec 	bl	8009110 <serve_interrupt>
}
 800bd38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  OSAL_IRQ_EPILOGUE();
 800bd3c:	f7fd b880 	b.w	8008e40 <_port_irq_epilogue>
 800bd40:	20001238 	.word	0x20001238
	...

0800bd50 <VectorB4>:
OSAL_IRQ_HANDLER(STM32_TIM3_HANDLER) {
 800bd50:	b508      	push	{r3, lr}
 *
 * @notapi
 */
void gpt_lld_serve_interrupt(GPTDriver *gptp) {

  gptp->tim->SR = 0;
 800bd52:	4b0b      	ldr	r3, [pc, #44]	; (800bd80 <VectorB4+0x30>)
  if (gptp->state == GPT_ONESHOT) {
 800bd54:	7818      	ldrb	r0, [r3, #0]
  gptp->tim->SR = 0;
 800bd56:	68da      	ldr	r2, [r3, #12]
 800bd58:	2100      	movs	r1, #0
  if (gptp->state == GPT_ONESHOT) {
 800bd5a:	2804      	cmp	r0, #4
  gptp->tim->SR = 0;
 800bd5c:	6111      	str	r1, [r2, #16]
  if (gptp->state == GPT_ONESHOT) {
 800bd5e:	d107      	bne.n	800bd70 <VectorB4+0x20>
    gptp->state = GPT_READY;                /* Back in GPT_READY state.     */
 800bd60:	2002      	movs	r0, #2
 800bd62:	7018      	strb	r0, [r3, #0]
  gptp->tim->CR1 = 0;                           /* Initially stopped.       */
 800bd64:	6011      	str	r1, [r2, #0]
  gptp->tim->SR = 0;                            /* Clear pending IRQs.      */
 800bd66:	6111      	str	r1, [r2, #16]
  gptp->tim->DIER &= ~STM32_TIM_DIER_IRQ_MASK;
 800bd68:	68d1      	ldr	r1, [r2, #12]
 800bd6a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800bd6e:	60d1      	str	r1, [r2, #12]
    gpt_lld_stop_timer(gptp);               /* Timer automatically stopped. */
  }
  gptp->config->callback(gptp);
 800bd70:	685b      	ldr	r3, [r3, #4]
 800bd72:	4803      	ldr	r0, [pc, #12]	; (800bd80 <VectorB4+0x30>)
 800bd74:	685b      	ldr	r3, [r3, #4]
 800bd76:	4798      	blx	r3
}
 800bd78:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  OSAL_IRQ_EPILOGUE();
 800bd7c:	f7fd b860 	b.w	8008e40 <_port_irq_epilogue>
 800bd80:	200011c8 	.word	0x200011c8
	...

0800bd90 <VectorB0>:
OSAL_IRQ_HANDLER(ST_HANDLER) {
 800bd90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if ((STM32_ST_TIM->SR & TIM_SR_CC1IF) != 0U) {
 800bd94:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 800bd98:	692b      	ldr	r3, [r5, #16]
 800bd9a:	079b      	lsls	r3, r3, #30
 800bd9c:	d403      	bmi.n	800bda6 <VectorB0+0x16>
}
 800bd9e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  OSAL_IRQ_EPILOGUE();
 800bda2:	f7fd b84d 	b.w	8008e40 <_port_irq_epilogue>
    STM32_ST_TIM->SR = 0U;
 800bda6:	2700      	movs	r7, #0
 800bda8:	612f      	str	r7, [r5, #16]
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800bdaa:	2320      	movs	r3, #32
 800bdac:	f383 8811 	msr	BASEPRI, r3
  virtual_timer_t *vtp;
  systime_t now;
  sysinterval_t delta, nowdelta;

  /* Looping through timers.*/
  vtp = ch.vtlist.next;
 800bdb0:	4c22      	ldr	r4, [pc, #136]	; (800be3c <VectorB0+0xac>)
 800bdb2:	46a0      	mov	r8, r4
 800bdb4:	f858 2f1c 	ldr.w	r2, [r8, #28]!
 800bdb8:	6891      	ldr	r1, [r2, #8]
 800bdba:	6a68      	ldr	r0, [r5, #36]	; 0x24
  while (true) {

    /* Getting the system time as reference.*/
    now = chVTGetSystemTimeX();
    nowdelta = chTimeDiffX(ch.vtlist.lasttime, now);
 800bdbc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bdbe:	1ac6      	subs	r6, r0, r3

    /* The list scan is limited by the timers header having
       "ch.vtlist.vt_delta == (sysinterval_t)-1" which is
       greater than all deltas.*/
    if (nowdelta < vtp->delta) {
 800bdc0:	428e      	cmp	r6, r1
 800bdc2:	d31a      	bcc.n	800bdfa <VectorB0+0x6a>
 800bdc4:	f04f 0920 	mov.w	r9, #32

      /* The "last time" becomes this timer's expiration time.*/
      ch.vtlist.lasttime += vtp->delta;
      nowdelta -= vtp->delta;

      vtp->next->prev = (virtual_timer_t *)&ch.vtlist;
 800bdc8:	6810      	ldr	r0, [r2, #0]
      ch.vtlist.lasttime += vtp->delta;
 800bdca:	440b      	add	r3, r1
      ch.vtlist.next = vtp->next;
      fn = vtp->func;
      vtp->func = NULL;

      /* If the list becomes empty then the timer is stopped.*/
      if (ch.vtlist.next == (virtual_timer_t *)&ch.vtlist) {
 800bdcc:	4540      	cmp	r0, r8
      ch.vtlist.lasttime += vtp->delta;
 800bdce:	62a3      	str	r3, [r4, #40]	; 0x28
      nowdelta -= vtp->delta;
 800bdd0:	eba6 0601 	sub.w	r6, r6, r1
      vtp->next->prev = (virtual_timer_t *)&ch.vtlist;
 800bdd4:	f8c0 8004 	str.w	r8, [r0, #4]
      fn = vtp->func;
 800bdd8:	68d3      	ldr	r3, [r2, #12]
      ch.vtlist.next = vtp->next;
 800bdda:	61e0      	str	r0, [r4, #28]
      vtp->func = NULL;
 800bddc:	60d7      	str	r7, [r2, #12]
  STM32_ST_TIM->DIER = 0;
 800bdde:	bf08      	it	eq
 800bde0:	60ef      	streq	r7, [r5, #12]
 800bde2:	f387 8811 	msr	BASEPRI, r7
        port_timer_stop_alarm();
      }

      /* The callback is invoked outside the kernel critical zone.*/
      chSysUnlockFromISR();
      fn(vtp->par);
 800bde6:	6910      	ldr	r0, [r2, #16]
 800bde8:	4798      	blx	r3
 800bdea:	f389 8811 	msr	BASEPRI, r9
      chSysLockFromISR();

      /* Next element in the list.*/
      vtp = ch.vtlist.next;
 800bdee:	69e2      	ldr	r2, [r4, #28]
    }
    while (vtp->delta <= nowdelta);
 800bdf0:	6891      	ldr	r1, [r2, #8]
 800bdf2:	428e      	cmp	r6, r1
 800bdf4:	d3e1      	bcc.n	800bdba <VectorB0+0x2a>
 800bdf6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bdf8:	e7e6      	b.n	800bdc8 <VectorB0+0x38>
  }

  /* If the list is empty, nothing else to do.*/
  if (ch.vtlist.next == (virtual_timer_t *)&ch.vtlist) {
 800bdfa:	69e1      	ldr	r1, [r4, #28]
 800bdfc:	4541      	cmp	r1, r8
 800bdfe:	d016      	beq.n	800be2e <VectorB0+0x9e>
  }

  /* The "unprocessed nowdelta" time slice is added to "last time"
     and subtracted to next timer's delta.*/
  ch.vtlist.lasttime += nowdelta;
  ch.vtlist.next->delta -= nowdelta;
 800be00:	688e      	ldr	r6, [r1, #8]
  ch.vtlist.lasttime += nowdelta;
 800be02:	62a0      	str	r0, [r4, #40]	; 0x28
  ch.vtlist.next->delta -= nowdelta;
 800be04:	4433      	add	r3, r6
 800be06:	1a1b      	subs	r3, r3, r0
 800be08:	608b      	str	r3, [r1, #8]
  return systime + (systime_t)interval;
 800be0a:	6891      	ldr	r1, [r2, #8]
 800be0c:	2902      	cmp	r1, #2
 800be0e:	bf2c      	ite	cs
 800be10:	1841      	addcs	r1, r0, r1
 800be12:	1c81      	addcc	r1, r0, #2
 800be14:	4608      	mov	r0, r1
 800be16:	f7fd fecb 	bl	8009bb0 <stSetAlarm>
    delta = (sysinterval_t)TIME_MAX_SYSTIME;
  }
#endif
  port_timer_set_alarm(chTimeAddX(now, delta));

  chDbgAssert(chTimeDiffX(ch.vtlist.lasttime, chVTGetSystemTimeX()) <=
 800be1a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
  return (systime_t)STM32_ST_TIM->CNT;
 800be1c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  return (sysinterval_t)((systime_t)(end - start));
 800be1e:	1a88      	subs	r0, r1, r2
 800be20:	1a9b      	subs	r3, r3, r2
 800be22:	4283      	cmp	r3, r0
 800be24:	d903      	bls.n	800be2e <VectorB0+0x9e>
  __ASM volatile ("cpsid i" : : : "memory");
 800be26:	b672      	cpsid	i
  ch.dbg.panic_msg = reason;
 800be28:	4b05      	ldr	r3, [pc, #20]	; (800be40 <VectorB0+0xb0>)
 800be2a:	62e3      	str	r3, [r4, #44]	; 0x2c
  }
 800be2c:	e7fe      	b.n	800be2c <VectorB0+0x9c>
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 800be2e:	2300      	movs	r3, #0
 800be30:	f383 8811 	msr	BASEPRI, r3
}
 800be34:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  OSAL_IRQ_EPILOGUE();
 800be38:	f7fd b802 	b.w	8008e40 <_port_irq_epilogue>
 800be3c:	20002454 	.word	0x20002454
 800be40:	080127d4 	.word	0x080127d4
	...

0800be50 <VectorAC>:
 800be50:	f7fc bff6 	b.w	8008e40 <_port_irq_epilogue>
	...

0800be60 <VectorA0>:
#if STM32_PWM_USE_TIM15
  pwm_lld_serve_interrupt(&PWMD15);
#endif
#endif

  OSAL_IRQ_EPILOGUE();
 800be60:	f7fc bfee 	b.w	8008e40 <_port_irq_epilogue>
	...

0800be70 <VectorA8>:
 800be70:	f7fc bfe6 	b.w	8008e40 <_port_irq_epilogue>
	...

0800be80 <VectorA4>:
/**
 * @brief   TIM1-UP, TIM16 interrupt handler.
 *
 * @isr
 */
OSAL_IRQ_HANDLER(VectorA4) {
 800be80:	b508      	push	{r3, lr}
  gptp->tim->SR = 0;
 800be82:	4b0b      	ldr	r3, [pc, #44]	; (800beb0 <VectorA4+0x30>)
  if (gptp->state == GPT_ONESHOT) {
 800be84:	7818      	ldrb	r0, [r3, #0]
  gptp->tim->SR = 0;
 800be86:	68da      	ldr	r2, [r3, #12]
 800be88:	2100      	movs	r1, #0
  if (gptp->state == GPT_ONESHOT) {
 800be8a:	2804      	cmp	r0, #4
  gptp->tim->SR = 0;
 800be8c:	6111      	str	r1, [r2, #16]
  if (gptp->state == GPT_ONESHOT) {
 800be8e:	d107      	bne.n	800bea0 <VectorA4+0x20>
    gptp->state = GPT_READY;                /* Back in GPT_READY state.     */
 800be90:	2002      	movs	r0, #2
 800be92:	7018      	strb	r0, [r3, #0]
  gptp->tim->CR1 = 0;                           /* Initially stopped.       */
 800be94:	6011      	str	r1, [r2, #0]
  gptp->tim->SR = 0;                            /* Clear pending IRQs.      */
 800be96:	6111      	str	r1, [r2, #16]
  gptp->tim->DIER &= ~STM32_TIM_DIER_IRQ_MASK;
 800be98:	68d1      	ldr	r1, [r2, #12]
 800be9a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800be9e:	60d1      	str	r1, [r2, #12]
  gptp->config->callback(gptp);
 800bea0:	685b      	ldr	r3, [r3, #4]
 800bea2:	4803      	ldr	r0, [pc, #12]	; (800beb0 <VectorA4+0x30>)
 800bea4:	685b      	ldr	r3, [r3, #4]
 800bea6:	4798      	blx	r3
  pwm_lld_serve_interrupt(&PWMD16);
#endif
#endif

  OSAL_IRQ_EPILOGUE();
}
 800bea8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  OSAL_IRQ_EPILOGUE();
 800beac:	f7fc bfc8 	b.w	8008e40 <_port_irq_epilogue>
 800beb0:	200011b8 	.word	0x200011b8
	...

0800bec0 <VectorE0>:
  pr = EXTI->PR1;
 800bec0:	4b1a      	ldr	r3, [pc, #104]	; (800bf2c <VectorE0+0x6c>)
OSAL_IRQ_HANDLER(VectorE0) {
 800bec2:	b510      	push	{r4, lr}
  pr = EXTI->PR1;
 800bec4:	695a      	ldr	r2, [r3, #20]
  pr &= EXTI->IMR1 & ((1U << 10) | (1U << 11) | (1U << 12) | (1U << 13) |
 800bec6:	681c      	ldr	r4, [r3, #0]
 800bec8:	4014      	ands	r4, r2
 800beca:	f404 427c 	and.w	r2, r4, #64512	; 0xfc00
  EXTI->PR1 = pr;
 800bece:	615a      	str	r2, [r3, #20]
  exti_serve_irq(pr, 10);
 800bed0:	0562      	lsls	r2, r4, #21
 800bed2:	d504      	bpl.n	800bede <VectorE0+0x1e>
 800bed4:	4a16      	ldr	r2, [pc, #88]	; (800bf30 <VectorE0+0x70>)
 800bed6:	6d13      	ldr	r3, [r2, #80]	; 0x50
 800bed8:	b10b      	cbz	r3, 800bede <VectorE0+0x1e>
 800beda:	6d50      	ldr	r0, [r2, #84]	; 0x54
 800bedc:	4798      	blx	r3
  exti_serve_irq(pr, 11);
 800bede:	0523      	lsls	r3, r4, #20
 800bee0:	d504      	bpl.n	800beec <VectorE0+0x2c>
 800bee2:	4a13      	ldr	r2, [pc, #76]	; (800bf30 <VectorE0+0x70>)
 800bee4:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800bee6:	b10b      	cbz	r3, 800beec <VectorE0+0x2c>
 800bee8:	6dd0      	ldr	r0, [r2, #92]	; 0x5c
 800beea:	4798      	blx	r3
  exti_serve_irq(pr, 12);
 800beec:	04e0      	lsls	r0, r4, #19
 800beee:	d504      	bpl.n	800befa <VectorE0+0x3a>
 800bef0:	4a0f      	ldr	r2, [pc, #60]	; (800bf30 <VectorE0+0x70>)
 800bef2:	6e13      	ldr	r3, [r2, #96]	; 0x60
 800bef4:	b10b      	cbz	r3, 800befa <VectorE0+0x3a>
 800bef6:	6e50      	ldr	r0, [r2, #100]	; 0x64
 800bef8:	4798      	blx	r3
  exti_serve_irq(pr, 13);
 800befa:	04a1      	lsls	r1, r4, #18
 800befc:	d504      	bpl.n	800bf08 <VectorE0+0x48>
 800befe:	4a0c      	ldr	r2, [pc, #48]	; (800bf30 <VectorE0+0x70>)
 800bf00:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800bf02:	b10b      	cbz	r3, 800bf08 <VectorE0+0x48>
 800bf04:	6ed0      	ldr	r0, [r2, #108]	; 0x6c
 800bf06:	4798      	blx	r3
  exti_serve_irq(pr, 14);
 800bf08:	0462      	lsls	r2, r4, #17
 800bf0a:	d504      	bpl.n	800bf16 <VectorE0+0x56>
 800bf0c:	4a08      	ldr	r2, [pc, #32]	; (800bf30 <VectorE0+0x70>)
 800bf0e:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800bf10:	b10b      	cbz	r3, 800bf16 <VectorE0+0x56>
 800bf12:	6f50      	ldr	r0, [r2, #116]	; 0x74
 800bf14:	4798      	blx	r3
  exti_serve_irq(pr, 15);
 800bf16:	0423      	lsls	r3, r4, #16
 800bf18:	d504      	bpl.n	800bf24 <VectorE0+0x64>
 800bf1a:	4a05      	ldr	r2, [pc, #20]	; (800bf30 <VectorE0+0x70>)
 800bf1c:	6f93      	ldr	r3, [r2, #120]	; 0x78
 800bf1e:	b10b      	cbz	r3, 800bf24 <VectorE0+0x64>
 800bf20:	6fd0      	ldr	r0, [r2, #124]	; 0x7c
 800bf22:	4798      	blx	r3
}
 800bf24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  OSAL_IRQ_EPILOGUE();
 800bf28:	f7fc bf8a 	b.w	8008e40 <_port_irq_epilogue>
 800bf2c:	40010400 	.word	0x40010400
 800bf30:	200023d4 	.word	0x200023d4
	...

0800bf40 <Vector9C>:
  pr = EXTI->PR1;
 800bf40:	4b17      	ldr	r3, [pc, #92]	; (800bfa0 <Vector9C+0x60>)
OSAL_IRQ_HANDLER(Vector9C) {
 800bf42:	b510      	push	{r4, lr}
  pr = EXTI->PR1;
 800bf44:	695a      	ldr	r2, [r3, #20]
  pr &= EXTI->IMR1 & ((1U << 5) | (1U << 6) | (1U << 7) | (1U << 8) |
 800bf46:	681c      	ldr	r4, [r3, #0]
 800bf48:	4014      	ands	r4, r2
 800bf4a:	f404 7278 	and.w	r2, r4, #992	; 0x3e0
  EXTI->PR1 = pr;
 800bf4e:	615a      	str	r2, [r3, #20]
  exti_serve_irq(pr, 5);
 800bf50:	06a3      	lsls	r3, r4, #26
 800bf52:	d504      	bpl.n	800bf5e <Vector9C+0x1e>
 800bf54:	4a13      	ldr	r2, [pc, #76]	; (800bfa4 <Vector9C+0x64>)
 800bf56:	6a93      	ldr	r3, [r2, #40]	; 0x28
 800bf58:	b10b      	cbz	r3, 800bf5e <Vector9C+0x1e>
 800bf5a:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 800bf5c:	4798      	blx	r3
  exti_serve_irq(pr, 6);
 800bf5e:	0660      	lsls	r0, r4, #25
 800bf60:	d504      	bpl.n	800bf6c <Vector9C+0x2c>
 800bf62:	4a10      	ldr	r2, [pc, #64]	; (800bfa4 <Vector9C+0x64>)
 800bf64:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800bf66:	b10b      	cbz	r3, 800bf6c <Vector9C+0x2c>
 800bf68:	6b50      	ldr	r0, [r2, #52]	; 0x34
 800bf6a:	4798      	blx	r3
  exti_serve_irq(pr, 7);
 800bf6c:	0621      	lsls	r1, r4, #24
 800bf6e:	d504      	bpl.n	800bf7a <Vector9C+0x3a>
 800bf70:	4a0c      	ldr	r2, [pc, #48]	; (800bfa4 <Vector9C+0x64>)
 800bf72:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800bf74:	b10b      	cbz	r3, 800bf7a <Vector9C+0x3a>
 800bf76:	6bd0      	ldr	r0, [r2, #60]	; 0x3c
 800bf78:	4798      	blx	r3
  exti_serve_irq(pr, 8);
 800bf7a:	05e2      	lsls	r2, r4, #23
 800bf7c:	d504      	bpl.n	800bf88 <Vector9C+0x48>
 800bf7e:	4a09      	ldr	r2, [pc, #36]	; (800bfa4 <Vector9C+0x64>)
 800bf80:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bf82:	b10b      	cbz	r3, 800bf88 <Vector9C+0x48>
 800bf84:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800bf86:	4798      	blx	r3
  exti_serve_irq(pr, 9);
 800bf88:	05a3      	lsls	r3, r4, #22
 800bf8a:	d504      	bpl.n	800bf96 <Vector9C+0x56>
 800bf8c:	4a05      	ldr	r2, [pc, #20]	; (800bfa4 <Vector9C+0x64>)
 800bf8e:	6c93      	ldr	r3, [r2, #72]	; 0x48
 800bf90:	b10b      	cbz	r3, 800bf96 <Vector9C+0x56>
 800bf92:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 800bf94:	4798      	blx	r3
}
 800bf96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  OSAL_IRQ_EPILOGUE();
 800bf9a:	f7fc bf51 	b.w	8008e40 <_port_irq_epilogue>
 800bf9e:	bf00      	nop
 800bfa0:	40010400 	.word	0x40010400
 800bfa4:	200023d4 	.word	0x200023d4
	...

0800bfb0 <Vector68>:
  pr = EXTI->PR1;
 800bfb0:	4a08      	ldr	r2, [pc, #32]	; (800bfd4 <Vector68+0x24>)
OSAL_IRQ_HANDLER(Vector68) {
 800bfb2:	b508      	push	{r3, lr}
  pr = EXTI->PR1;
 800bfb4:	6951      	ldr	r1, [r2, #20]
  pr &= EXTI->IMR1 & (1U << 4);
 800bfb6:	6813      	ldr	r3, [r2, #0]
 800bfb8:	400b      	ands	r3, r1
 800bfba:	f003 0310 	and.w	r3, r3, #16
  EXTI->PR1 = pr;
 800bfbe:	6153      	str	r3, [r2, #20]
  exti_serve_irq(pr, 4);
 800bfc0:	b123      	cbz	r3, 800bfcc <Vector68+0x1c>
 800bfc2:	4a05      	ldr	r2, [pc, #20]	; (800bfd8 <Vector68+0x28>)
 800bfc4:	6a13      	ldr	r3, [r2, #32]
 800bfc6:	b10b      	cbz	r3, 800bfcc <Vector68+0x1c>
 800bfc8:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800bfca:	4798      	blx	r3
}
 800bfcc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  OSAL_IRQ_EPILOGUE();
 800bfd0:	f7fc bf36 	b.w	8008e40 <_port_irq_epilogue>
 800bfd4:	40010400 	.word	0x40010400
 800bfd8:	200023d4 	.word	0x200023d4
 800bfdc:	00000000 	.word	0x00000000

0800bfe0 <Vector64>:
  pr = EXTI->PR1;
 800bfe0:	4a08      	ldr	r2, [pc, #32]	; (800c004 <Vector64+0x24>)
OSAL_IRQ_HANDLER(Vector64) {
 800bfe2:	b508      	push	{r3, lr}
  pr = EXTI->PR1;
 800bfe4:	6951      	ldr	r1, [r2, #20]
  pr &= EXTI->IMR1 & (1U << 3);
 800bfe6:	6813      	ldr	r3, [r2, #0]
 800bfe8:	400b      	ands	r3, r1
 800bfea:	f003 0308 	and.w	r3, r3, #8
  EXTI->PR1 = pr;
 800bfee:	6153      	str	r3, [r2, #20]
  exti_serve_irq(pr, 3);
 800bff0:	b123      	cbz	r3, 800bffc <Vector64+0x1c>
 800bff2:	4a05      	ldr	r2, [pc, #20]	; (800c008 <Vector64+0x28>)
 800bff4:	6993      	ldr	r3, [r2, #24]
 800bff6:	b10b      	cbz	r3, 800bffc <Vector64+0x1c>
 800bff8:	69d0      	ldr	r0, [r2, #28]
 800bffa:	4798      	blx	r3
}
 800bffc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  OSAL_IRQ_EPILOGUE();
 800c000:	f7fc bf1e 	b.w	8008e40 <_port_irq_epilogue>
 800c004:	40010400 	.word	0x40010400
 800c008:	200023d4 	.word	0x200023d4
 800c00c:	00000000 	.word	0x00000000

0800c010 <Vector60>:
  pr = EXTI->PR1;
 800c010:	4a08      	ldr	r2, [pc, #32]	; (800c034 <Vector60+0x24>)
OSAL_IRQ_HANDLER(Vector60) {
 800c012:	b508      	push	{r3, lr}
  pr = EXTI->PR1;
 800c014:	6951      	ldr	r1, [r2, #20]
  pr &= EXTI->IMR1 & (1U << 2);
 800c016:	6813      	ldr	r3, [r2, #0]
 800c018:	400b      	ands	r3, r1
 800c01a:	f003 0304 	and.w	r3, r3, #4
  EXTI->PR1 = pr;
 800c01e:	6153      	str	r3, [r2, #20]
  exti_serve_irq(pr, 2);
 800c020:	b123      	cbz	r3, 800c02c <Vector60+0x1c>
 800c022:	4a05      	ldr	r2, [pc, #20]	; (800c038 <Vector60+0x28>)
 800c024:	6913      	ldr	r3, [r2, #16]
 800c026:	b10b      	cbz	r3, 800c02c <Vector60+0x1c>
 800c028:	6950      	ldr	r0, [r2, #20]
 800c02a:	4798      	blx	r3
}
 800c02c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  OSAL_IRQ_EPILOGUE();
 800c030:	f7fc bf06 	b.w	8008e40 <_port_irq_epilogue>
 800c034:	40010400 	.word	0x40010400
 800c038:	200023d4 	.word	0x200023d4
 800c03c:	00000000 	.word	0x00000000

0800c040 <Vector5C>:
  pr = EXTI->PR1;
 800c040:	4a08      	ldr	r2, [pc, #32]	; (800c064 <Vector5C+0x24>)
OSAL_IRQ_HANDLER(Vector5C) {
 800c042:	b508      	push	{r3, lr}
  pr = EXTI->PR1;
 800c044:	6951      	ldr	r1, [r2, #20]
  pr &= EXTI->IMR1 & (1U << 1);
 800c046:	6813      	ldr	r3, [r2, #0]
 800c048:	400b      	ands	r3, r1
 800c04a:	f003 0302 	and.w	r3, r3, #2
  EXTI->PR1 = pr;
 800c04e:	6153      	str	r3, [r2, #20]
  exti_serve_irq(pr, 1);
 800c050:	b123      	cbz	r3, 800c05c <Vector5C+0x1c>
 800c052:	4a05      	ldr	r2, [pc, #20]	; (800c068 <Vector5C+0x28>)
 800c054:	6893      	ldr	r3, [r2, #8]
 800c056:	b10b      	cbz	r3, 800c05c <Vector5C+0x1c>
 800c058:	68d0      	ldr	r0, [r2, #12]
 800c05a:	4798      	blx	r3
}
 800c05c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  OSAL_IRQ_EPILOGUE();
 800c060:	f7fc beee 	b.w	8008e40 <_port_irq_epilogue>
 800c064:	40010400 	.word	0x40010400
 800c068:	200023d4 	.word	0x200023d4
 800c06c:	00000000 	.word	0x00000000

0800c070 <Vector58>:
  pr = EXTI->PR1;
 800c070:	4a08      	ldr	r2, [pc, #32]	; (800c094 <Vector58+0x24>)
OSAL_IRQ_HANDLER(Vector58) {
 800c072:	b508      	push	{r3, lr}
  pr = EXTI->PR1;
 800c074:	6951      	ldr	r1, [r2, #20]
  pr &= EXTI->IMR1 & (1U << 0);
 800c076:	6813      	ldr	r3, [r2, #0]
 800c078:	400b      	ands	r3, r1
 800c07a:	f003 0301 	and.w	r3, r3, #1
  EXTI->PR1 = pr;
 800c07e:	6153      	str	r3, [r2, #20]
  exti_serve_irq(pr, 0);
 800c080:	b123      	cbz	r3, 800c08c <Vector58+0x1c>
 800c082:	4a05      	ldr	r2, [pc, #20]	; (800c098 <Vector58+0x28>)
 800c084:	6813      	ldr	r3, [r2, #0]
 800c086:	b10b      	cbz	r3, 800c08c <Vector58+0x1c>
 800c088:	6850      	ldr	r0, [r2, #4]
 800c08a:	4798      	blx	r3
}
 800c08c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  OSAL_IRQ_EPILOGUE();
 800c090:	f7fc bed6 	b.w	8008e40 <_port_irq_epilogue>
 800c094:	40010400 	.word	0x40010400
 800c098:	200023d4 	.word	0x200023d4
 800c09c:	00000000 	.word	0x00000000

0800c0a0 <__init_ram_areas>:
}

/**
 * @brief   Performs the initialization of the various RAM areas.
 */
void __init_ram_areas(void) {
 800c0a0:	b4f0      	push	{r4, r5, r6, r7}
 800c0a2:	4f14      	ldr	r7, [pc, #80]	; (800c0f4 <__init_ram_areas+0x54>)
 800c0a4:	4d14      	ldr	r5, [pc, #80]	; (800c0f8 <__init_ram_areas+0x58>)
 800c0a6:	4815      	ldr	r0, [pc, #84]	; (800c0fc <__init_ram_areas+0x5c>)
 800c0a8:	4b15      	ldr	r3, [pc, #84]	; (800c100 <__init_ram_areas+0x60>)
 800c0aa:	4916      	ldr	r1, [pc, #88]	; (800c104 <__init_ram_areas+0x64>)
 800c0ac:	f107 0c70 	add.w	ip, r7, #112	; 0x70
      tp++;
    }

    /* Zeroing clear area.*/
    while (p < rap->no_init_area) {
      *p = 0;
 800c0b0:	2600      	movs	r6, #0
    while (p < rap->clear_area) {
 800c0b2:	4298      	cmp	r0, r3
 800c0b4:	d911      	bls.n	800c0da <__init_ram_areas+0x3a>
 800c0b6:	3904      	subs	r1, #4
 800c0b8:	461a      	mov	r2, r3
      *p = *tp;
 800c0ba:	f851 4f04 	ldr.w	r4, [r1, #4]!
 800c0be:	f842 4b04 	str.w	r4, [r2], #4
    while (p < rap->clear_area) {
 800c0c2:	4290      	cmp	r0, r2
 800c0c4:	d8f9      	bhi.n	800c0ba <__init_ram_areas+0x1a>
 800c0c6:	1e42      	subs	r2, r0, #1
 800c0c8:	1ad2      	subs	r2, r2, r3
 800c0ca:	f022 0203 	bic.w	r2, r2, #3
 800c0ce:	3204      	adds	r2, #4
 800c0d0:	4413      	add	r3, r2
    while (p < rap->no_init_area) {
 800c0d2:	429d      	cmp	r5, r3
 800c0d4:	d903      	bls.n	800c0de <__init_ram_areas+0x3e>
      *p = 0;
 800c0d6:	f843 6b04 	str.w	r6, [r3], #4
    while (p < rap->no_init_area) {
 800c0da:	429d      	cmp	r5, r3
 800c0dc:	d8fb      	bhi.n	800c0d6 <__init_ram_areas+0x36>
      p++;
    }
    rap++;
  }
  while (rap < &ram_areas[CRT1_AREAS_NUMBER]);
 800c0de:	4567      	cmp	r7, ip
 800c0e0:	d005      	beq.n	800c0ee <__init_ram_areas+0x4e>
 800c0e2:	e9d7 1304 	ldrd	r1, r3, [r7, #16]
 800c0e6:	e9d7 0506 	ldrd	r0, r5, [r7, #24]
 800c0ea:	3710      	adds	r7, #16
 800c0ec:	e7e1      	b.n	800c0b2 <__init_ram_areas+0x12>
#endif
}
 800c0ee:	bcf0      	pop	{r4, r5, r6, r7}
 800c0f0:	4770      	bx	lr
 800c0f2:	bf00      	nop
 800c0f4:	08012a70 	.word	0x08012a70
 800c0f8:	200026d8 	.word	0x200026d8
 800c0fc:	200026d8 	.word	0x200026d8
 800c100:	200026d8 	.word	0x200026d8
 800c104:	0801445c 	.word	0x0801445c
	...

0800c110 <__default_exit>:
  }
 800c110:	e7fe      	b.n	800c110 <__default_exit>
 800c112:	bf00      	nop
	...

0800c120 <__late_init>:
 800c120:	4770      	bx	lr
 800c122:	bf00      	nop
	...

0800c130 <__core_init>:
}
 800c130:	4770      	bx	lr
 800c132:	bf00      	nop

0800c134 <_ZL28read_encoded_value_with_basehjPKhPj>:
 800c134:	2850      	cmp	r0, #80	; 0x50
 800c136:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c138:	d020      	beq.n	800c17c <_ZL28read_encoded_value_with_basehjPKhPj+0x48>
 800c13a:	f000 040f 	and.w	r4, r0, #15
 800c13e:	2c0c      	cmp	r4, #12
 800c140:	d85b      	bhi.n	800c1fa <_ZL28read_encoded_value_with_basehjPKhPj+0xc6>
 800c142:	e8df f004 	tbb	[pc, r4]
 800c146:	4607      	.short	0x4607
 800c148:	5a240756 	.word	0x5a240756
 800c14c:	2c5a5a5a 	.word	0x2c5a5a5a
 800c150:	0728      	.short	0x0728
 800c152:	24          	.byte	0x24
 800c153:	00          	.byte	0x00
 800c154:	4614      	mov	r4, r2
 800c156:	f854 cb04 	ldr.w	ip, [r4], #4
 800c15a:	f1bc 0f00 	cmp.w	ip, #0
 800c15e:	d009      	beq.n	800c174 <_ZL28read_encoded_value_with_basehjPKhPj+0x40>
 800c160:	f000 0570 	and.w	r5, r0, #112	; 0x70
 800c164:	2d10      	cmp	r5, #16
 800c166:	bf08      	it	eq
 800c168:	4611      	moveq	r1, r2
 800c16a:	448c      	add	ip, r1
 800c16c:	0602      	lsls	r2, r0, #24
 800c16e:	bf48      	it	mi
 800c170:	f8dc c000 	ldrmi.w	ip, [ip]
 800c174:	f8c3 c000 	str.w	ip, [r3]
 800c178:	4620      	mov	r0, r4
 800c17a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c17c:	3203      	adds	r2, #3
 800c17e:	f022 0403 	bic.w	r4, r2, #3
 800c182:	f854 cb04 	ldr.w	ip, [r4], #4
 800c186:	f8c3 c000 	str.w	ip, [r3]
 800c18a:	4620      	mov	r0, r4
 800c18c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c18e:	4614      	mov	r4, r2
 800c190:	f854 cb08 	ldr.w	ip, [r4], #8
 800c194:	e7e1      	b.n	800c15a <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800c196:	4614      	mov	r4, r2
 800c198:	f934 cb02 	ldrsh.w	ip, [r4], #2
 800c19c:	e7dd      	b.n	800c15a <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800c19e:	f04f 0c00 	mov.w	ip, #0
 800c1a2:	4666      	mov	r6, ip
 800c1a4:	4614      	mov	r4, r2
 800c1a6:	f814 7b01 	ldrb.w	r7, [r4], #1
 800c1aa:	f007 057f 	and.w	r5, r7, #127	; 0x7f
 800c1ae:	40b5      	lsls	r5, r6
 800c1b0:	ea4c 0c05 	orr.w	ip, ip, r5
 800c1b4:	063d      	lsls	r5, r7, #24
 800c1b6:	f106 0607 	add.w	r6, r6, #7
 800c1ba:	d4f4      	bmi.n	800c1a6 <_ZL28read_encoded_value_with_basehjPKhPj+0x72>
 800c1bc:	2e1f      	cmp	r6, #31
 800c1be:	d8cc      	bhi.n	800c15a <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800c1c0:	067d      	lsls	r5, r7, #25
 800c1c2:	d5ca      	bpl.n	800c15a <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800c1c4:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 800c1c8:	fa05 f606 	lsl.w	r6, r5, r6
 800c1cc:	ea4c 0c06 	orr.w	ip, ip, r6
 800c1d0:	e7c6      	b.n	800c160 <_ZL28read_encoded_value_with_basehjPKhPj+0x2c>
 800c1d2:	f04f 0c00 	mov.w	ip, #0
 800c1d6:	4666      	mov	r6, ip
 800c1d8:	4614      	mov	r4, r2
 800c1da:	f814 7b01 	ldrb.w	r7, [r4], #1
 800c1de:	f007 057f 	and.w	r5, r7, #127	; 0x7f
 800c1e2:	40b5      	lsls	r5, r6
 800c1e4:	063f      	lsls	r7, r7, #24
 800c1e6:	ea4c 0c05 	orr.w	ip, ip, r5
 800c1ea:	f106 0607 	add.w	r6, r6, #7
 800c1ee:	d4f4      	bmi.n	800c1da <_ZL28read_encoded_value_with_basehjPKhPj+0xa6>
 800c1f0:	e7b3      	b.n	800c15a <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800c1f2:	4614      	mov	r4, r2
 800c1f4:	f834 cb02 	ldrh.w	ip, [r4], #2
 800c1f8:	e7af      	b.n	800c15a <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800c1fa:	f001 f803 	bl	800d204 <abort>
 800c1fe:	bf00      	nop

0800c200 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 800c200:	28ff      	cmp	r0, #255	; 0xff
 800c202:	d010      	beq.n	800c226 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x26>
 800c204:	f000 0070 	and.w	r0, r0, #112	; 0x70
 800c208:	2820      	cmp	r0, #32
 800c20a:	d011      	beq.n	800c230 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x30>
 800c20c:	d908      	bls.n	800c220 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x20>
 800c20e:	2840      	cmp	r0, #64	; 0x40
 800c210:	d00b      	beq.n	800c22a <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x2a>
 800c212:	2850      	cmp	r0, #80	; 0x50
 800c214:	d007      	beq.n	800c226 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x26>
 800c216:	2830      	cmp	r0, #48	; 0x30
 800c218:	d10d      	bne.n	800c236 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x36>
 800c21a:	4608      	mov	r0, r1
 800c21c:	f000 bfec 	b.w	800d1f8 <_Unwind_GetDataRelBase>
 800c220:	b108      	cbz	r0, 800c226 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x26>
 800c222:	2810      	cmp	r0, #16
 800c224:	d107      	bne.n	800c236 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x36>
 800c226:	2000      	movs	r0, #0
 800c228:	4770      	bx	lr
 800c22a:	4608      	mov	r0, r1
 800c22c:	f7fb bc0c 	b.w	8007a48 <_Unwind_GetRegionStart>
 800c230:	4608      	mov	r0, r1
 800c232:	f000 bfe4 	b.w	800d1fe <_Unwind_GetTextRelBase>
 800c236:	b508      	push	{r3, lr}
 800c238:	f000 ffe4 	bl	800d204 <abort>

0800c23c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 800c23c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c23e:	460c      	mov	r4, r1
 800c240:	4615      	mov	r5, r2
 800c242:	4607      	mov	r7, r0
 800c244:	b108      	cbz	r0, 800c24a <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xe>
 800c246:	f7fb fbff 	bl	8007a48 <_Unwind_GetRegionStart>
 800c24a:	6028      	str	r0, [r5, #0]
 800c24c:	f814 6b01 	ldrb.w	r6, [r4], #1
 800c250:	2eff      	cmp	r6, #255	; 0xff
 800c252:	d129      	bne.n	800c2a8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x6c>
 800c254:	6068      	str	r0, [r5, #4]
 800c256:	4620      	mov	r0, r4
 800c258:	f810 3b01 	ldrb.w	r3, [r0], #1
 800c25c:	752b      	strb	r3, [r5, #20]
 800c25e:	2bff      	cmp	r3, #255	; 0xff
 800c260:	d033      	beq.n	800c2ca <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x8e>
 800c262:	2310      	movs	r3, #16
 800c264:	2400      	movs	r4, #0
 800c266:	752b      	strb	r3, [r5, #20]
 800c268:	4622      	mov	r2, r4
 800c26a:	f810 1b01 	ldrb.w	r1, [r0], #1
 800c26e:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800c272:	4093      	lsls	r3, r2
 800c274:	0609      	lsls	r1, r1, #24
 800c276:	ea44 0403 	orr.w	r4, r4, r3
 800c27a:	f102 0207 	add.w	r2, r2, #7
 800c27e:	d4f4      	bmi.n	800c26a <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x2e>
 800c280:	4404      	add	r4, r0
 800c282:	60ec      	str	r4, [r5, #12]
 800c284:	2400      	movs	r4, #0
 800c286:	f810 3b01 	ldrb.w	r3, [r0], #1
 800c28a:	756b      	strb	r3, [r5, #21]
 800c28c:	4622      	mov	r2, r4
 800c28e:	f810 1b01 	ldrb.w	r1, [r0], #1
 800c292:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800c296:	4093      	lsls	r3, r2
 800c298:	431c      	orrs	r4, r3
 800c29a:	060b      	lsls	r3, r1, #24
 800c29c:	f102 0207 	add.w	r2, r2, #7
 800c2a0:	d4f5      	bmi.n	800c28e <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x52>
 800c2a2:	4404      	add	r4, r0
 800c2a4:	612c      	str	r4, [r5, #16]
 800c2a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c2a8:	4639      	mov	r1, r7
 800c2aa:	4630      	mov	r0, r6
 800c2ac:	f7ff ffa8 	bl	800c200 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c2b0:	4622      	mov	r2, r4
 800c2b2:	4601      	mov	r1, r0
 800c2b4:	1d2b      	adds	r3, r5, #4
 800c2b6:	4630      	mov	r0, r6
 800c2b8:	f7ff ff3c 	bl	800c134 <_ZL28read_encoded_value_with_basehjPKhPj>
 800c2bc:	4604      	mov	r4, r0
 800c2be:	4620      	mov	r0, r4
 800c2c0:	f810 3b01 	ldrb.w	r3, [r0], #1
 800c2c4:	752b      	strb	r3, [r5, #20]
 800c2c6:	2bff      	cmp	r3, #255	; 0xff
 800c2c8:	d1cb      	bne.n	800c262 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x26>
 800c2ca:	2300      	movs	r3, #0
 800c2cc:	60eb      	str	r3, [r5, #12]
 800c2ce:	e7d9      	b.n	800c284 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x48>

0800c2d0 <__gxx_personality_v0>:
 800c2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2d4:	f000 0403 	and.w	r4, r0, #3
 800c2d8:	b093      	sub	sp, #76	; 0x4c
 800c2da:	2300      	movs	r3, #0
 800c2dc:	2c01      	cmp	r4, #1
 800c2de:	4689      	mov	r9, r1
 800c2e0:	4690      	mov	r8, r2
 800c2e2:	9308      	str	r3, [sp, #32]
 800c2e4:	f000 80a1 	beq.w	800c42a <__gxx_personality_v0+0x15a>
 800c2e8:	2c00      	cmp	r4, #0
 800c2ea:	f040 8086 	bne.w	800c3fa <__gxx_personality_v0+0x12a>
 800c2ee:	0702      	lsls	r2, r0, #28
 800c2f0:	f100 8086 	bmi.w	800c400 <__gxx_personality_v0+0x130>
 800c2f4:	2301      	movs	r3, #1
 800c2f6:	9302      	str	r3, [sp, #8]
 800c2f8:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800c2fc:	2300      	movs	r3, #0
 800c2fe:	f8cd a000 	str.w	sl, [sp]
 800c302:	4619      	mov	r1, r3
 800c304:	220c      	movs	r2, #12
 800c306:	4640      	mov	r0, r8
 800c308:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 800c30c:	f7fa fe1e 	bl	8006f4c <_Unwind_VRS_Set>
 800c310:	4640      	mov	r0, r8
 800c312:	f7fb fb9f 	bl	8007a54 <_Unwind_GetLanguageSpecificData>
 800c316:	9003      	str	r0, [sp, #12]
 800c318:	2800      	cmp	r0, #0
 800c31a:	d071      	beq.n	800c400 <__gxx_personality_v0+0x130>
 800c31c:	4652      	mov	r2, sl
 800c31e:	9903      	ldr	r1, [sp, #12]
 800c320:	4640      	mov	r0, r8
 800c322:	f7ff ff8b 	bl	800c23c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800c326:	4641      	mov	r1, r8
 800c328:	4605      	mov	r5, r0
 800c32a:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 800c32e:	f7ff ff67 	bl	800c200 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c332:	af0b      	add	r7, sp, #44	; 0x2c
 800c334:	2300      	movs	r3, #0
 800c336:	900e      	str	r0, [sp, #56]	; 0x38
 800c338:	4619      	mov	r1, r3
 800c33a:	220f      	movs	r2, #15
 800c33c:	9700      	str	r7, [sp, #0]
 800c33e:	4640      	mov	r0, r8
 800c340:	f7fa fde2 	bl	8006f08 <_Unwind_VRS_Get>
 800c344:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c346:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800c348:	f023 0301 	bic.w	r3, r3, #1
 800c34c:	4295      	cmp	r5, r2
 800c34e:	f103 36ff 	add.w	r6, r3, #4294967295	; 0xffffffff
 800c352:	f080 81eb 	bcs.w	800c72c <__gxx_personality_v0+0x45c>
 800c356:	f89d 4045 	ldrb.w	r4, [sp, #69]	; 0x45
 800c35a:	2100      	movs	r1, #0
 800c35c:	4620      	mov	r0, r4
 800c35e:	f7ff ff4f 	bl	800c200 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c362:	462a      	mov	r2, r5
 800c364:	ab09      	add	r3, sp, #36	; 0x24
 800c366:	4601      	mov	r1, r0
 800c368:	4620      	mov	r0, r4
 800c36a:	f7ff fee3 	bl	800c134 <_ZL28read_encoded_value_with_basehjPKhPj>
 800c36e:	f89d 4045 	ldrb.w	r4, [sp, #69]	; 0x45
 800c372:	4605      	mov	r5, r0
 800c374:	2100      	movs	r1, #0
 800c376:	4620      	mov	r0, r4
 800c378:	f7ff ff42 	bl	800c200 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c37c:	462a      	mov	r2, r5
 800c37e:	ab0a      	add	r3, sp, #40	; 0x28
 800c380:	4601      	mov	r1, r0
 800c382:	4620      	mov	r0, r4
 800c384:	f7ff fed6 	bl	800c134 <_ZL28read_encoded_value_with_basehjPKhPj>
 800c388:	f89d 4045 	ldrb.w	r4, [sp, #69]	; 0x45
 800c38c:	4605      	mov	r5, r0
 800c38e:	2100      	movs	r1, #0
 800c390:	4620      	mov	r0, r4
 800c392:	f7ff ff35 	bl	800c200 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c396:	462a      	mov	r2, r5
 800c398:	4601      	mov	r1, r0
 800c39a:	463b      	mov	r3, r7
 800c39c:	4620      	mov	r0, r4
 800c39e:	f7ff fec9 	bl	800c134 <_ZL28read_encoded_value_with_basehjPKhPj>
 800c3a2:	2400      	movs	r4, #0
 800c3a4:	4605      	mov	r5, r0
 800c3a6:	4622      	mov	r2, r4
 800c3a8:	f815 1b01 	ldrb.w	r1, [r5], #1
 800c3ac:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800c3b0:	4093      	lsls	r3, r2
 800c3b2:	431c      	orrs	r4, r3
 800c3b4:	060b      	lsls	r3, r1, #24
 800c3b6:	f102 0207 	add.w	r2, r2, #7
 800c3ba:	d4f5      	bmi.n	800c3a8 <__gxx_personality_v0+0xd8>
 800c3bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c3be:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c3c0:	4413      	add	r3, r2
 800c3c2:	42b3      	cmp	r3, r6
 800c3c4:	d929      	bls.n	800c41a <__gxx_personality_v0+0x14a>
 800c3c6:	9b02      	ldr	r3, [sp, #8]
 800c3c8:	07da      	lsls	r2, r3, #31
 800c3ca:	d540      	bpl.n	800c44e <__gxx_personality_v0+0x17e>
 800c3cc:	2400      	movs	r4, #0
 800c3ce:	9404      	str	r4, [sp, #16]
 800c3d0:	2300      	movs	r3, #0
 800c3d2:	4619      	mov	r1, r3
 800c3d4:	220d      	movs	r2, #13
 800c3d6:	9700      	str	r7, [sp, #0]
 800c3d8:	4640      	mov	r0, r8
 800c3da:	9d08      	ldr	r5, [sp, #32]
 800c3dc:	f7fa fd94 	bl	8006f08 <_Unwind_VRS_Get>
 800c3e0:	9a03      	ldr	r2, [sp, #12]
 800c3e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c3e4:	f8c9 202c 	str.w	r2, [r9, #44]	; 0x2c
 800c3e8:	9a04      	ldr	r2, [sp, #16]
 800c3ea:	f8c9 2030 	str.w	r2, [r9, #48]	; 0x30
 800c3ee:	e9c9 5409 	strd	r5, r4, [r9, #36]	; 0x24
 800c3f2:	f8c9 3020 	str.w	r3, [r9, #32]
 800c3f6:	2006      	movs	r0, #6
 800c3f8:	e008      	b.n	800c40c <__gxx_personality_v0+0x13c>
 800c3fa:	2c02      	cmp	r4, #2
 800c3fc:	f040 819f 	bne.w	800c73e <__gxx_personality_v0+0x46e>
 800c400:	4641      	mov	r1, r8
 800c402:	4648      	mov	r0, r9
 800c404:	f7fb fb0c 	bl	8007a20 <__gnu_unwind_frame>
 800c408:	b918      	cbnz	r0, 800c412 <__gxx_personality_v0+0x142>
 800c40a:	2008      	movs	r0, #8
 800c40c:	b013      	add	sp, #76	; 0x4c
 800c40e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c412:	2009      	movs	r0, #9
 800c414:	b013      	add	sp, #76	; 0x4c
 800c416:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c41a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c41c:	4413      	add	r3, r2
 800c41e:	42b3      	cmp	r3, r6
 800c420:	d86c      	bhi.n	800c4fc <__gxx_personality_v0+0x22c>
 800c422:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c424:	42ab      	cmp	r3, r5
 800c426:	d896      	bhi.n	800c356 <__gxx_personality_v0+0x86>
 800c428:	e7cd      	b.n	800c3c6 <__gxx_personality_v0+0xf6>
 800c42a:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800c42e:	f010 0408 	ands.w	r4, r0, #8
 800c432:	f8cd a000 	str.w	sl, [sp]
 800c436:	d012      	beq.n	800c45e <__gxx_personality_v0+0x18e>
 800c438:	f044 0402 	orr.w	r4, r4, #2
 800c43c:	4619      	mov	r1, r3
 800c43e:	220c      	movs	r2, #12
 800c440:	4640      	mov	r0, r8
 800c442:	9402      	str	r4, [sp, #8]
 800c444:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 800c448:	f7fa fd80 	bl	8006f4c <_Unwind_VRS_Set>
 800c44c:	e760      	b.n	800c310 <__gxx_personality_v0+0x40>
 800c44e:	9b02      	ldr	r3, [sp, #8]
 800c450:	071c      	lsls	r4, r3, #28
 800c452:	d501      	bpl.n	800c458 <__gxx_personality_v0+0x188>
 800c454:	f000 fab0 	bl	800c9b8 <_ZSt9terminatev>
 800c458:	4648      	mov	r0, r9
 800c45a:	f000 f993 	bl	800c784 <__cxa_call_terminate>
 800c45e:	4623      	mov	r3, r4
 800c460:	220d      	movs	r2, #13
 800c462:	4621      	mov	r1, r4
 800c464:	4640      	mov	r0, r8
 800c466:	f8d9 5020 	ldr.w	r5, [r9, #32]
 800c46a:	f7fa fd4d 	bl	8006f08 <_Unwind_VRS_Get>
 800c46e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c470:	429d      	cmp	r5, r3
 800c472:	d002      	beq.n	800c47a <__gxx_personality_v0+0x1aa>
 800c474:	2302      	movs	r3, #2
 800c476:	9302      	str	r3, [sp, #8]
 800c478:	e740      	b.n	800c2fc <__gxx_personality_v0+0x2c>
 800c47a:	4623      	mov	r3, r4
 800c47c:	f8cd a000 	str.w	sl, [sp]
 800c480:	4621      	mov	r1, r4
 800c482:	220c      	movs	r2, #12
 800c484:	4640      	mov	r0, r8
 800c486:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 800c48a:	f7fa fd5f 	bl	8006f4c <_Unwind_VRS_Set>
 800c48e:	f8d9 3030 	ldr.w	r3, [r9, #48]	; 0x30
 800c492:	9304      	str	r3, [sp, #16]
 800c494:	2b00      	cmp	r3, #0
 800c496:	d0df      	beq.n	800c458 <__gxx_personality_v0+0x188>
 800c498:	e9d9 430a 	ldrd	r4, r3, [r9, #40]	; 0x28
 800c49c:	af0b      	add	r7, sp, #44	; 0x2c
 800c49e:	9303      	str	r3, [sp, #12]
 800c4a0:	2c00      	cmp	r4, #0
 800c4a2:	db41      	blt.n	800c528 <__gxx_personality_v0+0x258>
 800c4a4:	2503      	movs	r5, #3
 800c4a6:	2300      	movs	r3, #0
 800c4a8:	461a      	mov	r2, r3
 800c4aa:	4619      	mov	r1, r3
 800c4ac:	9700      	str	r7, [sp, #0]
 800c4ae:	4640      	mov	r0, r8
 800c4b0:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 800c4b4:	f7fa fd4a 	bl	8006f4c <_Unwind_VRS_Set>
 800c4b8:	2300      	movs	r3, #0
 800c4ba:	4619      	mov	r1, r3
 800c4bc:	2201      	movs	r2, #1
 800c4be:	9700      	str	r7, [sp, #0]
 800c4c0:	4640      	mov	r0, r8
 800c4c2:	940b      	str	r4, [sp, #44]	; 0x2c
 800c4c4:	f7fa fd42 	bl	8006f4c <_Unwind_VRS_Set>
 800c4c8:	2300      	movs	r3, #0
 800c4ca:	4619      	mov	r1, r3
 800c4cc:	220f      	movs	r2, #15
 800c4ce:	9700      	str	r7, [sp, #0]
 800c4d0:	4640      	mov	r0, r8
 800c4d2:	f7fa fd19 	bl	8006f08 <_Unwind_VRS_Get>
 800c4d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c4d8:	9a04      	ldr	r2, [sp, #16]
 800c4da:	9700      	str	r7, [sp, #0]
 800c4dc:	f003 0401 	and.w	r4, r3, #1
 800c4e0:	2300      	movs	r3, #0
 800c4e2:	4314      	orrs	r4, r2
 800c4e4:	4640      	mov	r0, r8
 800c4e6:	4619      	mov	r1, r3
 800c4e8:	220f      	movs	r2, #15
 800c4ea:	940b      	str	r4, [sp, #44]	; 0x2c
 800c4ec:	f7fa fd2e 	bl	8006f4c <_Unwind_VRS_Set>
 800c4f0:	2d02      	cmp	r5, #2
 800c4f2:	d014      	beq.n	800c51e <__gxx_personality_v0+0x24e>
 800c4f4:	2007      	movs	r0, #7
 800c4f6:	b013      	add	sp, #76	; 0x4c
 800c4f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c4fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c4fe:	2b00      	cmp	r3, #0
 800c500:	f43f af7e 	beq.w	800c400 <__gxx_personality_v0+0x130>
 800c504:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c506:	4413      	add	r3, r2
 800c508:	9304      	str	r3, [sp, #16]
 800c50a:	bb7c      	cbnz	r4, 800c56c <__gxx_personality_v0+0x29c>
 800c50c:	2b00      	cmp	r3, #0
 800c50e:	f43f af77 	beq.w	800c400 <__gxx_personality_v0+0x130>
 800c512:	9b02      	ldr	r3, [sp, #8]
 800c514:	07d9      	lsls	r1, r3, #31
 800c516:	f53f af73 	bmi.w	800c400 <__gxx_personality_v0+0x130>
 800c51a:	2502      	movs	r5, #2
 800c51c:	e7c3      	b.n	800c4a6 <__gxx_personality_v0+0x1d6>
 800c51e:	4648      	mov	r0, r9
 800c520:	f000 fad6 	bl	800cad0 <__cxa_begin_cleanup>
 800c524:	2007      	movs	r0, #7
 800c526:	e771      	b.n	800c40c <__gxx_personality_v0+0x13c>
 800c528:	1c63      	adds	r3, r4, #1
 800c52a:	461d      	mov	r5, r3
 800c52c:	4652      	mov	r2, sl
 800c52e:	9903      	ldr	r1, [sp, #12]
 800c530:	4640      	mov	r0, r8
 800c532:	f7ff fe83 	bl	800c23c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800c536:	4641      	mov	r1, r8
 800c538:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 800c53c:	f7ff fe60 	bl	800c200 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800c540:	ebc5 7385 	rsb	r3, r5, r5, lsl #30
 800c544:	009b      	lsls	r3, r3, #2
 800c546:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800c548:	900e      	str	r0, [sp, #56]	; 0x38
 800c54a:	58ea      	ldr	r2, [r5, r3]
 800c54c:	441d      	add	r5, r3
 800c54e:	b132      	cbz	r2, 800c55e <__gxx_personality_v0+0x28e>
 800c550:	462b      	mov	r3, r5
 800c552:	2200      	movs	r2, #0
 800c554:	f853 1f04 	ldr.w	r1, [r3, #4]!
 800c558:	3201      	adds	r2, #1
 800c55a:	2900      	cmp	r1, #0
 800c55c:	d1fa      	bne.n	800c554 <__gxx_personality_v0+0x284>
 800c55e:	2304      	movs	r3, #4
 800c560:	e9c9 350c 	strd	r3, r5, [r9, #48]	; 0x30
 800c564:	e9c9 200a 	strd	r2, r0, [r9, #40]	; 0x28
 800c568:	2503      	movs	r5, #3
 800c56a:	e79c      	b.n	800c4a6 <__gxx_personality_v0+0x1d6>
 800c56c:	9e10      	ldr	r6, [sp, #64]	; 0x40
 800c56e:	9b04      	ldr	r3, [sp, #16]
 800c570:	3c01      	subs	r4, #1
 800c572:	4426      	add	r6, r4
 800c574:	2b00      	cmp	r3, #0
 800c576:	f43f af43 	beq.w	800c400 <__gxx_personality_v0+0x130>
 800c57a:	9b02      	ldr	r3, [sp, #8]
 800c57c:	2e00      	cmp	r6, #0
 800c57e:	f000 80da 	beq.w	800c736 <__gxx_personality_v0+0x466>
 800c582:	f013 0308 	ands.w	r3, r3, #8
 800c586:	9305      	str	r3, [sp, #20]
 800c588:	f000 80c6 	beq.w	800c718 <__gxx_personality_v0+0x448>
 800c58c:	2247      	movs	r2, #71	; 0x47
 800c58e:	234e      	movs	r3, #78	; 0x4e
 800c590:	f889 2000 	strb.w	r2, [r9]
 800c594:	f889 3001 	strb.w	r3, [r9, #1]
 800c598:	2255      	movs	r2, #85	; 0x55
 800c59a:	2343      	movs	r3, #67	; 0x43
 800c59c:	f889 2002 	strb.w	r2, [r9, #2]
 800c5a0:	f889 3003 	strb.w	r3, [r9, #3]
 800c5a4:	2246      	movs	r2, #70	; 0x46
 800c5a6:	234f      	movs	r3, #79	; 0x4f
 800c5a8:	f889 2004 	strb.w	r2, [r9, #4]
 800c5ac:	f889 3005 	strb.w	r3, [r9, #5]
 800c5b0:	2252      	movs	r2, #82	; 0x52
 800c5b2:	2300      	movs	r3, #0
 800c5b4:	f889 2006 	strb.w	r2, [r9, #6]
 800c5b8:	f889 3007 	strb.w	r3, [r9, #7]
 800c5bc:	2300      	movs	r3, #0
 800c5be:	e9cd 8a06 	strd	r8, sl, [sp, #24]
 800c5c2:	469b      	mov	fp, r3
 800c5c4:	46ba      	mov	sl, r7
 800c5c6:	464f      	mov	r7, r9
 800c5c8:	2400      	movs	r4, #0
 800c5ca:	4622      	mov	r2, r4
 800c5cc:	f816 1b01 	ldrb.w	r1, [r6], #1
 800c5d0:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800c5d4:	4093      	lsls	r3, r2
 800c5d6:	0608      	lsls	r0, r1, #24
 800c5d8:	ea44 0403 	orr.w	r4, r4, r3
 800c5dc:	f102 0207 	add.w	r2, r2, #7
 800c5e0:	d4f4      	bmi.n	800c5cc <__gxx_personality_v0+0x2fc>
 800c5e2:	2a1f      	cmp	r2, #31
 800c5e4:	d805      	bhi.n	800c5f2 <__gxx_personality_v0+0x322>
 800c5e6:	0649      	lsls	r1, r1, #25
 800c5e8:	d503      	bpl.n	800c5f2 <__gxx_personality_v0+0x322>
 800c5ea:	2301      	movs	r3, #1
 800c5ec:	4093      	lsls	r3, r2
 800c5ee:	425b      	negs	r3, r3
 800c5f0:	431c      	orrs	r4, r3
 800c5f2:	2500      	movs	r5, #0
 800c5f4:	462a      	mov	r2, r5
 800c5f6:	4630      	mov	r0, r6
 800c5f8:	f810 1b01 	ldrb.w	r1, [r0], #1
 800c5fc:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800c600:	4093      	lsls	r3, r2
 800c602:	431d      	orrs	r5, r3
 800c604:	060b      	lsls	r3, r1, #24
 800c606:	f102 0207 	add.w	r2, r2, #7
 800c60a:	d4f5      	bmi.n	800c5f8 <__gxx_personality_v0+0x328>
 800c60c:	2a1f      	cmp	r2, #31
 800c60e:	d805      	bhi.n	800c61c <__gxx_personality_v0+0x34c>
 800c610:	0649      	lsls	r1, r1, #25
 800c612:	d503      	bpl.n	800c61c <__gxx_personality_v0+0x34c>
 800c614:	2301      	movs	r3, #1
 800c616:	4093      	lsls	r3, r2
 800c618:	425b      	negs	r3, r3
 800c61a:	431d      	orrs	r5, r3
 800c61c:	2c00      	cmp	r4, #0
 800c61e:	d023      	beq.n	800c668 <__gxx_personality_v0+0x398>
 800c620:	dc25      	bgt.n	800c66e <__gxx_personality_v0+0x39e>
 800c622:	f104 0901 	add.w	r9, r4, #1
 800c626:	ebc9 7289 	rsb	r2, r9, r9, lsl #30
 800c62a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c62c:	eb03 0882 	add.w	r8, r3, r2, lsl #2
 800c630:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800c634:	b10f      	cbz	r7, 800c63a <__gxx_personality_v0+0x36a>
 800c636:	9b05      	ldr	r3, [sp, #20]
 800c638:	b12b      	cbz	r3, 800c646 <__gxx_personality_v0+0x376>
 800c63a:	2900      	cmp	r1, #0
 800c63c:	d037      	beq.n	800c6ae <__gxx_personality_v0+0x3de>
 800c63e:	2d00      	cmp	r5, #0
 800c640:	d05c      	beq.n	800c6fc <__gxx_personality_v0+0x42c>
 800c642:	442e      	add	r6, r5
 800c644:	e7c0      	b.n	800c5c8 <__gxx_personality_v0+0x2f8>
 800c646:	9b08      	ldr	r3, [sp, #32]
 800c648:	930b      	str	r3, [sp, #44]	; 0x2c
 800c64a:	b921      	cbnz	r1, 800c656 <__gxx_personality_v0+0x386>
 800c64c:	e04a      	b.n	800c6e4 <__gxx_personality_v0+0x414>
 800c64e:	f858 1f04 	ldr.w	r1, [r8, #4]!
 800c652:	2900      	cmp	r1, #0
 800c654:	d046      	beq.n	800c6e4 <__gxx_personality_v0+0x414>
 800c656:	4441      	add	r1, r8
 800c658:	4653      	mov	r3, sl
 800c65a:	2200      	movs	r2, #0
 800c65c:	4638      	mov	r0, r7
 800c65e:	f000 f9d9 	bl	800ca14 <__cxa_type_match>
 800c662:	2800      	cmp	r0, #0
 800c664:	d0f3      	beq.n	800c64e <__gxx_personality_v0+0x37e>
 800c666:	e7ea      	b.n	800c63e <__gxx_personality_v0+0x36e>
 800c668:	f04f 0b01 	mov.w	fp, #1
 800c66c:	e7e7      	b.n	800c63e <__gxx_personality_v0+0x36e>
 800c66e:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 800c672:	28ff      	cmp	r0, #255	; 0xff
 800c674:	d034      	beq.n	800c6e0 <__gxx_personality_v0+0x410>
 800c676:	f000 0307 	and.w	r3, r0, #7
 800c67a:	2b04      	cmp	r3, #4
 800c67c:	d85f      	bhi.n	800c73e <__gxx_personality_v0+0x46e>
 800c67e:	e8df f003 	tbb	[pc, r3]
 800c682:	5e2c      	.short	0x5e2c
 800c684:	2c29      	.short	0x2c29
 800c686:	03          	.byte	0x03
 800c687:	00          	.byte	0x00
 800c688:	00e2      	lsls	r2, r4, #3
 800c68a:	4252      	negs	r2, r2
 800c68c:	e9dd 130e 	ldrd	r1, r3, [sp, #56]	; 0x38
 800c690:	441a      	add	r2, r3
 800c692:	4653      	mov	r3, sl
 800c694:	f7ff fd4e 	bl	800c134 <_ZL28read_encoded_value_with_basehjPKhPj>
 800c698:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c69a:	b141      	cbz	r1, 800c6ae <__gxx_personality_v0+0x3de>
 800c69c:	2f00      	cmp	r7, #0
 800c69e:	d0ce      	beq.n	800c63e <__gxx_personality_v0+0x36e>
 800c6a0:	ab08      	add	r3, sp, #32
 800c6a2:	2200      	movs	r2, #0
 800c6a4:	4638      	mov	r0, r7
 800c6a6:	f000 f9b5 	bl	800ca14 <__cxa_type_match>
 800c6aa:	2800      	cmp	r0, #0
 800c6ac:	d0c7      	beq.n	800c63e <__gxx_personality_v0+0x36e>
 800c6ae:	9b02      	ldr	r3, [sp, #8]
 800c6b0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800c6b4:	07db      	lsls	r3, r3, #31
 800c6b6:	46b9      	mov	r9, r7
 800c6b8:	4657      	mov	r7, sl
 800c6ba:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800c6be:	f53f ae87 	bmi.w	800c3d0 <__gxx_personality_v0+0x100>
 800c6c2:	9b05      	ldr	r3, [sp, #20]
 800c6c4:	2b00      	cmp	r3, #0
 800c6c6:	f43f aeeb 	beq.w	800c4a0 <__gxx_personality_v0+0x1d0>
 800c6ca:	2c00      	cmp	r4, #0
 800c6cc:	f6bf aeea 	bge.w	800c4a4 <__gxx_personality_v0+0x1d4>
 800c6d0:	f000 f980 	bl	800c9d4 <_ZSt10unexpectedv>
 800c6d4:	0062      	lsls	r2, r4, #1
 800c6d6:	4252      	negs	r2, r2
 800c6d8:	e7d8      	b.n	800c68c <__gxx_personality_v0+0x3bc>
 800c6da:	00a2      	lsls	r2, r4, #2
 800c6dc:	4252      	negs	r2, r2
 800c6de:	e7d5      	b.n	800c68c <__gxx_personality_v0+0x3bc>
 800c6e0:	2200      	movs	r2, #0
 800c6e2:	e7d3      	b.n	800c68c <__gxx_personality_v0+0x3bc>
 800c6e4:	9b02      	ldr	r3, [sp, #8]
 800c6e6:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800c6ea:	07db      	lsls	r3, r3, #31
 800c6ec:	464d      	mov	r5, r9
 800c6ee:	46b9      	mov	r9, r7
 800c6f0:	4657      	mov	r7, sl
 800c6f2:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800c6f6:	f53f ae6b 	bmi.w	800c3d0 <__gxx_personality_v0+0x100>
 800c6fa:	e717      	b.n	800c52c <__gxx_personality_v0+0x25c>
 800c6fc:	465b      	mov	r3, fp
 800c6fe:	46b9      	mov	r9, r7
 800c700:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800c704:	4657      	mov	r7, sl
 800c706:	2b00      	cmp	r3, #0
 800c708:	f43f ae7a 	beq.w	800c400 <__gxx_personality_v0+0x130>
 800c70c:	9b02      	ldr	r3, [sp, #8]
 800c70e:	07de      	lsls	r6, r3, #31
 800c710:	f53f ae76 	bmi.w	800c400 <__gxx_personality_v0+0x130>
 800c714:	2400      	movs	r4, #0
 800c716:	e700      	b.n	800c51a <__gxx_personality_v0+0x24a>
 800c718:	f899 3007 	ldrb.w	r3, [r9, #7]
 800c71c:	2b01      	cmp	r3, #1
 800c71e:	bf0c      	ite	eq
 800c720:	f859 3c20 	ldreq.w	r3, [r9, #-32]
 800c724:	f109 0358 	addne.w	r3, r9, #88	; 0x58
 800c728:	9308      	str	r3, [sp, #32]
 800c72a:	e747      	b.n	800c5bc <__gxx_personality_v0+0x2ec>
 800c72c:	9b02      	ldr	r3, [sp, #8]
 800c72e:	07d8      	lsls	r0, r3, #31
 800c730:	f53f ae4c 	bmi.w	800c3cc <__gxx_personality_v0+0xfc>
 800c734:	e68c      	b.n	800c450 <__gxx_personality_v0+0x180>
 800c736:	07dd      	lsls	r5, r3, #31
 800c738:	f53f ae62 	bmi.w	800c400 <__gxx_personality_v0+0x130>
 800c73c:	e7ea      	b.n	800c714 <__gxx_personality_v0+0x444>
 800c73e:	f000 fd61 	bl	800d204 <abort>
 800c742:	f000 f89b 	bl	800c87c <__cxa_begin_catch>
 800c746:	e685      	b.n	800c454 <__gxx_personality_v0+0x184>

0800c748 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 800c748:	7803      	ldrb	r3, [r0, #0]
 800c74a:	2b47      	cmp	r3, #71	; 0x47
 800c74c:	d001      	beq.n	800c752 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800c74e:	2000      	movs	r0, #0
 800c750:	4770      	bx	lr
 800c752:	7843      	ldrb	r3, [r0, #1]
 800c754:	2b4e      	cmp	r3, #78	; 0x4e
 800c756:	d1fa      	bne.n	800c74e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c758:	7883      	ldrb	r3, [r0, #2]
 800c75a:	2b55      	cmp	r3, #85	; 0x55
 800c75c:	d1f7      	bne.n	800c74e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c75e:	78c3      	ldrb	r3, [r0, #3]
 800c760:	2b43      	cmp	r3, #67	; 0x43
 800c762:	d1f4      	bne.n	800c74e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c764:	7903      	ldrb	r3, [r0, #4]
 800c766:	2b43      	cmp	r3, #67	; 0x43
 800c768:	d1f1      	bne.n	800c74e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c76a:	7943      	ldrb	r3, [r0, #5]
 800c76c:	2b2b      	cmp	r3, #43	; 0x2b
 800c76e:	d1ee      	bne.n	800c74e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c770:	7983      	ldrb	r3, [r0, #6]
 800c772:	2b2b      	cmp	r3, #43	; 0x2b
 800c774:	d1eb      	bne.n	800c74e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c776:	79c0      	ldrb	r0, [r0, #7]
 800c778:	2801      	cmp	r0, #1
 800c77a:	bf8c      	ite	hi
 800c77c:	2000      	movhi	r0, #0
 800c77e:	2001      	movls	r0, #1
 800c780:	4770      	bx	lr
 800c782:	bf00      	nop

0800c784 <__cxa_call_terminate>:
 800c784:	b510      	push	{r4, lr}
 800c786:	b130      	cbz	r0, 800c796 <__cxa_call_terminate+0x12>
 800c788:	4604      	mov	r4, r0
 800c78a:	f000 f877 	bl	800c87c <__cxa_begin_catch>
 800c78e:	4620      	mov	r0, r4
 800c790:	f7ff ffda 	bl	800c748 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800c794:	b908      	cbnz	r0, 800c79a <__cxa_call_terminate+0x16>
 800c796:	f000 f90f 	bl	800c9b8 <_ZSt9terminatev>
 800c79a:	f854 0c14 	ldr.w	r0, [r4, #-20]
 800c79e:	f000 f8f7 	bl	800c990 <_ZN10__cxxabiv111__terminateEPFvvE>
 800c7a2:	bf00      	nop

0800c7a4 <__cxa_call_unexpected>:
 800c7a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7a8:	b083      	sub	sp, #12
 800c7aa:	4602      	mov	r2, r0
 800c7ac:	f7ff ffcc 	bl	800c748 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800c7b0:	b138      	cbz	r0, 800c7c2 <__cxa_call_unexpected+0x1e>
 800c7b2:	e952 8406 	ldrd	r8, r4, [r2, #-24]
 800c7b6:	f8d2 9028 	ldr.w	r9, [r2, #40]	; 0x28
 800c7ba:	e9d2 750c 	ldrd	r7, r5, [r2, #48]	; 0x30
 800c7be:	2600      	movs	r6, #0
 800c7c0:	e005      	b.n	800c7ce <__cxa_call_unexpected+0x2a>
 800c7c2:	4604      	mov	r4, r0
 800c7c4:	4680      	mov	r8, r0
 800c7c6:	4605      	mov	r5, r0
 800c7c8:	4607      	mov	r7, r0
 800c7ca:	4681      	mov	r9, r0
 800c7cc:	2601      	movs	r6, #1
 800c7ce:	4610      	mov	r0, r2
 800c7d0:	f000 f854 	bl	800c87c <__cxa_begin_catch>
 800c7d4:	b10e      	cbz	r6, 800c7da <__cxa_call_unexpected+0x36>
 800c7d6:	f000 f8fd 	bl	800c9d4 <_ZSt10unexpectedv>
 800c7da:	4640      	mov	r0, r8
 800c7dc:	f000 f8f6 	bl	800c9cc <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800c7e0:	f000 f84c 	bl	800c87c <__cxa_begin_catch>
 800c7e4:	b10e      	cbz	r6, 800c7ea <__cxa_call_unexpected+0x46>
 800c7e6:	f000 f8e7 	bl	800c9b8 <_ZSt9terminatev>
 800c7ea:	f000 f8c9 	bl	800c980 <__cxa_get_globals_fast>
 800c7ee:	6803      	ldr	r3, [r0, #0]
 800c7f0:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800c7f4:	2a01      	cmp	r2, #1
 800c7f6:	bf0c      	ite	eq
 800c7f8:	681a      	ldreq	r2, [r3, #0]
 800c7fa:	f103 0278 	addne.w	r2, r3, #120	; 0x78
 800c7fe:	9200      	str	r2, [sp, #0]
 800c800:	f027 0b03 	bic.w	fp, r7, #3
 800c804:	f103 0a20 	add.w	sl, r3, #32
 800c808:	f04f 0800 	mov.w	r8, #0
 800c80c:	45c1      	cmp	r9, r8
 800c80e:	dd1c      	ble.n	800c84a <__cxa_call_unexpected+0xa6>
 800c810:	682f      	ldr	r7, [r5, #0]
 800c812:	b107      	cbz	r7, 800c816 <__cxa_call_unexpected+0x72>
 800c814:	442f      	add	r7, r5
 800c816:	466b      	mov	r3, sp
 800c818:	2200      	movs	r2, #0
 800c81a:	4639      	mov	r1, r7
 800c81c:	4650      	mov	r0, sl
 800c81e:	f000 f8f9 	bl	800ca14 <__cxa_type_match>
 800c822:	b108      	cbz	r0, 800c828 <__cxa_call_unexpected+0x84>
 800c824:	f000 fa2e 	bl	800cc84 <__cxa_rethrow>
 800c828:	683b      	ldr	r3, [r7, #0]
 800c82a:	4911      	ldr	r1, [pc, #68]	; (800c870 <__cxa_call_unexpected+0xcc>)
 800c82c:	691b      	ldr	r3, [r3, #16]
 800c82e:	9001      	str	r0, [sp, #4]
 800c830:	469c      	mov	ip, r3
 800c832:	4638      	mov	r0, r7
 800c834:	2301      	movs	r3, #1
 800c836:	aa01      	add	r2, sp, #4
 800c838:	4667      	mov	r7, ip
 800c83a:	47b8      	blx	r7
 800c83c:	2800      	cmp	r0, #0
 800c83e:	bf18      	it	ne
 800c840:	4606      	movne	r6, r0
 800c842:	f108 0801 	add.w	r8, r8, #1
 800c846:	445d      	add	r5, fp
 800c848:	e7e0      	b.n	800c80c <__cxa_call_unexpected+0x68>
 800c84a:	b146      	cbz	r6, 800c85e <__cxa_call_unexpected+0xba>
 800c84c:	2004      	movs	r0, #4
 800c84e:	f000 fad7 	bl	800ce00 <__cxa_allocate_exception>
 800c852:	4b08      	ldr	r3, [pc, #32]	; (800c874 <__cxa_call_unexpected+0xd0>)
 800c854:	6003      	str	r3, [r0, #0]
 800c856:	4a08      	ldr	r2, [pc, #32]	; (800c878 <__cxa_call_unexpected+0xd4>)
 800c858:	4905      	ldr	r1, [pc, #20]	; (800c870 <__cxa_call_unexpected+0xcc>)
 800c85a:	f000 f9f7 	bl	800cc4c <__cxa_throw>
 800c85e:	4620      	mov	r0, r4
 800c860:	f000 f896 	bl	800c990 <_ZN10__cxxabiv111__terminateEPFvvE>
 800c864:	f000 f848 	bl	800c8f8 <__cxa_end_catch>
 800c868:	f000 f846 	bl	800c8f8 <__cxa_end_catch>
 800c86c:	f000 f8cc 	bl	800ca08 <__cxa_end_cleanup>
 800c870:	08012b3c 	.word	0x08012b3c
 800c874:	08012bc0 	.word	0x08012bc0
 800c878:	0800ccf5 	.word	0x0800ccf5

0800c87c <__cxa_begin_catch>:
 800c87c:	b538      	push	{r3, r4, r5, lr}
 800c87e:	4604      	mov	r4, r0
 800c880:	f000 f882 	bl	800c988 <__cxa_get_globals>
 800c884:	4623      	mov	r3, r4
 800c886:	6805      	ldr	r5, [r0, #0]
 800c888:	f813 2920 	ldrb.w	r2, [r3], #-32
 800c88c:	2a47      	cmp	r2, #71	; 0x47
 800c88e:	d003      	beq.n	800c898 <__cxa_begin_catch+0x1c>
 800c890:	bb85      	cbnz	r5, 800c8f4 <__cxa_begin_catch+0x78>
 800c892:	6003      	str	r3, [r0, #0]
 800c894:	4628      	mov	r0, r5
 800c896:	bd38      	pop	{r3, r4, r5, pc}
 800c898:	7862      	ldrb	r2, [r4, #1]
 800c89a:	2a4e      	cmp	r2, #78	; 0x4e
 800c89c:	d1f8      	bne.n	800c890 <__cxa_begin_catch+0x14>
 800c89e:	78a2      	ldrb	r2, [r4, #2]
 800c8a0:	2a55      	cmp	r2, #85	; 0x55
 800c8a2:	d1f5      	bne.n	800c890 <__cxa_begin_catch+0x14>
 800c8a4:	78e2      	ldrb	r2, [r4, #3]
 800c8a6:	2a43      	cmp	r2, #67	; 0x43
 800c8a8:	d1f2      	bne.n	800c890 <__cxa_begin_catch+0x14>
 800c8aa:	7922      	ldrb	r2, [r4, #4]
 800c8ac:	2a43      	cmp	r2, #67	; 0x43
 800c8ae:	d1ef      	bne.n	800c890 <__cxa_begin_catch+0x14>
 800c8b0:	7962      	ldrb	r2, [r4, #5]
 800c8b2:	2a2b      	cmp	r2, #43	; 0x2b
 800c8b4:	d1ec      	bne.n	800c890 <__cxa_begin_catch+0x14>
 800c8b6:	79a2      	ldrb	r2, [r4, #6]
 800c8b8:	2a2b      	cmp	r2, #43	; 0x2b
 800c8ba:	d1e9      	bne.n	800c890 <__cxa_begin_catch+0x14>
 800c8bc:	79e2      	ldrb	r2, [r4, #7]
 800c8be:	2a01      	cmp	r2, #1
 800c8c0:	d8e6      	bhi.n	800c890 <__cxa_begin_catch+0x14>
 800c8c2:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800c8c6:	2a00      	cmp	r2, #0
 800c8c8:	db11      	blt.n	800c8ee <__cxa_begin_catch+0x72>
 800c8ca:	3201      	adds	r2, #1
 800c8cc:	6841      	ldr	r1, [r0, #4]
 800c8ce:	f844 2c0c 	str.w	r2, [r4, #-12]
 800c8d2:	429d      	cmp	r5, r3
 800c8d4:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
 800c8d8:	6041      	str	r1, [r0, #4]
 800c8da:	bf1c      	itt	ne
 800c8dc:	f844 5c10 	strne.w	r5, [r4, #-16]
 800c8e0:	6003      	strne	r3, [r0, #0]
 800c8e2:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800c8e4:	4620      	mov	r0, r4
 800c8e6:	f7fa fb07 	bl	8006ef8 <_Unwind_Complete>
 800c8ea:	4628      	mov	r0, r5
 800c8ec:	bd38      	pop	{r3, r4, r5, pc}
 800c8ee:	f1c2 0201 	rsb	r2, r2, #1
 800c8f2:	e7eb      	b.n	800c8cc <__cxa_begin_catch+0x50>
 800c8f4:	f000 f860 	bl	800c9b8 <_ZSt9terminatev>

0800c8f8 <__cxa_end_catch>:
 800c8f8:	b508      	push	{r3, lr}
 800c8fa:	f000 f841 	bl	800c980 <__cxa_get_globals_fast>
 800c8fe:	4602      	mov	r2, r0
 800c900:	6800      	ldr	r0, [r0, #0]
 800c902:	b370      	cbz	r0, 800c962 <__cxa_end_catch+0x6a>
 800c904:	f890 3020 	ldrb.w	r3, [r0, #32]
 800c908:	2b47      	cmp	r3, #71	; 0x47
 800c90a:	d006      	beq.n	800c91a <__cxa_end_catch+0x22>
 800c90c:	2300      	movs	r3, #0
 800c90e:	6013      	str	r3, [r2, #0]
 800c910:	3020      	adds	r0, #32
 800c912:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c916:	f7fa baf1 	b.w	8006efc <_Unwind_DeleteException>
 800c91a:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 800c91e:	2b4e      	cmp	r3, #78	; 0x4e
 800c920:	d1f4      	bne.n	800c90c <__cxa_end_catch+0x14>
 800c922:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800c926:	2b55      	cmp	r3, #85	; 0x55
 800c928:	d1f0      	bne.n	800c90c <__cxa_end_catch+0x14>
 800c92a:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 800c92e:	2b43      	cmp	r3, #67	; 0x43
 800c930:	d1ec      	bne.n	800c90c <__cxa_end_catch+0x14>
 800c932:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800c936:	2b43      	cmp	r3, #67	; 0x43
 800c938:	d1e8      	bne.n	800c90c <__cxa_end_catch+0x14>
 800c93a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c93e:	2b2b      	cmp	r3, #43	; 0x2b
 800c940:	d1e4      	bne.n	800c90c <__cxa_end_catch+0x14>
 800c942:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 800c946:	2b2b      	cmp	r3, #43	; 0x2b
 800c948:	d1e0      	bne.n	800c90c <__cxa_end_catch+0x14>
 800c94a:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800c94e:	2b01      	cmp	r3, #1
 800c950:	d8dc      	bhi.n	800c90c <__cxa_end_catch+0x14>
 800c952:	6943      	ldr	r3, [r0, #20]
 800c954:	2b00      	cmp	r3, #0
 800c956:	db05      	blt.n	800c964 <__cxa_end_catch+0x6c>
 800c958:	3b01      	subs	r3, #1
 800c95a:	2b00      	cmp	r3, #0
 800c95c:	d007      	beq.n	800c96e <__cxa_end_catch+0x76>
 800c95e:	db0d      	blt.n	800c97c <__cxa_end_catch+0x84>
 800c960:	6143      	str	r3, [r0, #20]
 800c962:	bd08      	pop	{r3, pc}
 800c964:	3301      	adds	r3, #1
 800c966:	d1fb      	bne.n	800c960 <__cxa_end_catch+0x68>
 800c968:	6901      	ldr	r1, [r0, #16]
 800c96a:	6011      	str	r1, [r2, #0]
 800c96c:	e7f8      	b.n	800c960 <__cxa_end_catch+0x68>
 800c96e:	6903      	ldr	r3, [r0, #16]
 800c970:	6013      	str	r3, [r2, #0]
 800c972:	3020      	adds	r0, #32
 800c974:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c978:	f7fa bac0 	b.w	8006efc <_Unwind_DeleteException>
 800c97c:	f000 f81c 	bl	800c9b8 <_ZSt9terminatev>

0800c980 <__cxa_get_globals_fast>:
 800c980:	4800      	ldr	r0, [pc, #0]	; (800c984 <__cxa_get_globals_fast+0x4>)
 800c982:	4770      	bx	lr
 800c984:	2000265c 	.word	0x2000265c

0800c988 <__cxa_get_globals>:
 800c988:	4800      	ldr	r0, [pc, #0]	; (800c98c <__cxa_get_globals+0x4>)
 800c98a:	4770      	bx	lr
 800c98c:	2000265c 	.word	0x2000265c

0800c990 <_ZN10__cxxabiv111__terminateEPFvvE>:
 800c990:	b508      	push	{r3, lr}
 800c992:	4780      	blx	r0
 800c994:	f000 fc36 	bl	800d204 <abort>
 800c998:	f7ff ff70 	bl	800c87c <__cxa_begin_catch>
 800c99c:	f000 fc32 	bl	800d204 <abort>
 800c9a0:	460d      	mov	r5, r1
 800c9a2:	4604      	mov	r4, r0
 800c9a4:	f7ff ffa8 	bl	800c8f8 <__cxa_end_catch>
 800c9a8:	3501      	adds	r5, #1
 800c9aa:	d001      	beq.n	800c9b0 <_ZN10__cxxabiv111__terminateEPFvvE+0x20>
 800c9ac:	f000 f82c 	bl	800ca08 <__cxa_end_cleanup>
 800c9b0:	4620      	mov	r0, r4
 800c9b2:	f7ff fef7 	bl	800c7a4 <__cxa_call_unexpected>
 800c9b6:	bf00      	nop

0800c9b8 <_ZSt9terminatev>:
 800c9b8:	b508      	push	{r3, lr}
 800c9ba:	4b03      	ldr	r3, [pc, #12]	; (800c9c8 <_ZSt9terminatev+0x10>)
 800c9bc:	6818      	ldr	r0, [r3, #0]
 800c9be:	f3bf 8f5b 	dmb	ish
 800c9c2:	f7ff ffe5 	bl	800c990 <_ZN10__cxxabiv111__terminateEPFvvE>
 800c9c6:	bf00      	nop
 800c9c8:	20000800 	.word	0x20000800

0800c9cc <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 800c9cc:	b508      	push	{r3, lr}
 800c9ce:	4780      	blx	r0
 800c9d0:	f7ff fff2 	bl	800c9b8 <_ZSt9terminatev>

0800c9d4 <_ZSt10unexpectedv>:
 800c9d4:	b508      	push	{r3, lr}
 800c9d6:	4b03      	ldr	r3, [pc, #12]	; (800c9e4 <_ZSt10unexpectedv+0x10>)
 800c9d8:	6818      	ldr	r0, [r3, #0]
 800c9da:	f3bf 8f5b 	dmb	ish
 800c9de:	f7ff fff5 	bl	800c9cc <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800c9e2:	bf00      	nop
 800c9e4:	20000804 	.word	0x20000804

0800c9e8 <_ZSt13get_terminatev>:
 800c9e8:	4b02      	ldr	r3, [pc, #8]	; (800c9f4 <_ZSt13get_terminatev+0xc>)
 800c9ea:	6818      	ldr	r0, [r3, #0]
 800c9ec:	f3bf 8f5b 	dmb	ish
 800c9f0:	4770      	bx	lr
 800c9f2:	bf00      	nop
 800c9f4:	20000800 	.word	0x20000800

0800c9f8 <_ZSt14get_unexpectedv>:
 800c9f8:	4b02      	ldr	r3, [pc, #8]	; (800ca04 <_ZSt14get_unexpectedv+0xc>)
 800c9fa:	6818      	ldr	r0, [r3, #0]
 800c9fc:	f3bf 8f5b 	dmb	ish
 800ca00:	4770      	bx	lr
 800ca02:	bf00      	nop
 800ca04:	20000804 	.word	0x20000804

0800ca08 <__cxa_end_cleanup>:
 800ca08:	b41e      	push	{r1, r2, r3, r4}
 800ca0a:	f000 f893 	bl	800cb34 <__gnu_end_cleanup>
 800ca0e:	bc1e      	pop	{r1, r2, r3, r4}
 800ca10:	f7fa fe2e 	bl	8007670 <_Unwind_Resume>

0800ca14 <__cxa_type_match>:
 800ca14:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca16:	7802      	ldrb	r2, [r0, #0]
 800ca18:	2a47      	cmp	r2, #71	; 0x47
 800ca1a:	b083      	sub	sp, #12
 800ca1c:	460d      	mov	r5, r1
 800ca1e:	461f      	mov	r7, r3
 800ca20:	d019      	beq.n	800ca56 <__cxa_type_match+0x42>
 800ca22:	2300      	movs	r3, #0
 800ca24:	4c28      	ldr	r4, [pc, #160]	; (800cac8 <__cxa_type_match+0xb4>)
 800ca26:	9301      	str	r3, [sp, #4]
 800ca28:	6823      	ldr	r3, [r4, #0]
 800ca2a:	4620      	mov	r0, r4
 800ca2c:	689b      	ldr	r3, [r3, #8]
 800ca2e:	4798      	blx	r3
 800ca30:	b960      	cbnz	r0, 800ca4c <__cxa_type_match+0x38>
 800ca32:	2601      	movs	r6, #1
 800ca34:	682b      	ldr	r3, [r5, #0]
 800ca36:	4621      	mov	r1, r4
 800ca38:	4628      	mov	r0, r5
 800ca3a:	691c      	ldr	r4, [r3, #16]
 800ca3c:	aa01      	add	r2, sp, #4
 800ca3e:	2301      	movs	r3, #1
 800ca40:	47a0      	blx	r4
 800ca42:	bb60      	cbnz	r0, 800ca9e <__cxa_type_match+0x8a>
 800ca44:	4606      	mov	r6, r0
 800ca46:	4630      	mov	r0, r6
 800ca48:	b003      	add	sp, #12
 800ca4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca4c:	9b01      	ldr	r3, [sp, #4]
 800ca4e:	681b      	ldr	r3, [r3, #0]
 800ca50:	9301      	str	r3, [sp, #4]
 800ca52:	2602      	movs	r6, #2
 800ca54:	e7ee      	b.n	800ca34 <__cxa_type_match+0x20>
 800ca56:	7843      	ldrb	r3, [r0, #1]
 800ca58:	2b4e      	cmp	r3, #78	; 0x4e
 800ca5a:	d1e2      	bne.n	800ca22 <__cxa_type_match+0xe>
 800ca5c:	7883      	ldrb	r3, [r0, #2]
 800ca5e:	2b55      	cmp	r3, #85	; 0x55
 800ca60:	d1df      	bne.n	800ca22 <__cxa_type_match+0xe>
 800ca62:	78c3      	ldrb	r3, [r0, #3]
 800ca64:	2b43      	cmp	r3, #67	; 0x43
 800ca66:	d1dc      	bne.n	800ca22 <__cxa_type_match+0xe>
 800ca68:	7903      	ldrb	r3, [r0, #4]
 800ca6a:	2b46      	cmp	r3, #70	; 0x46
 800ca6c:	d020      	beq.n	800cab0 <__cxa_type_match+0x9c>
 800ca6e:	7903      	ldrb	r3, [r0, #4]
 800ca70:	2b43      	cmp	r3, #67	; 0x43
 800ca72:	d1d6      	bne.n	800ca22 <__cxa_type_match+0xe>
 800ca74:	7943      	ldrb	r3, [r0, #5]
 800ca76:	2b2b      	cmp	r3, #43	; 0x2b
 800ca78:	d1d3      	bne.n	800ca22 <__cxa_type_match+0xe>
 800ca7a:	7983      	ldrb	r3, [r0, #6]
 800ca7c:	2b2b      	cmp	r3, #43	; 0x2b
 800ca7e:	d1d0      	bne.n	800ca22 <__cxa_type_match+0xe>
 800ca80:	79c3      	ldrb	r3, [r0, #7]
 800ca82:	2b01      	cmp	r3, #1
 800ca84:	d8cd      	bhi.n	800ca22 <__cxa_type_match+0xe>
 800ca86:	f850 4c20 	ldr.w	r4, [r0, #-32]
 800ca8a:	d00d      	beq.n	800caa8 <__cxa_type_match+0x94>
 800ca8c:	3058      	adds	r0, #88	; 0x58
 800ca8e:	6823      	ldr	r3, [r4, #0]
 800ca90:	9001      	str	r0, [sp, #4]
 800ca92:	689b      	ldr	r3, [r3, #8]
 800ca94:	4620      	mov	r0, r4
 800ca96:	4798      	blx	r3
 800ca98:	2800      	cmp	r0, #0
 800ca9a:	d0ca      	beq.n	800ca32 <__cxa_type_match+0x1e>
 800ca9c:	e7d6      	b.n	800ca4c <__cxa_type_match+0x38>
 800ca9e:	9b01      	ldr	r3, [sp, #4]
 800caa0:	603b      	str	r3, [r7, #0]
 800caa2:	4630      	mov	r0, r6
 800caa4:	b003      	add	sp, #12
 800caa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800caa8:	4620      	mov	r0, r4
 800caaa:	f854 4c78 	ldr.w	r4, [r4, #-120]
 800caae:	e7ee      	b.n	800ca8e <__cxa_type_match+0x7a>
 800cab0:	7943      	ldrb	r3, [r0, #5]
 800cab2:	2b4f      	cmp	r3, #79	; 0x4f
 800cab4:	d1db      	bne.n	800ca6e <__cxa_type_match+0x5a>
 800cab6:	7983      	ldrb	r3, [r0, #6]
 800cab8:	2b52      	cmp	r3, #82	; 0x52
 800caba:	d1d8      	bne.n	800ca6e <__cxa_type_match+0x5a>
 800cabc:	79c3      	ldrb	r3, [r0, #7]
 800cabe:	2b00      	cmp	r3, #0
 800cac0:	d1d5      	bne.n	800ca6e <__cxa_type_match+0x5a>
 800cac2:	9301      	str	r3, [sp, #4]
 800cac4:	4c01      	ldr	r4, [pc, #4]	; (800cacc <__cxa_type_match+0xb8>)
 800cac6:	e7af      	b.n	800ca28 <__cxa_type_match+0x14>
 800cac8:	08012b34 	.word	0x08012b34
 800cacc:	08012b2c 	.word	0x08012b2c

0800cad0 <__cxa_begin_cleanup>:
 800cad0:	b510      	push	{r4, lr}
 800cad2:	4604      	mov	r4, r0
 800cad4:	f7ff ff58 	bl	800c988 <__cxa_get_globals>
 800cad8:	4623      	mov	r3, r4
 800cada:	f813 2920 	ldrb.w	r2, [r3], #-32
 800cade:	2a47      	cmp	r2, #71	; 0x47
 800cae0:	d004      	beq.n	800caec <__cxa_begin_cleanup+0x1c>
 800cae2:	6882      	ldr	r2, [r0, #8]
 800cae4:	bb22      	cbnz	r2, 800cb30 <__cxa_begin_cleanup+0x60>
 800cae6:	6083      	str	r3, [r0, #8]
 800cae8:	2001      	movs	r0, #1
 800caea:	bd10      	pop	{r4, pc}
 800caec:	7862      	ldrb	r2, [r4, #1]
 800caee:	2a4e      	cmp	r2, #78	; 0x4e
 800caf0:	d1f7      	bne.n	800cae2 <__cxa_begin_cleanup+0x12>
 800caf2:	78a2      	ldrb	r2, [r4, #2]
 800caf4:	2a55      	cmp	r2, #85	; 0x55
 800caf6:	d1f4      	bne.n	800cae2 <__cxa_begin_cleanup+0x12>
 800caf8:	78e2      	ldrb	r2, [r4, #3]
 800cafa:	2a43      	cmp	r2, #67	; 0x43
 800cafc:	d1f1      	bne.n	800cae2 <__cxa_begin_cleanup+0x12>
 800cafe:	7922      	ldrb	r2, [r4, #4]
 800cb00:	2a43      	cmp	r2, #67	; 0x43
 800cb02:	d1ee      	bne.n	800cae2 <__cxa_begin_cleanup+0x12>
 800cb04:	7962      	ldrb	r2, [r4, #5]
 800cb06:	2a2b      	cmp	r2, #43	; 0x2b
 800cb08:	d1eb      	bne.n	800cae2 <__cxa_begin_cleanup+0x12>
 800cb0a:	79a2      	ldrb	r2, [r4, #6]
 800cb0c:	2a2b      	cmp	r2, #43	; 0x2b
 800cb0e:	d1e8      	bne.n	800cae2 <__cxa_begin_cleanup+0x12>
 800cb10:	79e2      	ldrb	r2, [r4, #7]
 800cb12:	2a01      	cmp	r2, #1
 800cb14:	d8e5      	bhi.n	800cae2 <__cxa_begin_cleanup+0x12>
 800cb16:	f854 2c04 	ldr.w	r2, [r4, #-4]
 800cb1a:	3201      	adds	r2, #1
 800cb1c:	2a01      	cmp	r2, #1
 800cb1e:	f844 2c04 	str.w	r2, [r4, #-4]
 800cb22:	d1e1      	bne.n	800cae8 <__cxa_begin_cleanup+0x18>
 800cb24:	6882      	ldr	r2, [r0, #8]
 800cb26:	f844 2c08 	str.w	r2, [r4, #-8]
 800cb2a:	6083      	str	r3, [r0, #8]
 800cb2c:	2001      	movs	r0, #1
 800cb2e:	bd10      	pop	{r4, pc}
 800cb30:	f7ff ff42 	bl	800c9b8 <_ZSt9terminatev>

0800cb34 <__gnu_end_cleanup>:
 800cb34:	b508      	push	{r3, lr}
 800cb36:	f7ff ff27 	bl	800c988 <__cxa_get_globals>
 800cb3a:	6883      	ldr	r3, [r0, #8]
 800cb3c:	b383      	cbz	r3, 800cba0 <__gnu_end_cleanup+0x6c>
 800cb3e:	f893 2020 	ldrb.w	r2, [r3, #32]
 800cb42:	2a47      	cmp	r2, #71	; 0x47
 800cb44:	d004      	beq.n	800cb50 <__gnu_end_cleanup+0x1c>
 800cb46:	2200      	movs	r2, #0
 800cb48:	6082      	str	r2, [r0, #8]
 800cb4a:	f103 0020 	add.w	r0, r3, #32
 800cb4e:	bd08      	pop	{r3, pc}
 800cb50:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
 800cb54:	2a4e      	cmp	r2, #78	; 0x4e
 800cb56:	d1f6      	bne.n	800cb46 <__gnu_end_cleanup+0x12>
 800cb58:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 800cb5c:	2a55      	cmp	r2, #85	; 0x55
 800cb5e:	d1f2      	bne.n	800cb46 <__gnu_end_cleanup+0x12>
 800cb60:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
 800cb64:	2a43      	cmp	r2, #67	; 0x43
 800cb66:	d1ee      	bne.n	800cb46 <__gnu_end_cleanup+0x12>
 800cb68:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 800cb6c:	2a43      	cmp	r2, #67	; 0x43
 800cb6e:	d1ea      	bne.n	800cb46 <__gnu_end_cleanup+0x12>
 800cb70:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 800cb74:	2a2b      	cmp	r2, #43	; 0x2b
 800cb76:	d1e6      	bne.n	800cb46 <__gnu_end_cleanup+0x12>
 800cb78:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
 800cb7c:	2a2b      	cmp	r2, #43	; 0x2b
 800cb7e:	d1e2      	bne.n	800cb46 <__gnu_end_cleanup+0x12>
 800cb80:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800cb84:	2a01      	cmp	r2, #1
 800cb86:	d8de      	bhi.n	800cb46 <__gnu_end_cleanup+0x12>
 800cb88:	69da      	ldr	r2, [r3, #28]
 800cb8a:	3a01      	subs	r2, #1
 800cb8c:	61da      	str	r2, [r3, #28]
 800cb8e:	2a00      	cmp	r2, #0
 800cb90:	d1db      	bne.n	800cb4a <__gnu_end_cleanup+0x16>
 800cb92:	699a      	ldr	r2, [r3, #24]
 800cb94:	6082      	str	r2, [r0, #8]
 800cb96:	2200      	movs	r2, #0
 800cb98:	619a      	str	r2, [r3, #24]
 800cb9a:	f103 0020 	add.w	r0, r3, #32
 800cb9e:	bd08      	pop	{r3, pc}
 800cba0:	f7ff ff0a 	bl	800c9b8 <_ZSt9terminatev>

0800cba4 <__aeabi_atexit>:
 800cba4:	460b      	mov	r3, r1
 800cba6:	4601      	mov	r1, r0
 800cba8:	4618      	mov	r0, r3
 800cbaa:	f000 bb33 	b.w	800d214 <__cxa_atexit>
 800cbae:	bf00      	nop

0800cbb0 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block>:
 800cbb0:	2801      	cmp	r0, #1
 800cbb2:	b510      	push	{r4, lr}
 800cbb4:	d81a      	bhi.n	800cbec <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3c>
 800cbb6:	f3bf 8f5b 	dmb	ish
 800cbba:	f1a1 0328 	sub.w	r3, r1, #40	; 0x28
 800cbbe:	e853 2f00 	ldrex	r2, [r3]
 800cbc2:	3a01      	subs	r2, #1
 800cbc4:	e843 2000 	strex	r0, r2, [r3]
 800cbc8:	2800      	cmp	r0, #0
 800cbca:	d1f8      	bne.n	800cbbe <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0xe>
 800cbcc:	f3bf 8f5b 	dmb	ish
 800cbd0:	b95a      	cbnz	r2, 800cbea <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3a>
 800cbd2:	f851 3c1c 	ldr.w	r3, [r1, #-28]
 800cbd6:	f101 0458 	add.w	r4, r1, #88	; 0x58
 800cbda:	b10b      	cbz	r3, 800cbe0 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x30>
 800cbdc:	4620      	mov	r0, r4
 800cbde:	4798      	blx	r3
 800cbe0:	4620      	mov	r0, r4
 800cbe2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cbe6:	f000 b923 	b.w	800ce30 <__cxa_free_exception>
 800cbea:	bd10      	pop	{r4, pc}
 800cbec:	f851 0c14 	ldr.w	r0, [r1, #-20]
 800cbf0:	f7ff fece 	bl	800c990 <_ZN10__cxxabiv111__terminateEPFvvE>

0800cbf4 <__cxa_init_primary_exception>:
 800cbf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cbf6:	2500      	movs	r5, #0
 800cbf8:	e940 121e 	strd	r1, r2, [r0, #-120]	; 0x78
 800cbfc:	f840 5c80 	str.w	r5, [r0, #-128]
 800cc00:	4604      	mov	r4, r0
 800cc02:	f7ff fef9 	bl	800c9f8 <_ZSt14get_unexpectedv>
 800cc06:	f844 0c70 	str.w	r0, [r4, #-112]
 800cc0a:	f7ff feed 	bl	800c9e8 <_ZSt13get_terminatev>
 800cc0e:	2347      	movs	r3, #71	; 0x47
 800cc10:	2243      	movs	r2, #67	; 0x43
 800cc12:	274e      	movs	r7, #78	; 0x4e
 800cc14:	2655      	movs	r6, #85	; 0x55
 800cc16:	490c      	ldr	r1, [pc, #48]	; (800cc48 <__cxa_init_primary_exception+0x54>)
 800cc18:	f804 3c58 	strb.w	r3, [r4, #-88]
 800cc1c:	232b      	movs	r3, #43	; 0x2b
 800cc1e:	f804 5c51 	strb.w	r5, [r4, #-81]
 800cc22:	f804 7c57 	strb.w	r7, [r4, #-87]
 800cc26:	f804 6c56 	strb.w	r6, [r4, #-86]
 800cc2a:	f844 1c50 	str.w	r1, [r4, #-80]
 800cc2e:	f804 2c55 	strb.w	r2, [r4, #-85]
 800cc32:	f804 2c54 	strb.w	r2, [r4, #-84]
 800cc36:	f804 3c53 	strb.w	r3, [r4, #-83]
 800cc3a:	f804 3c52 	strb.w	r3, [r4, #-82]
 800cc3e:	f844 0c6c 	str.w	r0, [r4, #-108]
 800cc42:	f1a4 0080 	sub.w	r0, r4, #128	; 0x80
 800cc46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cc48:	0800cbb1 	.word	0x0800cbb1

0800cc4c <__cxa_throw>:
 800cc4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc4e:	4605      	mov	r5, r0
 800cc50:	460e      	mov	r6, r1
 800cc52:	4617      	mov	r7, r2
 800cc54:	f7ff fe98 	bl	800c988 <__cxa_get_globals>
 800cc58:	6843      	ldr	r3, [r0, #4]
 800cc5a:	4604      	mov	r4, r0
 800cc5c:	3301      	adds	r3, #1
 800cc5e:	463a      	mov	r2, r7
 800cc60:	4631      	mov	r1, r6
 800cc62:	6063      	str	r3, [r4, #4]
 800cc64:	4628      	mov	r0, r5
 800cc66:	f7ff ffc5 	bl	800cbf4 <__cxa_init_primary_exception>
 800cc6a:	4604      	mov	r4, r0
 800cc6c:	2301      	movs	r3, #1
 800cc6e:	f844 3b28 	str.w	r3, [r4], #40
 800cc72:	4620      	mov	r0, r4
 800cc74:	f7fa fcea 	bl	800764c <_Unwind_RaiseException>
 800cc78:	4620      	mov	r0, r4
 800cc7a:	f7ff fdff 	bl	800c87c <__cxa_begin_catch>
 800cc7e:	f7ff fe9b 	bl	800c9b8 <_ZSt9terminatev>
 800cc82:	bf00      	nop

0800cc84 <__cxa_rethrow>:
 800cc84:	b510      	push	{r4, lr}
 800cc86:	f7ff fe7f 	bl	800c988 <__cxa_get_globals>
 800cc8a:	e9d0 4200 	ldrd	r4, r2, [r0]
 800cc8e:	3201      	adds	r2, #1
 800cc90:	6042      	str	r2, [r0, #4]
 800cc92:	b164      	cbz	r4, 800ccae <__cxa_rethrow+0x2a>
 800cc94:	f894 2020 	ldrb.w	r2, [r4, #32]
 800cc98:	2a47      	cmp	r2, #71	; 0x47
 800cc9a:	d00a      	beq.n	800ccb2 <__cxa_rethrow+0x2e>
 800cc9c:	2200      	movs	r2, #0
 800cc9e:	6002      	str	r2, [r0, #0]
 800cca0:	3420      	adds	r4, #32
 800cca2:	4620      	mov	r0, r4
 800cca4:	f7fa fcf6 	bl	8007694 <_Unwind_Resume_or_Rethrow>
 800cca8:	4620      	mov	r0, r4
 800ccaa:	f7ff fde7 	bl	800c87c <__cxa_begin_catch>
 800ccae:	f7ff fe83 	bl	800c9b8 <_ZSt9terminatev>
 800ccb2:	f894 2021 	ldrb.w	r2, [r4, #33]	; 0x21
 800ccb6:	2a4e      	cmp	r2, #78	; 0x4e
 800ccb8:	d1f0      	bne.n	800cc9c <__cxa_rethrow+0x18>
 800ccba:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
 800ccbe:	2a55      	cmp	r2, #85	; 0x55
 800ccc0:	d1ec      	bne.n	800cc9c <__cxa_rethrow+0x18>
 800ccc2:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
 800ccc6:	2a43      	cmp	r2, #67	; 0x43
 800ccc8:	d1e8      	bne.n	800cc9c <__cxa_rethrow+0x18>
 800ccca:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800ccce:	2a43      	cmp	r2, #67	; 0x43
 800ccd0:	d1e4      	bne.n	800cc9c <__cxa_rethrow+0x18>
 800ccd2:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 800ccd6:	2a2b      	cmp	r2, #43	; 0x2b
 800ccd8:	d1e0      	bne.n	800cc9c <__cxa_rethrow+0x18>
 800ccda:	f894 2026 	ldrb.w	r2, [r4, #38]	; 0x26
 800ccde:	2a2b      	cmp	r2, #43	; 0x2b
 800cce0:	d1dc      	bne.n	800cc9c <__cxa_rethrow+0x18>
 800cce2:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 800cce6:	2a01      	cmp	r2, #1
 800cce8:	d8d8      	bhi.n	800cc9c <__cxa_rethrow+0x18>
 800ccea:	6962      	ldr	r2, [r4, #20]
 800ccec:	4252      	negs	r2, r2
 800ccee:	6162      	str	r2, [r4, #20]
 800ccf0:	e7d6      	b.n	800cca0 <__cxa_rethrow+0x1c>
 800ccf2:	bf00      	nop

0800ccf4 <_ZNSt13bad_exceptionD1Ev>:
 800ccf4:	4770      	bx	lr
 800ccf6:	bf00      	nop

0800ccf8 <_ZGTtNKSt13bad_exception4whatEv>:
 800ccf8:	4800      	ldr	r0, [pc, #0]	; (800ccfc <_ZGTtNKSt13bad_exception4whatEv+0x4>)
 800ccfa:	4770      	bx	lr
 800ccfc:	08012b18 	.word	0x08012b18

0800cd00 <_ZNSt13bad_exceptionD0Ev>:
 800cd00:	b510      	push	{r4, lr}
 800cd02:	2104      	movs	r1, #4
 800cd04:	4604      	mov	r4, r0
 800cd06:	f000 f93d 	bl	800cf84 <_ZdlPvj>
 800cd0a:	4620      	mov	r0, r4
 800cd0c:	bd10      	pop	{r4, pc}
 800cd0e:	bf00      	nop

0800cd10 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
 800cd10:	b4f0      	push	{r4, r5, r6, r7}
 800cd12:	4c21      	ldr	r4, [pc, #132]	; (800cd98 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x88>)
 800cd14:	6862      	ldr	r2, [r4, #4]
 800cd16:	f1a0 0608 	sub.w	r6, r0, #8
 800cd1a:	b31a      	cbz	r2, 800cd64 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x54>
 800cd1c:	f850 7c08 	ldr.w	r7, [r0, #-8]
 800cd20:	19f5      	adds	r5, r6, r7
 800cd22:	42aa      	cmp	r2, r5
 800cd24:	d81e      	bhi.n	800cd64 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x54>
 800cd26:	6851      	ldr	r1, [r2, #4]
 800cd28:	d029      	beq.n	800cd7e <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x6e>
 800cd2a:	2900      	cmp	r1, #0
 800cd2c:	d030      	beq.n	800cd90 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x80>
 800cd2e:	428d      	cmp	r5, r1
 800cd30:	d303      	bcc.n	800cd3a <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x2a>
 800cd32:	e02d      	b.n	800cd90 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x80>
 800cd34:	429d      	cmp	r5, r3
 800cd36:	d205      	bcs.n	800cd44 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x34>
 800cd38:	4619      	mov	r1, r3
 800cd3a:	684b      	ldr	r3, [r1, #4]
 800cd3c:	1d14      	adds	r4, r2, #4
 800cd3e:	460a      	mov	r2, r1
 800cd40:	2b00      	cmp	r3, #0
 800cd42:	d1f7      	bne.n	800cd34 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x24>
 800cd44:	429d      	cmp	r5, r3
 800cd46:	d015      	beq.n	800cd74 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x64>
 800cd48:	6823      	ldr	r3, [r4, #0]
 800cd4a:	681a      	ldr	r2, [r3, #0]
 800cd4c:	1899      	adds	r1, r3, r2
 800cd4e:	428e      	cmp	r6, r1
 800cd50:	d00d      	beq.n	800cd6e <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x5e>
 800cd52:	685b      	ldr	r3, [r3, #4]
 800cd54:	f840 3c04 	str.w	r3, [r0, #-4]
 800cd58:	6823      	ldr	r3, [r4, #0]
 800cd5a:	f840 7c08 	str.w	r7, [r0, #-8]
 800cd5e:	605e      	str	r6, [r3, #4]
 800cd60:	bcf0      	pop	{r4, r5, r6, r7}
 800cd62:	4770      	bx	lr
 800cd64:	f840 2c04 	str.w	r2, [r0, #-4]
 800cd68:	6066      	str	r6, [r4, #4]
 800cd6a:	bcf0      	pop	{r4, r5, r6, r7}
 800cd6c:	4770      	bx	lr
 800cd6e:	4417      	add	r7, r2
 800cd70:	601f      	str	r7, [r3, #0]
 800cd72:	e7fa      	b.n	800cd6a <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x5a>
 800cd74:	e9d5 3200 	ldrd	r3, r2, [r5]
 800cd78:	604a      	str	r2, [r1, #4]
 800cd7a:	441f      	add	r7, r3
 800cd7c:	e7e4      	b.n	800cd48 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x38>
 800cd7e:	6813      	ldr	r3, [r2, #0]
 800cd80:	f840 1c04 	str.w	r1, [r0, #-4]
 800cd84:	441f      	add	r7, r3
 800cd86:	f840 7c08 	str.w	r7, [r0, #-8]
 800cd8a:	6066      	str	r6, [r4, #4]
 800cd8c:	bcf0      	pop	{r4, r5, r6, r7}
 800cd8e:	4770      	bx	lr
 800cd90:	460b      	mov	r3, r1
 800cd92:	3404      	adds	r4, #4
 800cd94:	4611      	mov	r1, r2
 800cd96:	e7d5      	b.n	800cd44 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x34>
 800cd98:	20002668 	.word	0x20002668

0800cd9c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
 800cd9c:	b430      	push	{r4, r5}
 800cd9e:	4c17      	ldr	r4, [pc, #92]	; (800cdfc <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x60>)
 800cda0:	f100 0108 	add.w	r1, r0, #8
 800cda4:	6863      	ldr	r3, [r4, #4]
 800cda6:	2908      	cmp	r1, #8
 800cda8:	bf38      	it	cc
 800cdaa:	2108      	movcc	r1, #8
 800cdac:	b303      	cbz	r3, 800cdf0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x54>
 800cdae:	3107      	adds	r1, #7
 800cdb0:	681a      	ldr	r2, [r3, #0]
 800cdb2:	f021 0107 	bic.w	r1, r1, #7
 800cdb6:	4291      	cmp	r1, r2
 800cdb8:	d804      	bhi.n	800cdc4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x28>
 800cdba:	e01b      	b.n	800cdf4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x58>
 800cdbc:	6802      	ldr	r2, [r0, #0]
 800cdbe:	4291      	cmp	r1, r2
 800cdc0:	d905      	bls.n	800cdce <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x32>
 800cdc2:	4603      	mov	r3, r0
 800cdc4:	6858      	ldr	r0, [r3, #4]
 800cdc6:	2800      	cmp	r0, #0
 800cdc8:	d1f8      	bne.n	800cdbc <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x20>
 800cdca:	bc30      	pop	{r4, r5}
 800cdcc:	4770      	bx	lr
 800cdce:	3304      	adds	r3, #4
 800cdd0:	1a54      	subs	r4, r2, r1
 800cdd2:	2c07      	cmp	r4, #7
 800cdd4:	6845      	ldr	r5, [r0, #4]
 800cdd6:	d908      	bls.n	800cdea <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x4e>
 800cdd8:	1842      	adds	r2, r0, r1
 800cdda:	6055      	str	r5, [r2, #4]
 800cddc:	5044      	str	r4, [r0, r1]
 800cdde:	6818      	ldr	r0, [r3, #0]
 800cde0:	6001      	str	r1, [r0, #0]
 800cde2:	601a      	str	r2, [r3, #0]
 800cde4:	3008      	adds	r0, #8
 800cde6:	bc30      	pop	{r4, r5}
 800cde8:	4770      	bx	lr
 800cdea:	6002      	str	r2, [r0, #0]
 800cdec:	601d      	str	r5, [r3, #0]
 800cdee:	e7f9      	b.n	800cde4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x48>
 800cdf0:	4618      	mov	r0, r3
 800cdf2:	e7ea      	b.n	800cdca <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x2e>
 800cdf4:	4618      	mov	r0, r3
 800cdf6:	1d23      	adds	r3, r4, #4
 800cdf8:	e7ea      	b.n	800cdd0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x34>
 800cdfa:	bf00      	nop
 800cdfc:	20002668 	.word	0x20002668

0800ce00 <__cxa_allocate_exception>:
 800ce00:	b510      	push	{r4, lr}
 800ce02:	f100 0480 	add.w	r4, r0, #128	; 0x80
 800ce06:	4620      	mov	r0, r4
 800ce08:	f000 fc6e 	bl	800d6e8 <malloc>
 800ce0c:	b138      	cbz	r0, 800ce1e <__cxa_allocate_exception+0x1e>
 800ce0e:	4603      	mov	r3, r0
 800ce10:	2280      	movs	r2, #128	; 0x80
 800ce12:	2100      	movs	r1, #0
 800ce14:	4618      	mov	r0, r3
 800ce16:	f000 ffc7 	bl	800dda8 <memset>
 800ce1a:	3080      	adds	r0, #128	; 0x80
 800ce1c:	bd10      	pop	{r4, pc}
 800ce1e:	4620      	mov	r0, r4
 800ce20:	f7ff ffbc 	bl	800cd9c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
 800ce24:	4603      	mov	r3, r0
 800ce26:	2800      	cmp	r0, #0
 800ce28:	d1f2      	bne.n	800ce10 <__cxa_allocate_exception+0x10>
 800ce2a:	f7ff fdc5 	bl	800c9b8 <_ZSt9terminatev>
 800ce2e:	bf00      	nop

0800ce30 <__cxa_free_exception>:
 800ce30:	4a06      	ldr	r2, [pc, #24]	; (800ce4c <__cxa_free_exception+0x1c>)
 800ce32:	6893      	ldr	r3, [r2, #8]
 800ce34:	3880      	subs	r0, #128	; 0x80
 800ce36:	4298      	cmp	r0, r3
 800ce38:	d905      	bls.n	800ce46 <__cxa_free_exception+0x16>
 800ce3a:	68d2      	ldr	r2, [r2, #12]
 800ce3c:	4413      	add	r3, r2
 800ce3e:	4298      	cmp	r0, r3
 800ce40:	d201      	bcs.n	800ce46 <__cxa_free_exception+0x16>
 800ce42:	f7ff bf65 	b.w	800cd10 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
 800ce46:	f000 bc57 	b.w	800d6f8 <free>
 800ce4a:	bf00      	nop
 800ce4c:	20002668 	.word	0x20002668

0800ce50 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
 800ce50:	b538      	push	{r3, r4, r5, lr}
 800ce52:	4c08      	ldr	r4, [pc, #32]	; (800ce74 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x24>)
 800ce54:	f44f 651e 	mov.w	r5, #2528	; 0x9e0
 800ce58:	4628      	mov	r0, r5
 800ce5a:	60e5      	str	r5, [r4, #12]
 800ce5c:	f000 fc44 	bl	800d6e8 <malloc>
 800ce60:	60a0      	str	r0, [r4, #8]
 800ce62:	b120      	cbz	r0, 800ce6e <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x1e>
 800ce64:	2300      	movs	r3, #0
 800ce66:	6060      	str	r0, [r4, #4]
 800ce68:	e9c0 5300 	strd	r5, r3, [r0]
 800ce6c:	bd38      	pop	{r3, r4, r5, pc}
 800ce6e:	60e0      	str	r0, [r4, #12]
 800ce70:	6060      	str	r0, [r4, #4]
 800ce72:	bd38      	pop	{r3, r4, r5, pc}
 800ce74:	20002668 	.word	0x20002668

0800ce78 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv>:
 800ce78:	b570      	push	{r4, r5, r6, lr}
 800ce7a:	4b3b      	ldr	r3, [pc, #236]	; (800cf68 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf0>)
 800ce7c:	781a      	ldrb	r2, [r3, #0]
 800ce7e:	b082      	sub	sp, #8
 800ce80:	2a00      	cmp	r2, #0
 800ce82:	d141      	bne.n	800cf08 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x90>
 800ce84:	2401      	movs	r4, #1
 800ce86:	701c      	strb	r4, [r3, #0]
 800ce88:	f000 f9a6 	bl	800d1d8 <__cxa_current_exception_type>
 800ce8c:	2800      	cmp	r0, #0
 800ce8e:	d031      	beq.n	800cef4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x7c>
 800ce90:	6844      	ldr	r4, [r0, #4]
 800ce92:	4d36      	ldr	r5, [pc, #216]	; (800cf6c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>)
 800ce94:	7823      	ldrb	r3, [r4, #0]
 800ce96:	2b2a      	cmp	r3, #42	; 0x2a
 800ce98:	bf08      	it	eq
 800ce9a:	3401      	addeq	r4, #1
 800ce9c:	2200      	movs	r2, #0
 800ce9e:	4611      	mov	r1, r2
 800cea0:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 800cea4:	ab01      	add	r3, sp, #4
 800cea6:	4620      	mov	r0, r4
 800cea8:	9601      	str	r6, [sp, #4]
 800ceaa:	f7f9 fdef 	bl	8006a8c <__cxa_demangle>
 800ceae:	682b      	ldr	r3, [r5, #0]
 800ceb0:	4606      	mov	r6, r0
 800ceb2:	68db      	ldr	r3, [r3, #12]
 800ceb4:	482e      	ldr	r0, [pc, #184]	; (800cf70 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800ceb6:	2230      	movs	r2, #48	; 0x30
 800ceb8:	2101      	movs	r1, #1
 800ceba:	f000 fbff 	bl	800d6bc <fwrite>
 800cebe:	9b01      	ldr	r3, [sp, #4]
 800cec0:	b193      	cbz	r3, 800cee8 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x70>
 800cec2:	682b      	ldr	r3, [r5, #0]
 800cec4:	4620      	mov	r0, r4
 800cec6:	68d9      	ldr	r1, [r3, #12]
 800cec8:	f000 fa18 	bl	800d2fc <fputs>
 800cecc:	682b      	ldr	r3, [r5, #0]
 800cece:	4829      	ldr	r0, [pc, #164]	; (800cf74 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 800ced0:	68db      	ldr	r3, [r3, #12]
 800ced2:	2202      	movs	r2, #2
 800ced4:	2101      	movs	r1, #1
 800ced6:	f000 fbf1 	bl	800d6bc <fwrite>
 800ceda:	9b01      	ldr	r3, [sp, #4]
 800cedc:	b913      	cbnz	r3, 800cee4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x6c>
 800cede:	4630      	mov	r0, r6
 800cee0:	f000 fc0a 	bl	800d6f8 <free>
 800cee4:	f7ff fece 	bl	800cc84 <__cxa_rethrow>
 800cee8:	682b      	ldr	r3, [r5, #0]
 800ceea:	4630      	mov	r0, r6
 800ceec:	68d9      	ldr	r1, [r3, #12]
 800ceee:	f000 fa05 	bl	800d2fc <fputs>
 800cef2:	e7eb      	b.n	800cecc <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x54>
 800cef4:	4b1d      	ldr	r3, [pc, #116]	; (800cf6c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>)
 800cef6:	4820      	ldr	r0, [pc, #128]	; (800cf78 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x100>)
 800cef8:	681b      	ldr	r3, [r3, #0]
 800cefa:	4621      	mov	r1, r4
 800cefc:	68db      	ldr	r3, [r3, #12]
 800cefe:	222d      	movs	r2, #45	; 0x2d
 800cf00:	f000 fbdc 	bl	800d6bc <fwrite>
 800cf04:	f000 f97e 	bl	800d204 <abort>
 800cf08:	4b18      	ldr	r3, [pc, #96]	; (800cf6c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>)
 800cf0a:	481c      	ldr	r0, [pc, #112]	; (800cf7c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x104>)
 800cf0c:	681b      	ldr	r3, [r3, #0]
 800cf0e:	221d      	movs	r2, #29
 800cf10:	68db      	ldr	r3, [r3, #12]
 800cf12:	2101      	movs	r1, #1
 800cf14:	f000 fbd2 	bl	800d6bc <fwrite>
 800cf18:	f000 f974 	bl	800d204 <abort>
 800cf1c:	2901      	cmp	r1, #1
 800cf1e:	460c      	mov	r4, r1
 800cf20:	d119      	bne.n	800cf56 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xde>
 800cf22:	f7ff fcab 	bl	800c87c <__cxa_begin_catch>
 800cf26:	6803      	ldr	r3, [r0, #0]
 800cf28:	689b      	ldr	r3, [r3, #8]
 800cf2a:	4798      	blx	r3
 800cf2c:	682b      	ldr	r3, [r5, #0]
 800cf2e:	4606      	mov	r6, r0
 800cf30:	68db      	ldr	r3, [r3, #12]
 800cf32:	4813      	ldr	r0, [pc, #76]	; (800cf80 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x108>)
 800cf34:	4621      	mov	r1, r4
 800cf36:	220b      	movs	r2, #11
 800cf38:	f000 fbc0 	bl	800d6bc <fwrite>
 800cf3c:	682b      	ldr	r3, [r5, #0]
 800cf3e:	4630      	mov	r0, r6
 800cf40:	68d9      	ldr	r1, [r3, #12]
 800cf42:	f000 f9db 	bl	800d2fc <fputs>
 800cf46:	682b      	ldr	r3, [r5, #0]
 800cf48:	200a      	movs	r0, #10
 800cf4a:	68d9      	ldr	r1, [r3, #12]
 800cf4c:	f000 f968 	bl	800d220 <fputc>
 800cf50:	f7ff fcd2 	bl	800c8f8 <__cxa_end_catch>
 800cf54:	e7d6      	b.n	800cf04 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x8c>
 800cf56:	f7ff fc91 	bl	800c87c <__cxa_begin_catch>
 800cf5a:	f7ff fccd 	bl	800c8f8 <__cxa_end_catch>
 800cf5e:	e7d1      	b.n	800cf04 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x8c>
 800cf60:	f7ff fcca 	bl	800c8f8 <__cxa_end_catch>
 800cf64:	f7ff fd50 	bl	800ca08 <__cxa_end_cleanup>
 800cf68:	20002678 	.word	0x20002678
 800cf6c:	20000808 	.word	0x20000808
 800cf70:	08012bec 	.word	0x08012bec
 800cf74:	08012c20 	.word	0x08012c20
 800cf78:	08012c24 	.word	0x08012c24
 800cf7c:	08012bcc 	.word	0x08012bcc
 800cf80:	08012c54 	.word	0x08012c54

0800cf84 <_ZdlPvj>:
 800cf84:	f000 b936 	b.w	800d1f4 <_ZdlPv>

0800cf88 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 800cf88:	b510      	push	{r4, lr}
 800cf8a:	4b03      	ldr	r3, [pc, #12]	; (800cf98 <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x10>)
 800cf8c:	6003      	str	r3, [r0, #0]
 800cf8e:	4604      	mov	r4, r0
 800cf90:	f000 f8c4 	bl	800d11c <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800cf94:	4620      	mov	r0, r4
 800cf96:	bd10      	pop	{r4, pc}
 800cf98:	08013500 	.word	0x08013500

0800cf9c <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 800cf9c:	b510      	push	{r4, lr}
 800cf9e:	4b05      	ldr	r3, [pc, #20]	; (800cfb4 <_ZN10__cxxabiv120__si_class_type_infoD0Ev+0x18>)
 800cfa0:	6003      	str	r3, [r0, #0]
 800cfa2:	4604      	mov	r4, r0
 800cfa4:	f000 f8ba 	bl	800d11c <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800cfa8:	4620      	mov	r0, r4
 800cfaa:	210c      	movs	r1, #12
 800cfac:	f7ff ffea 	bl	800cf84 <_ZdlPvj>
 800cfb0:	4620      	mov	r0, r4
 800cfb2:	bd10      	pop	{r4, pc}
 800cfb4:	08013500 	.word	0x08013500

0800cfb8 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 800cfb8:	b570      	push	{r4, r5, r6, lr}
 800cfba:	b082      	sub	sp, #8
 800cfbc:	460e      	mov	r6, r1
 800cfbe:	9c06      	ldr	r4, [sp, #24]
 800cfc0:	4294      	cmp	r4, r2
 800cfc2:	4605      	mov	r5, r0
 800cfc4:	d009      	beq.n	800cfda <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x22>
 800cfc6:	68a8      	ldr	r0, [r5, #8]
 800cfc8:	6805      	ldr	r5, [r0, #0]
 800cfca:	9406      	str	r4, [sp, #24]
 800cfcc:	6a2c      	ldr	r4, [r5, #32]
 800cfce:	4631      	mov	r1, r6
 800cfd0:	46a4      	mov	ip, r4
 800cfd2:	b002      	add	sp, #8
 800cfd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cfd8:	4760      	bx	ip
 800cfda:	4619      	mov	r1, r3
 800cfdc:	9201      	str	r2, [sp, #4]
 800cfde:	9300      	str	r3, [sp, #0]
 800cfe0:	f000 f864 	bl	800d0ac <_ZNKSt9type_infoeqERKS_>
 800cfe4:	e9dd 3200 	ldrd	r3, r2, [sp]
 800cfe8:	2800      	cmp	r0, #0
 800cfea:	d0ec      	beq.n	800cfc6 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xe>
 800cfec:	2006      	movs	r0, #6
 800cfee:	b002      	add	sp, #8
 800cff0:	bd70      	pop	{r4, r5, r6, pc}
 800cff2:	bf00      	nop

0800cff4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 800cff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cff8:	4688      	mov	r8, r1
 800cffa:	b081      	sub	sp, #4
 800cffc:	4619      	mov	r1, r3
 800cffe:	461d      	mov	r5, r3
 800d000:	4691      	mov	r9, r2
 800d002:	4683      	mov	fp, r0
 800d004:	e9dd 4a0a 	ldrd	r4, sl, [sp, #40]	; 0x28
 800d008:	e9dd 760c 	ldrd	r7, r6, [sp, #48]	; 0x30
 800d00c:	f000 f84e 	bl	800d0ac <_ZNKSt9type_infoeqERKS_>
 800d010:	b998      	cbnz	r0, 800d03a <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x46>
 800d012:	42bc      	cmp	r4, r7
 800d014:	d027      	beq.n	800d066 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x72>
 800d016:	f8db 0008 	ldr.w	r0, [fp, #8]
 800d01a:	f8d0 c000 	ldr.w	ip, [r0]
 800d01e:	e9cd 760c 	strd	r7, r6, [sp, #48]	; 0x30
 800d022:	e9cd 4a0a 	strd	r4, sl, [sp, #40]	; 0x28
 800d026:	f8dc 401c 	ldr.w	r4, [ip, #28]
 800d02a:	462b      	mov	r3, r5
 800d02c:	464a      	mov	r2, r9
 800d02e:	4641      	mov	r1, r8
 800d030:	46a4      	mov	ip, r4
 800d032:	b001      	add	sp, #4
 800d034:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d038:	4760      	bx	ip
 800d03a:	f1b8 0f00 	cmp.w	r8, #0
 800d03e:	6034      	str	r4, [r6, #0]
 800d040:	f886 9004 	strb.w	r9, [r6, #4]
 800d044:	db09      	blt.n	800d05a <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x66>
 800d046:	4444      	add	r4, r8
 800d048:	42a7      	cmp	r7, r4
 800d04a:	bf0c      	ite	eq
 800d04c:	2406      	moveq	r4, #6
 800d04e:	2401      	movne	r4, #1
 800d050:	71b4      	strb	r4, [r6, #6]
 800d052:	2000      	movs	r0, #0
 800d054:	b001      	add	sp, #4
 800d056:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d05a:	f118 0f02 	cmn.w	r8, #2
 800d05e:	d1f8      	bne.n	800d052 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5e>
 800d060:	2301      	movs	r3, #1
 800d062:	71b3      	strb	r3, [r6, #6]
 800d064:	e7f5      	b.n	800d052 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5e>
 800d066:	4651      	mov	r1, sl
 800d068:	4658      	mov	r0, fp
 800d06a:	f000 f81f 	bl	800d0ac <_ZNKSt9type_infoeqERKS_>
 800d06e:	2800      	cmp	r0, #0
 800d070:	d0d1      	beq.n	800d016 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x22>
 800d072:	f886 9005 	strb.w	r9, [r6, #5]
 800d076:	e7ec      	b.n	800d052 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5e>

0800d078 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 800d078:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d07c:	4607      	mov	r7, r0
 800d07e:	460c      	mov	r4, r1
 800d080:	4615      	mov	r5, r2
 800d082:	461e      	mov	r6, r3
 800d084:	f000 f884 	bl	800d190 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 800d088:	b948      	cbnz	r0, 800d09e <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x26>
 800d08a:	68b8      	ldr	r0, [r7, #8]
 800d08c:	6807      	ldr	r7, [r0, #0]
 800d08e:	4621      	mov	r1, r4
 800d090:	69bc      	ldr	r4, [r7, #24]
 800d092:	4633      	mov	r3, r6
 800d094:	462a      	mov	r2, r5
 800d096:	46a4      	mov	ip, r4
 800d098:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d09c:	4760      	bx	ip
 800d09e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d0a2:	bf00      	nop

0800d0a4 <_ZNSt9type_infoD1Ev>:
 800d0a4:	4770      	bx	lr
 800d0a6:	bf00      	nop

0800d0a8 <_ZNKSt9type_info14__is_pointer_pEv>:
 800d0a8:	2000      	movs	r0, #0
 800d0aa:	4770      	bx	lr

0800d0ac <_ZNKSt9type_infoeqERKS_>:
 800d0ac:	4281      	cmp	r1, r0
 800d0ae:	d011      	beq.n	800d0d4 <_ZNKSt9type_infoeqERKS_+0x28>
 800d0b0:	b508      	push	{r3, lr}
 800d0b2:	6840      	ldr	r0, [r0, #4]
 800d0b4:	7803      	ldrb	r3, [r0, #0]
 800d0b6:	2b2a      	cmp	r3, #42	; 0x2a
 800d0b8:	d00a      	beq.n	800d0d0 <_ZNKSt9type_infoeqERKS_+0x24>
 800d0ba:	6849      	ldr	r1, [r1, #4]
 800d0bc:	780b      	ldrb	r3, [r1, #0]
 800d0be:	2b2a      	cmp	r3, #42	; 0x2a
 800d0c0:	bf08      	it	eq
 800d0c2:	3101      	addeq	r1, #1
 800d0c4:	f7fa fdd0 	bl	8007c68 <strcmp>
 800d0c8:	fab0 f080 	clz	r0, r0
 800d0cc:	0940      	lsrs	r0, r0, #5
 800d0ce:	bd08      	pop	{r3, pc}
 800d0d0:	2000      	movs	r0, #0
 800d0d2:	bd08      	pop	{r3, pc}
 800d0d4:	2001      	movs	r0, #1
 800d0d6:	4770      	bx	lr

0800d0d8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 800d0d8:	b570      	push	{r4, r5, r6, lr}
 800d0da:	6803      	ldr	r3, [r0, #0]
 800d0dc:	b084      	sub	sp, #16
 800d0de:	2400      	movs	r4, #0
 800d0e0:	699e      	ldr	r6, [r3, #24]
 800d0e2:	9400      	str	r4, [sp, #0]
 800d0e4:	2310      	movs	r3, #16
 800d0e6:	4615      	mov	r5, r2
 800d0e8:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800d0ec:	6812      	ldr	r2, [r2, #0]
 800d0ee:	f88d 4004 	strb.w	r4, [sp, #4]
 800d0f2:	466b      	mov	r3, sp
 800d0f4:	47b0      	blx	r6
 800d0f6:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800d0fa:	f003 0306 	and.w	r3, r3, #6
 800d0fe:	2b06      	cmp	r3, #6
 800d100:	bf03      	ittte	eq
 800d102:	9b00      	ldreq	r3, [sp, #0]
 800d104:	602b      	streq	r3, [r5, #0]
 800d106:	2001      	moveq	r0, #1
 800d108:	4620      	movne	r0, r4
 800d10a:	b004      	add	sp, #16
 800d10c:	bd70      	pop	{r4, r5, r6, pc}
 800d10e:	bf00      	nop

0800d110 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 800d110:	9800      	ldr	r0, [sp, #0]
 800d112:	4290      	cmp	r0, r2
 800d114:	bf14      	ite	ne
 800d116:	2001      	movne	r0, #1
 800d118:	2006      	moveq	r0, #6
 800d11a:	4770      	bx	lr

0800d11c <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 800d11c:	b510      	push	{r4, lr}
 800d11e:	4b03      	ldr	r3, [pc, #12]	; (800d12c <_ZN10__cxxabiv117__class_type_infoD1Ev+0x10>)
 800d120:	6003      	str	r3, [r0, #0]
 800d122:	4604      	mov	r4, r0
 800d124:	f7ff ffbe 	bl	800d0a4 <_ZNSt9type_infoD1Ev>
 800d128:	4620      	mov	r0, r4
 800d12a:	bd10      	pop	{r4, pc}
 800d12c:	08013574 	.word	0x08013574

0800d130 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 800d130:	b510      	push	{r4, lr}
 800d132:	4b05      	ldr	r3, [pc, #20]	; (800d148 <_ZN10__cxxabiv117__class_type_infoD0Ev+0x18>)
 800d134:	6003      	str	r3, [r0, #0]
 800d136:	4604      	mov	r4, r0
 800d138:	f7ff ffb4 	bl	800d0a4 <_ZNSt9type_infoD1Ev>
 800d13c:	4620      	mov	r0, r4
 800d13e:	2108      	movs	r1, #8
 800d140:	f7ff ff20 	bl	800cf84 <_ZdlPvj>
 800d144:	4620      	mov	r0, r4
 800d146:	bd10      	pop	{r4, pc}
 800d148:	08013574 	.word	0x08013574

0800d14c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 800d14c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d150:	e9dd 1508 	ldrd	r1, r5, [sp, #32]
 800d154:	9c06      	ldr	r4, [sp, #24]
 800d156:	428c      	cmp	r4, r1
 800d158:	4690      	mov	r8, r2
 800d15a:	461f      	mov	r7, r3
 800d15c:	4606      	mov	r6, r0
 800d15e:	d00c      	beq.n	800d17a <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2e>
 800d160:	4639      	mov	r1, r7
 800d162:	4630      	mov	r0, r6
 800d164:	f7ff ffa2 	bl	800d0ac <_ZNKSt9type_infoeqERKS_>
 800d168:	b120      	cbz	r0, 800d174 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x28>
 800d16a:	2301      	movs	r3, #1
 800d16c:	602c      	str	r4, [r5, #0]
 800d16e:	f885 8004 	strb.w	r8, [r5, #4]
 800d172:	71ab      	strb	r3, [r5, #6]
 800d174:	2000      	movs	r0, #0
 800d176:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d17a:	9907      	ldr	r1, [sp, #28]
 800d17c:	f7ff ff96 	bl	800d0ac <_ZNKSt9type_infoeqERKS_>
 800d180:	2800      	cmp	r0, #0
 800d182:	d0ed      	beq.n	800d160 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x14>
 800d184:	f885 8005 	strb.w	r8, [r5, #5]
 800d188:	2000      	movs	r0, #0
 800d18a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d18e:	bf00      	nop

0800d190 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 800d190:	b538      	push	{r3, r4, r5, lr}
 800d192:	4615      	mov	r5, r2
 800d194:	461c      	mov	r4, r3
 800d196:	f7ff ff89 	bl	800d0ac <_ZNKSt9type_infoeqERKS_>
 800d19a:	b900      	cbnz	r0, 800d19e <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0xe>
 800d19c:	bd38      	pop	{r3, r4, r5, pc}
 800d19e:	2208      	movs	r2, #8
 800d1a0:	2306      	movs	r3, #6
 800d1a2:	6025      	str	r5, [r4, #0]
 800d1a4:	60e2      	str	r2, [r4, #12]
 800d1a6:	7123      	strb	r3, [r4, #4]
 800d1a8:	bd38      	pop	{r3, r4, r5, pc}
 800d1aa:	bf00      	nop

0800d1ac <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 800d1ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d1b0:	4617      	mov	r7, r2
 800d1b2:	461d      	mov	r5, r3
 800d1b4:	4606      	mov	r6, r0
 800d1b6:	460c      	mov	r4, r1
 800d1b8:	f7ff ff78 	bl	800d0ac <_ZNKSt9type_infoeqERKS_>
 800d1bc:	b948      	cbnz	r0, 800d1d2 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x26>
 800d1be:	2d03      	cmp	r5, #3
 800d1c0:	d807      	bhi.n	800d1d2 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x26>
 800d1c2:	6823      	ldr	r3, [r4, #0]
 800d1c4:	463a      	mov	r2, r7
 800d1c6:	4631      	mov	r1, r6
 800d1c8:	4620      	mov	r0, r4
 800d1ca:	695b      	ldr	r3, [r3, #20]
 800d1cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d1d0:	4718      	bx	r3
 800d1d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d1d6:	bf00      	nop

0800d1d8 <__cxa_current_exception_type>:
 800d1d8:	b508      	push	{r3, lr}
 800d1da:	f7ff fbd5 	bl	800c988 <__cxa_get_globals>
 800d1de:	6800      	ldr	r0, [r0, #0]
 800d1e0:	b130      	cbz	r0, 800d1f0 <__cxa_current_exception_type+0x18>
 800d1e2:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800d1e6:	6800      	ldr	r0, [r0, #0]
 800d1e8:	2b01      	cmp	r3, #1
 800d1ea:	bf08      	it	eq
 800d1ec:	f850 0c78 	ldreq.w	r0, [r0, #-120]
 800d1f0:	bd08      	pop	{r3, pc}
 800d1f2:	bf00      	nop

0800d1f4 <_ZdlPv>:
 800d1f4:	f000 ba80 	b.w	800d6f8 <free>

0800d1f8 <_Unwind_GetDataRelBase>:
 800d1f8:	b508      	push	{r3, lr}
 800d1fa:	f000 f803 	bl	800d204 <abort>

0800d1fe <_Unwind_GetTextRelBase>:
 800d1fe:	b508      	push	{r3, lr}
 800d200:	f7ff fffa 	bl	800d1f8 <_Unwind_GetDataRelBase>

0800d204 <abort>:
 800d204:	b508      	push	{r3, lr}
 800d206:	2006      	movs	r0, #6
 800d208:	f001 f84e 	bl	800e2a8 <raise>
 800d20c:	2001      	movs	r0, #1
 800d20e:	f7fd fa37 	bl	800a680 <_exit>
 800d212:	bf00      	nop

0800d214 <__cxa_atexit>:
 800d214:	4613      	mov	r3, r2
 800d216:	460a      	mov	r2, r1
 800d218:	4601      	mov	r1, r0
 800d21a:	2002      	movs	r0, #2
 800d21c:	f002 be86 	b.w	800ff2c <__register_exitproc>

0800d220 <fputc>:
 800d220:	4b14      	ldr	r3, [pc, #80]	; (800d274 <fputc+0x54>)
 800d222:	b570      	push	{r4, r5, r6, lr}
 800d224:	681d      	ldr	r5, [r3, #0]
 800d226:	4606      	mov	r6, r0
 800d228:	460c      	mov	r4, r1
 800d22a:	b10d      	cbz	r5, 800d230 <fputc+0x10>
 800d22c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800d22e:	b19b      	cbz	r3, 800d258 <fputc+0x38>
 800d230:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d232:	07d8      	lsls	r0, r3, #31
 800d234:	d402      	bmi.n	800d23c <fputc+0x1c>
 800d236:	89a3      	ldrh	r3, [r4, #12]
 800d238:	0599      	lsls	r1, r3, #22
 800d23a:	d516      	bpl.n	800d26a <fputc+0x4a>
 800d23c:	4628      	mov	r0, r5
 800d23e:	4622      	mov	r2, r4
 800d240:	4631      	mov	r1, r6
 800d242:	f000 fe0d 	bl	800de60 <_putc_r>
 800d246:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d248:	07da      	lsls	r2, r3, #31
 800d24a:	4605      	mov	r5, r0
 800d24c:	d402      	bmi.n	800d254 <fputc+0x34>
 800d24e:	89a3      	ldrh	r3, [r4, #12]
 800d250:	059b      	lsls	r3, r3, #22
 800d252:	d505      	bpl.n	800d260 <fputc+0x40>
 800d254:	4628      	mov	r0, r5
 800d256:	bd70      	pop	{r4, r5, r6, pc}
 800d258:	4628      	mov	r0, r5
 800d25a:	f003 ff7f 	bl	801115c <__sinit>
 800d25e:	e7e7      	b.n	800d230 <fputc+0x10>
 800d260:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d262:	f000 fa3f 	bl	800d6e4 <__retarget_lock_release_recursive>
 800d266:	4628      	mov	r0, r5
 800d268:	bd70      	pop	{r4, r5, r6, pc}
 800d26a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d26c:	f000 fa38 	bl	800d6e0 <__retarget_lock_acquire_recursive>
 800d270:	e7e4      	b.n	800d23c <fputc+0x1c>
 800d272:	bf00      	nop
 800d274:	20000808 	.word	0x20000808

0800d278 <_fputs_r>:
 800d278:	b530      	push	{r4, r5, lr}
 800d27a:	b087      	sub	sp, #28
 800d27c:	4605      	mov	r5, r0
 800d27e:	4608      	mov	r0, r1
 800d280:	4614      	mov	r4, r2
 800d282:	9101      	str	r1, [sp, #4]
 800d284:	f7fa fe5c 	bl	8007f40 <strlen>
 800d288:	aa01      	add	r2, sp, #4
 800d28a:	2301      	movs	r3, #1
 800d28c:	9005      	str	r0, [sp, #20]
 800d28e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 800d292:	9304      	str	r3, [sp, #16]
 800d294:	b10d      	cbz	r5, 800d29a <_fputs_r+0x22>
 800d296:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800d298:	b1fb      	cbz	r3, 800d2da <_fputs_r+0x62>
 800d29a:	6e61      	ldr	r1, [r4, #100]	; 0x64
 800d29c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d2a0:	07c9      	lsls	r1, r1, #31
 800d2a2:	b29a      	uxth	r2, r3
 800d2a4:	d401      	bmi.n	800d2aa <_fputs_r+0x32>
 800d2a6:	0590      	lsls	r0, r2, #22
 800d2a8:	d521      	bpl.n	800d2ee <_fputs_r+0x76>
 800d2aa:	0491      	lsls	r1, r2, #18
 800d2ac:	d406      	bmi.n	800d2bc <_fputs_r+0x44>
 800d2ae:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800d2b0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800d2b4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800d2b8:	81a3      	strh	r3, [r4, #12]
 800d2ba:	6662      	str	r2, [r4, #100]	; 0x64
 800d2bc:	4628      	mov	r0, r5
 800d2be:	aa03      	add	r2, sp, #12
 800d2c0:	4621      	mov	r1, r4
 800d2c2:	f000 f823 	bl	800d30c <__sfvwrite_r>
 800d2c6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d2c8:	07da      	lsls	r2, r3, #31
 800d2ca:	4605      	mov	r5, r0
 800d2cc:	d402      	bmi.n	800d2d4 <_fputs_r+0x5c>
 800d2ce:	89a3      	ldrh	r3, [r4, #12]
 800d2d0:	059b      	lsls	r3, r3, #22
 800d2d2:	d506      	bpl.n	800d2e2 <_fputs_r+0x6a>
 800d2d4:	4628      	mov	r0, r5
 800d2d6:	b007      	add	sp, #28
 800d2d8:	bd30      	pop	{r4, r5, pc}
 800d2da:	4628      	mov	r0, r5
 800d2dc:	f003 ff3e 	bl	801115c <__sinit>
 800d2e0:	e7db      	b.n	800d29a <_fputs_r+0x22>
 800d2e2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d2e4:	f000 f9fe 	bl	800d6e4 <__retarget_lock_release_recursive>
 800d2e8:	4628      	mov	r0, r5
 800d2ea:	b007      	add	sp, #28
 800d2ec:	bd30      	pop	{r4, r5, pc}
 800d2ee:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d2f0:	f000 f9f6 	bl	800d6e0 <__retarget_lock_acquire_recursive>
 800d2f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d2f8:	b29a      	uxth	r2, r3
 800d2fa:	e7d6      	b.n	800d2aa <_fputs_r+0x32>

0800d2fc <fputs>:
 800d2fc:	4b02      	ldr	r3, [pc, #8]	; (800d308 <fputs+0xc>)
 800d2fe:	460a      	mov	r2, r1
 800d300:	4601      	mov	r1, r0
 800d302:	6818      	ldr	r0, [r3, #0]
 800d304:	f7ff bfb8 	b.w	800d278 <_fputs_r>
 800d308:	20000808 	.word	0x20000808

0800d30c <__sfvwrite_r>:
 800d30c:	6893      	ldr	r3, [r2, #8]
 800d30e:	2b00      	cmp	r3, #0
 800d310:	f000 8102 	beq.w	800d518 <__sfvwrite_r+0x20c>
 800d314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d318:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
 800d31c:	b29b      	uxth	r3, r3
 800d31e:	460c      	mov	r4, r1
 800d320:	0719      	lsls	r1, r3, #28
 800d322:	b083      	sub	sp, #12
 800d324:	4682      	mov	sl, r0
 800d326:	4690      	mov	r8, r2
 800d328:	d535      	bpl.n	800d396 <__sfvwrite_r+0x8a>
 800d32a:	6922      	ldr	r2, [r4, #16]
 800d32c:	b39a      	cbz	r2, 800d396 <__sfvwrite_r+0x8a>
 800d32e:	f013 0202 	ands.w	r2, r3, #2
 800d332:	f8d8 6000 	ldr.w	r6, [r8]
 800d336:	d03d      	beq.n	800d3b4 <__sfvwrite_r+0xa8>
 800d338:	2700      	movs	r7, #0
 800d33a:	f8d4 b024 	ldr.w	fp, [r4, #36]	; 0x24
 800d33e:	f8d4 c01c 	ldr.w	ip, [r4, #28]
 800d342:	f8df 92cc 	ldr.w	r9, [pc, #716]	; 800d610 <__sfvwrite_r+0x304>
 800d346:	463d      	mov	r5, r7
 800d348:	454d      	cmp	r5, r9
 800d34a:	462b      	mov	r3, r5
 800d34c:	463a      	mov	r2, r7
 800d34e:	bf28      	it	cs
 800d350:	464b      	movcs	r3, r9
 800d352:	4661      	mov	r1, ip
 800d354:	4650      	mov	r0, sl
 800d356:	b1d5      	cbz	r5, 800d38e <__sfvwrite_r+0x82>
 800d358:	47d8      	blx	fp
 800d35a:	2800      	cmp	r0, #0
 800d35c:	f340 80d2 	ble.w	800d504 <__sfvwrite_r+0x1f8>
 800d360:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d364:	1a1b      	subs	r3, r3, r0
 800d366:	4407      	add	r7, r0
 800d368:	1a2d      	subs	r5, r5, r0
 800d36a:	f8c8 3008 	str.w	r3, [r8, #8]
 800d36e:	2b00      	cmp	r3, #0
 800d370:	f000 80b7 	beq.w	800d4e2 <__sfvwrite_r+0x1d6>
 800d374:	f8d4 c01c 	ldr.w	ip, [r4, #28]
 800d378:	f8d4 b024 	ldr.w	fp, [r4, #36]	; 0x24
 800d37c:	454d      	cmp	r5, r9
 800d37e:	462b      	mov	r3, r5
 800d380:	463a      	mov	r2, r7
 800d382:	bf28      	it	cs
 800d384:	464b      	movcs	r3, r9
 800d386:	4661      	mov	r1, ip
 800d388:	4650      	mov	r0, sl
 800d38a:	2d00      	cmp	r5, #0
 800d38c:	d1e4      	bne.n	800d358 <__sfvwrite_r+0x4c>
 800d38e:	e9d6 7500 	ldrd	r7, r5, [r6]
 800d392:	3608      	adds	r6, #8
 800d394:	e7d8      	b.n	800d348 <__sfvwrite_r+0x3c>
 800d396:	4621      	mov	r1, r4
 800d398:	4650      	mov	r0, sl
 800d39a:	f002 fd5f 	bl	800fe5c <__swsetup_r>
 800d39e:	2800      	cmp	r0, #0
 800d3a0:	f040 8130 	bne.w	800d604 <__sfvwrite_r+0x2f8>
 800d3a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d3a8:	f8d8 6000 	ldr.w	r6, [r8]
 800d3ac:	b29b      	uxth	r3, r3
 800d3ae:	f013 0202 	ands.w	r2, r3, #2
 800d3b2:	d1c1      	bne.n	800d338 <__sfvwrite_r+0x2c>
 800d3b4:	f013 0901 	ands.w	r9, r3, #1
 800d3b8:	f040 80b0 	bne.w	800d51c <__sfvwrite_r+0x210>
 800d3bc:	68a7      	ldr	r7, [r4, #8]
 800d3be:	6820      	ldr	r0, [r4, #0]
 800d3c0:	464d      	mov	r5, r9
 800d3c2:	2d00      	cmp	r5, #0
 800d3c4:	d054      	beq.n	800d470 <__sfvwrite_r+0x164>
 800d3c6:	059a      	lsls	r2, r3, #22
 800d3c8:	f140 80bc 	bpl.w	800d544 <__sfvwrite_r+0x238>
 800d3cc:	42af      	cmp	r7, r5
 800d3ce:	46bb      	mov	fp, r7
 800d3d0:	f200 80e7 	bhi.w	800d5a2 <__sfvwrite_r+0x296>
 800d3d4:	f413 6f90 	tst.w	r3, #1152	; 0x480
 800d3d8:	d02f      	beq.n	800d43a <__sfvwrite_r+0x12e>
 800d3da:	e9d4 1704 	ldrd	r1, r7, [r4, #16]
 800d3de:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 800d3e2:	eba0 0b01 	sub.w	fp, r0, r1
 800d3e6:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 800d3ea:	1c68      	adds	r0, r5, #1
 800d3ec:	107f      	asrs	r7, r7, #1
 800d3ee:	4458      	add	r0, fp
 800d3f0:	42b8      	cmp	r0, r7
 800d3f2:	463a      	mov	r2, r7
 800d3f4:	bf84      	itt	hi
 800d3f6:	4607      	movhi	r7, r0
 800d3f8:	463a      	movhi	r2, r7
 800d3fa:	055b      	lsls	r3, r3, #21
 800d3fc:	f140 80e9 	bpl.w	800d5d2 <__sfvwrite_r+0x2c6>
 800d400:	4611      	mov	r1, r2
 800d402:	4650      	mov	r0, sl
 800d404:	f000 f980 	bl	800d708 <_malloc_r>
 800d408:	2800      	cmp	r0, #0
 800d40a:	f000 80f5 	beq.w	800d5f8 <__sfvwrite_r+0x2ec>
 800d40e:	465a      	mov	r2, fp
 800d410:	6921      	ldr	r1, [r4, #16]
 800d412:	9001      	str	r0, [sp, #4]
 800d414:	f7fa fb7c 	bl	8007b10 <memcpy>
 800d418:	89a2      	ldrh	r2, [r4, #12]
 800d41a:	9b01      	ldr	r3, [sp, #4]
 800d41c:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 800d420:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800d424:	81a2      	strh	r2, [r4, #12]
 800d426:	eba7 020b 	sub.w	r2, r7, fp
 800d42a:	eb03 000b 	add.w	r0, r3, fp
 800d42e:	6167      	str	r7, [r4, #20]
 800d430:	6123      	str	r3, [r4, #16]
 800d432:	6020      	str	r0, [r4, #0]
 800d434:	60a2      	str	r2, [r4, #8]
 800d436:	462f      	mov	r7, r5
 800d438:	46ab      	mov	fp, r5
 800d43a:	465a      	mov	r2, fp
 800d43c:	4649      	mov	r1, r9
 800d43e:	f000 fc4b 	bl	800dcd8 <memmove>
 800d442:	68a2      	ldr	r2, [r4, #8]
 800d444:	6823      	ldr	r3, [r4, #0]
 800d446:	1bd2      	subs	r2, r2, r7
 800d448:	445b      	add	r3, fp
 800d44a:	462f      	mov	r7, r5
 800d44c:	60a2      	str	r2, [r4, #8]
 800d44e:	6023      	str	r3, [r4, #0]
 800d450:	2500      	movs	r5, #0
 800d452:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d456:	1bdb      	subs	r3, r3, r7
 800d458:	44b9      	add	r9, r7
 800d45a:	f8c8 3008 	str.w	r3, [r8, #8]
 800d45e:	2b00      	cmp	r3, #0
 800d460:	d03f      	beq.n	800d4e2 <__sfvwrite_r+0x1d6>
 800d462:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d466:	68a7      	ldr	r7, [r4, #8]
 800d468:	6820      	ldr	r0, [r4, #0]
 800d46a:	b29b      	uxth	r3, r3
 800d46c:	2d00      	cmp	r5, #0
 800d46e:	d1aa      	bne.n	800d3c6 <__sfvwrite_r+0xba>
 800d470:	e9d6 9500 	ldrd	r9, r5, [r6]
 800d474:	3608      	adds	r6, #8
 800d476:	e7a4      	b.n	800d3c2 <__sfvwrite_r+0xb6>
 800d478:	f10b 0308 	add.w	r3, fp, #8
 800d47c:	e953 6702 	ldrd	r6, r7, [r3, #-8]
 800d480:	469b      	mov	fp, r3
 800d482:	3308      	adds	r3, #8
 800d484:	2f00      	cmp	r7, #0
 800d486:	d0f9      	beq.n	800d47c <__sfvwrite_r+0x170>
 800d488:	463a      	mov	r2, r7
 800d48a:	210a      	movs	r1, #10
 800d48c:	4630      	mov	r0, r6
 800d48e:	f7fa faef 	bl	8007a70 <memchr>
 800d492:	2800      	cmp	r0, #0
 800d494:	d053      	beq.n	800d53e <__sfvwrite_r+0x232>
 800d496:	3001      	adds	r0, #1
 800d498:	eba0 0906 	sub.w	r9, r0, r6
 800d49c:	464b      	mov	r3, r9
 800d49e:	e9d4 1204 	ldrd	r1, r2, [r4, #16]
 800d4a2:	6820      	ldr	r0, [r4, #0]
 800d4a4:	42bb      	cmp	r3, r7
 800d4a6:	bf28      	it	cs
 800d4a8:	463b      	movcs	r3, r7
 800d4aa:	4288      	cmp	r0, r1
 800d4ac:	d903      	bls.n	800d4b6 <__sfvwrite_r+0x1aa>
 800d4ae:	68a5      	ldr	r5, [r4, #8]
 800d4b0:	4415      	add	r5, r2
 800d4b2:	42ab      	cmp	r3, r5
 800d4b4:	dc19      	bgt.n	800d4ea <__sfvwrite_r+0x1de>
 800d4b6:	429a      	cmp	r2, r3
 800d4b8:	dc7d      	bgt.n	800d5b6 <__sfvwrite_r+0x2aa>
 800d4ba:	4613      	mov	r3, r2
 800d4bc:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800d4be:	69e1      	ldr	r1, [r4, #28]
 800d4c0:	4632      	mov	r2, r6
 800d4c2:	4650      	mov	r0, sl
 800d4c4:	47a8      	blx	r5
 800d4c6:	1e05      	subs	r5, r0, #0
 800d4c8:	dd1c      	ble.n	800d504 <__sfvwrite_r+0x1f8>
 800d4ca:	ebb9 0905 	subs.w	r9, r9, r5
 800d4ce:	d06b      	beq.n	800d5a8 <__sfvwrite_r+0x29c>
 800d4d0:	2001      	movs	r0, #1
 800d4d2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d4d6:	1b5b      	subs	r3, r3, r5
 800d4d8:	442e      	add	r6, r5
 800d4da:	1b7f      	subs	r7, r7, r5
 800d4dc:	f8c8 3008 	str.w	r3, [r8, #8]
 800d4e0:	bb13      	cbnz	r3, 800d528 <__sfvwrite_r+0x21c>
 800d4e2:	2000      	movs	r0, #0
 800d4e4:	b003      	add	sp, #12
 800d4e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d4ea:	4631      	mov	r1, r6
 800d4ec:	462a      	mov	r2, r5
 800d4ee:	f000 fbf3 	bl	800dcd8 <memmove>
 800d4f2:	6823      	ldr	r3, [r4, #0]
 800d4f4:	442b      	add	r3, r5
 800d4f6:	6023      	str	r3, [r4, #0]
 800d4f8:	4621      	mov	r1, r4
 800d4fa:	4650      	mov	r0, sl
 800d4fc:	f003 fdd2 	bl	80110a4 <_fflush_r>
 800d500:	2800      	cmp	r0, #0
 800d502:	d0e2      	beq.n	800d4ca <__sfvwrite_r+0x1be>
 800d504:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d508:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d50c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d510:	81a3      	strh	r3, [r4, #12]
 800d512:	b003      	add	sp, #12
 800d514:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d518:	2000      	movs	r0, #0
 800d51a:	4770      	bx	lr
 800d51c:	4633      	mov	r3, r6
 800d51e:	4691      	mov	r9, r2
 800d520:	4610      	mov	r0, r2
 800d522:	4617      	mov	r7, r2
 800d524:	464e      	mov	r6, r9
 800d526:	469b      	mov	fp, r3
 800d528:	2f00      	cmp	r7, #0
 800d52a:	d0a5      	beq.n	800d478 <__sfvwrite_r+0x16c>
 800d52c:	2800      	cmp	r0, #0
 800d52e:	d1b5      	bne.n	800d49c <__sfvwrite_r+0x190>
 800d530:	463a      	mov	r2, r7
 800d532:	210a      	movs	r1, #10
 800d534:	4630      	mov	r0, r6
 800d536:	f7fa fa9b 	bl	8007a70 <memchr>
 800d53a:	2800      	cmp	r0, #0
 800d53c:	d1ab      	bne.n	800d496 <__sfvwrite_r+0x18a>
 800d53e:	1c7b      	adds	r3, r7, #1
 800d540:	4699      	mov	r9, r3
 800d542:	e7ac      	b.n	800d49e <__sfvwrite_r+0x192>
 800d544:	6923      	ldr	r3, [r4, #16]
 800d546:	4283      	cmp	r3, r0
 800d548:	d315      	bcc.n	800d576 <__sfvwrite_r+0x26a>
 800d54a:	6961      	ldr	r1, [r4, #20]
 800d54c:	42a9      	cmp	r1, r5
 800d54e:	d812      	bhi.n	800d576 <__sfvwrite_r+0x26a>
 800d550:	4b2e      	ldr	r3, [pc, #184]	; (800d60c <__sfvwrite_r+0x300>)
 800d552:	6a67      	ldr	r7, [r4, #36]	; 0x24
 800d554:	429d      	cmp	r5, r3
 800d556:	bf94      	ite	ls
 800d558:	462b      	movls	r3, r5
 800d55a:	f06f 4300 	mvnhi.w	r3, #2147483648	; 0x80000000
 800d55e:	464a      	mov	r2, r9
 800d560:	fb93 f3f1 	sdiv	r3, r3, r1
 800d564:	4650      	mov	r0, sl
 800d566:	fb01 f303 	mul.w	r3, r1, r3
 800d56a:	69e1      	ldr	r1, [r4, #28]
 800d56c:	47b8      	blx	r7
 800d56e:	1e07      	subs	r7, r0, #0
 800d570:	ddc8      	ble.n	800d504 <__sfvwrite_r+0x1f8>
 800d572:	1bed      	subs	r5, r5, r7
 800d574:	e76d      	b.n	800d452 <__sfvwrite_r+0x146>
 800d576:	42af      	cmp	r7, r5
 800d578:	bf28      	it	cs
 800d57a:	462f      	movcs	r7, r5
 800d57c:	463a      	mov	r2, r7
 800d57e:	4649      	mov	r1, r9
 800d580:	f000 fbaa 	bl	800dcd8 <memmove>
 800d584:	68a3      	ldr	r3, [r4, #8]
 800d586:	6822      	ldr	r2, [r4, #0]
 800d588:	1bdb      	subs	r3, r3, r7
 800d58a:	443a      	add	r2, r7
 800d58c:	60a3      	str	r3, [r4, #8]
 800d58e:	6022      	str	r2, [r4, #0]
 800d590:	2b00      	cmp	r3, #0
 800d592:	d1ee      	bne.n	800d572 <__sfvwrite_r+0x266>
 800d594:	4621      	mov	r1, r4
 800d596:	4650      	mov	r0, sl
 800d598:	f003 fd84 	bl	80110a4 <_fflush_r>
 800d59c:	2800      	cmp	r0, #0
 800d59e:	d0e8      	beq.n	800d572 <__sfvwrite_r+0x266>
 800d5a0:	e7b0      	b.n	800d504 <__sfvwrite_r+0x1f8>
 800d5a2:	462f      	mov	r7, r5
 800d5a4:	46ab      	mov	fp, r5
 800d5a6:	e748      	b.n	800d43a <__sfvwrite_r+0x12e>
 800d5a8:	4621      	mov	r1, r4
 800d5aa:	4650      	mov	r0, sl
 800d5ac:	f003 fd7a 	bl	80110a4 <_fflush_r>
 800d5b0:	2800      	cmp	r0, #0
 800d5b2:	d08e      	beq.n	800d4d2 <__sfvwrite_r+0x1c6>
 800d5b4:	e7a6      	b.n	800d504 <__sfvwrite_r+0x1f8>
 800d5b6:	461a      	mov	r2, r3
 800d5b8:	4631      	mov	r1, r6
 800d5ba:	9301      	str	r3, [sp, #4]
 800d5bc:	f000 fb8c 	bl	800dcd8 <memmove>
 800d5c0:	9b01      	ldr	r3, [sp, #4]
 800d5c2:	68a1      	ldr	r1, [r4, #8]
 800d5c4:	6822      	ldr	r2, [r4, #0]
 800d5c6:	1ac9      	subs	r1, r1, r3
 800d5c8:	441a      	add	r2, r3
 800d5ca:	60a1      	str	r1, [r4, #8]
 800d5cc:	6022      	str	r2, [r4, #0]
 800d5ce:	461d      	mov	r5, r3
 800d5d0:	e77b      	b.n	800d4ca <__sfvwrite_r+0x1be>
 800d5d2:	4650      	mov	r0, sl
 800d5d4:	f000 fc86 	bl	800dee4 <_realloc_r>
 800d5d8:	4603      	mov	r3, r0
 800d5da:	2800      	cmp	r0, #0
 800d5dc:	f47f af23 	bne.w	800d426 <__sfvwrite_r+0x11a>
 800d5e0:	6921      	ldr	r1, [r4, #16]
 800d5e2:	4650      	mov	r0, sl
 800d5e4:	f003 fe5a 	bl	801129c <_free_r>
 800d5e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d5ec:	220c      	movs	r2, #12
 800d5ee:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d5f2:	f8ca 2000 	str.w	r2, [sl]
 800d5f6:	e787      	b.n	800d508 <__sfvwrite_r+0x1fc>
 800d5f8:	230c      	movs	r3, #12
 800d5fa:	f8ca 3000 	str.w	r3, [sl]
 800d5fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d602:	e781      	b.n	800d508 <__sfvwrite_r+0x1fc>
 800d604:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d608:	e76c      	b.n	800d4e4 <__sfvwrite_r+0x1d8>
 800d60a:	bf00      	nop
 800d60c:	7ffffffe 	.word	0x7ffffffe
 800d610:	7ffffc00 	.word	0x7ffffc00

0800d614 <_fwrite_r>:
 800d614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d618:	b086      	sub	sp, #24
 800d61a:	fb02 f503 	mul.w	r5, r2, r3
 800d61e:	4690      	mov	r8, r2
 800d620:	461e      	mov	r6, r3
 800d622:	aa01      	add	r2, sp, #4
 800d624:	2301      	movs	r3, #1
 800d626:	e9cd 1501 	strd	r1, r5, [sp, #4]
 800d62a:	9505      	str	r5, [sp, #20]
 800d62c:	e9cd 2303 	strd	r2, r3, [sp, #12]
 800d630:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800d632:	4607      	mov	r7, r0
 800d634:	b108      	cbz	r0, 800d63a <_fwrite_r+0x26>
 800d636:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800d638:	b33b      	cbz	r3, 800d68a <_fwrite_r+0x76>
 800d63a:	6e61      	ldr	r1, [r4, #100]	; 0x64
 800d63c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d640:	07c8      	lsls	r0, r1, #31
 800d642:	b29a      	uxth	r2, r3
 800d644:	d401      	bmi.n	800d64a <_fwrite_r+0x36>
 800d646:	0591      	lsls	r1, r2, #22
 800d648:	d530      	bpl.n	800d6ac <_fwrite_r+0x98>
 800d64a:	0492      	lsls	r2, r2, #18
 800d64c:	d406      	bmi.n	800d65c <_fwrite_r+0x48>
 800d64e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800d650:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800d654:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800d658:	81a3      	strh	r3, [r4, #12]
 800d65a:	6662      	str	r2, [r4, #100]	; 0x64
 800d65c:	4638      	mov	r0, r7
 800d65e:	aa03      	add	r2, sp, #12
 800d660:	4621      	mov	r1, r4
 800d662:	f7ff fe53 	bl	800d30c <__sfvwrite_r>
 800d666:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d668:	b190      	cbz	r0, 800d690 <_fwrite_r+0x7c>
 800d66a:	07da      	lsls	r2, r3, #31
 800d66c:	d506      	bpl.n	800d67c <_fwrite_r+0x68>
 800d66e:	9805      	ldr	r0, [sp, #20]
 800d670:	1a2d      	subs	r5, r5, r0
 800d672:	fbb5 f0f8 	udiv	r0, r5, r8
 800d676:	b006      	add	sp, #24
 800d678:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d67c:	89a3      	ldrh	r3, [r4, #12]
 800d67e:	059b      	lsls	r3, r3, #22
 800d680:	d4f5      	bmi.n	800d66e <_fwrite_r+0x5a>
 800d682:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d684:	f000 f82e 	bl	800d6e4 <__retarget_lock_release_recursive>
 800d688:	e7f1      	b.n	800d66e <_fwrite_r+0x5a>
 800d68a:	f003 fd67 	bl	801115c <__sinit>
 800d68e:	e7d4      	b.n	800d63a <_fwrite_r+0x26>
 800d690:	07d8      	lsls	r0, r3, #31
 800d692:	d407      	bmi.n	800d6a4 <_fwrite_r+0x90>
 800d694:	89a3      	ldrh	r3, [r4, #12]
 800d696:	0599      	lsls	r1, r3, #22
 800d698:	d404      	bmi.n	800d6a4 <_fwrite_r+0x90>
 800d69a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d69c:	f000 f822 	bl	800d6e4 <__retarget_lock_release_recursive>
 800d6a0:	4630      	mov	r0, r6
 800d6a2:	e7e8      	b.n	800d676 <_fwrite_r+0x62>
 800d6a4:	4630      	mov	r0, r6
 800d6a6:	b006      	add	sp, #24
 800d6a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d6ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d6ae:	f000 f817 	bl	800d6e0 <__retarget_lock_acquire_recursive>
 800d6b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d6b6:	b29a      	uxth	r2, r3
 800d6b8:	e7c7      	b.n	800d64a <_fwrite_r+0x36>
 800d6ba:	bf00      	nop

0800d6bc <fwrite>:
 800d6bc:	b510      	push	{r4, lr}
 800d6be:	4c05      	ldr	r4, [pc, #20]	; (800d6d4 <fwrite+0x18>)
 800d6c0:	b082      	sub	sp, #8
 800d6c2:	9300      	str	r3, [sp, #0]
 800d6c4:	4613      	mov	r3, r2
 800d6c6:	460a      	mov	r2, r1
 800d6c8:	4601      	mov	r1, r0
 800d6ca:	6820      	ldr	r0, [r4, #0]
 800d6cc:	f7ff ffa2 	bl	800d614 <_fwrite_r>
 800d6d0:	b002      	add	sp, #8
 800d6d2:	bd10      	pop	{r4, pc}
 800d6d4:	20000808 	.word	0x20000808

0800d6d8 <__retarget_lock_init_recursive>:
 800d6d8:	4770      	bx	lr
 800d6da:	bf00      	nop

0800d6dc <__retarget_lock_close_recursive>:
 800d6dc:	4770      	bx	lr
 800d6de:	bf00      	nop

0800d6e0 <__retarget_lock_acquire_recursive>:
 800d6e0:	4770      	bx	lr
 800d6e2:	bf00      	nop

0800d6e4 <__retarget_lock_release_recursive>:
 800d6e4:	4770      	bx	lr
 800d6e6:	bf00      	nop

0800d6e8 <malloc>:
 800d6e8:	4b02      	ldr	r3, [pc, #8]	; (800d6f4 <malloc+0xc>)
 800d6ea:	4601      	mov	r1, r0
 800d6ec:	6818      	ldr	r0, [r3, #0]
 800d6ee:	f000 b80b 	b.w	800d708 <_malloc_r>
 800d6f2:	bf00      	nop
 800d6f4:	20000808 	.word	0x20000808

0800d6f8 <free>:
 800d6f8:	4b02      	ldr	r3, [pc, #8]	; (800d704 <free+0xc>)
 800d6fa:	4601      	mov	r1, r0
 800d6fc:	6818      	ldr	r0, [r3, #0]
 800d6fe:	f003 bdcd 	b.w	801129c <_free_r>
 800d702:	bf00      	nop
 800d704:	20000808 	.word	0x20000808

0800d708 <_malloc_r>:
 800d708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d70c:	f101 050b 	add.w	r5, r1, #11
 800d710:	2d16      	cmp	r5, #22
 800d712:	b083      	sub	sp, #12
 800d714:	4606      	mov	r6, r0
 800d716:	d823      	bhi.n	800d760 <_malloc_r+0x58>
 800d718:	2910      	cmp	r1, #16
 800d71a:	f200 80b9 	bhi.w	800d890 <_malloc_r+0x188>
 800d71e:	f000 fb93 	bl	800de48 <__malloc_lock>
 800d722:	2510      	movs	r5, #16
 800d724:	2318      	movs	r3, #24
 800d726:	2002      	movs	r0, #2
 800d728:	4fba      	ldr	r7, [pc, #744]	; (800da14 <_malloc_r+0x30c>)
 800d72a:	443b      	add	r3, r7
 800d72c:	f1a3 0208 	sub.w	r2, r3, #8
 800d730:	685c      	ldr	r4, [r3, #4]
 800d732:	4294      	cmp	r4, r2
 800d734:	f000 80b9 	beq.w	800d8aa <_malloc_r+0x1a2>
 800d738:	6863      	ldr	r3, [r4, #4]
 800d73a:	f023 0303 	bic.w	r3, r3, #3
 800d73e:	4423      	add	r3, r4
 800d740:	e9d4 5102 	ldrd	r5, r1, [r4, #8]
 800d744:	685a      	ldr	r2, [r3, #4]
 800d746:	60e9      	str	r1, [r5, #12]
 800d748:	f042 0201 	orr.w	r2, r2, #1
 800d74c:	4630      	mov	r0, r6
 800d74e:	608d      	str	r5, [r1, #8]
 800d750:	605a      	str	r2, [r3, #4]
 800d752:	f000 fb7f 	bl	800de54 <__malloc_unlock>
 800d756:	3408      	adds	r4, #8
 800d758:	4620      	mov	r0, r4
 800d75a:	b003      	add	sp, #12
 800d75c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d760:	f035 0507 	bics.w	r5, r5, #7
 800d764:	f100 8094 	bmi.w	800d890 <_malloc_r+0x188>
 800d768:	42a9      	cmp	r1, r5
 800d76a:	f200 8091 	bhi.w	800d890 <_malloc_r+0x188>
 800d76e:	f000 fb6b 	bl	800de48 <__malloc_lock>
 800d772:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
 800d776:	f0c0 81a2 	bcc.w	800dabe <_malloc_r+0x3b6>
 800d77a:	0a6b      	lsrs	r3, r5, #9
 800d77c:	f000 808f 	beq.w	800d89e <_malloc_r+0x196>
 800d780:	2b04      	cmp	r3, #4
 800d782:	f200 8178 	bhi.w	800da76 <_malloc_r+0x36e>
 800d786:	09ab      	lsrs	r3, r5, #6
 800d788:	f103 0039 	add.w	r0, r3, #57	; 0x39
 800d78c:	f103 0c38 	add.w	ip, r3, #56	; 0x38
 800d790:	00c3      	lsls	r3, r0, #3
 800d792:	4fa0      	ldr	r7, [pc, #640]	; (800da14 <_malloc_r+0x30c>)
 800d794:	443b      	add	r3, r7
 800d796:	f1a3 0108 	sub.w	r1, r3, #8
 800d79a:	685c      	ldr	r4, [r3, #4]
 800d79c:	42a1      	cmp	r1, r4
 800d79e:	d106      	bne.n	800d7ae <_malloc_r+0xa6>
 800d7a0:	e00c      	b.n	800d7bc <_malloc_r+0xb4>
 800d7a2:	2a00      	cmp	r2, #0
 800d7a4:	f280 8127 	bge.w	800d9f6 <_malloc_r+0x2ee>
 800d7a8:	68e4      	ldr	r4, [r4, #12]
 800d7aa:	42a1      	cmp	r1, r4
 800d7ac:	d006      	beq.n	800d7bc <_malloc_r+0xb4>
 800d7ae:	6863      	ldr	r3, [r4, #4]
 800d7b0:	f023 0303 	bic.w	r3, r3, #3
 800d7b4:	1b5a      	subs	r2, r3, r5
 800d7b6:	2a0f      	cmp	r2, #15
 800d7b8:	ddf3      	ble.n	800d7a2 <_malloc_r+0x9a>
 800d7ba:	4660      	mov	r0, ip
 800d7bc:	693c      	ldr	r4, [r7, #16]
 800d7be:	f8df c268 	ldr.w	ip, [pc, #616]	; 800da28 <_malloc_r+0x320>
 800d7c2:	4564      	cmp	r4, ip
 800d7c4:	d07c      	beq.n	800d8c0 <_malloc_r+0x1b8>
 800d7c6:	6863      	ldr	r3, [r4, #4]
 800d7c8:	f023 0303 	bic.w	r3, r3, #3
 800d7cc:	1b5a      	subs	r2, r3, r5
 800d7ce:	2a0f      	cmp	r2, #15
 800d7d0:	f300 8183 	bgt.w	800dada <_malloc_r+0x3d2>
 800d7d4:	2a00      	cmp	r2, #0
 800d7d6:	e9c7 cc04 	strd	ip, ip, [r7, #16]
 800d7da:	f280 8174 	bge.w	800dac6 <_malloc_r+0x3be>
 800d7de:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d7e2:	f080 8125 	bcs.w	800da30 <_malloc_r+0x328>
 800d7e6:	08db      	lsrs	r3, r3, #3
 800d7e8:	1c59      	adds	r1, r3, #1
 800d7ea:	687a      	ldr	r2, [r7, #4]
 800d7ec:	f857 8031 	ldr.w	r8, [r7, r1, lsl #3]
 800d7f0:	f8c4 8008 	str.w	r8, [r4, #8]
 800d7f4:	f04f 0e01 	mov.w	lr, #1
 800d7f8:	109b      	asrs	r3, r3, #2
 800d7fa:	fa0e f303 	lsl.w	r3, lr, r3
 800d7fe:	eb07 0ec1 	add.w	lr, r7, r1, lsl #3
 800d802:	4313      	orrs	r3, r2
 800d804:	f1ae 0208 	sub.w	r2, lr, #8
 800d808:	60e2      	str	r2, [r4, #12]
 800d80a:	607b      	str	r3, [r7, #4]
 800d80c:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
 800d810:	f8c8 400c 	str.w	r4, [r8, #12]
 800d814:	1082      	asrs	r2, r0, #2
 800d816:	2401      	movs	r4, #1
 800d818:	4094      	lsls	r4, r2
 800d81a:	429c      	cmp	r4, r3
 800d81c:	d856      	bhi.n	800d8cc <_malloc_r+0x1c4>
 800d81e:	421c      	tst	r4, r3
 800d820:	d106      	bne.n	800d830 <_malloc_r+0x128>
 800d822:	f020 0003 	bic.w	r0, r0, #3
 800d826:	0064      	lsls	r4, r4, #1
 800d828:	421c      	tst	r4, r3
 800d82a:	f100 0004 	add.w	r0, r0, #4
 800d82e:	d0fa      	beq.n	800d826 <_malloc_r+0x11e>
 800d830:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
 800d834:	46ce      	mov	lr, r9
 800d836:	4680      	mov	r8, r0
 800d838:	f8de 300c 	ldr.w	r3, [lr, #12]
 800d83c:	459e      	cmp	lr, r3
 800d83e:	d107      	bne.n	800d850 <_malloc_r+0x148>
 800d840:	e125      	b.n	800da8e <_malloc_r+0x386>
 800d842:	2a00      	cmp	r2, #0
 800d844:	f280 812c 	bge.w	800daa0 <_malloc_r+0x398>
 800d848:	68db      	ldr	r3, [r3, #12]
 800d84a:	459e      	cmp	lr, r3
 800d84c:	f000 811f 	beq.w	800da8e <_malloc_r+0x386>
 800d850:	6859      	ldr	r1, [r3, #4]
 800d852:	f021 0103 	bic.w	r1, r1, #3
 800d856:	1b4a      	subs	r2, r1, r5
 800d858:	2a0f      	cmp	r2, #15
 800d85a:	ddf2      	ble.n	800d842 <_malloc_r+0x13a>
 800d85c:	e9d3 8e02 	ldrd	r8, lr, [r3, #8]
 800d860:	195c      	adds	r4, r3, r5
 800d862:	f045 0501 	orr.w	r5, r5, #1
 800d866:	605d      	str	r5, [r3, #4]
 800d868:	f042 0501 	orr.w	r5, r2, #1
 800d86c:	f8c8 e00c 	str.w	lr, [r8, #12]
 800d870:	4630      	mov	r0, r6
 800d872:	f8ce 8008 	str.w	r8, [lr, #8]
 800d876:	e9c7 4404 	strd	r4, r4, [r7, #16]
 800d87a:	e9c4 cc02 	strd	ip, ip, [r4, #8]
 800d87e:	6065      	str	r5, [r4, #4]
 800d880:	505a      	str	r2, [r3, r1]
 800d882:	9300      	str	r3, [sp, #0]
 800d884:	f000 fae6 	bl	800de54 <__malloc_unlock>
 800d888:	9b00      	ldr	r3, [sp, #0]
 800d88a:	f103 0408 	add.w	r4, r3, #8
 800d88e:	e002      	b.n	800d896 <_malloc_r+0x18e>
 800d890:	230c      	movs	r3, #12
 800d892:	6033      	str	r3, [r6, #0]
 800d894:	2400      	movs	r4, #0
 800d896:	4620      	mov	r0, r4
 800d898:	b003      	add	sp, #12
 800d89a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d89e:	f44f 7300 	mov.w	r3, #512	; 0x200
 800d8a2:	2040      	movs	r0, #64	; 0x40
 800d8a4:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 800d8a8:	e773      	b.n	800d792 <_malloc_r+0x8a>
 800d8aa:	68dc      	ldr	r4, [r3, #12]
 800d8ac:	42a3      	cmp	r3, r4
 800d8ae:	bf08      	it	eq
 800d8b0:	3002      	addeq	r0, #2
 800d8b2:	f47f af41 	bne.w	800d738 <_malloc_r+0x30>
 800d8b6:	693c      	ldr	r4, [r7, #16]
 800d8b8:	f8df c16c 	ldr.w	ip, [pc, #364]	; 800da28 <_malloc_r+0x320>
 800d8bc:	4564      	cmp	r4, ip
 800d8be:	d182      	bne.n	800d7c6 <_malloc_r+0xbe>
 800d8c0:	687b      	ldr	r3, [r7, #4]
 800d8c2:	1082      	asrs	r2, r0, #2
 800d8c4:	2401      	movs	r4, #1
 800d8c6:	4094      	lsls	r4, r2
 800d8c8:	429c      	cmp	r4, r3
 800d8ca:	d9a8      	bls.n	800d81e <_malloc_r+0x116>
 800d8cc:	68bc      	ldr	r4, [r7, #8]
 800d8ce:	6863      	ldr	r3, [r4, #4]
 800d8d0:	f023 0803 	bic.w	r8, r3, #3
 800d8d4:	45a8      	cmp	r8, r5
 800d8d6:	d303      	bcc.n	800d8e0 <_malloc_r+0x1d8>
 800d8d8:	eba8 0305 	sub.w	r3, r8, r5
 800d8dc:	2b0f      	cmp	r3, #15
 800d8de:	dc7a      	bgt.n	800d9d6 <_malloc_r+0x2ce>
 800d8e0:	f8df 9148 	ldr.w	r9, [pc, #328]	; 800da2c <_malloc_r+0x324>
 800d8e4:	4b4c      	ldr	r3, [pc, #304]	; (800da18 <_malloc_r+0x310>)
 800d8e6:	f8d9 2000 	ldr.w	r2, [r9]
 800d8ea:	681b      	ldr	r3, [r3, #0]
 800d8ec:	3201      	adds	r2, #1
 800d8ee:	442b      	add	r3, r5
 800d8f0:	eb04 0a08 	add.w	sl, r4, r8
 800d8f4:	f000 813c 	beq.w	800db70 <_malloc_r+0x468>
 800d8f8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800d8fc:	330f      	adds	r3, #15
 800d8fe:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
 800d902:	f02b 0b0f 	bic.w	fp, fp, #15
 800d906:	4659      	mov	r1, fp
 800d908:	4630      	mov	r0, r6
 800d90a:	f7fc fee1 	bl	800a6d0 <_sbrk_r>
 800d90e:	1c41      	adds	r1, r0, #1
 800d910:	4602      	mov	r2, r0
 800d912:	f000 80fc 	beq.w	800db0e <_malloc_r+0x406>
 800d916:	4582      	cmp	sl, r0
 800d918:	f200 80f7 	bhi.w	800db0a <_malloc_r+0x402>
 800d91c:	4b3f      	ldr	r3, [pc, #252]	; (800da1c <_malloc_r+0x314>)
 800d91e:	6818      	ldr	r0, [r3, #0]
 800d920:	4458      	add	r0, fp
 800d922:	6018      	str	r0, [r3, #0]
 800d924:	4601      	mov	r1, r0
 800d926:	f000 8157 	beq.w	800dbd8 <_malloc_r+0x4d0>
 800d92a:	f8d9 0000 	ldr.w	r0, [r9]
 800d92e:	9301      	str	r3, [sp, #4]
 800d930:	3001      	adds	r0, #1
 800d932:	bf1b      	ittet	ne
 800d934:	eba2 0a0a 	subne.w	sl, r2, sl
 800d938:	4451      	addne	r1, sl
 800d93a:	f8c9 2000 	streq.w	r2, [r9]
 800d93e:	6019      	strne	r1, [r3, #0]
 800d940:	f012 0a07 	ands.w	sl, r2, #7
 800d944:	f000 8120 	beq.w	800db88 <_malloc_r+0x480>
 800d948:	f1ca 0108 	rsb	r1, sl, #8
 800d94c:	440a      	add	r2, r1
 800d94e:	f5ca 5180 	rsb	r1, sl, #4096	; 0x1000
 800d952:	4493      	add	fp, r2
 800d954:	3108      	adds	r1, #8
 800d956:	eba1 010b 	sub.w	r1, r1, fp
 800d95a:	f3c1 090b 	ubfx	r9, r1, #0, #12
 800d95e:	4649      	mov	r1, r9
 800d960:	4630      	mov	r0, r6
 800d962:	9200      	str	r2, [sp, #0]
 800d964:	f7fc feb4 	bl	800a6d0 <_sbrk_r>
 800d968:	1c42      	adds	r2, r0, #1
 800d96a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800d96e:	f000 8158 	beq.w	800dc22 <_malloc_r+0x51a>
 800d972:	1a80      	subs	r0, r0, r2
 800d974:	eb00 0b09 	add.w	fp, r0, r9
 800d978:	6818      	ldr	r0, [r3, #0]
 800d97a:	60ba      	str	r2, [r7, #8]
 800d97c:	f04b 0101 	orr.w	r1, fp, #1
 800d980:	4448      	add	r0, r9
 800d982:	42bc      	cmp	r4, r7
 800d984:	6051      	str	r1, [r2, #4]
 800d986:	6018      	str	r0, [r3, #0]
 800d988:	f000 8132 	beq.w	800dbf0 <_malloc_r+0x4e8>
 800d98c:	f1b8 0f0f 	cmp.w	r8, #15
 800d990:	f240 8130 	bls.w	800dbf4 <_malloc_r+0x4ec>
 800d994:	6861      	ldr	r1, [r4, #4]
 800d996:	f1a8 0c0c 	sub.w	ip, r8, #12
 800d99a:	f02c 0c07 	bic.w	ip, ip, #7
 800d99e:	f001 0101 	and.w	r1, r1, #1
 800d9a2:	eb04 0e0c 	add.w	lr, r4, ip
 800d9a6:	ea41 010c 	orr.w	r1, r1, ip
 800d9aa:	f04f 0805 	mov.w	r8, #5
 800d9ae:	f1bc 0f0f 	cmp.w	ip, #15
 800d9b2:	6061      	str	r1, [r4, #4]
 800d9b4:	e9ce 8801 	strd	r8, r8, [lr, #4]
 800d9b8:	f200 813b 	bhi.w	800dc32 <_malloc_r+0x52a>
 800d9bc:	6851      	ldr	r1, [r2, #4]
 800d9be:	4614      	mov	r4, r2
 800d9c0:	4b17      	ldr	r3, [pc, #92]	; (800da20 <_malloc_r+0x318>)
 800d9c2:	681a      	ldr	r2, [r3, #0]
 800d9c4:	4282      	cmp	r2, r0
 800d9c6:	bf38      	it	cc
 800d9c8:	6018      	strcc	r0, [r3, #0]
 800d9ca:	4b16      	ldr	r3, [pc, #88]	; (800da24 <_malloc_r+0x31c>)
 800d9cc:	681a      	ldr	r2, [r3, #0]
 800d9ce:	4282      	cmp	r2, r0
 800d9d0:	bf38      	it	cc
 800d9d2:	6018      	strcc	r0, [r3, #0]
 800d9d4:	e09d      	b.n	800db12 <_malloc_r+0x40a>
 800d9d6:	1962      	adds	r2, r4, r5
 800d9d8:	f043 0301 	orr.w	r3, r3, #1
 800d9dc:	f045 0501 	orr.w	r5, r5, #1
 800d9e0:	6065      	str	r5, [r4, #4]
 800d9e2:	4630      	mov	r0, r6
 800d9e4:	60ba      	str	r2, [r7, #8]
 800d9e6:	6053      	str	r3, [r2, #4]
 800d9e8:	f000 fa34 	bl	800de54 <__malloc_unlock>
 800d9ec:	3408      	adds	r4, #8
 800d9ee:	4620      	mov	r0, r4
 800d9f0:	b003      	add	sp, #12
 800d9f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9f6:	4423      	add	r3, r4
 800d9f8:	68e1      	ldr	r1, [r4, #12]
 800d9fa:	685a      	ldr	r2, [r3, #4]
 800d9fc:	68a5      	ldr	r5, [r4, #8]
 800d9fe:	f042 0201 	orr.w	r2, r2, #1
 800da02:	60e9      	str	r1, [r5, #12]
 800da04:	4630      	mov	r0, r6
 800da06:	608d      	str	r5, [r1, #8]
 800da08:	605a      	str	r2, [r3, #4]
 800da0a:	f000 fa23 	bl	800de54 <__malloc_unlock>
 800da0e:	3408      	adds	r4, #8
 800da10:	e741      	b.n	800d896 <_malloc_r+0x18e>
 800da12:	bf00      	nop
 800da14:	20000c38 	.word	0x20000c38
 800da18:	200026ac 	.word	0x200026ac
 800da1c:	2000267c 	.word	0x2000267c
 800da20:	200026a4 	.word	0x200026a4
 800da24:	200026a8 	.word	0x200026a8
 800da28:	20000c40 	.word	0x20000c40
 800da2c:	20001040 	.word	0x20001040
 800da30:	0a5a      	lsrs	r2, r3, #9
 800da32:	2a04      	cmp	r2, #4
 800da34:	d963      	bls.n	800dafe <_malloc_r+0x3f6>
 800da36:	2a14      	cmp	r2, #20
 800da38:	f200 80b7 	bhi.w	800dbaa <_malloc_r+0x4a2>
 800da3c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
 800da40:	00c9      	lsls	r1, r1, #3
 800da42:	325b      	adds	r2, #91	; 0x5b
 800da44:	eb07 0e01 	add.w	lr, r7, r1
 800da48:	5879      	ldr	r1, [r7, r1]
 800da4a:	f1ae 0e08 	sub.w	lr, lr, #8
 800da4e:	458e      	cmp	lr, r1
 800da50:	f000 8091 	beq.w	800db76 <_malloc_r+0x46e>
 800da54:	684a      	ldr	r2, [r1, #4]
 800da56:	f022 0203 	bic.w	r2, r2, #3
 800da5a:	429a      	cmp	r2, r3
 800da5c:	d902      	bls.n	800da64 <_malloc_r+0x35c>
 800da5e:	6889      	ldr	r1, [r1, #8]
 800da60:	458e      	cmp	lr, r1
 800da62:	d1f7      	bne.n	800da54 <_malloc_r+0x34c>
 800da64:	f8d1 e00c 	ldr.w	lr, [r1, #12]
 800da68:	687b      	ldr	r3, [r7, #4]
 800da6a:	e9c4 1e02 	strd	r1, lr, [r4, #8]
 800da6e:	f8ce 4008 	str.w	r4, [lr, #8]
 800da72:	60cc      	str	r4, [r1, #12]
 800da74:	e6ce      	b.n	800d814 <_malloc_r+0x10c>
 800da76:	2b14      	cmp	r3, #20
 800da78:	d959      	bls.n	800db2e <_malloc_r+0x426>
 800da7a:	2b54      	cmp	r3, #84	; 0x54
 800da7c:	f200 809d 	bhi.w	800dbba <_malloc_r+0x4b2>
 800da80:	0b2b      	lsrs	r3, r5, #12
 800da82:	f103 006f 	add.w	r0, r3, #111	; 0x6f
 800da86:	f103 0c6e 	add.w	ip, r3, #110	; 0x6e
 800da8a:	00c3      	lsls	r3, r0, #3
 800da8c:	e681      	b.n	800d792 <_malloc_r+0x8a>
 800da8e:	f108 0801 	add.w	r8, r8, #1
 800da92:	f018 0f03 	tst.w	r8, #3
 800da96:	f10e 0e08 	add.w	lr, lr, #8
 800da9a:	f47f aecd 	bne.w	800d838 <_malloc_r+0x130>
 800da9e:	e051      	b.n	800db44 <_malloc_r+0x43c>
 800daa0:	4419      	add	r1, r3
 800daa2:	461c      	mov	r4, r3
 800daa4:	684a      	ldr	r2, [r1, #4]
 800daa6:	68db      	ldr	r3, [r3, #12]
 800daa8:	f854 5f08 	ldr.w	r5, [r4, #8]!
 800daac:	f042 0201 	orr.w	r2, r2, #1
 800dab0:	604a      	str	r2, [r1, #4]
 800dab2:	4630      	mov	r0, r6
 800dab4:	60eb      	str	r3, [r5, #12]
 800dab6:	609d      	str	r5, [r3, #8]
 800dab8:	f000 f9cc 	bl	800de54 <__malloc_unlock>
 800dabc:	e6eb      	b.n	800d896 <_malloc_r+0x18e>
 800dabe:	08e8      	lsrs	r0, r5, #3
 800dac0:	f105 0308 	add.w	r3, r5, #8
 800dac4:	e630      	b.n	800d728 <_malloc_r+0x20>
 800dac6:	4423      	add	r3, r4
 800dac8:	4630      	mov	r0, r6
 800daca:	685a      	ldr	r2, [r3, #4]
 800dacc:	f042 0201 	orr.w	r2, r2, #1
 800dad0:	605a      	str	r2, [r3, #4]
 800dad2:	3408      	adds	r4, #8
 800dad4:	f000 f9be 	bl	800de54 <__malloc_unlock>
 800dad8:	e6dd      	b.n	800d896 <_malloc_r+0x18e>
 800dada:	1961      	adds	r1, r4, r5
 800dadc:	f045 0e01 	orr.w	lr, r5, #1
 800dae0:	f042 0501 	orr.w	r5, r2, #1
 800dae4:	f8c4 e004 	str.w	lr, [r4, #4]
 800dae8:	4630      	mov	r0, r6
 800daea:	e9c7 1104 	strd	r1, r1, [r7, #16]
 800daee:	e9c1 cc02 	strd	ip, ip, [r1, #8]
 800daf2:	604d      	str	r5, [r1, #4]
 800daf4:	50e2      	str	r2, [r4, r3]
 800daf6:	f000 f9ad 	bl	800de54 <__malloc_unlock>
 800dafa:	3408      	adds	r4, #8
 800dafc:	e6cb      	b.n	800d896 <_malloc_r+0x18e>
 800dafe:	099a      	lsrs	r2, r3, #6
 800db00:	f102 0139 	add.w	r1, r2, #57	; 0x39
 800db04:	00c9      	lsls	r1, r1, #3
 800db06:	3238      	adds	r2, #56	; 0x38
 800db08:	e79c      	b.n	800da44 <_malloc_r+0x33c>
 800db0a:	42bc      	cmp	r4, r7
 800db0c:	d05f      	beq.n	800dbce <_malloc_r+0x4c6>
 800db0e:	68bc      	ldr	r4, [r7, #8]
 800db10:	6861      	ldr	r1, [r4, #4]
 800db12:	f021 0b03 	bic.w	fp, r1, #3
 800db16:	45ab      	cmp	fp, r5
 800db18:	ebab 0305 	sub.w	r3, fp, r5
 800db1c:	d302      	bcc.n	800db24 <_malloc_r+0x41c>
 800db1e:	2b0f      	cmp	r3, #15
 800db20:	f73f af59 	bgt.w	800d9d6 <_malloc_r+0x2ce>
 800db24:	4630      	mov	r0, r6
 800db26:	f000 f995 	bl	800de54 <__malloc_unlock>
 800db2a:	2400      	movs	r4, #0
 800db2c:	e6b3      	b.n	800d896 <_malloc_r+0x18e>
 800db2e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
 800db32:	f103 0c5b 	add.w	ip, r3, #91	; 0x5b
 800db36:	00c3      	lsls	r3, r0, #3
 800db38:	e62b      	b.n	800d792 <_malloc_r+0x8a>
 800db3a:	f859 3908 	ldr.w	r3, [r9], #-8
 800db3e:	454b      	cmp	r3, r9
 800db40:	f040 8096 	bne.w	800dc70 <_malloc_r+0x568>
 800db44:	f010 0f03 	tst.w	r0, #3
 800db48:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 800db4c:	d1f5      	bne.n	800db3a <_malloc_r+0x432>
 800db4e:	687b      	ldr	r3, [r7, #4]
 800db50:	ea23 0304 	bic.w	r3, r3, r4
 800db54:	607b      	str	r3, [r7, #4]
 800db56:	0064      	lsls	r4, r4, #1
 800db58:	429c      	cmp	r4, r3
 800db5a:	f63f aeb7 	bhi.w	800d8cc <_malloc_r+0x1c4>
 800db5e:	b91c      	cbnz	r4, 800db68 <_malloc_r+0x460>
 800db60:	e6b4      	b.n	800d8cc <_malloc_r+0x1c4>
 800db62:	0064      	lsls	r4, r4, #1
 800db64:	f108 0804 	add.w	r8, r8, #4
 800db68:	421c      	tst	r4, r3
 800db6a:	d0fa      	beq.n	800db62 <_malloc_r+0x45a>
 800db6c:	4640      	mov	r0, r8
 800db6e:	e65f      	b.n	800d830 <_malloc_r+0x128>
 800db70:	f103 0b10 	add.w	fp, r3, #16
 800db74:	e6c7      	b.n	800d906 <_malloc_r+0x1fe>
 800db76:	687b      	ldr	r3, [r7, #4]
 800db78:	1092      	asrs	r2, r2, #2
 800db7a:	f04f 0801 	mov.w	r8, #1
 800db7e:	fa08 f202 	lsl.w	r2, r8, r2
 800db82:	4313      	orrs	r3, r2
 800db84:	607b      	str	r3, [r7, #4]
 800db86:	e770      	b.n	800da6a <_malloc_r+0x362>
 800db88:	eb02 000b 	add.w	r0, r2, fp
 800db8c:	4240      	negs	r0, r0
 800db8e:	f3c0 090b 	ubfx	r9, r0, #0, #12
 800db92:	4649      	mov	r1, r9
 800db94:	4630      	mov	r0, r6
 800db96:	9200      	str	r2, [sp, #0]
 800db98:	f7fc fd9a 	bl	800a6d0 <_sbrk_r>
 800db9c:	1c43      	adds	r3, r0, #1
 800db9e:	e9dd 2300 	ldrd	r2, r3, [sp]
 800dba2:	f47f aee6 	bne.w	800d972 <_malloc_r+0x26a>
 800dba6:	46d1      	mov	r9, sl
 800dba8:	e6e6      	b.n	800d978 <_malloc_r+0x270>
 800dbaa:	2a54      	cmp	r2, #84	; 0x54
 800dbac:	d825      	bhi.n	800dbfa <_malloc_r+0x4f2>
 800dbae:	0b1a      	lsrs	r2, r3, #12
 800dbb0:	f102 016f 	add.w	r1, r2, #111	; 0x6f
 800dbb4:	00c9      	lsls	r1, r1, #3
 800dbb6:	326e      	adds	r2, #110	; 0x6e
 800dbb8:	e744      	b.n	800da44 <_malloc_r+0x33c>
 800dbba:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 800dbbe:	d825      	bhi.n	800dc0c <_malloc_r+0x504>
 800dbc0:	0beb      	lsrs	r3, r5, #15
 800dbc2:	f103 0078 	add.w	r0, r3, #120	; 0x78
 800dbc6:	f103 0c77 	add.w	ip, r3, #119	; 0x77
 800dbca:	00c3      	lsls	r3, r0, #3
 800dbcc:	e5e1      	b.n	800d792 <_malloc_r+0x8a>
 800dbce:	4b29      	ldr	r3, [pc, #164]	; (800dc74 <_malloc_r+0x56c>)
 800dbd0:	6819      	ldr	r1, [r3, #0]
 800dbd2:	4459      	add	r1, fp
 800dbd4:	6019      	str	r1, [r3, #0]
 800dbd6:	e6a8      	b.n	800d92a <_malloc_r+0x222>
 800dbd8:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
 800dbdc:	f1bc 0f00 	cmp.w	ip, #0
 800dbe0:	f47f aea3 	bne.w	800d92a <_malloc_r+0x222>
 800dbe4:	44c3      	add	fp, r8
 800dbe6:	68bc      	ldr	r4, [r7, #8]
 800dbe8:	f04b 0101 	orr.w	r1, fp, #1
 800dbec:	6061      	str	r1, [r4, #4]
 800dbee:	e6e7      	b.n	800d9c0 <_malloc_r+0x2b8>
 800dbf0:	4614      	mov	r4, r2
 800dbf2:	e6e5      	b.n	800d9c0 <_malloc_r+0x2b8>
 800dbf4:	2301      	movs	r3, #1
 800dbf6:	6053      	str	r3, [r2, #4]
 800dbf8:	e794      	b.n	800db24 <_malloc_r+0x41c>
 800dbfa:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800dbfe:	d823      	bhi.n	800dc48 <_malloc_r+0x540>
 800dc00:	0bda      	lsrs	r2, r3, #15
 800dc02:	f102 0178 	add.w	r1, r2, #120	; 0x78
 800dc06:	00c9      	lsls	r1, r1, #3
 800dc08:	3277      	adds	r2, #119	; 0x77
 800dc0a:	e71b      	b.n	800da44 <_malloc_r+0x33c>
 800dc0c:	f240 5254 	movw	r2, #1364	; 0x554
 800dc10:	4293      	cmp	r3, r2
 800dc12:	d823      	bhi.n	800dc5c <_malloc_r+0x554>
 800dc14:	0cab      	lsrs	r3, r5, #18
 800dc16:	f103 007d 	add.w	r0, r3, #125	; 0x7d
 800dc1a:	f103 0c7c 	add.w	ip, r3, #124	; 0x7c
 800dc1e:	00c3      	lsls	r3, r0, #3
 800dc20:	e5b7      	b.n	800d792 <_malloc_r+0x8a>
 800dc22:	f1aa 0a08 	sub.w	sl, sl, #8
 800dc26:	44d3      	add	fp, sl
 800dc28:	ebab 0b02 	sub.w	fp, fp, r2
 800dc2c:	f04f 0900 	mov.w	r9, #0
 800dc30:	e6a2      	b.n	800d978 <_malloc_r+0x270>
 800dc32:	f104 0108 	add.w	r1, r4, #8
 800dc36:	4630      	mov	r0, r6
 800dc38:	9300      	str	r3, [sp, #0]
 800dc3a:	f003 fb2f 	bl	801129c <_free_r>
 800dc3e:	68bc      	ldr	r4, [r7, #8]
 800dc40:	9b00      	ldr	r3, [sp, #0]
 800dc42:	6861      	ldr	r1, [r4, #4]
 800dc44:	6818      	ldr	r0, [r3, #0]
 800dc46:	e6bb      	b.n	800d9c0 <_malloc_r+0x2b8>
 800dc48:	f240 5154 	movw	r1, #1364	; 0x554
 800dc4c:	428a      	cmp	r2, r1
 800dc4e:	d80b      	bhi.n	800dc68 <_malloc_r+0x560>
 800dc50:	0c9a      	lsrs	r2, r3, #18
 800dc52:	f102 017d 	add.w	r1, r2, #125	; 0x7d
 800dc56:	00c9      	lsls	r1, r1, #3
 800dc58:	327c      	adds	r2, #124	; 0x7c
 800dc5a:	e6f3      	b.n	800da44 <_malloc_r+0x33c>
 800dc5c:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
 800dc60:	207f      	movs	r0, #127	; 0x7f
 800dc62:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
 800dc66:	e594      	b.n	800d792 <_malloc_r+0x8a>
 800dc68:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800dc6c:	227e      	movs	r2, #126	; 0x7e
 800dc6e:	e6e9      	b.n	800da44 <_malloc_r+0x33c>
 800dc70:	687b      	ldr	r3, [r7, #4]
 800dc72:	e770      	b.n	800db56 <_malloc_r+0x44e>
 800dc74:	2000267c 	.word	0x2000267c

0800dc78 <memcmp>:
 800dc78:	2a03      	cmp	r2, #3
 800dc7a:	b470      	push	{r4, r5, r6}
 800dc7c:	d912      	bls.n	800dca4 <memcmp+0x2c>
 800dc7e:	ea40 0501 	orr.w	r5, r0, r1
 800dc82:	07ad      	lsls	r5, r5, #30
 800dc84:	4604      	mov	r4, r0
 800dc86:	460b      	mov	r3, r1
 800dc88:	d120      	bne.n	800dccc <memcmp+0x54>
 800dc8a:	4619      	mov	r1, r3
 800dc8c:	4620      	mov	r0, r4
 800dc8e:	f853 5b04 	ldr.w	r5, [r3], #4
 800dc92:	f854 6b04 	ldr.w	r6, [r4], #4
 800dc96:	42ae      	cmp	r6, r5
 800dc98:	d118      	bne.n	800dccc <memcmp+0x54>
 800dc9a:	3a04      	subs	r2, #4
 800dc9c:	2a03      	cmp	r2, #3
 800dc9e:	4620      	mov	r0, r4
 800dca0:	4619      	mov	r1, r3
 800dca2:	d8f2      	bhi.n	800dc8a <memcmp+0x12>
 800dca4:	1e54      	subs	r4, r2, #1
 800dca6:	b172      	cbz	r2, 800dcc6 <memcmp+0x4e>
 800dca8:	7803      	ldrb	r3, [r0, #0]
 800dcaa:	780a      	ldrb	r2, [r1, #0]
 800dcac:	429a      	cmp	r2, r3
 800dcae:	bf08      	it	eq
 800dcb0:	1824      	addeq	r4, r4, r0
 800dcb2:	d006      	beq.n	800dcc2 <memcmp+0x4a>
 800dcb4:	e00c      	b.n	800dcd0 <memcmp+0x58>
 800dcb6:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800dcba:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800dcbe:	4293      	cmp	r3, r2
 800dcc0:	d106      	bne.n	800dcd0 <memcmp+0x58>
 800dcc2:	42a0      	cmp	r0, r4
 800dcc4:	d1f7      	bne.n	800dcb6 <memcmp+0x3e>
 800dcc6:	2000      	movs	r0, #0
 800dcc8:	bc70      	pop	{r4, r5, r6}
 800dcca:	4770      	bx	lr
 800dccc:	1e54      	subs	r4, r2, #1
 800dcce:	e7eb      	b.n	800dca8 <memcmp+0x30>
 800dcd0:	1a98      	subs	r0, r3, r2
 800dcd2:	bc70      	pop	{r4, r5, r6}
 800dcd4:	4770      	bx	lr
 800dcd6:	bf00      	nop

0800dcd8 <memmove>:
 800dcd8:	4288      	cmp	r0, r1
 800dcda:	b4f0      	push	{r4, r5, r6, r7}
 800dcdc:	d90d      	bls.n	800dcfa <memmove+0x22>
 800dcde:	188b      	adds	r3, r1, r2
 800dce0:	4283      	cmp	r3, r0
 800dce2:	d90a      	bls.n	800dcfa <memmove+0x22>
 800dce4:	1884      	adds	r4, r0, r2
 800dce6:	b132      	cbz	r2, 800dcf6 <memmove+0x1e>
 800dce8:	4622      	mov	r2, r4
 800dcea:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800dcee:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800dcf2:	4299      	cmp	r1, r3
 800dcf4:	d1f9      	bne.n	800dcea <memmove+0x12>
 800dcf6:	bcf0      	pop	{r4, r5, r6, r7}
 800dcf8:	4770      	bx	lr
 800dcfa:	2a0f      	cmp	r2, #15
 800dcfc:	d80e      	bhi.n	800dd1c <memmove+0x44>
 800dcfe:	4603      	mov	r3, r0
 800dd00:	1e54      	subs	r4, r2, #1
 800dd02:	2a00      	cmp	r2, #0
 800dd04:	d0f7      	beq.n	800dcf6 <memmove+0x1e>
 800dd06:	3401      	adds	r4, #1
 800dd08:	440c      	add	r4, r1
 800dd0a:	3b01      	subs	r3, #1
 800dd0c:	f811 2b01 	ldrb.w	r2, [r1], #1
 800dd10:	f803 2f01 	strb.w	r2, [r3, #1]!
 800dd14:	42a1      	cmp	r1, r4
 800dd16:	d1f9      	bne.n	800dd0c <memmove+0x34>
 800dd18:	bcf0      	pop	{r4, r5, r6, r7}
 800dd1a:	4770      	bx	lr
 800dd1c:	ea40 0301 	orr.w	r3, r0, r1
 800dd20:	079b      	lsls	r3, r3, #30
 800dd22:	d13b      	bne.n	800dd9c <memmove+0xc4>
 800dd24:	f1a2 0710 	sub.w	r7, r2, #16
 800dd28:	093f      	lsrs	r7, r7, #4
 800dd2a:	f101 0620 	add.w	r6, r1, #32
 800dd2e:	eb06 1607 	add.w	r6, r6, r7, lsl #4
 800dd32:	f101 0310 	add.w	r3, r1, #16
 800dd36:	f100 0410 	add.w	r4, r0, #16
 800dd3a:	f853 5c10 	ldr.w	r5, [r3, #-16]
 800dd3e:	f844 5c10 	str.w	r5, [r4, #-16]
 800dd42:	f853 5c0c 	ldr.w	r5, [r3, #-12]
 800dd46:	f844 5c0c 	str.w	r5, [r4, #-12]
 800dd4a:	f853 5c08 	ldr.w	r5, [r3, #-8]
 800dd4e:	f844 5c08 	str.w	r5, [r4, #-8]
 800dd52:	f853 5c04 	ldr.w	r5, [r3, #-4]
 800dd56:	f844 5c04 	str.w	r5, [r4, #-4]
 800dd5a:	3310      	adds	r3, #16
 800dd5c:	42b3      	cmp	r3, r6
 800dd5e:	f104 0410 	add.w	r4, r4, #16
 800dd62:	d1ea      	bne.n	800dd3a <memmove+0x62>
 800dd64:	1c7b      	adds	r3, r7, #1
 800dd66:	011b      	lsls	r3, r3, #4
 800dd68:	f012 0f0c 	tst.w	r2, #12
 800dd6c:	4419      	add	r1, r3
 800dd6e:	f002 050f 	and.w	r5, r2, #15
 800dd72:	4403      	add	r3, r0
 800dd74:	d015      	beq.n	800dda2 <memmove+0xca>
 800dd76:	3d04      	subs	r5, #4
 800dd78:	08ad      	lsrs	r5, r5, #2
 800dd7a:	eb03 0c85 	add.w	ip, r3, r5, lsl #2
 800dd7e:	1f1c      	subs	r4, r3, #4
 800dd80:	460e      	mov	r6, r1
 800dd82:	f856 7b04 	ldr.w	r7, [r6], #4
 800dd86:	f844 7f04 	str.w	r7, [r4, #4]!
 800dd8a:	4564      	cmp	r4, ip
 800dd8c:	d1f9      	bne.n	800dd82 <memmove+0xaa>
 800dd8e:	3501      	adds	r5, #1
 800dd90:	00ad      	lsls	r5, r5, #2
 800dd92:	442b      	add	r3, r5
 800dd94:	4429      	add	r1, r5
 800dd96:	f002 0203 	and.w	r2, r2, #3
 800dd9a:	e7b1      	b.n	800dd00 <memmove+0x28>
 800dd9c:	1e54      	subs	r4, r2, #1
 800dd9e:	4603      	mov	r3, r0
 800dda0:	e7b1      	b.n	800dd06 <memmove+0x2e>
 800dda2:	462a      	mov	r2, r5
 800dda4:	e7ac      	b.n	800dd00 <memmove+0x28>
 800dda6:	bf00      	nop

0800dda8 <memset>:
 800dda8:	b4f0      	push	{r4, r5, r6, r7}
 800ddaa:	0786      	lsls	r6, r0, #30
 800ddac:	d046      	beq.n	800de3c <memset+0x94>
 800ddae:	1e54      	subs	r4, r2, #1
 800ddb0:	2a00      	cmp	r2, #0
 800ddb2:	d03c      	beq.n	800de2e <memset+0x86>
 800ddb4:	b2ca      	uxtb	r2, r1
 800ddb6:	4603      	mov	r3, r0
 800ddb8:	e002      	b.n	800ddc0 <memset+0x18>
 800ddba:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
 800ddbe:	d336      	bcc.n	800de2e <memset+0x86>
 800ddc0:	f803 2b01 	strb.w	r2, [r3], #1
 800ddc4:	079d      	lsls	r5, r3, #30
 800ddc6:	d1f8      	bne.n	800ddba <memset+0x12>
 800ddc8:	2c03      	cmp	r4, #3
 800ddca:	d929      	bls.n	800de20 <memset+0x78>
 800ddcc:	b2cd      	uxtb	r5, r1
 800ddce:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 800ddd2:	2c0f      	cmp	r4, #15
 800ddd4:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 800ddd8:	d933      	bls.n	800de42 <memset+0x9a>
 800ddda:	f1a4 0610 	sub.w	r6, r4, #16
 800ddde:	0936      	lsrs	r6, r6, #4
 800dde0:	f103 0720 	add.w	r7, r3, #32
 800dde4:	eb07 1706 	add.w	r7, r7, r6, lsl #4
 800dde8:	f103 0210 	add.w	r2, r3, #16
 800ddec:	e942 5504 	strd	r5, r5, [r2, #-16]
 800ddf0:	e942 5502 	strd	r5, r5, [r2, #-8]
 800ddf4:	3210      	adds	r2, #16
 800ddf6:	42ba      	cmp	r2, r7
 800ddf8:	d1f8      	bne.n	800ddec <memset+0x44>
 800ddfa:	1c72      	adds	r2, r6, #1
 800ddfc:	f014 0f0c 	tst.w	r4, #12
 800de00:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 800de04:	f004 060f 	and.w	r6, r4, #15
 800de08:	d013      	beq.n	800de32 <memset+0x8a>
 800de0a:	1f33      	subs	r3, r6, #4
 800de0c:	f023 0303 	bic.w	r3, r3, #3
 800de10:	3304      	adds	r3, #4
 800de12:	4413      	add	r3, r2
 800de14:	f842 5b04 	str.w	r5, [r2], #4
 800de18:	4293      	cmp	r3, r2
 800de1a:	d1fb      	bne.n	800de14 <memset+0x6c>
 800de1c:	f006 0403 	and.w	r4, r6, #3
 800de20:	b12c      	cbz	r4, 800de2e <memset+0x86>
 800de22:	b2c9      	uxtb	r1, r1
 800de24:	441c      	add	r4, r3
 800de26:	f803 1b01 	strb.w	r1, [r3], #1
 800de2a:	429c      	cmp	r4, r3
 800de2c:	d1fb      	bne.n	800de26 <memset+0x7e>
 800de2e:	bcf0      	pop	{r4, r5, r6, r7}
 800de30:	4770      	bx	lr
 800de32:	4634      	mov	r4, r6
 800de34:	4613      	mov	r3, r2
 800de36:	2c00      	cmp	r4, #0
 800de38:	d1f3      	bne.n	800de22 <memset+0x7a>
 800de3a:	e7f8      	b.n	800de2e <memset+0x86>
 800de3c:	4614      	mov	r4, r2
 800de3e:	4603      	mov	r3, r0
 800de40:	e7c2      	b.n	800ddc8 <memset+0x20>
 800de42:	461a      	mov	r2, r3
 800de44:	4626      	mov	r6, r4
 800de46:	e7e0      	b.n	800de0a <memset+0x62>

0800de48 <__malloc_lock>:
 800de48:	4801      	ldr	r0, [pc, #4]	; (800de50 <__malloc_lock+0x8>)
 800de4a:	f7ff bc49 	b.w	800d6e0 <__retarget_lock_acquire_recursive>
 800de4e:	bf00      	nop
 800de50:	200026c0 	.word	0x200026c0

0800de54 <__malloc_unlock>:
 800de54:	4801      	ldr	r0, [pc, #4]	; (800de5c <__malloc_unlock+0x8>)
 800de56:	f7ff bc45 	b.w	800d6e4 <__retarget_lock_release_recursive>
 800de5a:	bf00      	nop
 800de5c:	200026c0 	.word	0x200026c0

0800de60 <_putc_r>:
 800de60:	b570      	push	{r4, r5, r6, lr}
 800de62:	460e      	mov	r6, r1
 800de64:	4614      	mov	r4, r2
 800de66:	4605      	mov	r5, r0
 800de68:	b108      	cbz	r0, 800de6e <_putc_r+0xe>
 800de6a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800de6c:	b1eb      	cbz	r3, 800deaa <_putc_r+0x4a>
 800de6e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800de70:	07d8      	lsls	r0, r3, #31
 800de72:	d402      	bmi.n	800de7a <_putc_r+0x1a>
 800de74:	89a3      	ldrh	r3, [r4, #12]
 800de76:	0599      	lsls	r1, r3, #22
 800de78:	d523      	bpl.n	800dec2 <_putc_r+0x62>
 800de7a:	68a3      	ldr	r3, [r4, #8]
 800de7c:	3b01      	subs	r3, #1
 800de7e:	2b00      	cmp	r3, #0
 800de80:	60a3      	str	r3, [r4, #8]
 800de82:	da1c      	bge.n	800debe <_putc_r+0x5e>
 800de84:	69a2      	ldr	r2, [r4, #24]
 800de86:	4293      	cmp	r3, r2
 800de88:	db12      	blt.n	800deb0 <_putc_r+0x50>
 800de8a:	b2f0      	uxtb	r0, r6
 800de8c:	280a      	cmp	r0, #10
 800de8e:	d00f      	beq.n	800deb0 <_putc_r+0x50>
 800de90:	6823      	ldr	r3, [r4, #0]
 800de92:	1c5a      	adds	r2, r3, #1
 800de94:	6022      	str	r2, [r4, #0]
 800de96:	4605      	mov	r5, r0
 800de98:	701e      	strb	r6, [r3, #0]
 800de9a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800de9c:	07da      	lsls	r2, r3, #31
 800de9e:	d402      	bmi.n	800dea6 <_putc_r+0x46>
 800dea0:	89a3      	ldrh	r3, [r4, #12]
 800dea2:	059b      	lsls	r3, r3, #22
 800dea4:	d511      	bpl.n	800deca <_putc_r+0x6a>
 800dea6:	4628      	mov	r0, r5
 800dea8:	bd70      	pop	{r4, r5, r6, pc}
 800deaa:	f003 f957 	bl	801115c <__sinit>
 800deae:	e7de      	b.n	800de6e <_putc_r+0xe>
 800deb0:	4628      	mov	r0, r5
 800deb2:	4631      	mov	r1, r6
 800deb4:	4622      	mov	r2, r4
 800deb6:	f001 ff79 	bl	800fdac <__swbuf_r>
 800deba:	4605      	mov	r5, r0
 800debc:	e7ed      	b.n	800de9a <_putc_r+0x3a>
 800debe:	b2f0      	uxtb	r0, r6
 800dec0:	e7e6      	b.n	800de90 <_putc_r+0x30>
 800dec2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800dec4:	f7ff fc0c 	bl	800d6e0 <__retarget_lock_acquire_recursive>
 800dec8:	e7d7      	b.n	800de7a <_putc_r+0x1a>
 800deca:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800decc:	f7ff fc0a 	bl	800d6e4 <__retarget_lock_release_recursive>
 800ded0:	4628      	mov	r0, r5
 800ded2:	bd70      	pop	{r4, r5, r6, pc}

0800ded4 <realloc>:
 800ded4:	4b02      	ldr	r3, [pc, #8]	; (800dee0 <realloc+0xc>)
 800ded6:	460a      	mov	r2, r1
 800ded8:	4601      	mov	r1, r0
 800deda:	6818      	ldr	r0, [r3, #0]
 800dedc:	f000 b802 	b.w	800dee4 <_realloc_r>
 800dee0:	20000808 	.word	0x20000808

0800dee4 <_realloc_r>:
 800dee4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dee8:	4617      	mov	r7, r2
 800deea:	2900      	cmp	r1, #0
 800deec:	f000 80bb 	beq.w	800e066 <_realloc_r+0x182>
 800def0:	f107 040b 	add.w	r4, r7, #11
 800def4:	4681      	mov	r9, r0
 800def6:	460d      	mov	r5, r1
 800def8:	f7ff ffa6 	bl	800de48 <__malloc_lock>
 800defc:	2c16      	cmp	r4, #22
 800defe:	d85e      	bhi.n	800dfbe <_realloc_r+0xda>
 800df00:	2410      	movs	r4, #16
 800df02:	4622      	mov	r2, r4
 800df04:	42a7      	cmp	r7, r4
 800df06:	d85f      	bhi.n	800dfc8 <_realloc_r+0xe4>
 800df08:	f855 ec04 	ldr.w	lr, [r5, #-4]
 800df0c:	f02e 0603 	bic.w	r6, lr, #3
 800df10:	f1a5 0808 	sub.w	r8, r5, #8
 800df14:	4296      	cmp	r6, r2
 800df16:	eb08 0a06 	add.w	sl, r8, r6
 800df1a:	f280 8081 	bge.w	800e020 <_realloc_r+0x13c>
 800df1e:	4bcb      	ldr	r3, [pc, #812]	; (800e24c <_realloc_r+0x368>)
 800df20:	f8da 0004 	ldr.w	r0, [sl, #4]
 800df24:	6899      	ldr	r1, [r3, #8]
 800df26:	4551      	cmp	r1, sl
 800df28:	f000 80b5 	beq.w	800e096 <_realloc_r+0x1b2>
 800df2c:	f020 0301 	bic.w	r3, r0, #1
 800df30:	4453      	add	r3, sl
 800df32:	685b      	ldr	r3, [r3, #4]
 800df34:	07db      	lsls	r3, r3, #31
 800df36:	f100 808a 	bmi.w	800e04e <_realloc_r+0x16a>
 800df3a:	f020 0003 	bic.w	r0, r0, #3
 800df3e:	1833      	adds	r3, r6, r0
 800df40:	4293      	cmp	r3, r2
 800df42:	f280 8112 	bge.w	800e16a <_realloc_r+0x286>
 800df46:	f01e 0f01 	tst.w	lr, #1
 800df4a:	d10f      	bne.n	800df6c <_realloc_r+0x88>
 800df4c:	f855 3c08 	ldr.w	r3, [r5, #-8]
 800df50:	eba8 0b03 	sub.w	fp, r8, r3
 800df54:	f8db 1004 	ldr.w	r1, [fp, #4]
 800df58:	f021 0103 	bic.w	r1, r1, #3
 800df5c:	4408      	add	r0, r1
 800df5e:	1983      	adds	r3, r0, r6
 800df60:	4293      	cmp	r3, r2
 800df62:	f280 8116 	bge.w	800e192 <_realloc_r+0x2ae>
 800df66:	1873      	adds	r3, r6, r1
 800df68:	4293      	cmp	r3, r2
 800df6a:	da34      	bge.n	800dfd6 <_realloc_r+0xf2>
 800df6c:	4639      	mov	r1, r7
 800df6e:	4648      	mov	r0, r9
 800df70:	f7ff fbca 	bl	800d708 <_malloc_r>
 800df74:	4607      	mov	r7, r0
 800df76:	b1e0      	cbz	r0, 800dfb2 <_realloc_r+0xce>
 800df78:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800df7c:	f023 0301 	bic.w	r3, r3, #1
 800df80:	4443      	add	r3, r8
 800df82:	f1a0 0208 	sub.w	r2, r0, #8
 800df86:	4293      	cmp	r3, r2
 800df88:	f000 80f7 	beq.w	800e17a <_realloc_r+0x296>
 800df8c:	1f32      	subs	r2, r6, #4
 800df8e:	2a24      	cmp	r2, #36	; 0x24
 800df90:	f200 80fb 	bhi.w	800e18a <_realloc_r+0x2a6>
 800df94:	2a13      	cmp	r2, #19
 800df96:	6829      	ldr	r1, [r5, #0]
 800df98:	f200 80c9 	bhi.w	800e12e <_realloc_r+0x24a>
 800df9c:	4603      	mov	r3, r0
 800df9e:	462a      	mov	r2, r5
 800dfa0:	6019      	str	r1, [r3, #0]
 800dfa2:	6851      	ldr	r1, [r2, #4]
 800dfa4:	6059      	str	r1, [r3, #4]
 800dfa6:	6892      	ldr	r2, [r2, #8]
 800dfa8:	609a      	str	r2, [r3, #8]
 800dfaa:	4629      	mov	r1, r5
 800dfac:	4648      	mov	r0, r9
 800dfae:	f003 f975 	bl	801129c <_free_r>
 800dfb2:	4648      	mov	r0, r9
 800dfb4:	f7ff ff4e 	bl	800de54 <__malloc_unlock>
 800dfb8:	4638      	mov	r0, r7
 800dfba:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dfbe:	f024 0407 	bic.w	r4, r4, #7
 800dfc2:	2c00      	cmp	r4, #0
 800dfc4:	4622      	mov	r2, r4
 800dfc6:	da9d      	bge.n	800df04 <_realloc_r+0x20>
 800dfc8:	230c      	movs	r3, #12
 800dfca:	f8c9 3000 	str.w	r3, [r9]
 800dfce:	2700      	movs	r7, #0
 800dfd0:	4638      	mov	r0, r7
 800dfd2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dfd6:	465f      	mov	r7, fp
 800dfd8:	f8db 100c 	ldr.w	r1, [fp, #12]
 800dfdc:	f857 0f08 	ldr.w	r0, [r7, #8]!
 800dfe0:	1f32      	subs	r2, r6, #4
 800dfe2:	2a24      	cmp	r2, #36	; 0x24
 800dfe4:	60c1      	str	r1, [r0, #12]
 800dfe6:	eb0b 0a03 	add.w	sl, fp, r3
 800dfea:	6088      	str	r0, [r1, #8]
 800dfec:	f200 80d9 	bhi.w	800e1a2 <_realloc_r+0x2be>
 800dff0:	2a13      	cmp	r2, #19
 800dff2:	6829      	ldr	r1, [r5, #0]
 800dff4:	f240 80d3 	bls.w	800e19e <_realloc_r+0x2ba>
 800dff8:	f8cb 1008 	str.w	r1, [fp, #8]
 800dffc:	6869      	ldr	r1, [r5, #4]
 800dffe:	f8cb 100c 	str.w	r1, [fp, #12]
 800e002:	2a1b      	cmp	r2, #27
 800e004:	68a9      	ldr	r1, [r5, #8]
 800e006:	f200 80e0 	bhi.w	800e1ca <_realloc_r+0x2e6>
 800e00a:	f10b 0210 	add.w	r2, fp, #16
 800e00e:	3508      	adds	r5, #8
 800e010:	6011      	str	r1, [r2, #0]
 800e012:	6869      	ldr	r1, [r5, #4]
 800e014:	6051      	str	r1, [r2, #4]
 800e016:	68a9      	ldr	r1, [r5, #8]
 800e018:	6091      	str	r1, [r2, #8]
 800e01a:	461e      	mov	r6, r3
 800e01c:	46d8      	mov	r8, fp
 800e01e:	463d      	mov	r5, r7
 800e020:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800e024:	1b32      	subs	r2, r6, r4
 800e026:	2a0f      	cmp	r2, #15
 800e028:	f003 0301 	and.w	r3, r3, #1
 800e02c:	d820      	bhi.n	800e070 <_realloc_r+0x18c>
 800e02e:	4333      	orrs	r3, r6
 800e030:	f8c8 3004 	str.w	r3, [r8, #4]
 800e034:	f8da 3004 	ldr.w	r3, [sl, #4]
 800e038:	f043 0301 	orr.w	r3, r3, #1
 800e03c:	f8ca 3004 	str.w	r3, [sl, #4]
 800e040:	4648      	mov	r0, r9
 800e042:	462f      	mov	r7, r5
 800e044:	f7ff ff06 	bl	800de54 <__malloc_unlock>
 800e048:	4638      	mov	r0, r7
 800e04a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e04e:	f01e 0f01 	tst.w	lr, #1
 800e052:	d18b      	bne.n	800df6c <_realloc_r+0x88>
 800e054:	f855 3c08 	ldr.w	r3, [r5, #-8]
 800e058:	eba8 0b03 	sub.w	fp, r8, r3
 800e05c:	f8db 1004 	ldr.w	r1, [fp, #4]
 800e060:	f021 0103 	bic.w	r1, r1, #3
 800e064:	e77f      	b.n	800df66 <_realloc_r+0x82>
 800e066:	4611      	mov	r1, r2
 800e068:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e06c:	f7ff bb4c 	b.w	800d708 <_malloc_r>
 800e070:	eb08 0104 	add.w	r1, r8, r4
 800e074:	4323      	orrs	r3, r4
 800e076:	f042 0201 	orr.w	r2, r2, #1
 800e07a:	f8c8 3004 	str.w	r3, [r8, #4]
 800e07e:	604a      	str	r2, [r1, #4]
 800e080:	f8da 3004 	ldr.w	r3, [sl, #4]
 800e084:	f043 0301 	orr.w	r3, r3, #1
 800e088:	3108      	adds	r1, #8
 800e08a:	f8ca 3004 	str.w	r3, [sl, #4]
 800e08e:	4648      	mov	r0, r9
 800e090:	f003 f904 	bl	801129c <_free_r>
 800e094:	e7d4      	b.n	800e040 <_realloc_r+0x15c>
 800e096:	f020 0003 	bic.w	r0, r0, #3
 800e09a:	1831      	adds	r1, r6, r0
 800e09c:	f104 0c10 	add.w	ip, r4, #16
 800e0a0:	4561      	cmp	r1, ip
 800e0a2:	da4f      	bge.n	800e144 <_realloc_r+0x260>
 800e0a4:	f01e 0f01 	tst.w	lr, #1
 800e0a8:	f47f af60 	bne.w	800df6c <_realloc_r+0x88>
 800e0ac:	f855 1c08 	ldr.w	r1, [r5, #-8]
 800e0b0:	eba8 0b01 	sub.w	fp, r8, r1
 800e0b4:	f8db 1004 	ldr.w	r1, [fp, #4]
 800e0b8:	f021 0103 	bic.w	r1, r1, #3
 800e0bc:	4408      	add	r0, r1
 800e0be:	eb00 0a06 	add.w	sl, r0, r6
 800e0c2:	45d4      	cmp	ip, sl
 800e0c4:	f73f af4f 	bgt.w	800df66 <_realloc_r+0x82>
 800e0c8:	465f      	mov	r7, fp
 800e0ca:	f8db 100c 	ldr.w	r1, [fp, #12]
 800e0ce:	f857 0f08 	ldr.w	r0, [r7, #8]!
 800e0d2:	1f32      	subs	r2, r6, #4
 800e0d4:	2a24      	cmp	r2, #36	; 0x24
 800e0d6:	60c1      	str	r1, [r0, #12]
 800e0d8:	6088      	str	r0, [r1, #8]
 800e0da:	f200 8099 	bhi.w	800e210 <_realloc_r+0x32c>
 800e0de:	2a13      	cmp	r2, #19
 800e0e0:	6829      	ldr	r1, [r5, #0]
 800e0e2:	f240 8093 	bls.w	800e20c <_realloc_r+0x328>
 800e0e6:	f8cb 1008 	str.w	r1, [fp, #8]
 800e0ea:	6869      	ldr	r1, [r5, #4]
 800e0ec:	f8cb 100c 	str.w	r1, [fp, #12]
 800e0f0:	2a1b      	cmp	r2, #27
 800e0f2:	68a9      	ldr	r1, [r5, #8]
 800e0f4:	f200 8092 	bhi.w	800e21c <_realloc_r+0x338>
 800e0f8:	f10b 0210 	add.w	r2, fp, #16
 800e0fc:	3508      	adds	r5, #8
 800e0fe:	6011      	str	r1, [r2, #0]
 800e100:	6869      	ldr	r1, [r5, #4]
 800e102:	6051      	str	r1, [r2, #4]
 800e104:	68a9      	ldr	r1, [r5, #8]
 800e106:	6091      	str	r1, [r2, #8]
 800e108:	eb0b 0104 	add.w	r1, fp, r4
 800e10c:	ebaa 0204 	sub.w	r2, sl, r4
 800e110:	f042 0201 	orr.w	r2, r2, #1
 800e114:	6099      	str	r1, [r3, #8]
 800e116:	604a      	str	r2, [r1, #4]
 800e118:	f8db 3004 	ldr.w	r3, [fp, #4]
 800e11c:	f003 0301 	and.w	r3, r3, #1
 800e120:	431c      	orrs	r4, r3
 800e122:	4648      	mov	r0, r9
 800e124:	f8cb 4004 	str.w	r4, [fp, #4]
 800e128:	f7ff fe94 	bl	800de54 <__malloc_unlock>
 800e12c:	e750      	b.n	800dfd0 <_realloc_r+0xec>
 800e12e:	6001      	str	r1, [r0, #0]
 800e130:	686b      	ldr	r3, [r5, #4]
 800e132:	6043      	str	r3, [r0, #4]
 800e134:	2a1b      	cmp	r2, #27
 800e136:	d83c      	bhi.n	800e1b2 <_realloc_r+0x2ce>
 800e138:	f105 0208 	add.w	r2, r5, #8
 800e13c:	f100 0308 	add.w	r3, r0, #8
 800e140:	68a9      	ldr	r1, [r5, #8]
 800e142:	e72d      	b.n	800dfa0 <_realloc_r+0xbc>
 800e144:	eb08 0004 	add.w	r0, r8, r4
 800e148:	1b0a      	subs	r2, r1, r4
 800e14a:	f042 0201 	orr.w	r2, r2, #1
 800e14e:	6098      	str	r0, [r3, #8]
 800e150:	6042      	str	r2, [r0, #4]
 800e152:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800e156:	f003 0301 	and.w	r3, r3, #1
 800e15a:	431c      	orrs	r4, r3
 800e15c:	4648      	mov	r0, r9
 800e15e:	f845 4c04 	str.w	r4, [r5, #-4]
 800e162:	f7ff fe77 	bl	800de54 <__malloc_unlock>
 800e166:	462f      	mov	r7, r5
 800e168:	e732      	b.n	800dfd0 <_realloc_r+0xec>
 800e16a:	e9da 1202 	ldrd	r1, r2, [sl, #8]
 800e16e:	461e      	mov	r6, r3
 800e170:	60ca      	str	r2, [r1, #12]
 800e172:	eb08 0a03 	add.w	sl, r8, r3
 800e176:	6091      	str	r1, [r2, #8]
 800e178:	e752      	b.n	800e020 <_realloc_r+0x13c>
 800e17a:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800e17e:	f023 0303 	bic.w	r3, r3, #3
 800e182:	441e      	add	r6, r3
 800e184:	eb08 0a06 	add.w	sl, r8, r6
 800e188:	e74a      	b.n	800e020 <_realloc_r+0x13c>
 800e18a:	4629      	mov	r1, r5
 800e18c:	f7ff fda4 	bl	800dcd8 <memmove>
 800e190:	e70b      	b.n	800dfaa <_realloc_r+0xc6>
 800e192:	e9da 1202 	ldrd	r1, r2, [sl, #8]
 800e196:	465f      	mov	r7, fp
 800e198:	60ca      	str	r2, [r1, #12]
 800e19a:	6091      	str	r1, [r2, #8]
 800e19c:	e71c      	b.n	800dfd8 <_realloc_r+0xf4>
 800e19e:	463a      	mov	r2, r7
 800e1a0:	e736      	b.n	800e010 <_realloc_r+0x12c>
 800e1a2:	4629      	mov	r1, r5
 800e1a4:	4638      	mov	r0, r7
 800e1a6:	461e      	mov	r6, r3
 800e1a8:	46d8      	mov	r8, fp
 800e1aa:	f7ff fd95 	bl	800dcd8 <memmove>
 800e1ae:	463d      	mov	r5, r7
 800e1b0:	e736      	b.n	800e020 <_realloc_r+0x13c>
 800e1b2:	68ab      	ldr	r3, [r5, #8]
 800e1b4:	6083      	str	r3, [r0, #8]
 800e1b6:	68eb      	ldr	r3, [r5, #12]
 800e1b8:	60c3      	str	r3, [r0, #12]
 800e1ba:	2a24      	cmp	r2, #36	; 0x24
 800e1bc:	d011      	beq.n	800e1e2 <_realloc_r+0x2fe>
 800e1be:	f105 0210 	add.w	r2, r5, #16
 800e1c2:	f100 0310 	add.w	r3, r0, #16
 800e1c6:	6929      	ldr	r1, [r5, #16]
 800e1c8:	e6ea      	b.n	800dfa0 <_realloc_r+0xbc>
 800e1ca:	f8cb 1010 	str.w	r1, [fp, #16]
 800e1ce:	68e9      	ldr	r1, [r5, #12]
 800e1d0:	f8cb 1014 	str.w	r1, [fp, #20]
 800e1d4:	2a24      	cmp	r2, #36	; 0x24
 800e1d6:	d00e      	beq.n	800e1f6 <_realloc_r+0x312>
 800e1d8:	6929      	ldr	r1, [r5, #16]
 800e1da:	f10b 0218 	add.w	r2, fp, #24
 800e1de:	3510      	adds	r5, #16
 800e1e0:	e716      	b.n	800e010 <_realloc_r+0x12c>
 800e1e2:	692b      	ldr	r3, [r5, #16]
 800e1e4:	6103      	str	r3, [r0, #16]
 800e1e6:	696b      	ldr	r3, [r5, #20]
 800e1e8:	6143      	str	r3, [r0, #20]
 800e1ea:	69a9      	ldr	r1, [r5, #24]
 800e1ec:	f105 0218 	add.w	r2, r5, #24
 800e1f0:	f100 0318 	add.w	r3, r0, #24
 800e1f4:	e6d4      	b.n	800dfa0 <_realloc_r+0xbc>
 800e1f6:	692a      	ldr	r2, [r5, #16]
 800e1f8:	f8cb 2018 	str.w	r2, [fp, #24]
 800e1fc:	696a      	ldr	r2, [r5, #20]
 800e1fe:	f8cb 201c 	str.w	r2, [fp, #28]
 800e202:	69a9      	ldr	r1, [r5, #24]
 800e204:	f10b 0220 	add.w	r2, fp, #32
 800e208:	3518      	adds	r5, #24
 800e20a:	e701      	b.n	800e010 <_realloc_r+0x12c>
 800e20c:	463a      	mov	r2, r7
 800e20e:	e776      	b.n	800e0fe <_realloc_r+0x21a>
 800e210:	4629      	mov	r1, r5
 800e212:	4638      	mov	r0, r7
 800e214:	f7ff fd60 	bl	800dcd8 <memmove>
 800e218:	4b0c      	ldr	r3, [pc, #48]	; (800e24c <_realloc_r+0x368>)
 800e21a:	e775      	b.n	800e108 <_realloc_r+0x224>
 800e21c:	f8cb 1010 	str.w	r1, [fp, #16]
 800e220:	68e9      	ldr	r1, [r5, #12]
 800e222:	f8cb 1014 	str.w	r1, [fp, #20]
 800e226:	2a24      	cmp	r2, #36	; 0x24
 800e228:	d004      	beq.n	800e234 <_realloc_r+0x350>
 800e22a:	6929      	ldr	r1, [r5, #16]
 800e22c:	f10b 0218 	add.w	r2, fp, #24
 800e230:	3510      	adds	r5, #16
 800e232:	e764      	b.n	800e0fe <_realloc_r+0x21a>
 800e234:	692a      	ldr	r2, [r5, #16]
 800e236:	f8cb 2018 	str.w	r2, [fp, #24]
 800e23a:	696a      	ldr	r2, [r5, #20]
 800e23c:	f8cb 201c 	str.w	r2, [fp, #28]
 800e240:	69a9      	ldr	r1, [r5, #24]
 800e242:	f10b 0220 	add.w	r2, fp, #32
 800e246:	3518      	adds	r5, #24
 800e248:	e759      	b.n	800e0fe <_realloc_r+0x21a>
 800e24a:	bf00      	nop
 800e24c:	20000c38 	.word	0x20000c38

0800e250 <_raise_r>:
 800e250:	291f      	cmp	r1, #31
 800e252:	b538      	push	{r3, r4, r5, lr}
 800e254:	d822      	bhi.n	800e29c <_raise_r+0x4c>
 800e256:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
 800e25a:	4605      	mov	r5, r0
 800e25c:	460c      	mov	r4, r1
 800e25e:	b16a      	cbz	r2, 800e27c <_raise_r+0x2c>
 800e260:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800e264:	b153      	cbz	r3, 800e27c <_raise_r+0x2c>
 800e266:	2b01      	cmp	r3, #1
 800e268:	d016      	beq.n	800e298 <_raise_r+0x48>
 800e26a:	1c59      	adds	r1, r3, #1
 800e26c:	d010      	beq.n	800e290 <_raise_r+0x40>
 800e26e:	2500      	movs	r5, #0
 800e270:	4620      	mov	r0, r4
 800e272:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 800e276:	4798      	blx	r3
 800e278:	4628      	mov	r0, r5
 800e27a:	bd38      	pop	{r3, r4, r5, pc}
 800e27c:	4628      	mov	r0, r5
 800e27e:	f000 f82f 	bl	800e2e0 <_getpid_r>
 800e282:	4622      	mov	r2, r4
 800e284:	4601      	mov	r1, r0
 800e286:	4628      	mov	r0, r5
 800e288:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e28c:	f000 b814 	b.w	800e2b8 <_kill_r>
 800e290:	2316      	movs	r3, #22
 800e292:	6003      	str	r3, [r0, #0]
 800e294:	2001      	movs	r0, #1
 800e296:	bd38      	pop	{r3, r4, r5, pc}
 800e298:	2000      	movs	r0, #0
 800e29a:	bd38      	pop	{r3, r4, r5, pc}
 800e29c:	2316      	movs	r3, #22
 800e29e:	6003      	str	r3, [r0, #0]
 800e2a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e2a4:	bd38      	pop	{r3, r4, r5, pc}
 800e2a6:	bf00      	nop

0800e2a8 <raise>:
 800e2a8:	4b02      	ldr	r3, [pc, #8]	; (800e2b4 <raise+0xc>)
 800e2aa:	4601      	mov	r1, r0
 800e2ac:	6818      	ldr	r0, [r3, #0]
 800e2ae:	f7ff bfcf 	b.w	800e250 <_raise_r>
 800e2b2:	bf00      	nop
 800e2b4:	20000808 	.word	0x20000808

0800e2b8 <_kill_r>:
 800e2b8:	b538      	push	{r3, r4, r5, lr}
 800e2ba:	460b      	mov	r3, r1
 800e2bc:	4c07      	ldr	r4, [pc, #28]	; (800e2dc <_kill_r+0x24>)
 800e2be:	4605      	mov	r5, r0
 800e2c0:	4611      	mov	r1, r2
 800e2c2:	4618      	mov	r0, r3
 800e2c4:	2300      	movs	r3, #0
 800e2c6:	6023      	str	r3, [r4, #0]
 800e2c8:	f7fc f9ca 	bl	800a660 <_kill>
 800e2cc:	1c43      	adds	r3, r0, #1
 800e2ce:	d000      	beq.n	800e2d2 <_kill_r+0x1a>
 800e2d0:	bd38      	pop	{r3, r4, r5, pc}
 800e2d2:	6823      	ldr	r3, [r4, #0]
 800e2d4:	2b00      	cmp	r3, #0
 800e2d6:	d0fb      	beq.n	800e2d0 <_kill_r+0x18>
 800e2d8:	602b      	str	r3, [r5, #0]
 800e2da:	bd38      	pop	{r3, r4, r5, pc}
 800e2dc:	200026d4 	.word	0x200026d4

0800e2e0 <_getpid_r>:
 800e2e0:	f7fc b9c6 	b.w	800a670 <_getpid>

0800e2e4 <sprintf>:
 800e2e4:	b40e      	push	{r1, r2, r3}
 800e2e6:	b530      	push	{r4, r5, lr}
 800e2e8:	b09c      	sub	sp, #112	; 0x70
 800e2ea:	ab1f      	add	r3, sp, #124	; 0x7c
 800e2ec:	4c0c      	ldr	r4, [pc, #48]	; (800e320 <sprintf+0x3c>)
 800e2ee:	4d0d      	ldr	r5, [pc, #52]	; (800e324 <sprintf+0x40>)
 800e2f0:	f853 2b04 	ldr.w	r2, [r3], #4
 800e2f4:	9301      	str	r3, [sp, #4]
 800e2f6:	4601      	mov	r1, r0
 800e2f8:	9102      	str	r1, [sp, #8]
 800e2fa:	9106      	str	r1, [sp, #24]
 800e2fc:	6820      	ldr	r0, [r4, #0]
 800e2fe:	a902      	add	r1, sp, #8
 800e300:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 800e304:	9407      	str	r4, [sp, #28]
 800e306:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800e30a:	f000 f85f 	bl	800e3cc <_svfprintf_r>
 800e30e:	9b02      	ldr	r3, [sp, #8]
 800e310:	2200      	movs	r2, #0
 800e312:	701a      	strb	r2, [r3, #0]
 800e314:	b01c      	add	sp, #112	; 0x70
 800e316:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e31a:	b003      	add	sp, #12
 800e31c:	4770      	bx	lr
 800e31e:	bf00      	nop
 800e320:	20000808 	.word	0x20000808
 800e324:	ffff0208 	.word	0xffff0208

0800e328 <strncmp>:
 800e328:	2a00      	cmp	r2, #0
 800e32a:	d046      	beq.n	800e3ba <strncmp+0x92>
 800e32c:	ea40 0301 	orr.w	r3, r0, r1
 800e330:	f013 0303 	ands.w	r3, r3, #3
 800e334:	b4f0      	push	{r4, r5, r6, r7}
 800e336:	d125      	bne.n	800e384 <strncmp+0x5c>
 800e338:	2a03      	cmp	r2, #3
 800e33a:	d923      	bls.n	800e384 <strncmp+0x5c>
 800e33c:	6804      	ldr	r4, [r0, #0]
 800e33e:	680d      	ldr	r5, [r1, #0]
 800e340:	42ac      	cmp	r4, r5
 800e342:	d13c      	bne.n	800e3be <strncmp+0x96>
 800e344:	3a04      	subs	r2, #4
 800e346:	d035      	beq.n	800e3b4 <strncmp+0x8c>
 800e348:	f1a4 3501 	sub.w	r5, r4, #16843009	; 0x1010101
 800e34c:	ea25 0404 	bic.w	r4, r5, r4
 800e350:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
 800e354:	d12e      	bne.n	800e3b4 <strncmp+0x8c>
 800e356:	1d07      	adds	r7, r0, #4
 800e358:	1d0d      	adds	r5, r1, #4
 800e35a:	e00d      	b.n	800e378 <strncmp+0x50>
 800e35c:	f857 3b04 	ldr.w	r3, [r7], #4
 800e360:	680e      	ldr	r6, [r1, #0]
 800e362:	f1a3 3401 	sub.w	r4, r3, #16843009	; 0x1010101
 800e366:	42b3      	cmp	r3, r6
 800e368:	ea24 0403 	bic.w	r4, r4, r3
 800e36c:	d127      	bne.n	800e3be <strncmp+0x96>
 800e36e:	3a04      	subs	r2, #4
 800e370:	d020      	beq.n	800e3b4 <strncmp+0x8c>
 800e372:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
 800e376:	d11d      	bne.n	800e3b4 <strncmp+0x8c>
 800e378:	2a03      	cmp	r2, #3
 800e37a:	4629      	mov	r1, r5
 800e37c:	4638      	mov	r0, r7
 800e37e:	f105 0504 	add.w	r5, r5, #4
 800e382:	d8eb      	bhi.n	800e35c <strncmp+0x34>
 800e384:	7803      	ldrb	r3, [r0, #0]
 800e386:	780d      	ldrb	r5, [r1, #0]
 800e388:	429d      	cmp	r5, r3
 800e38a:	f102 36ff 	add.w	r6, r2, #4294967295	; 0xffffffff
 800e38e:	d10e      	bne.n	800e3ae <strncmp+0x86>
 800e390:	b186      	cbz	r6, 800e3b4 <strncmp+0x8c>
 800e392:	b17b      	cbz	r3, 800e3b4 <strncmp+0x8c>
 800e394:	4604      	mov	r4, r0
 800e396:	e002      	b.n	800e39e <strncmp+0x76>
 800e398:	1882      	adds	r2, r0, r2
 800e39a:	d00b      	beq.n	800e3b4 <strncmp+0x8c>
 800e39c:	b153      	cbz	r3, 800e3b4 <strncmp+0x8c>
 800e39e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800e3a2:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800e3a6:	42ab      	cmp	r3, r5
 800e3a8:	eba6 0204 	sub.w	r2, r6, r4
 800e3ac:	d0f4      	beq.n	800e398 <strncmp+0x70>
 800e3ae:	1b58      	subs	r0, r3, r5
 800e3b0:	bcf0      	pop	{r4, r5, r6, r7}
 800e3b2:	4770      	bx	lr
 800e3b4:	2000      	movs	r0, #0
 800e3b6:	bcf0      	pop	{r4, r5, r6, r7}
 800e3b8:	4770      	bx	lr
 800e3ba:	4610      	mov	r0, r2
 800e3bc:	4770      	bx	lr
 800e3be:	7803      	ldrb	r3, [r0, #0]
 800e3c0:	780d      	ldrb	r5, [r1, #0]
 800e3c2:	429d      	cmp	r5, r3
 800e3c4:	f102 36ff 	add.w	r6, r2, #4294967295	; 0xffffffff
 800e3c8:	d0e3      	beq.n	800e392 <strncmp+0x6a>
 800e3ca:	e7f0      	b.n	800e3ae <strncmp+0x86>

0800e3cc <_svfprintf_r>:
 800e3cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3d0:	b0d5      	sub	sp, #340	; 0x154
 800e3d2:	460c      	mov	r4, r1
 800e3d4:	910b      	str	r1, [sp, #44]	; 0x2c
 800e3d6:	4693      	mov	fp, r2
 800e3d8:	930d      	str	r3, [sp, #52]	; 0x34
 800e3da:	900a      	str	r0, [sp, #40]	; 0x28
 800e3dc:	f003 f882 	bl	80114e4 <_localeconv_r>
 800e3e0:	6803      	ldr	r3, [r0, #0]
 800e3e2:	9319      	str	r3, [sp, #100]	; 0x64
 800e3e4:	4618      	mov	r0, r3
 800e3e6:	f7f9 fdab 	bl	8007f40 <strlen>
 800e3ea:	89a3      	ldrh	r3, [r4, #12]
 800e3ec:	9017      	str	r0, [sp, #92]	; 0x5c
 800e3ee:	0618      	lsls	r0, r3, #24
 800e3f0:	d503      	bpl.n	800e3fa <_svfprintf_r+0x2e>
 800e3f2:	6923      	ldr	r3, [r4, #16]
 800e3f4:	2b00      	cmp	r3, #0
 800e3f6:	f001 8008 	beq.w	800f40a <_svfprintf_r+0x103e>
 800e3fa:	2300      	movs	r3, #0
 800e3fc:	465e      	mov	r6, fp
 800e3fe:	9316      	str	r3, [sp, #88]	; 0x58
 800e400:	e9cd 3329 	strd	r3, r3, [sp, #164]	; 0xa4
 800e404:	9318      	str	r3, [sp, #96]	; 0x60
 800e406:	931a      	str	r3, [sp, #104]	; 0x68
 800e408:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800e40c:	931b      	str	r3, [sp, #108]	; 0x6c
 800e40e:	9308      	str	r3, [sp, #32]
 800e410:	ab2b      	add	r3, sp, #172	; 0xac
 800e412:	9328      	str	r3, [sp, #160]	; 0xa0
 800e414:	4699      	mov	r9, r3
 800e416:	7833      	ldrb	r3, [r6, #0]
 800e418:	2100      	movs	r1, #0
 800e41a:	2200      	movs	r2, #0
 800e41c:	e9cd 1214 	strd	r1, r2, [sp, #80]	; 0x50
 800e420:	2b00      	cmp	r3, #0
 800e422:	f000 822f 	beq.w	800e884 <_svfprintf_r+0x4b8>
 800e426:	2b25      	cmp	r3, #37	; 0x25
 800e428:	f000 86ae 	beq.w	800f188 <_svfprintf_r+0xdbc>
 800e42c:	4635      	mov	r5, r6
 800e42e:	e003      	b.n	800e438 <_svfprintf_r+0x6c>
 800e430:	2b25      	cmp	r3, #37	; 0x25
 800e432:	f000 80e7 	beq.w	800e604 <_svfprintf_r+0x238>
 800e436:	4625      	mov	r5, r4
 800e438:	786b      	ldrb	r3, [r5, #1]
 800e43a:	1c6c      	adds	r4, r5, #1
 800e43c:	2b00      	cmp	r3, #0
 800e43e:	d1f7      	bne.n	800e430 <_svfprintf_r+0x64>
 800e440:	1ba7      	subs	r7, r4, r6
 800e442:	f000 821f 	beq.w	800e884 <_svfprintf_r+0x4b8>
 800e446:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
 800e44a:	3301      	adds	r3, #1
 800e44c:	443a      	add	r2, r7
 800e44e:	2b07      	cmp	r3, #7
 800e450:	f8c9 6000 	str.w	r6, [r9]
 800e454:	f8c9 7004 	str.w	r7, [r9, #4]
 800e458:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
 800e45c:	f300 80d6 	bgt.w	800e60c <_svfprintf_r+0x240>
 800e460:	f109 0908 	add.w	r9, r9, #8
 800e464:	9a08      	ldr	r2, [sp, #32]
 800e466:	786b      	ldrb	r3, [r5, #1]
 800e468:	443a      	add	r2, r7
 800e46a:	9208      	str	r2, [sp, #32]
 800e46c:	2b00      	cmp	r3, #0
 800e46e:	f000 8209 	beq.w	800e884 <_svfprintf_r+0x4b8>
 800e472:	2300      	movs	r3, #0
 800e474:	f894 8001 	ldrb.w	r8, [r4, #1]
 800e478:	9309      	str	r3, [sp, #36]	; 0x24
 800e47a:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
 800e47e:	9306      	str	r3, [sp, #24]
 800e480:	f104 0b01 	add.w	fp, r4, #1
 800e484:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 800e488:	272b      	movs	r7, #43	; 0x2b
 800e48a:	2120      	movs	r1, #32
 800e48c:	f10b 0b01 	add.w	fp, fp, #1
 800e490:	f1a8 0320 	sub.w	r3, r8, #32
 800e494:	2b5a      	cmp	r3, #90	; 0x5a
 800e496:	f200 8362 	bhi.w	800eb5e <_svfprintf_r+0x792>
 800e49a:	e8df f013 	tbh	[pc, r3, lsl #1]
 800e49e:	015f      	.short	0x015f
 800e4a0:	03600360 	.word	0x03600360
 800e4a4:	03600158 	.word	0x03600158
 800e4a8:	03600360 	.word	0x03600360
 800e4ac:	03600135 	.word	0x03600135
 800e4b0:	012a0360 	.word	0x012a0360
 800e4b4:	03600125 	.word	0x03600125
 800e4b8:	0312011e 	.word	0x0312011e
 800e4bc:	023b0360 	.word	0x023b0360
 800e4c0:	00fa00fa 	.word	0x00fa00fa
 800e4c4:	00fa00fa 	.word	0x00fa00fa
 800e4c8:	00fa00fa 	.word	0x00fa00fa
 800e4cc:	00fa00fa 	.word	0x00fa00fa
 800e4d0:	036000fa 	.word	0x036000fa
 800e4d4:	03600360 	.word	0x03600360
 800e4d8:	03600360 	.word	0x03600360
 800e4dc:	03600360 	.word	0x03600360
 800e4e0:	0360029d 	.word	0x0360029d
 800e4e4:	00760170 	.word	0x00760170
 800e4e8:	029d029d 	.word	0x029d029d
 800e4ec:	0360029d 	.word	0x0360029d
 800e4f0:	03600360 	.word	0x03600360
 800e4f4:	01690360 	.word	0x01690360
 800e4f8:	03600360 	.word	0x03600360
 800e4fc:	03600062 	.word	0x03600062
 800e500:	03600360 	.word	0x03600360
 800e504:	036002e1 	.word	0x036002e1
 800e508:	036000a2 	.word	0x036000a2
 800e50c:	01090360 	.word	0x01090360
 800e510:	03600360 	.word	0x03600360
 800e514:	03600360 	.word	0x03600360
 800e518:	03600360 	.word	0x03600360
 800e51c:	03600360 	.word	0x03600360
 800e520:	0360029d 	.word	0x0360029d
 800e524:	007a0170 	.word	0x007a0170
 800e528:	029d029d 	.word	0x029d029d
 800e52c:	0307029d 	.word	0x0307029d
 800e530:	005b007a 	.word	0x005b007a
 800e534:	02610360 	.word	0x02610360
 800e538:	02490360 	.word	0x02490360
 800e53c:	026c0066 	.word	0x026c0066
 800e540:	0360005b 	.word	0x0360005b
 800e544:	005f02e1 	.word	0x005f02e1
 800e548:	036000a6 	.word	0x036000a6
 800e54c:	00db0360 	.word	0x00db0360
 800e550:	005f0360 	.word	0x005f0360
 800e554:	9b06      	ldr	r3, [sp, #24]
 800e556:	f043 0320 	orr.w	r3, r3, #32
 800e55a:	9306      	str	r3, [sp, #24]
 800e55c:	f89b 8000 	ldrb.w	r8, [fp]
 800e560:	e794      	b.n	800e48c <_svfprintf_r+0xc0>
 800e562:	9b06      	ldr	r3, [sp, #24]
 800e564:	f043 0310 	orr.w	r3, r3, #16
 800e568:	9306      	str	r3, [sp, #24]
 800e56a:	9b06      	ldr	r3, [sp, #24]
 800e56c:	0698      	lsls	r0, r3, #26
 800e56e:	f140 82e6 	bpl.w	800eb3e <_svfprintf_r+0x772>
 800e572:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800e574:	3407      	adds	r4, #7
 800e576:	f024 0307 	bic.w	r3, r4, #7
 800e57a:	e8f3 4502 	ldrd	r4, r5, [r3], #8
 800e57e:	930d      	str	r3, [sp, #52]	; 0x34
 800e580:	9b06      	ldr	r3, [sp, #24]
 800e582:	f423 6780 	bic.w	r7, r3, #1024	; 0x400
 800e586:	2300      	movs	r3, #0
 800e588:	e207      	b.n	800e99a <_svfprintf_r+0x5ce>
 800e58a:	9b06      	ldr	r3, [sp, #24]
 800e58c:	f043 0310 	orr.w	r3, r3, #16
 800e590:	9306      	str	r3, [sp, #24]
 800e592:	9b06      	ldr	r3, [sp, #24]
 800e594:	0699      	lsls	r1, r3, #26
 800e596:	f140 82bf 	bpl.w	800eb18 <_svfprintf_r+0x74c>
 800e59a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800e59c:	3407      	adds	r4, #7
 800e59e:	f024 0307 	bic.w	r3, r4, #7
 800e5a2:	4619      	mov	r1, r3
 800e5a4:	e8f1 2302 	ldrd	r2, r3, [r1], #8
 800e5a8:	910d      	str	r1, [sp, #52]	; 0x34
 800e5aa:	4614      	mov	r4, r2
 800e5ac:	461d      	mov	r5, r3
 800e5ae:	2a00      	cmp	r2, #0
 800e5b0:	f173 0300 	sbcs.w	r3, r3, #0
 800e5b4:	f2c0 85df 	blt.w	800f176 <_svfprintf_r+0xdaa>
 800e5b8:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
 800e5bc:	f000 84fa 	beq.w	800efb4 <_svfprintf_r+0xbe8>
 800e5c0:	9b06      	ldr	r3, [sp, #24]
 800e5c2:	f023 0780 	bic.w	r7, r3, #128	; 0x80
 800e5c6:	ea54 0305 	orrs.w	r3, r4, r5
 800e5ca:	f040 84f4 	bne.w	800efb6 <_svfprintf_r+0xbea>
 800e5ce:	f1ba 0f00 	cmp.w	sl, #0
 800e5d2:	f040 84f5 	bne.w	800efc0 <_svfprintf_r+0xbf4>
 800e5d6:	9706      	str	r7, [sp, #24]
 800e5d8:	f04f 0a00 	mov.w	sl, #0
 800e5dc:	4657      	mov	r7, sl
 800e5de:	ae54      	add	r6, sp, #336	; 0x150
 800e5e0:	e332      	b.n	800ec48 <_svfprintf_r+0x87c>
 800e5e2:	9b06      	ldr	r3, [sp, #24]
 800e5e4:	f043 0310 	orr.w	r3, r3, #16
 800e5e8:	9306      	str	r3, [sp, #24]
 800e5ea:	9f06      	ldr	r7, [sp, #24]
 800e5ec:	06be      	lsls	r6, r7, #26
 800e5ee:	f140 8282 	bpl.w	800eaf6 <_svfprintf_r+0x72a>
 800e5f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800e5f4:	3407      	adds	r4, #7
 800e5f6:	f024 0307 	bic.w	r3, r4, #7
 800e5fa:	e8f3 4502 	ldrd	r4, r5, [r3], #8
 800e5fe:	930d      	str	r3, [sp, #52]	; 0x34
 800e600:	2301      	movs	r3, #1
 800e602:	e1ca      	b.n	800e99a <_svfprintf_r+0x5ce>
 800e604:	1ba7      	subs	r7, r4, r6
 800e606:	f43f af34 	beq.w	800e472 <_svfprintf_r+0xa6>
 800e60a:	e71c      	b.n	800e446 <_svfprintf_r+0x7a>
 800e60c:	aa28      	add	r2, sp, #160	; 0xa0
 800e60e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800e612:	f003 fb9b 	bl	8011d4c <__ssprint_r>
 800e616:	b980      	cbnz	r0, 800e63a <_svfprintf_r+0x26e>
 800e618:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800e61c:	e722      	b.n	800e464 <_svfprintf_r+0x98>
 800e61e:	aa28      	add	r2, sp, #160	; 0xa0
 800e620:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800e624:	f003 fb92 	bl	8011d4c <__ssprint_r>
 800e628:	2800      	cmp	r0, #0
 800e62a:	f000 811c 	beq.w	800e866 <_svfprintf_r+0x49a>
 800e62e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e630:	b11b      	cbz	r3, 800e63a <_svfprintf_r+0x26e>
 800e632:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e634:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e636:	f002 fe31 	bl	801129c <_free_r>
 800e63a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e63c:	899b      	ldrh	r3, [r3, #12]
 800e63e:	f013 0f40 	tst.w	r3, #64	; 0x40
 800e642:	9b08      	ldr	r3, [sp, #32]
 800e644:	bf18      	it	ne
 800e646:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
 800e64a:	9308      	str	r3, [sp, #32]
 800e64c:	9808      	ldr	r0, [sp, #32]
 800e64e:	b055      	add	sp, #340	; 0x154
 800e650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e654:	4bb3      	ldr	r3, [pc, #716]	; (800e924 <_svfprintf_r+0x558>)
 800e656:	9318      	str	r3, [sp, #96]	; 0x60
 800e658:	9b06      	ldr	r3, [sp, #24]
 800e65a:	0698      	lsls	r0, r3, #26
 800e65c:	d52d      	bpl.n	800e6ba <_svfprintf_r+0x2ee>
 800e65e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800e660:	3407      	adds	r4, #7
 800e662:	f024 0307 	bic.w	r3, r4, #7
 800e666:	e8f3 4502 	ldrd	r4, r5, [r3], #8
 800e66a:	930d      	str	r3, [sp, #52]	; 0x34
 800e66c:	9a06      	ldr	r2, [sp, #24]
 800e66e:	07d6      	lsls	r6, r2, #31
 800e670:	d50a      	bpl.n	800e688 <_svfprintf_r+0x2bc>
 800e672:	ea54 0305 	orrs.w	r3, r4, r5
 800e676:	d007      	beq.n	800e688 <_svfprintf_r+0x2bc>
 800e678:	2330      	movs	r3, #48	; 0x30
 800e67a:	f042 0202 	orr.w	r2, r2, #2
 800e67e:	f88d 8085 	strb.w	r8, [sp, #133]	; 0x85
 800e682:	9206      	str	r2, [sp, #24]
 800e684:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
 800e688:	9b06      	ldr	r3, [sp, #24]
 800e68a:	f423 6780 	bic.w	r7, r3, #1024	; 0x400
 800e68e:	2302      	movs	r3, #2
 800e690:	e183      	b.n	800e99a <_svfprintf_r+0x5ce>
 800e692:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
 800e696:	2200      	movs	r2, #0
 800e698:	f81b 8b01 	ldrb.w	r8, [fp], #1
 800e69c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800e6a0:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 800e6a4:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
 800e6a8:	2b09      	cmp	r3, #9
 800e6aa:	d9f5      	bls.n	800e698 <_svfprintf_r+0x2cc>
 800e6ac:	9209      	str	r2, [sp, #36]	; 0x24
 800e6ae:	e6ef      	b.n	800e490 <_svfprintf_r+0xc4>
 800e6b0:	4b9d      	ldr	r3, [pc, #628]	; (800e928 <_svfprintf_r+0x55c>)
 800e6b2:	9318      	str	r3, [sp, #96]	; 0x60
 800e6b4:	9b06      	ldr	r3, [sp, #24]
 800e6b6:	0698      	lsls	r0, r3, #26
 800e6b8:	d4d1      	bmi.n	800e65e <_svfprintf_r+0x292>
 800e6ba:	9906      	ldr	r1, [sp, #24]
 800e6bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e6be:	06c9      	lsls	r1, r1, #27
 800e6c0:	f102 0304 	add.w	r3, r2, #4
 800e6c4:	f100 8597 	bmi.w	800f1f6 <_svfprintf_r+0xe2a>
 800e6c8:	9a06      	ldr	r2, [sp, #24]
 800e6ca:	0657      	lsls	r7, r2, #25
 800e6cc:	f140 858d 	bpl.w	800f1ea <_svfprintf_r+0xe1e>
 800e6d0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e6d2:	930d      	str	r3, [sp, #52]	; 0x34
 800e6d4:	8814      	ldrh	r4, [r2, #0]
 800e6d6:	2500      	movs	r5, #0
 800e6d8:	e7c8      	b.n	800e66c <_svfprintf_r+0x2a0>
 800e6da:	f89b 8000 	ldrb.w	r8, [fp]
 800e6de:	9b06      	ldr	r3, [sp, #24]
 800e6e0:	f043 0304 	orr.w	r3, r3, #4
 800e6e4:	9306      	str	r3, [sp, #24]
 800e6e6:	e6d1      	b.n	800e48c <_svfprintf_r+0xc0>
 800e6e8:	f88d 7083 	strb.w	r7, [sp, #131]	; 0x83
 800e6ec:	f89b 8000 	ldrb.w	r8, [fp]
 800e6f0:	e6cc      	b.n	800e48c <_svfprintf_r+0xc0>
 800e6f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e6f4:	f89b 8000 	ldrb.w	r8, [fp]
 800e6f8:	f853 2b04 	ldr.w	r2, [r3], #4
 800e6fc:	9209      	str	r2, [sp, #36]	; 0x24
 800e6fe:	2a00      	cmp	r2, #0
 800e700:	f2c0 8660 	blt.w	800f3c4 <_svfprintf_r+0xff8>
 800e704:	930d      	str	r3, [sp, #52]	; 0x34
 800e706:	e6c1      	b.n	800e48c <_svfprintf_r+0xc0>
 800e708:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800e70a:	4628      	mov	r0, r5
 800e70c:	f002 feea 	bl	80114e4 <_localeconv_r>
 800e710:	6843      	ldr	r3, [r0, #4]
 800e712:	931b      	str	r3, [sp, #108]	; 0x6c
 800e714:	4618      	mov	r0, r3
 800e716:	f7f9 fc13 	bl	8007f40 <strlen>
 800e71a:	901d      	str	r0, [sp, #116]	; 0x74
 800e71c:	4604      	mov	r4, r0
 800e71e:	4628      	mov	r0, r5
 800e720:	f002 fee0 	bl	80114e4 <_localeconv_r>
 800e724:	6883      	ldr	r3, [r0, #8]
 800e726:	931c      	str	r3, [sp, #112]	; 0x70
 800e728:	2120      	movs	r1, #32
 800e72a:	2c00      	cmp	r4, #0
 800e72c:	f43f af16 	beq.w	800e55c <_svfprintf_r+0x190>
 800e730:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800e732:	f89b 8000 	ldrb.w	r8, [fp]
 800e736:	2b00      	cmp	r3, #0
 800e738:	f43f aea8 	beq.w	800e48c <_svfprintf_r+0xc0>
 800e73c:	781b      	ldrb	r3, [r3, #0]
 800e73e:	2b00      	cmp	r3, #0
 800e740:	f43f aea4 	beq.w	800e48c <_svfprintf_r+0xc0>
 800e744:	9b06      	ldr	r3, [sp, #24]
 800e746:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800e74a:	9306      	str	r3, [sp, #24]
 800e74c:	e69e      	b.n	800e48c <_svfprintf_r+0xc0>
 800e74e:	9b06      	ldr	r3, [sp, #24]
 800e750:	f89b 8000 	ldrb.w	r8, [fp]
 800e754:	f043 0301 	orr.w	r3, r3, #1
 800e758:	9306      	str	r3, [sp, #24]
 800e75a:	e697      	b.n	800e48c <_svfprintf_r+0xc0>
 800e75c:	f89d 3083 	ldrb.w	r3, [sp, #131]	; 0x83
 800e760:	f89b 8000 	ldrb.w	r8, [fp]
 800e764:	2b00      	cmp	r3, #0
 800e766:	f47f ae91 	bne.w	800e48c <_svfprintf_r+0xc0>
 800e76a:	f88d 1083 	strb.w	r1, [sp, #131]	; 0x83
 800e76e:	e68d      	b.n	800e48c <_svfprintf_r+0xc0>
 800e770:	9b06      	ldr	r3, [sp, #24]
 800e772:	f89b 8000 	ldrb.w	r8, [fp]
 800e776:	f043 0308 	orr.w	r3, r3, #8
 800e77a:	9306      	str	r3, [sp, #24]
 800e77c:	e686      	b.n	800e48c <_svfprintf_r+0xc0>
 800e77e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800e780:	2300      	movs	r3, #0
 800e782:	f854 2b04 	ldr.w	r2, [r4], #4
 800e786:	f88d 20ec 	strb.w	r2, [sp, #236]	; 0xec
 800e78a:	2701      	movs	r7, #1
 800e78c:	461a      	mov	r2, r3
 800e78e:	9707      	str	r7, [sp, #28]
 800e790:	940d      	str	r4, [sp, #52]	; 0x34
 800e792:	e9cd 2212 	strd	r2, r2, [sp, #72]	; 0x48
 800e796:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
 800e79a:	920c      	str	r2, [sp, #48]	; 0x30
 800e79c:	4692      	mov	sl, r2
 800e79e:	9210      	str	r2, [sp, #64]	; 0x40
 800e7a0:	ae3b      	add	r6, sp, #236	; 0xec
 800e7a2:	9b06      	ldr	r3, [sp, #24]
 800e7a4:	f013 0302 	ands.w	r3, r3, #2
 800e7a8:	930e      	str	r3, [sp, #56]	; 0x38
 800e7aa:	d002      	beq.n	800e7b2 <_svfprintf_r+0x3e6>
 800e7ac:	9b07      	ldr	r3, [sp, #28]
 800e7ae:	3302      	adds	r3, #2
 800e7b0:	9307      	str	r3, [sp, #28]
 800e7b2:	9b06      	ldr	r3, [sp, #24]
 800e7b4:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800e7b6:	f013 0384 	ands.w	r3, r3, #132	; 0x84
 800e7ba:	930f      	str	r3, [sp, #60]	; 0x3c
 800e7bc:	d104      	bne.n	800e7c8 <_svfprintf_r+0x3fc>
 800e7be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e7c0:	9907      	ldr	r1, [sp, #28]
 800e7c2:	1a5d      	subs	r5, r3, r1
 800e7c4:	2d00      	cmp	r5, #0
 800e7c6:	dc69      	bgt.n	800e89c <_svfprintf_r+0x4d0>
 800e7c8:	b172      	cbz	r2, 800e7e8 <_svfprintf_r+0x41c>
 800e7ca:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800e7cc:	3201      	adds	r2, #1
 800e7ce:	3401      	adds	r4, #1
 800e7d0:	f10d 0083 	add.w	r0, sp, #131	; 0x83
 800e7d4:	2101      	movs	r1, #1
 800e7d6:	2a07      	cmp	r2, #7
 800e7d8:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
 800e7dc:	e9c9 0100 	strd	r0, r1, [r9]
 800e7e0:	f300 8380 	bgt.w	800eee4 <_svfprintf_r+0xb18>
 800e7e4:	f109 0908 	add.w	r9, r9, #8
 800e7e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e7ea:	b16b      	cbz	r3, 800e808 <_svfprintf_r+0x43c>
 800e7ec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800e7ee:	3301      	adds	r3, #1
 800e7f0:	3402      	adds	r4, #2
 800e7f2:	a921      	add	r1, sp, #132	; 0x84
 800e7f4:	2202      	movs	r2, #2
 800e7f6:	2b07      	cmp	r3, #7
 800e7f8:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
 800e7fc:	e9c9 1200 	strd	r1, r2, [r9]
 800e800:	f300 837c 	bgt.w	800eefc <_svfprintf_r+0xb30>
 800e804:	f109 0908 	add.w	r9, r9, #8
 800e808:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e80a:	2b80      	cmp	r3, #128	; 0x80
 800e80c:	f000 828f 	beq.w	800ed2e <_svfprintf_r+0x962>
 800e810:	ebaa 0507 	sub.w	r5, sl, r7
 800e814:	2d00      	cmp	r5, #0
 800e816:	f300 82cd 	bgt.w	800edb4 <_svfprintf_r+0x9e8>
 800e81a:	9b06      	ldr	r3, [sp, #24]
 800e81c:	05da      	lsls	r2, r3, #23
 800e81e:	f100 8229 	bmi.w	800ec74 <_svfprintf_r+0x8a8>
 800e822:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800e824:	f8c9 6000 	str.w	r6, [r9]
 800e828:	3301      	adds	r3, #1
 800e82a:	443c      	add	r4, r7
 800e82c:	2b07      	cmp	r3, #7
 800e82e:	942a      	str	r4, [sp, #168]	; 0xa8
 800e830:	f8c9 7004 	str.w	r7, [r9, #4]
 800e834:	9329      	str	r3, [sp, #164]	; 0xa4
 800e836:	f300 8349 	bgt.w	800eecc <_svfprintf_r+0xb00>
 800e83a:	f109 0908 	add.w	r9, r9, #8
 800e83e:	9b06      	ldr	r3, [sp, #24]
 800e840:	0759      	lsls	r1, r3, #29
 800e842:	d505      	bpl.n	800e850 <_svfprintf_r+0x484>
 800e844:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e846:	9a07      	ldr	r2, [sp, #28]
 800e848:	1a9d      	subs	r5, r3, r2
 800e84a:	2d00      	cmp	r5, #0
 800e84c:	f300 8362 	bgt.w	800ef14 <_svfprintf_r+0xb48>
 800e850:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 800e854:	9907      	ldr	r1, [sp, #28]
 800e856:	428a      	cmp	r2, r1
 800e858:	bfac      	ite	ge
 800e85a:	189b      	addge	r3, r3, r2
 800e85c:	185b      	addlt	r3, r3, r1
 800e85e:	9308      	str	r3, [sp, #32]
 800e860:	2c00      	cmp	r4, #0
 800e862:	f47f aedc 	bne.w	800e61e <_svfprintf_r+0x252>
 800e866:	2300      	movs	r3, #0
 800e868:	9329      	str	r3, [sp, #164]	; 0xa4
 800e86a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e86c:	b11b      	cbz	r3, 800e876 <_svfprintf_r+0x4aa>
 800e86e:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e870:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e872:	f002 fd13 	bl	801129c <_free_r>
 800e876:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800e87a:	465e      	mov	r6, fp
 800e87c:	7833      	ldrb	r3, [r6, #0]
 800e87e:	2b00      	cmp	r3, #0
 800e880:	f47f add1 	bne.w	800e426 <_svfprintf_r+0x5a>
 800e884:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 800e886:	2b00      	cmp	r3, #0
 800e888:	f43f aed7 	beq.w	800e63a <_svfprintf_r+0x26e>
 800e88c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800e88e:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e890:	aa28      	add	r2, sp, #160	; 0xa0
 800e892:	4621      	mov	r1, r4
 800e894:	f003 fa5a 	bl	8011d4c <__ssprint_r>
 800e898:	89a3      	ldrh	r3, [r4, #12]
 800e89a:	e6d0      	b.n	800e63e <_svfprintf_r+0x272>
 800e89c:	2d10      	cmp	r5, #16
 800e89e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800e8a0:	dd29      	ble.n	800e8f6 <_svfprintf_r+0x52a>
 800e8a2:	4649      	mov	r1, r9
 800e8a4:	4620      	mov	r0, r4
 800e8a6:	46b1      	mov	r9, r6
 800e8a8:	2310      	movs	r3, #16
 800e8aa:	971e      	str	r7, [sp, #120]	; 0x78
 800e8ac:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e8ae:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800e8b0:	e004      	b.n	800e8bc <_svfprintf_r+0x4f0>
 800e8b2:	3d10      	subs	r5, #16
 800e8b4:	2d10      	cmp	r5, #16
 800e8b6:	f101 0108 	add.w	r1, r1, #8
 800e8ba:	dd18      	ble.n	800e8ee <_svfprintf_r+0x522>
 800e8bc:	3201      	adds	r2, #1
 800e8be:	4f1b      	ldr	r7, [pc, #108]	; (800e92c <_svfprintf_r+0x560>)
 800e8c0:	3010      	adds	r0, #16
 800e8c2:	2a07      	cmp	r2, #7
 800e8c4:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
 800e8c8:	e9c1 7300 	strd	r7, r3, [r1]
 800e8cc:	ddf1      	ble.n	800e8b2 <_svfprintf_r+0x4e6>
 800e8ce:	aa28      	add	r2, sp, #160	; 0xa0
 800e8d0:	4631      	mov	r1, r6
 800e8d2:	4620      	mov	r0, r4
 800e8d4:	f003 fa3a 	bl	8011d4c <__ssprint_r>
 800e8d8:	2800      	cmp	r0, #0
 800e8da:	f47f aea8 	bne.w	800e62e <_svfprintf_r+0x262>
 800e8de:	3d10      	subs	r5, #16
 800e8e0:	2d10      	cmp	r5, #16
 800e8e2:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
 800e8e6:	a92b      	add	r1, sp, #172	; 0xac
 800e8e8:	f04f 0310 	mov.w	r3, #16
 800e8ec:	dce6      	bgt.n	800e8bc <_svfprintf_r+0x4f0>
 800e8ee:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e8f0:	464e      	mov	r6, r9
 800e8f2:	4604      	mov	r4, r0
 800e8f4:	4689      	mov	r9, r1
 800e8f6:	3201      	adds	r2, #1
 800e8f8:	4b0c      	ldr	r3, [pc, #48]	; (800e92c <_svfprintf_r+0x560>)
 800e8fa:	442c      	add	r4, r5
 800e8fc:	2a07      	cmp	r2, #7
 800e8fe:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
 800e902:	e9c9 3500 	strd	r3, r5, [r9]
 800e906:	f300 865d 	bgt.w	800f5c4 <_svfprintf_r+0x11f8>
 800e90a:	f109 0908 	add.w	r9, r9, #8
 800e90e:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
 800e912:	e759      	b.n	800e7c8 <_svfprintf_r+0x3fc>
 800e914:	9b06      	ldr	r3, [sp, #24]
 800e916:	f89b 8000 	ldrb.w	r8, [fp]
 800e91a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800e91e:	9306      	str	r3, [sp, #24]
 800e920:	e5b4      	b.n	800e48c <_svfprintf_r+0xc0>
 800e922:	bf00      	nop
 800e924:	080135ac 	.word	0x080135ac
 800e928:	080135c0 	.word	0x080135c0
 800e92c:	080135e0 	.word	0x080135e0
 800e930:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e932:	f852 3b04 	ldr.w	r3, [r2], #4
 800e936:	920d      	str	r2, [sp, #52]	; 0x34
 800e938:	9a06      	ldr	r2, [sp, #24]
 800e93a:	0697      	lsls	r7, r2, #26
 800e93c:	f100 853a 	bmi.w	800f3b4 <_svfprintf_r+0xfe8>
 800e940:	9a06      	ldr	r2, [sp, #24]
 800e942:	06d6      	lsls	r6, r2, #27
 800e944:	f100 86b7 	bmi.w	800f6b6 <_svfprintf_r+0x12ea>
 800e948:	9a06      	ldr	r2, [sp, #24]
 800e94a:	0655      	lsls	r5, r2, #25
 800e94c:	f100 874a 	bmi.w	800f7e4 <_svfprintf_r+0x1418>
 800e950:	9a06      	ldr	r2, [sp, #24]
 800e952:	0594      	lsls	r4, r2, #22
 800e954:	f140 86af 	bpl.w	800f6b6 <_svfprintf_r+0x12ea>
 800e958:	9a08      	ldr	r2, [sp, #32]
 800e95a:	701a      	strb	r2, [r3, #0]
 800e95c:	465e      	mov	r6, fp
 800e95e:	e78d      	b.n	800e87c <_svfprintf_r+0x4b0>
 800e960:	f89b 8000 	ldrb.w	r8, [fp]
 800e964:	9b06      	ldr	r3, [sp, #24]
 800e966:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
 800e96a:	f000 8539 	beq.w	800f3e0 <_svfprintf_r+0x1014>
 800e96e:	f043 0310 	orr.w	r3, r3, #16
 800e972:	9306      	str	r3, [sp, #24]
 800e974:	e58a      	b.n	800e48c <_svfprintf_r+0xc0>
 800e976:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800e978:	f647 0230 	movw	r2, #30768	; 0x7830
 800e97c:	f854 3b04 	ldr.w	r3, [r4], #4
 800e980:	f8ad 2084 	strh.w	r2, [sp, #132]	; 0x84
 800e984:	9a06      	ldr	r2, [sp, #24]
 800e986:	940d      	str	r4, [sp, #52]	; 0x34
 800e988:	461c      	mov	r4, r3
 800e98a:	4bb6      	ldr	r3, [pc, #728]	; (800ec64 <_svfprintf_r+0x898>)
 800e98c:	9318      	str	r3, [sp, #96]	; 0x60
 800e98e:	f042 0702 	orr.w	r7, r2, #2
 800e992:	2500      	movs	r5, #0
 800e994:	2302      	movs	r3, #2
 800e996:	f04f 0878 	mov.w	r8, #120	; 0x78
 800e99a:	2200      	movs	r2, #0
 800e99c:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
 800e9a0:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
 800e9a4:	f000 80e7 	beq.w	800eb76 <_svfprintf_r+0x7aa>
 800e9a8:	f027 0280 	bic.w	r2, r7, #128	; 0x80
 800e9ac:	9206      	str	r2, [sp, #24]
 800e9ae:	ea54 0205 	orrs.w	r2, r4, r5
 800e9b2:	f040 80df 	bne.w	800eb74 <_svfprintf_r+0x7a8>
 800e9b6:	f1ba 0f00 	cmp.w	sl, #0
 800e9ba:	f040 8677 	bne.w	800f6ac <_svfprintf_r+0x12e0>
 800e9be:	2b00      	cmp	r3, #0
 800e9c0:	f47f ae0a 	bne.w	800e5d8 <_svfprintf_r+0x20c>
 800e9c4:	f017 0701 	ands.w	r7, r7, #1
 800e9c8:	f000 8400 	beq.w	800f1cc <_svfprintf_r+0xe00>
 800e9cc:	2330      	movs	r3, #48	; 0x30
 800e9ce:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
 800e9d2:	f20d 164f 	addw	r6, sp, #335	; 0x14f
 800e9d6:	e137      	b.n	800ec48 <_svfprintf_r+0x87c>
 800e9d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800e9da:	3407      	adds	r4, #7
 800e9dc:	f024 0307 	bic.w	r3, r4, #7
 800e9e0:	e8f3 1202 	ldrd	r1, r2, [r3], #8
 800e9e4:	f022 4400 	bic.w	r4, r2, #2147483648	; 0x80000000
 800e9e8:	e9cd 1214 	strd	r1, r2, [sp, #80]	; 0x50
 800e9ec:	930d      	str	r3, [sp, #52]	; 0x34
 800e9ee:	460d      	mov	r5, r1
 800e9f0:	4608      	mov	r0, r1
 800e9f2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800e9f6:	4621      	mov	r1, r4
 800e9f8:	4b9b      	ldr	r3, [pc, #620]	; (800ec68 <_svfprintf_r+0x89c>)
 800e9fa:	f7f9 ff65 	bl	80088c8 <__aeabi_dcmpun>
 800e9fe:	2800      	cmp	r0, #0
 800ea00:	f040 8409 	bne.w	800f216 <_svfprintf_r+0xe4a>
 800ea04:	4628      	mov	r0, r5
 800ea06:	4621      	mov	r1, r4
 800ea08:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800ea0c:	4b96      	ldr	r3, [pc, #600]	; (800ec68 <_svfprintf_r+0x89c>)
 800ea0e:	f7f9 ff3d 	bl	800888c <__aeabi_dcmple>
 800ea12:	2800      	cmp	r0, #0
 800ea14:	f040 83ff 	bne.w	800f216 <_svfprintf_r+0xe4a>
 800ea18:	2200      	movs	r2, #0
 800ea1a:	2300      	movs	r3, #0
 800ea1c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
 800ea20:	f7f9 ff2a 	bl	8008878 <__aeabi_dcmplt>
 800ea24:	2800      	cmp	r0, #0
 800ea26:	f040 86c2 	bne.w	800f7ae <_svfprintf_r+0x13e2>
 800ea2a:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
 800ea2e:	4e8f      	ldr	r6, [pc, #572]	; (800ec6c <_svfprintf_r+0x8a0>)
 800ea30:	4b8f      	ldr	r3, [pc, #572]	; (800ec70 <_svfprintf_r+0x8a4>)
 800ea32:	9806      	ldr	r0, [sp, #24]
 800ea34:	2100      	movs	r1, #0
 800ea36:	e9cd 1112 	strd	r1, r1, [sp, #72]	; 0x48
 800ea3a:	2703      	movs	r7, #3
 800ea3c:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 800ea40:	9707      	str	r7, [sp, #28]
 800ea42:	910c      	str	r1, [sp, #48]	; 0x30
 800ea44:	9006      	str	r0, [sp, #24]
 800ea46:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800ea4a:	bfc8      	it	gt
 800ea4c:	461e      	movgt	r6, r3
 800ea4e:	468a      	mov	sl, r1
 800ea50:	9110      	str	r1, [sp, #64]	; 0x40
 800ea52:	2a00      	cmp	r2, #0
 800ea54:	f43f aea5 	beq.w	800e7a2 <_svfprintf_r+0x3d6>
 800ea58:	9b07      	ldr	r3, [sp, #28]
 800ea5a:	3301      	adds	r3, #1
 800ea5c:	9307      	str	r3, [sp, #28]
 800ea5e:	e6a0      	b.n	800e7a2 <_svfprintf_r+0x3d6>
 800ea60:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800ea62:	f854 6b04 	ldr.w	r6, [r4], #4
 800ea66:	2500      	movs	r5, #0
 800ea68:	f88d 5083 	strb.w	r5, [sp, #131]	; 0x83
 800ea6c:	2e00      	cmp	r6, #0
 800ea6e:	f000 84db 	beq.w	800f428 <_svfprintf_r+0x105c>
 800ea72:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
 800ea76:	f000 8623 	beq.w	800f6c0 <_svfprintf_r+0x12f4>
 800ea7a:	4652      	mov	r2, sl
 800ea7c:	4629      	mov	r1, r5
 800ea7e:	4630      	mov	r0, r6
 800ea80:	f7f8 fff6 	bl	8007a70 <memchr>
 800ea84:	900c      	str	r0, [sp, #48]	; 0x30
 800ea86:	2800      	cmp	r0, #0
 800ea88:	f000 8790 	beq.w	800f9ac <_svfprintf_r+0x15e0>
 800ea8c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ea8e:	46aa      	mov	sl, r5
 800ea90:	1b9f      	subs	r7, r3, r6
 800ea92:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
 800ea96:	940d      	str	r4, [sp, #52]	; 0x34
 800ea98:	9307      	str	r3, [sp, #28]
 800ea9a:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 800ea9e:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
 800eaa2:	e9cd aa12 	strd	sl, sl, [sp, #72]	; 0x48
 800eaa6:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
 800eaaa:	e7d2      	b.n	800ea52 <_svfprintf_r+0x686>
 800eaac:	f89b 8000 	ldrb.w	r8, [fp]
 800eab0:	9b06      	ldr	r3, [sp, #24]
 800eab2:	f1b8 0f68 	cmp.w	r8, #104	; 0x68
 800eab6:	f000 848a 	beq.w	800f3ce <_svfprintf_r+0x1002>
 800eaba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800eabe:	9306      	str	r3, [sp, #24]
 800eac0:	e4e4      	b.n	800e48c <_svfprintf_r+0xc0>
 800eac2:	465a      	mov	r2, fp
 800eac4:	f812 8b01 	ldrb.w	r8, [r2], #1
 800eac8:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
 800eacc:	f001 814d 	beq.w	800fd6a <_svfprintf_r+0x199e>
 800ead0:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
 800ead4:	2b09      	cmp	r3, #9
 800ead6:	4693      	mov	fp, r2
 800ead8:	f04f 0a00 	mov.w	sl, #0
 800eadc:	f63f acd8 	bhi.w	800e490 <_svfprintf_r+0xc4>
 800eae0:	f81b 8b01 	ldrb.w	r8, [fp], #1
 800eae4:	eb0a 0a8a 	add.w	sl, sl, sl, lsl #2
 800eae8:	eb03 0a4a 	add.w	sl, r3, sl, lsl #1
 800eaec:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
 800eaf0:	2b09      	cmp	r3, #9
 800eaf2:	d9f5      	bls.n	800eae0 <_svfprintf_r+0x714>
 800eaf4:	e4cc      	b.n	800e490 <_svfprintf_r+0xc4>
 800eaf6:	9f06      	ldr	r7, [sp, #24]
 800eaf8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800eafa:	06fd      	lsls	r5, r7, #27
 800eafc:	f103 0204 	add.w	r2, r3, #4
 800eb00:	f100 844d 	bmi.w	800f39e <_svfprintf_r+0xfd2>
 800eb04:	9f06      	ldr	r7, [sp, #24]
 800eb06:	067c      	lsls	r4, r7, #25
 800eb08:	f140 8638 	bpl.w	800f77c <_svfprintf_r+0x13b0>
 800eb0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800eb0e:	920d      	str	r2, [sp, #52]	; 0x34
 800eb10:	881c      	ldrh	r4, [r3, #0]
 800eb12:	2500      	movs	r5, #0
 800eb14:	2301      	movs	r3, #1
 800eb16:	e740      	b.n	800e99a <_svfprintf_r+0x5ce>
 800eb18:	9a06      	ldr	r2, [sp, #24]
 800eb1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800eb1c:	06d2      	lsls	r2, r2, #27
 800eb1e:	f103 0104 	add.w	r1, r3, #4
 800eb22:	f100 835b 	bmi.w	800f1dc <_svfprintf_r+0xe10>
 800eb26:	9b06      	ldr	r3, [sp, #24]
 800eb28:	065b      	lsls	r3, r3, #25
 800eb2a:	f140 8351 	bpl.w	800f1d0 <_svfprintf_r+0xe04>
 800eb2e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800eb30:	910d      	str	r1, [sp, #52]	; 0x34
 800eb32:	f9b3 4000 	ldrsh.w	r4, [r3]
 800eb36:	17e5      	asrs	r5, r4, #31
 800eb38:	4622      	mov	r2, r4
 800eb3a:	462b      	mov	r3, r5
 800eb3c:	e537      	b.n	800e5ae <_svfprintf_r+0x1e2>
 800eb3e:	9906      	ldr	r1, [sp, #24]
 800eb40:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800eb42:	06c9      	lsls	r1, r1, #27
 800eb44:	f102 0304 	add.w	r3, r2, #4
 800eb48:	f100 8360 	bmi.w	800f20c <_svfprintf_r+0xe40>
 800eb4c:	9a06      	ldr	r2, [sp, #24]
 800eb4e:	0657      	lsls	r7, r2, #25
 800eb50:	f140 8356 	bpl.w	800f200 <_svfprintf_r+0xe34>
 800eb54:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800eb56:	930d      	str	r3, [sp, #52]	; 0x34
 800eb58:	8814      	ldrh	r4, [r2, #0]
 800eb5a:	2500      	movs	r5, #0
 800eb5c:	e510      	b.n	800e580 <_svfprintf_r+0x1b4>
 800eb5e:	f1b8 0f00 	cmp.w	r8, #0
 800eb62:	f43f ae8f 	beq.w	800e884 <_svfprintf_r+0x4b8>
 800eb66:	2300      	movs	r3, #0
 800eb68:	2701      	movs	r7, #1
 800eb6a:	461a      	mov	r2, r3
 800eb6c:	9707      	str	r7, [sp, #28]
 800eb6e:	f88d 80ec 	strb.w	r8, [sp, #236]	; 0xec
 800eb72:	e60e      	b.n	800e792 <_svfprintf_r+0x3c6>
 800eb74:	9f06      	ldr	r7, [sp, #24]
 800eb76:	2b01      	cmp	r3, #1
 800eb78:	f000 821d 	beq.w	800efb6 <_svfprintf_r+0xbea>
 800eb7c:	2b02      	cmp	r3, #2
 800eb7e:	f000 8201 	beq.w	800ef84 <_svfprintf_r+0xbb8>
 800eb82:	a954      	add	r1, sp, #336	; 0x150
 800eb84:	e000      	b.n	800eb88 <_svfprintf_r+0x7bc>
 800eb86:	4631      	mov	r1, r6
 800eb88:	08e2      	lsrs	r2, r4, #3
 800eb8a:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
 800eb8e:	08e8      	lsrs	r0, r5, #3
 800eb90:	f004 0307 	and.w	r3, r4, #7
 800eb94:	4605      	mov	r5, r0
 800eb96:	4614      	mov	r4, r2
 800eb98:	3330      	adds	r3, #48	; 0x30
 800eb9a:	ea54 0205 	orrs.w	r2, r4, r5
 800eb9e:	f801 3c01 	strb.w	r3, [r1, #-1]
 800eba2:	f101 36ff 	add.w	r6, r1, #4294967295	; 0xffffffff
 800eba6:	d1ee      	bne.n	800eb86 <_svfprintf_r+0x7ba>
 800eba8:	07f8      	lsls	r0, r7, #31
 800ebaa:	d54a      	bpl.n	800ec42 <_svfprintf_r+0x876>
 800ebac:	2b30      	cmp	r3, #48	; 0x30
 800ebae:	d048      	beq.n	800ec42 <_svfprintf_r+0x876>
 800ebb0:	2330      	movs	r3, #48	; 0x30
 800ebb2:	3902      	subs	r1, #2
 800ebb4:	f806 3c01 	strb.w	r3, [r6, #-1]
 800ebb8:	ab54      	add	r3, sp, #336	; 0x150
 800ebba:	9706      	str	r7, [sp, #24]
 800ebbc:	460e      	mov	r6, r1
 800ebbe:	1a5f      	subs	r7, r3, r1
 800ebc0:	e042      	b.n	800ec48 <_svfprintf_r+0x87c>
 800ebc2:	f407 6380 	and.w	r3, r7, #1024	; 0x400
 800ebc6:	2200      	movs	r2, #0
 800ebc8:	e9cd 8906 	strd	r8, r9, [sp, #24]
 800ebcc:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 800ebd0:	ae54      	add	r6, sp, #336	; 0x150
 800ebd2:	46ba      	mov	sl, r7
 800ebd4:	4690      	mov	r8, r2
 800ebd6:	f8dd 9070 	ldr.w	r9, [sp, #112]	; 0x70
 800ebda:	461f      	mov	r7, r3
 800ebdc:	e007      	b.n	800ebee <_svfprintf_r+0x822>
 800ebde:	f7f9 feb1 	bl	8008944 <__aeabi_uldivmod>
 800ebe2:	2d00      	cmp	r5, #0
 800ebe4:	bf08      	it	eq
 800ebe6:	2c0a      	cmpeq	r4, #10
 800ebe8:	d320      	bcc.n	800ec2c <_svfprintf_r+0x860>
 800ebea:	4604      	mov	r4, r0
 800ebec:	460d      	mov	r5, r1
 800ebee:	220a      	movs	r2, #10
 800ebf0:	2300      	movs	r3, #0
 800ebf2:	4620      	mov	r0, r4
 800ebf4:	4629      	mov	r1, r5
 800ebf6:	f7f9 fea5 	bl	8008944 <__aeabi_uldivmod>
 800ebfa:	f102 0c30 	add.w	ip, r2, #48	; 0x30
 800ebfe:	f806 cc01 	strb.w	ip, [r6, #-1]
 800ec02:	4620      	mov	r0, r4
 800ec04:	4629      	mov	r1, r5
 800ec06:	220a      	movs	r2, #10
 800ec08:	2300      	movs	r3, #0
 800ec0a:	f108 0801 	add.w	r8, r8, #1
 800ec0e:	3e01      	subs	r6, #1
 800ec10:	2f00      	cmp	r7, #0
 800ec12:	d0e4      	beq.n	800ebde <_svfprintf_r+0x812>
 800ec14:	f899 c000 	ldrb.w	ip, [r9]
 800ec18:	45e0      	cmp	r8, ip
 800ec1a:	d1e0      	bne.n	800ebde <_svfprintf_r+0x812>
 800ec1c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 800ec20:	d0dd      	beq.n	800ebde <_svfprintf_r+0x812>
 800ec22:	429d      	cmp	r5, r3
 800ec24:	bf08      	it	eq
 800ec26:	4294      	cmpeq	r4, r2
 800ec28:	f080 8670 	bcs.w	800f90c <_svfprintf_r+0x1540>
 800ec2c:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 800ec30:	f8cd 9070 	str.w	r9, [sp, #112]	; 0x70
 800ec34:	4657      	mov	r7, sl
 800ec36:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800ec3a:	f8dd 901c 	ldr.w	r9, [sp, #28]
 800ec3e:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800ec42:	9706      	str	r7, [sp, #24]
 800ec44:	ab54      	add	r3, sp, #336	; 0x150
 800ec46:	1b9f      	subs	r7, r3, r6
 800ec48:	2300      	movs	r3, #0
 800ec4a:	4557      	cmp	r7, sl
 800ec4c:	930c      	str	r3, [sp, #48]	; 0x30
 800ec4e:	9310      	str	r3, [sp, #64]	; 0x40
 800ec50:	e9cd 3312 	strd	r3, r3, [sp, #72]	; 0x48
 800ec54:	463b      	mov	r3, r7
 800ec56:	bfb8      	it	lt
 800ec58:	4653      	movlt	r3, sl
 800ec5a:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
 800ec5e:	9307      	str	r3, [sp, #28]
 800ec60:	e6f7      	b.n	800ea52 <_svfprintf_r+0x686>
 800ec62:	bf00      	nop
 800ec64:	080135ac 	.word	0x080135ac
 800ec68:	7fefffff 	.word	0x7fefffff
 800ec6c:	0801359c 	.word	0x0801359c
 800ec70:	080135a0 	.word	0x080135a0
 800ec74:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 800ec78:	f340 80d6 	ble.w	800ee28 <_svfprintf_r+0xa5c>
 800ec7c:	2200      	movs	r2, #0
 800ec7e:	2300      	movs	r3, #0
 800ec80:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
 800ec84:	f7f9 fdee 	bl	8008864 <__aeabi_dcmpeq>
 800ec88:	2800      	cmp	r0, #0
 800ec8a:	f000 81a1 	beq.w	800efd0 <_svfprintf_r+0xc04>
 800ec8e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ec90:	4ac5      	ldr	r2, [pc, #788]	; (800efa8 <_svfprintf_r+0xbdc>)
 800ec92:	f8c9 2000 	str.w	r2, [r9]
 800ec96:	3301      	adds	r3, #1
 800ec98:	3401      	adds	r4, #1
 800ec9a:	2201      	movs	r2, #1
 800ec9c:	2b07      	cmp	r3, #7
 800ec9e:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
 800eca2:	f8c9 2004 	str.w	r2, [r9, #4]
 800eca6:	f300 84d0 	bgt.w	800f64a <_svfprintf_r+0x127e>
 800ecaa:	f109 0908 	add.w	r9, r9, #8
 800ecae:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ecb0:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800ecb2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800ecb4:	4293      	cmp	r3, r2
 800ecb6:	f280 8283 	bge.w	800f1c0 <_svfprintf_r+0xdf4>
 800ecba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ecbc:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800ecbe:	f8c9 2000 	str.w	r2, [r9]
 800ecc2:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800ecc4:	f8c9 2004 	str.w	r2, [r9, #4]
 800ecc8:	3301      	adds	r3, #1
 800ecca:	4414      	add	r4, r2
 800eccc:	2b07      	cmp	r3, #7
 800ecce:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
 800ecd2:	f300 838e 	bgt.w	800f3f2 <_svfprintf_r+0x1026>
 800ecd6:	f109 0908 	add.w	r9, r9, #8
 800ecda:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800ecdc:	1e5d      	subs	r5, r3, #1
 800ecde:	2d00      	cmp	r5, #0
 800ece0:	f77f adad 	ble.w	800e83e <_svfprintf_r+0x472>
 800ece4:	2d10      	cmp	r5, #16
 800ece6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800ece8:	4bb0      	ldr	r3, [pc, #704]	; (800efac <_svfprintf_r+0xbe0>)
 800ecea:	f340 84bb 	ble.w	800f664 <_svfprintf_r+0x1298>
 800ecee:	2610      	movs	r6, #16
 800ecf0:	e9dd 780a 	ldrd	r7, r8, [sp, #40]	; 0x28
 800ecf4:	469a      	mov	sl, r3
 800ecf6:	e005      	b.n	800ed04 <_svfprintf_r+0x938>
 800ecf8:	f109 0908 	add.w	r9, r9, #8
 800ecfc:	3d10      	subs	r5, #16
 800ecfe:	2d10      	cmp	r5, #16
 800ed00:	f340 84af 	ble.w	800f662 <_svfprintf_r+0x1296>
 800ed04:	3201      	adds	r2, #1
 800ed06:	3410      	adds	r4, #16
 800ed08:	2a07      	cmp	r2, #7
 800ed0a:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
 800ed0e:	e9c9 a600 	strd	sl, r6, [r9]
 800ed12:	ddf1      	ble.n	800ecf8 <_svfprintf_r+0x92c>
 800ed14:	aa28      	add	r2, sp, #160	; 0xa0
 800ed16:	4641      	mov	r1, r8
 800ed18:	4638      	mov	r0, r7
 800ed1a:	f003 f817 	bl	8011d4c <__ssprint_r>
 800ed1e:	2800      	cmp	r0, #0
 800ed20:	f47f ac85 	bne.w	800e62e <_svfprintf_r+0x262>
 800ed24:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
 800ed28:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800ed2c:	e7e6      	b.n	800ecfc <_svfprintf_r+0x930>
 800ed2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ed30:	9a07      	ldr	r2, [sp, #28]
 800ed32:	1a9d      	subs	r5, r3, r2
 800ed34:	2d00      	cmp	r5, #0
 800ed36:	f77f ad6b 	ble.w	800e810 <_svfprintf_r+0x444>
 800ed3a:	2d10      	cmp	r5, #16
 800ed3c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800ed3e:	4b9b      	ldr	r3, [pc, #620]	; (800efac <_svfprintf_r+0xbe0>)
 800ed40:	dd28      	ble.n	800ed94 <_svfprintf_r+0x9c8>
 800ed42:	4649      	mov	r1, r9
 800ed44:	4620      	mov	r0, r4
 800ed46:	970e      	str	r7, [sp, #56]	; 0x38
 800ed48:	46b1      	mov	r9, r6
 800ed4a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ed4c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800ed4e:	461f      	mov	r7, r3
 800ed50:	e004      	b.n	800ed5c <_svfprintf_r+0x990>
 800ed52:	3d10      	subs	r5, #16
 800ed54:	2d10      	cmp	r5, #16
 800ed56:	f101 0108 	add.w	r1, r1, #8
 800ed5a:	dd16      	ble.n	800ed8a <_svfprintf_r+0x9be>
 800ed5c:	3201      	adds	r2, #1
 800ed5e:	3010      	adds	r0, #16
 800ed60:	2310      	movs	r3, #16
 800ed62:	2a07      	cmp	r2, #7
 800ed64:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
 800ed68:	600f      	str	r7, [r1, #0]
 800ed6a:	604b      	str	r3, [r1, #4]
 800ed6c:	ddf1      	ble.n	800ed52 <_svfprintf_r+0x986>
 800ed6e:	aa28      	add	r2, sp, #160	; 0xa0
 800ed70:	4631      	mov	r1, r6
 800ed72:	4620      	mov	r0, r4
 800ed74:	f002 ffea 	bl	8011d4c <__ssprint_r>
 800ed78:	2800      	cmp	r0, #0
 800ed7a:	f47f ac58 	bne.w	800e62e <_svfprintf_r+0x262>
 800ed7e:	3d10      	subs	r5, #16
 800ed80:	2d10      	cmp	r5, #16
 800ed82:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
 800ed86:	a92b      	add	r1, sp, #172	; 0xac
 800ed88:	dce8      	bgt.n	800ed5c <_svfprintf_r+0x990>
 800ed8a:	463b      	mov	r3, r7
 800ed8c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800ed8e:	464e      	mov	r6, r9
 800ed90:	4604      	mov	r4, r0
 800ed92:	4689      	mov	r9, r1
 800ed94:	3201      	adds	r2, #1
 800ed96:	442c      	add	r4, r5
 800ed98:	2a07      	cmp	r2, #7
 800ed9a:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
 800ed9e:	e9c9 3500 	strd	r3, r5, [r9]
 800eda2:	f300 8476 	bgt.w	800f692 <_svfprintf_r+0x12c6>
 800eda6:	ebaa 0507 	sub.w	r5, sl, r7
 800edaa:	2d00      	cmp	r5, #0
 800edac:	f109 0908 	add.w	r9, r9, #8
 800edb0:	f77f ad33 	ble.w	800e81a <_svfprintf_r+0x44e>
 800edb4:	2d10      	cmp	r5, #16
 800edb6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800edb8:	4b7c      	ldr	r3, [pc, #496]	; (800efac <_svfprintf_r+0xbe0>)
 800edba:	dd29      	ble.n	800ee10 <_svfprintf_r+0xa44>
 800edbc:	4649      	mov	r1, r9
 800edbe:	4620      	mov	r0, r4
 800edc0:	970e      	str	r7, [sp, #56]	; 0x38
 800edc2:	46b1      	mov	r9, r6
 800edc4:	f04f 0a10 	mov.w	sl, #16
 800edc8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800edca:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800edcc:	461f      	mov	r7, r3
 800edce:	e004      	b.n	800edda <_svfprintf_r+0xa0e>
 800edd0:	3d10      	subs	r5, #16
 800edd2:	2d10      	cmp	r5, #16
 800edd4:	f101 0108 	add.w	r1, r1, #8
 800edd8:	dd15      	ble.n	800ee06 <_svfprintf_r+0xa3a>
 800edda:	3201      	adds	r2, #1
 800eddc:	3010      	adds	r0, #16
 800edde:	2a07      	cmp	r2, #7
 800ede0:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
 800ede4:	e9c1 7a00 	strd	r7, sl, [r1]
 800ede8:	ddf2      	ble.n	800edd0 <_svfprintf_r+0xa04>
 800edea:	aa28      	add	r2, sp, #160	; 0xa0
 800edec:	4631      	mov	r1, r6
 800edee:	4620      	mov	r0, r4
 800edf0:	f002 ffac 	bl	8011d4c <__ssprint_r>
 800edf4:	2800      	cmp	r0, #0
 800edf6:	f47f ac1a 	bne.w	800e62e <_svfprintf_r+0x262>
 800edfa:	3d10      	subs	r5, #16
 800edfc:	2d10      	cmp	r5, #16
 800edfe:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
 800ee02:	a92b      	add	r1, sp, #172	; 0xac
 800ee04:	dce9      	bgt.n	800edda <_svfprintf_r+0xa0e>
 800ee06:	463b      	mov	r3, r7
 800ee08:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800ee0a:	464e      	mov	r6, r9
 800ee0c:	4604      	mov	r4, r0
 800ee0e:	4689      	mov	r9, r1
 800ee10:	3201      	adds	r2, #1
 800ee12:	442c      	add	r4, r5
 800ee14:	2a07      	cmp	r2, #7
 800ee16:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
 800ee1a:	e9c9 3500 	strd	r3, r5, [r9]
 800ee1e:	f300 819d 	bgt.w	800f15c <_svfprintf_r+0xd90>
 800ee22:	f109 0908 	add.w	r9, r9, #8
 800ee26:	e4f8      	b.n	800e81a <_svfprintf_r+0x44e>
 800ee28:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800ee2a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ee2c:	2a01      	cmp	r2, #1
 800ee2e:	f104 0401 	add.w	r4, r4, #1
 800ee32:	f103 0501 	add.w	r5, r3, #1
 800ee36:	f109 0708 	add.w	r7, r9, #8
 800ee3a:	f340 814e 	ble.w	800f0da <_svfprintf_r+0xd0e>
 800ee3e:	2301      	movs	r3, #1
 800ee40:	2d07      	cmp	r5, #7
 800ee42:	f8c9 6000 	str.w	r6, [r9]
 800ee46:	e9cd 5429 	strd	r5, r4, [sp, #164]	; 0xa4
 800ee4a:	f8c9 3004 	str.w	r3, [r9, #4]
 800ee4e:	f300 819e 	bgt.w	800f18e <_svfprintf_r+0xdc2>
 800ee52:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ee54:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800ee56:	1c69      	adds	r1, r5, #1
 800ee58:	441c      	add	r4, r3
 800ee5a:	2907      	cmp	r1, #7
 800ee5c:	910f      	str	r1, [sp, #60]	; 0x3c
 800ee5e:	e9cd 1429 	strd	r1, r4, [sp, #164]	; 0xa4
 800ee62:	e9c7 2300 	strd	r2, r3, [r7]
 800ee66:	f300 819e 	bgt.w	800f1a6 <_svfprintf_r+0xdda>
 800ee6a:	3708      	adds	r7, #8
 800ee6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ee6e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800ee70:	f102 0a01 	add.w	sl, r2, #1
 800ee74:	2300      	movs	r3, #0
 800ee76:	2200      	movs	r2, #0
 800ee78:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
 800ee7c:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 800ee80:	f107 0908 	add.w	r9, r7, #8
 800ee84:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800ee88:	f7f9 fcec 	bl	8008864 <__aeabi_dcmpeq>
 800ee8c:	2800      	cmp	r0, #0
 800ee8e:	f040 8137 	bne.w	800f100 <_svfprintf_r+0xd34>
 800ee92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ee94:	f8c7 8004 	str.w	r8, [r7, #4]
 800ee98:	3601      	adds	r6, #1
 800ee9a:	4444      	add	r4, r8
 800ee9c:	2b07      	cmp	r3, #7
 800ee9e:	603e      	str	r6, [r7, #0]
 800eea0:	942a      	str	r4, [sp, #168]	; 0xa8
 800eea2:	9329      	str	r3, [sp, #164]	; 0xa4
 800eea4:	f300 837e 	bgt.w	800f5a4 <_svfprintf_r+0x11d8>
 800eea8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800eeaa:	f107 0310 	add.w	r3, r7, #16
 800eeae:	3202      	adds	r2, #2
 800eeb0:	464f      	mov	r7, r9
 800eeb2:	920e      	str	r2, [sp, #56]	; 0x38
 800eeb4:	4699      	mov	r9, r3
 800eeb6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800eeb8:	607a      	str	r2, [r7, #4]
 800eeba:	4414      	add	r4, r2
 800eebc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800eebe:	942a      	str	r4, [sp, #168]	; 0xa8
 800eec0:	ab24      	add	r3, sp, #144	; 0x90
 800eec2:	2a07      	cmp	r2, #7
 800eec4:	9229      	str	r2, [sp, #164]	; 0xa4
 800eec6:	603b      	str	r3, [r7, #0]
 800eec8:	f77f acb9 	ble.w	800e83e <_svfprintf_r+0x472>
 800eecc:	aa28      	add	r2, sp, #160	; 0xa0
 800eece:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800eed2:	f002 ff3b 	bl	8011d4c <__ssprint_r>
 800eed6:	2800      	cmp	r0, #0
 800eed8:	f47f aba9 	bne.w	800e62e <_svfprintf_r+0x262>
 800eedc:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800eede:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800eee2:	e4ac      	b.n	800e83e <_svfprintf_r+0x472>
 800eee4:	aa28      	add	r2, sp, #160	; 0xa0
 800eee6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800eeea:	f002 ff2f 	bl	8011d4c <__ssprint_r>
 800eeee:	2800      	cmp	r0, #0
 800eef0:	f47f ab9d 	bne.w	800e62e <_svfprintf_r+0x262>
 800eef4:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800eef6:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800eefa:	e475      	b.n	800e7e8 <_svfprintf_r+0x41c>
 800eefc:	aa28      	add	r2, sp, #160	; 0xa0
 800eefe:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800ef02:	f002 ff23 	bl	8011d4c <__ssprint_r>
 800ef06:	2800      	cmp	r0, #0
 800ef08:	f47f ab91 	bne.w	800e62e <_svfprintf_r+0x262>
 800ef0c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800ef0e:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800ef12:	e479      	b.n	800e808 <_svfprintf_r+0x43c>
 800ef14:	2d10      	cmp	r5, #16
 800ef16:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ef18:	dd20      	ble.n	800ef5c <_svfprintf_r+0xb90>
 800ef1a:	2610      	movs	r6, #16
 800ef1c:	e9dd 780a 	ldrd	r7, r8, [sp, #40]	; 0x28
 800ef20:	e004      	b.n	800ef2c <_svfprintf_r+0xb60>
 800ef22:	3d10      	subs	r5, #16
 800ef24:	2d10      	cmp	r5, #16
 800ef26:	f109 0908 	add.w	r9, r9, #8
 800ef2a:	dd17      	ble.n	800ef5c <_svfprintf_r+0xb90>
 800ef2c:	3301      	adds	r3, #1
 800ef2e:	4a20      	ldr	r2, [pc, #128]	; (800efb0 <_svfprintf_r+0xbe4>)
 800ef30:	3410      	adds	r4, #16
 800ef32:	2b07      	cmp	r3, #7
 800ef34:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
 800ef38:	e9c9 2600 	strd	r2, r6, [r9]
 800ef3c:	ddf1      	ble.n	800ef22 <_svfprintf_r+0xb56>
 800ef3e:	aa28      	add	r2, sp, #160	; 0xa0
 800ef40:	4641      	mov	r1, r8
 800ef42:	4638      	mov	r0, r7
 800ef44:	f002 ff02 	bl	8011d4c <__ssprint_r>
 800ef48:	2800      	cmp	r0, #0
 800ef4a:	f47f ab70 	bne.w	800e62e <_svfprintf_r+0x262>
 800ef4e:	3d10      	subs	r5, #16
 800ef50:	2d10      	cmp	r5, #16
 800ef52:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
 800ef56:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800ef5a:	dce7      	bgt.n	800ef2c <_svfprintf_r+0xb60>
 800ef5c:	3301      	adds	r3, #1
 800ef5e:	4a14      	ldr	r2, [pc, #80]	; (800efb0 <_svfprintf_r+0xbe4>)
 800ef60:	442c      	add	r4, r5
 800ef62:	2b07      	cmp	r3, #7
 800ef64:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
 800ef68:	e9c9 2500 	strd	r2, r5, [r9]
 800ef6c:	f77f ac70 	ble.w	800e850 <_svfprintf_r+0x484>
 800ef70:	aa28      	add	r2, sp, #160	; 0xa0
 800ef72:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800ef76:	f002 fee9 	bl	8011d4c <__ssprint_r>
 800ef7a:	2800      	cmp	r0, #0
 800ef7c:	f47f ab57 	bne.w	800e62e <_svfprintf_r+0x262>
 800ef80:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800ef82:	e465      	b.n	800e850 <_svfprintf_r+0x484>
 800ef84:	9818      	ldr	r0, [sp, #96]	; 0x60
 800ef86:	ae54      	add	r6, sp, #336	; 0x150
 800ef88:	0923      	lsrs	r3, r4, #4
 800ef8a:	f004 010f 	and.w	r1, r4, #15
 800ef8e:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
 800ef92:	092a      	lsrs	r2, r5, #4
 800ef94:	461c      	mov	r4, r3
 800ef96:	4615      	mov	r5, r2
 800ef98:	5c43      	ldrb	r3, [r0, r1]
 800ef9a:	f806 3d01 	strb.w	r3, [r6, #-1]!
 800ef9e:	ea54 0305 	orrs.w	r3, r4, r5
 800efa2:	d1f1      	bne.n	800ef88 <_svfprintf_r+0xbbc>
 800efa4:	e64d      	b.n	800ec42 <_svfprintf_r+0x876>
 800efa6:	bf00      	nop
 800efa8:	080135dc 	.word	0x080135dc
 800efac:	080135f0 	.word	0x080135f0
 800efb0:	080135e0 	.word	0x080135e0
 800efb4:	9f06      	ldr	r7, [sp, #24]
 800efb6:	2d00      	cmp	r5, #0
 800efb8:	bf08      	it	eq
 800efba:	2c0a      	cmpeq	r4, #10
 800efbc:	f4bf ae01 	bcs.w	800ebc2 <_svfprintf_r+0x7f6>
 800efc0:	3430      	adds	r4, #48	; 0x30
 800efc2:	9706      	str	r7, [sp, #24]
 800efc4:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
 800efc8:	2701      	movs	r7, #1
 800efca:	f20d 164f 	addw	r6, sp, #335	; 0x14f
 800efce:	e63b      	b.n	800ec48 <_svfprintf_r+0x87c>
 800efd0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800efd2:	2b00      	cmp	r3, #0
 800efd4:	f340 8305 	ble.w	800f5e2 <_svfprintf_r+0x1216>
 800efd8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800efda:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800efdc:	4293      	cmp	r3, r2
 800efde:	bfa8      	it	ge
 800efe0:	4613      	movge	r3, r2
 800efe2:	2b00      	cmp	r3, #0
 800efe4:	461d      	mov	r5, r3
 800efe6:	dd0d      	ble.n	800f004 <_svfprintf_r+0xc38>
 800efe8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800efea:	f8c9 6000 	str.w	r6, [r9]
 800efee:	3301      	adds	r3, #1
 800eff0:	442c      	add	r4, r5
 800eff2:	2b07      	cmp	r3, #7
 800eff4:	942a      	str	r4, [sp, #168]	; 0xa8
 800eff6:	f8c9 5004 	str.w	r5, [r9, #4]
 800effa:	9329      	str	r3, [sp, #164]	; 0xa4
 800effc:	f300 8479 	bgt.w	800f8f2 <_svfprintf_r+0x1526>
 800f000:	f109 0908 	add.w	r9, r9, #8
 800f004:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f006:	2d00      	cmp	r5, #0
 800f008:	bfa8      	it	ge
 800f00a:	1b5b      	subge	r3, r3, r5
 800f00c:	2b00      	cmp	r3, #0
 800f00e:	461d      	mov	r5, r3
 800f010:	f300 8219 	bgt.w	800f446 <_svfprintf_r+0x107a>
 800f014:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f016:	4433      	add	r3, r6
 800f018:	469a      	mov	sl, r3
 800f01a:	9b06      	ldr	r3, [sp, #24]
 800f01c:	055f      	lsls	r7, r3, #21
 800f01e:	f100 8239 	bmi.w	800f494 <_svfprintf_r+0x10c8>
 800f022:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f024:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800f026:	4293      	cmp	r3, r2
 800f028:	db03      	blt.n	800f032 <_svfprintf_r+0xc66>
 800f02a:	9a06      	ldr	r2, [sp, #24]
 800f02c:	07d5      	lsls	r5, r2, #31
 800f02e:	f140 83d0 	bpl.w	800f7d2 <_svfprintf_r+0x1406>
 800f032:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f034:	9919      	ldr	r1, [sp, #100]	; 0x64
 800f036:	f8c9 1000 	str.w	r1, [r9]
 800f03a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800f03c:	f8c9 1004 	str.w	r1, [r9, #4]
 800f040:	3201      	adds	r2, #1
 800f042:	440c      	add	r4, r1
 800f044:	2a07      	cmp	r2, #7
 800f046:	942a      	str	r4, [sp, #168]	; 0xa8
 800f048:	9229      	str	r2, [sp, #164]	; 0xa4
 800f04a:	f300 8475 	bgt.w	800f938 <_svfprintf_r+0x156c>
 800f04e:	f109 0908 	add.w	r9, r9, #8
 800f052:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800f054:	18b5      	adds	r5, r6, r2
 800f056:	eba5 050a 	sub.w	r5, r5, sl
 800f05a:	1ad3      	subs	r3, r2, r3
 800f05c:	429d      	cmp	r5, r3
 800f05e:	bfa8      	it	ge
 800f060:	461d      	movge	r5, r3
 800f062:	2d00      	cmp	r5, #0
 800f064:	dd0d      	ble.n	800f082 <_svfprintf_r+0xcb6>
 800f066:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f068:	f8c9 a000 	str.w	sl, [r9]
 800f06c:	3201      	adds	r2, #1
 800f06e:	442c      	add	r4, r5
 800f070:	2a07      	cmp	r2, #7
 800f072:	942a      	str	r4, [sp, #168]	; 0xa8
 800f074:	f8c9 5004 	str.w	r5, [r9, #4]
 800f078:	9229      	str	r2, [sp, #164]	; 0xa4
 800f07a:	f300 8564 	bgt.w	800fb46 <_svfprintf_r+0x177a>
 800f07e:	f109 0908 	add.w	r9, r9, #8
 800f082:	2d00      	cmp	r5, #0
 800f084:	bfac      	ite	ge
 800f086:	1b5d      	subge	r5, r3, r5
 800f088:	461d      	movlt	r5, r3
 800f08a:	2d00      	cmp	r5, #0
 800f08c:	f77f abd7 	ble.w	800e83e <_svfprintf_r+0x472>
 800f090:	2d10      	cmp	r5, #16
 800f092:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f094:	4bc5      	ldr	r3, [pc, #788]	; (800f3ac <_svfprintf_r+0xfe0>)
 800f096:	f340 82e5 	ble.w	800f664 <_svfprintf_r+0x1298>
 800f09a:	2610      	movs	r6, #16
 800f09c:	e9dd 780a 	ldrd	r7, r8, [sp, #40]	; 0x28
 800f0a0:	469a      	mov	sl, r3
 800f0a2:	e005      	b.n	800f0b0 <_svfprintf_r+0xce4>
 800f0a4:	f109 0908 	add.w	r9, r9, #8
 800f0a8:	3d10      	subs	r5, #16
 800f0aa:	2d10      	cmp	r5, #16
 800f0ac:	f340 82d9 	ble.w	800f662 <_svfprintf_r+0x1296>
 800f0b0:	3201      	adds	r2, #1
 800f0b2:	3410      	adds	r4, #16
 800f0b4:	2a07      	cmp	r2, #7
 800f0b6:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
 800f0ba:	e9c9 a600 	strd	sl, r6, [r9]
 800f0be:	ddf1      	ble.n	800f0a4 <_svfprintf_r+0xcd8>
 800f0c0:	aa28      	add	r2, sp, #160	; 0xa0
 800f0c2:	4641      	mov	r1, r8
 800f0c4:	4638      	mov	r0, r7
 800f0c6:	f002 fe41 	bl	8011d4c <__ssprint_r>
 800f0ca:	2800      	cmp	r0, #0
 800f0cc:	f47f aaaf 	bne.w	800e62e <_svfprintf_r+0x262>
 800f0d0:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
 800f0d4:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f0d8:	e7e6      	b.n	800f0a8 <_svfprintf_r+0xcdc>
 800f0da:	9a06      	ldr	r2, [sp, #24]
 800f0dc:	07d0      	lsls	r0, r2, #31
 800f0de:	f53f aeae 	bmi.w	800ee3e <_svfprintf_r+0xa72>
 800f0e2:	2201      	movs	r2, #1
 800f0e4:	2d07      	cmp	r5, #7
 800f0e6:	f8c9 6000 	str.w	r6, [r9]
 800f0ea:	e9cd 5429 	strd	r5, r4, [sp, #164]	; 0xa4
 800f0ee:	f8c9 2004 	str.w	r2, [r9, #4]
 800f0f2:	f300 8257 	bgt.w	800f5a4 <_svfprintf_r+0x11d8>
 800f0f6:	3302      	adds	r3, #2
 800f0f8:	930e      	str	r3, [sp, #56]	; 0x38
 800f0fa:	f109 0910 	add.w	r9, r9, #16
 800f0fe:	e6da      	b.n	800eeb6 <_svfprintf_r+0xaea>
 800f100:	f1b8 0f00 	cmp.w	r8, #0
 800f104:	f77f aed7 	ble.w	800eeb6 <_svfprintf_r+0xaea>
 800f108:	f1b8 0f10 	cmp.w	r8, #16
 800f10c:	4ba7      	ldr	r3, [pc, #668]	; (800f3ac <_svfprintf_r+0xfe0>)
 800f10e:	f340 862a 	ble.w	800fd66 <_svfprintf_r+0x199a>
 800f112:	461a      	mov	r2, r3
 800f114:	4655      	mov	r5, sl
 800f116:	4623      	mov	r3, r4
 800f118:	2610      	movs	r6, #16
 800f11a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 800f11e:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800f122:	4614      	mov	r4, r2
 800f124:	e007      	b.n	800f136 <_svfprintf_r+0xd6a>
 800f126:	3708      	adds	r7, #8
 800f128:	f1a8 0810 	sub.w	r8, r8, #16
 800f12c:	f1b8 0f10 	cmp.w	r8, #16
 800f130:	f340 830c 	ble.w	800f74c <_svfprintf_r+0x1380>
 800f134:	3501      	adds	r5, #1
 800f136:	3310      	adds	r3, #16
 800f138:	2d07      	cmp	r5, #7
 800f13a:	e9cd 5329 	strd	r5, r3, [sp, #164]	; 0xa4
 800f13e:	e9c7 4600 	strd	r4, r6, [r7]
 800f142:	ddf0      	ble.n	800f126 <_svfprintf_r+0xd5a>
 800f144:	aa28      	add	r2, sp, #160	; 0xa0
 800f146:	4651      	mov	r1, sl
 800f148:	4648      	mov	r0, r9
 800f14a:	f002 fdff 	bl	8011d4c <__ssprint_r>
 800f14e:	2800      	cmp	r0, #0
 800f150:	f47f aa6d 	bne.w	800e62e <_svfprintf_r+0x262>
 800f154:	e9dd 5329 	ldrd	r5, r3, [sp, #164]	; 0xa4
 800f158:	af2b      	add	r7, sp, #172	; 0xac
 800f15a:	e7e5      	b.n	800f128 <_svfprintf_r+0xd5c>
 800f15c:	aa28      	add	r2, sp, #160	; 0xa0
 800f15e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f162:	f002 fdf3 	bl	8011d4c <__ssprint_r>
 800f166:	2800      	cmp	r0, #0
 800f168:	f47f aa61 	bne.w	800e62e <_svfprintf_r+0x262>
 800f16c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800f16e:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f172:	f7ff bb52 	b.w	800e81a <_svfprintf_r+0x44e>
 800f176:	232d      	movs	r3, #45	; 0x2d
 800f178:	4264      	negs	r4, r4
 800f17a:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
 800f17e:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 800f182:	9f06      	ldr	r7, [sp, #24]
 800f184:	2301      	movs	r3, #1
 800f186:	e40b      	b.n	800e9a0 <_svfprintf_r+0x5d4>
 800f188:	4634      	mov	r4, r6
 800f18a:	f7ff b972 	b.w	800e472 <_svfprintf_r+0xa6>
 800f18e:	aa28      	add	r2, sp, #160	; 0xa0
 800f190:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f194:	f002 fdda 	bl	8011d4c <__ssprint_r>
 800f198:	2800      	cmp	r0, #0
 800f19a:	f47f aa48 	bne.w	800e62e <_svfprintf_r+0x262>
 800f19e:	e9dd 5429 	ldrd	r5, r4, [sp, #164]	; 0xa4
 800f1a2:	af2b      	add	r7, sp, #172	; 0xac
 800f1a4:	e655      	b.n	800ee52 <_svfprintf_r+0xa86>
 800f1a6:	aa28      	add	r2, sp, #160	; 0xa0
 800f1a8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f1ac:	f002 fdce 	bl	8011d4c <__ssprint_r>
 800f1b0:	2800      	cmp	r0, #0
 800f1b2:	f47f aa3c 	bne.w	800e62e <_svfprintf_r+0x262>
 800f1b6:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
 800f1ba:	af2b      	add	r7, sp, #172	; 0xac
 800f1bc:	930f      	str	r3, [sp, #60]	; 0x3c
 800f1be:	e655      	b.n	800ee6c <_svfprintf_r+0xaa0>
 800f1c0:	9b06      	ldr	r3, [sp, #24]
 800f1c2:	07db      	lsls	r3, r3, #31
 800f1c4:	f53f ad79 	bmi.w	800ecba <_svfprintf_r+0x8ee>
 800f1c8:	f7ff bb39 	b.w	800e83e <_svfprintf_r+0x472>
 800f1cc:	ae54      	add	r6, sp, #336	; 0x150
 800f1ce:	e53b      	b.n	800ec48 <_svfprintf_r+0x87c>
 800f1d0:	9b06      	ldr	r3, [sp, #24]
 800f1d2:	f413 7f00 	tst.w	r3, #512	; 0x200
 800f1d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f1d8:	f040 831a 	bne.w	800f810 <_svfprintf_r+0x1444>
 800f1dc:	681c      	ldr	r4, [r3, #0]
 800f1de:	910d      	str	r1, [sp, #52]	; 0x34
 800f1e0:	17e5      	asrs	r5, r4, #31
 800f1e2:	4622      	mov	r2, r4
 800f1e4:	462b      	mov	r3, r5
 800f1e6:	f7ff b9e2 	b.w	800e5ae <_svfprintf_r+0x1e2>
 800f1ea:	9a06      	ldr	r2, [sp, #24]
 800f1ec:	f412 7f00 	tst.w	r2, #512	; 0x200
 800f1f0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f1f2:	f040 82fc 	bne.w	800f7ee <_svfprintf_r+0x1422>
 800f1f6:	6814      	ldr	r4, [r2, #0]
 800f1f8:	930d      	str	r3, [sp, #52]	; 0x34
 800f1fa:	2500      	movs	r5, #0
 800f1fc:	f7ff ba36 	b.w	800e66c <_svfprintf_r+0x2a0>
 800f200:	9a06      	ldr	r2, [sp, #24]
 800f202:	f412 7f00 	tst.w	r2, #512	; 0x200
 800f206:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f208:	f040 82f6 	bne.w	800f7f8 <_svfprintf_r+0x142c>
 800f20c:	6814      	ldr	r4, [r2, #0]
 800f20e:	930d      	str	r3, [sp, #52]	; 0x34
 800f210:	2500      	movs	r5, #0
 800f212:	f7ff b9b5 	b.w	800e580 <_svfprintf_r+0x1b4>
 800f216:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
 800f21a:	4602      	mov	r2, r0
 800f21c:	460b      	mov	r3, r1
 800f21e:	f7f9 fb53 	bl	80088c8 <__aeabi_dcmpun>
 800f222:	2800      	cmp	r0, #0
 800f224:	f040 8549 	bne.w	800fcba <_svfprintf_r+0x18ee>
 800f228:	f1b8 0f61 	cmp.w	r8, #97	; 0x61
 800f22c:	f000 84de 	beq.w	800fbec <_svfprintf_r+0x1820>
 800f230:	f1b8 0f41 	cmp.w	r8, #65	; 0x41
 800f234:	f000 83dd 	beq.w	800f9f2 <_svfprintf_r+0x1626>
 800f238:	f028 0320 	bic.w	r3, r8, #32
 800f23c:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
 800f240:	9307      	str	r3, [sp, #28]
 800f242:	f000 82fb 	beq.w	800f83c <_svfprintf_r+0x1470>
 800f246:	2b47      	cmp	r3, #71	; 0x47
 800f248:	d104      	bne.n	800f254 <_svfprintf_r+0xe88>
 800f24a:	f1ba 0f00 	cmp.w	sl, #0
 800f24e:	bf08      	it	eq
 800f250:	f04f 0a01 	moveq.w	sl, #1
 800f254:	9915      	ldr	r1, [sp, #84]	; 0x54
 800f256:	9a06      	ldr	r2, [sp, #24]
 800f258:	1e0d      	subs	r5, r1, #0
 800f25a:	f442 7380 	orr.w	r3, r2, #256	; 0x100
 800f25e:	f2c0 8465 	blt.w	800fb2c <_svfprintf_r+0x1760>
 800f262:	2100      	movs	r1, #0
 800f264:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800f266:	911e      	str	r1, [sp, #120]	; 0x78
 800f268:	920e      	str	r2, [sp, #56]	; 0x38
 800f26a:	9306      	str	r3, [sp, #24]
 800f26c:	910c      	str	r1, [sp, #48]	; 0x30
 800f26e:	9b07      	ldr	r3, [sp, #28]
 800f270:	2b46      	cmp	r3, #70	; 0x46
 800f272:	f000 836f 	beq.w	800f954 <_svfprintf_r+0x1588>
 800f276:	2b45      	cmp	r3, #69	; 0x45
 800f278:	463a      	mov	r2, r7
 800f27a:	462b      	mov	r3, r5
 800f27c:	f000 84bb 	beq.w	800fbf6 <_svfprintf_r+0x182a>
 800f280:	a826      	add	r0, sp, #152	; 0x98
 800f282:	a923      	add	r1, sp, #140	; 0x8c
 800f284:	9004      	str	r0, [sp, #16]
 800f286:	9103      	str	r1, [sp, #12]
 800f288:	a822      	add	r0, sp, #136	; 0x88
 800f28a:	2102      	movs	r1, #2
 800f28c:	9002      	str	r0, [sp, #8]
 800f28e:	f8cd a004 	str.w	sl, [sp, #4]
 800f292:	9100      	str	r1, [sp, #0]
 800f294:	980a      	ldr	r0, [sp, #40]	; 0x28
 800f296:	f000 ff2f 	bl	80100f8 <_dtoa_r>
 800f29a:	9b07      	ldr	r3, [sp, #28]
 800f29c:	2b47      	cmp	r3, #71	; 0x47
 800f29e:	4606      	mov	r6, r0
 800f2a0:	f040 8572 	bne.w	800fd88 <_svfprintf_r+0x19bc>
 800f2a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f2a6:	07db      	lsls	r3, r3, #31
 800f2a8:	f100 8467 	bmi.w	800fb7a <_svfprintf_r+0x17ae>
 800f2ac:	9f26      	ldr	r7, [sp, #152]	; 0x98
 800f2ae:	1bbb      	subs	r3, r7, r6
 800f2b0:	9316      	str	r3, [sp, #88]	; 0x58
 800f2b2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f2b4:	9312      	str	r3, [sp, #72]	; 0x48
 800f2b6:	9b07      	ldr	r3, [sp, #28]
 800f2b8:	2b47      	cmp	r3, #71	; 0x47
 800f2ba:	f000 82de 	beq.w	800f87a <_svfprintf_r+0x14ae>
 800f2be:	9b07      	ldr	r3, [sp, #28]
 800f2c0:	2b46      	cmp	r3, #70	; 0x46
 800f2c2:	f000 837f 	beq.w	800f9c4 <_svfprintf_r+0x15f8>
 800f2c6:	9907      	ldr	r1, [sp, #28]
 800f2c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f2ca:	2941      	cmp	r1, #65	; 0x41
 800f2cc:	f103 32ff 	add.w	r2, r3, #4294967295	; 0xffffffff
 800f2d0:	fa5f f388 	uxtb.w	r3, r8
 800f2d4:	bf03      	ittte	eq
 800f2d6:	330f      	addeq	r3, #15
 800f2d8:	b2db      	uxtbeq	r3, r3
 800f2da:	2101      	moveq	r1, #1
 800f2dc:	2100      	movne	r1, #0
 800f2de:	2a00      	cmp	r2, #0
 800f2e0:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 800f2e4:	bfb8      	it	lt
 800f2e6:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
 800f2e8:	9222      	str	r2, [sp, #136]	; 0x88
 800f2ea:	bfb6      	itet	lt
 800f2ec:	f1c3 0201 	rsblt	r2, r3, #1
 800f2f0:	232b      	movge	r3, #43	; 0x2b
 800f2f2:	232d      	movlt	r3, #45	; 0x2d
 800f2f4:	2a09      	cmp	r2, #9
 800f2f6:	f88d 3091 	strb.w	r3, [sp, #145]	; 0x91
 800f2fa:	f340 84ea 	ble.w	800fcd2 <_svfprintf_r+0x1906>
 800f2fe:	f10d 049f 	add.w	r4, sp, #159	; 0x9f
 800f302:	4620      	mov	r0, r4
 800f304:	4d2a      	ldr	r5, [pc, #168]	; (800f3b0 <_svfprintf_r+0xfe4>)
 800f306:	e001      	b.n	800f30c <_svfprintf_r+0xf40>
 800f308:	4608      	mov	r0, r1
 800f30a:	461a      	mov	r2, r3
 800f30c:	fb85 3102 	smull	r3, r1, r5, r2
 800f310:	17d3      	asrs	r3, r2, #31
 800f312:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
 800f316:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 800f31a:	eba2 0141 	sub.w	r1, r2, r1, lsl #1
 800f31e:	3130      	adds	r1, #48	; 0x30
 800f320:	2a63      	cmp	r2, #99	; 0x63
 800f322:	f800 1c01 	strb.w	r1, [r0, #-1]
 800f326:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 800f32a:	dced      	bgt.n	800f308 <_svfprintf_r+0xf3c>
 800f32c:	3330      	adds	r3, #48	; 0x30
 800f32e:	1e82      	subs	r2, r0, #2
 800f330:	b2db      	uxtb	r3, r3
 800f332:	4294      	cmp	r4, r2
 800f334:	f801 3c01 	strb.w	r3, [r1, #-1]
 800f338:	f240 8522 	bls.w	800fd80 <_svfprintf_r+0x19b4>
 800f33c:	f10d 0292 	add.w	r2, sp, #146	; 0x92
 800f340:	e001      	b.n	800f346 <_svfprintf_r+0xf7a>
 800f342:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f346:	f802 3b01 	strb.w	r3, [r2], #1
 800f34a:	42a1      	cmp	r1, r4
 800f34c:	d1f9      	bne.n	800f342 <_svfprintf_r+0xf76>
 800f34e:	f10d 03a1 	add.w	r3, sp, #161	; 0xa1
 800f352:	f10d 0292 	add.w	r2, sp, #146	; 0x92
 800f356:	1a1b      	subs	r3, r3, r0
 800f358:	4413      	add	r3, r2
 800f35a:	aa24      	add	r2, sp, #144	; 0x90
 800f35c:	1a9b      	subs	r3, r3, r2
 800f35e:	931a      	str	r3, [sp, #104]	; 0x68
 800f360:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800f362:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800f364:	2b01      	cmp	r3, #1
 800f366:	eb02 0703 	add.w	r7, r2, r3
 800f36a:	f340 84ce 	ble.w	800fd0a <_svfprintf_r+0x193e>
 800f36e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800f370:	441f      	add	r7, r3
 800f372:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f374:	2200      	movs	r2, #0
 800f376:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800f37a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800f37e:	e9cd 2212 	strd	r2, r2, [sp, #72]	; 0x48
 800f382:	9306      	str	r3, [sp, #24]
 800f384:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
 800f388:	9210      	str	r2, [sp, #64]	; 0x40
 800f38a:	9307      	str	r3, [sp, #28]
 800f38c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800f38e:	2b00      	cmp	r3, #0
 800f390:	f040 829a 	bne.w	800f8c8 <_svfprintf_r+0x14fc>
 800f394:	469a      	mov	sl, r3
 800f396:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
 800f39a:	f7ff bb5a 	b.w	800ea52 <_svfprintf_r+0x686>
 800f39e:	681c      	ldr	r4, [r3, #0]
 800f3a0:	920d      	str	r2, [sp, #52]	; 0x34
 800f3a2:	2500      	movs	r5, #0
 800f3a4:	2301      	movs	r3, #1
 800f3a6:	f7ff baf8 	b.w	800e99a <_svfprintf_r+0x5ce>
 800f3aa:	bf00      	nop
 800f3ac:	080135f0 	.word	0x080135f0
 800f3b0:	66666667 	.word	0x66666667
 800f3b4:	9a08      	ldr	r2, [sp, #32]
 800f3b6:	4610      	mov	r0, r2
 800f3b8:	17d1      	asrs	r1, r2, #31
 800f3ba:	e9c3 0100 	strd	r0, r1, [r3]
 800f3be:	465e      	mov	r6, fp
 800f3c0:	f7ff ba5c 	b.w	800e87c <_svfprintf_r+0x4b0>
 800f3c4:	4252      	negs	r2, r2
 800f3c6:	9209      	str	r2, [sp, #36]	; 0x24
 800f3c8:	930d      	str	r3, [sp, #52]	; 0x34
 800f3ca:	f7ff b988 	b.w	800e6de <_svfprintf_r+0x312>
 800f3ce:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800f3d2:	f89b 8001 	ldrb.w	r8, [fp, #1]
 800f3d6:	9306      	str	r3, [sp, #24]
 800f3d8:	f10b 0b01 	add.w	fp, fp, #1
 800f3dc:	f7ff b856 	b.w	800e48c <_svfprintf_r+0xc0>
 800f3e0:	f043 0320 	orr.w	r3, r3, #32
 800f3e4:	f89b 8001 	ldrb.w	r8, [fp, #1]
 800f3e8:	9306      	str	r3, [sp, #24]
 800f3ea:	f10b 0b01 	add.w	fp, fp, #1
 800f3ee:	f7ff b84d 	b.w	800e48c <_svfprintf_r+0xc0>
 800f3f2:	aa28      	add	r2, sp, #160	; 0xa0
 800f3f4:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f3f8:	f002 fca8 	bl	8011d4c <__ssprint_r>
 800f3fc:	2800      	cmp	r0, #0
 800f3fe:	f47f a916 	bne.w	800e62e <_svfprintf_r+0x262>
 800f402:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800f404:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f408:	e467      	b.n	800ecda <_svfprintf_r+0x90e>
 800f40a:	2140      	movs	r1, #64	; 0x40
 800f40c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800f40e:	f7fe f97b 	bl	800d708 <_malloc_r>
 800f412:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f414:	6018      	str	r0, [r3, #0]
 800f416:	6118      	str	r0, [r3, #16]
 800f418:	2800      	cmp	r0, #0
 800f41a:	f000 84b8 	beq.w	800fd8e <_svfprintf_r+0x19c2>
 800f41e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f420:	2340      	movs	r3, #64	; 0x40
 800f422:	6153      	str	r3, [r2, #20]
 800f424:	f7fe bfe9 	b.w	800e3fa <_svfprintf_r+0x2e>
 800f428:	4657      	mov	r7, sl
 800f42a:	2f06      	cmp	r7, #6
 800f42c:	bf28      	it	cs
 800f42e:	2706      	movcs	r7, #6
 800f430:	46b2      	mov	sl, r6
 800f432:	9610      	str	r6, [sp, #64]	; 0x40
 800f434:	e9cd 6612 	strd	r6, r6, [sp, #72]	; 0x48
 800f438:	960c      	str	r6, [sp, #48]	; 0x30
 800f43a:	4632      	mov	r2, r6
 800f43c:	9707      	str	r7, [sp, #28]
 800f43e:	940d      	str	r4, [sp, #52]	; 0x34
 800f440:	4ebf      	ldr	r6, [pc, #764]	; (800f740 <_svfprintf_r+0x1374>)
 800f442:	f7ff bb06 	b.w	800ea52 <_svfprintf_r+0x686>
 800f446:	2d10      	cmp	r5, #16
 800f448:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f44a:	4bbe      	ldr	r3, [pc, #760]	; (800f744 <_svfprintf_r+0x1378>)
 800f44c:	f340 81a4 	ble.w	800f798 <_svfprintf_r+0x13cc>
 800f450:	4619      	mov	r1, r3
 800f452:	2710      	movs	r7, #16
 800f454:	4623      	mov	r3, r4
 800f456:	e9dd 8a0a 	ldrd	r8, sl, [sp, #40]	; 0x28
 800f45a:	460c      	mov	r4, r1
 800f45c:	e005      	b.n	800f46a <_svfprintf_r+0x109e>
 800f45e:	f109 0908 	add.w	r9, r9, #8
 800f462:	3d10      	subs	r5, #16
 800f464:	2d10      	cmp	r5, #16
 800f466:	f340 8194 	ble.w	800f792 <_svfprintf_r+0x13c6>
 800f46a:	3201      	adds	r2, #1
 800f46c:	3310      	adds	r3, #16
 800f46e:	2a07      	cmp	r2, #7
 800f470:	e9cd 2329 	strd	r2, r3, [sp, #164]	; 0xa4
 800f474:	e9c9 4700 	strd	r4, r7, [r9]
 800f478:	ddf1      	ble.n	800f45e <_svfprintf_r+0x1092>
 800f47a:	aa28      	add	r2, sp, #160	; 0xa0
 800f47c:	4651      	mov	r1, sl
 800f47e:	4640      	mov	r0, r8
 800f480:	f002 fc64 	bl	8011d4c <__ssprint_r>
 800f484:	2800      	cmp	r0, #0
 800f486:	f47f a8d2 	bne.w	800e62e <_svfprintf_r+0x262>
 800f48a:	e9dd 2329 	ldrd	r2, r3, [sp, #164]	; 0xa4
 800f48e:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f492:	e7e6      	b.n	800f462 <_svfprintf_r+0x1096>
 800f494:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800f496:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
 800f49a:	18f3      	adds	r3, r6, r3
 800f49c:	930e      	str	r3, [sp, #56]	; 0x38
 800f49e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f4a0:	9612      	str	r6, [sp, #72]	; 0x48
 800f4a2:	464a      	mov	r2, r9
 800f4a4:	4656      	mov	r6, sl
 800f4a6:	4fa7      	ldr	r7, [pc, #668]	; (800f744 <_svfprintf_r+0x1378>)
 800f4a8:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 800f4ac:	f8dd a074 	ldr.w	sl, [sp, #116]	; 0x74
 800f4b0:	4621      	mov	r1, r4
 800f4b2:	e9dd b90a 	ldrd	fp, r9, [sp, #40]	; 0x28
 800f4b6:	2b00      	cmp	r3, #0
 800f4b8:	d033      	beq.n	800f522 <_svfprintf_r+0x1156>
 800f4ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f4bc:	2b00      	cmp	r3, #0
 800f4be:	d134      	bne.n	800f52a <_svfprintf_r+0x115e>
 800f4c0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f4c2:	3b01      	subs	r3, #1
 800f4c4:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 800f4c8:	9313      	str	r3, [sp, #76]	; 0x4c
 800f4ca:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f4cc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800f4ce:	6010      	str	r0, [r2, #0]
 800f4d0:	3301      	adds	r3, #1
 800f4d2:	4451      	add	r1, sl
 800f4d4:	2b07      	cmp	r3, #7
 800f4d6:	912a      	str	r1, [sp, #168]	; 0xa8
 800f4d8:	f8c2 a004 	str.w	sl, [r2, #4]
 800f4dc:	9329      	str	r3, [sp, #164]	; 0xa4
 800f4de:	dc56      	bgt.n	800f58e <_svfprintf_r+0x11c2>
 800f4e0:	3208      	adds	r2, #8
 800f4e2:	980e      	ldr	r0, [sp, #56]	; 0x38
 800f4e4:	f898 3000 	ldrb.w	r3, [r8]
 800f4e8:	1b85      	subs	r5, r0, r6
 800f4ea:	429d      	cmp	r5, r3
 800f4ec:	bfa8      	it	ge
 800f4ee:	461d      	movge	r5, r3
 800f4f0:	2d00      	cmp	r5, #0
 800f4f2:	dd0c      	ble.n	800f50e <_svfprintf_r+0x1142>
 800f4f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f4f6:	6016      	str	r6, [r2, #0]
 800f4f8:	3301      	adds	r3, #1
 800f4fa:	4429      	add	r1, r5
 800f4fc:	2b07      	cmp	r3, #7
 800f4fe:	912a      	str	r1, [sp, #168]	; 0xa8
 800f500:	6055      	str	r5, [r2, #4]
 800f502:	9329      	str	r3, [sp, #164]	; 0xa4
 800f504:	f300 80b8 	bgt.w	800f678 <_svfprintf_r+0x12ac>
 800f508:	f898 3000 	ldrb.w	r3, [r8]
 800f50c:	3208      	adds	r2, #8
 800f50e:	2d00      	cmp	r5, #0
 800f510:	bfac      	ite	ge
 800f512:	1b5d      	subge	r5, r3, r5
 800f514:	461d      	movlt	r5, r3
 800f516:	2d00      	cmp	r5, #0
 800f518:	dc0b      	bgt.n	800f532 <_svfprintf_r+0x1166>
 800f51a:	441e      	add	r6, r3
 800f51c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f51e:	2b00      	cmp	r3, #0
 800f520:	d1cb      	bne.n	800f4ba <_svfprintf_r+0x10ee>
 800f522:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f524:	2b00      	cmp	r3, #0
 800f526:	f000 8199 	beq.w	800f85c <_svfprintf_r+0x1490>
 800f52a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f52c:	3b01      	subs	r3, #1
 800f52e:	9310      	str	r3, [sp, #64]	; 0x40
 800f530:	e7cb      	b.n	800f4ca <_svfprintf_r+0x10fe>
 800f532:	2d10      	cmp	r5, #16
 800f534:	9829      	ldr	r0, [sp, #164]	; 0xa4
 800f536:	dd1c      	ble.n	800f572 <_svfprintf_r+0x11a6>
 800f538:	2410      	movs	r4, #16
 800f53a:	e004      	b.n	800f546 <_svfprintf_r+0x117a>
 800f53c:	3d10      	subs	r5, #16
 800f53e:	2d10      	cmp	r5, #16
 800f540:	f102 0208 	add.w	r2, r2, #8
 800f544:	dd15      	ble.n	800f572 <_svfprintf_r+0x11a6>
 800f546:	3001      	adds	r0, #1
 800f548:	3110      	adds	r1, #16
 800f54a:	2807      	cmp	r0, #7
 800f54c:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
 800f550:	e9c2 7400 	strd	r7, r4, [r2]
 800f554:	ddf2      	ble.n	800f53c <_svfprintf_r+0x1170>
 800f556:	aa28      	add	r2, sp, #160	; 0xa0
 800f558:	4649      	mov	r1, r9
 800f55a:	4658      	mov	r0, fp
 800f55c:	f002 fbf6 	bl	8011d4c <__ssprint_r>
 800f560:	2800      	cmp	r0, #0
 800f562:	f47f a864 	bne.w	800e62e <_svfprintf_r+0x262>
 800f566:	3d10      	subs	r5, #16
 800f568:	2d10      	cmp	r5, #16
 800f56a:	e9dd 0129 	ldrd	r0, r1, [sp, #164]	; 0xa4
 800f56e:	aa2b      	add	r2, sp, #172	; 0xac
 800f570:	dce9      	bgt.n	800f546 <_svfprintf_r+0x117a>
 800f572:	3001      	adds	r0, #1
 800f574:	4429      	add	r1, r5
 800f576:	2807      	cmp	r0, #7
 800f578:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
 800f57c:	e9c2 7500 	strd	r7, r5, [r2]
 800f580:	f300 81a9 	bgt.w	800f8d6 <_svfprintf_r+0x150a>
 800f584:	f898 3000 	ldrb.w	r3, [r8]
 800f588:	3208      	adds	r2, #8
 800f58a:	441e      	add	r6, r3
 800f58c:	e7c6      	b.n	800f51c <_svfprintf_r+0x1150>
 800f58e:	aa28      	add	r2, sp, #160	; 0xa0
 800f590:	4649      	mov	r1, r9
 800f592:	4658      	mov	r0, fp
 800f594:	f002 fbda 	bl	8011d4c <__ssprint_r>
 800f598:	2800      	cmp	r0, #0
 800f59a:	f47f a848 	bne.w	800e62e <_svfprintf_r+0x262>
 800f59e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800f5a0:	aa2b      	add	r2, sp, #172	; 0xac
 800f5a2:	e79e      	b.n	800f4e2 <_svfprintf_r+0x1116>
 800f5a4:	aa28      	add	r2, sp, #160	; 0xa0
 800f5a6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f5aa:	f002 fbcf 	bl	8011d4c <__ssprint_r>
 800f5ae:	2800      	cmp	r0, #0
 800f5b0:	f47f a83d 	bne.w	800e62e <_svfprintf_r+0x262>
 800f5b4:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
 800f5b8:	3301      	adds	r3, #1
 800f5ba:	930e      	str	r3, [sp, #56]	; 0x38
 800f5bc:	f10d 09b4 	add.w	r9, sp, #180	; 0xb4
 800f5c0:	af2b      	add	r7, sp, #172	; 0xac
 800f5c2:	e478      	b.n	800eeb6 <_svfprintf_r+0xaea>
 800f5c4:	aa28      	add	r2, sp, #160	; 0xa0
 800f5c6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f5ca:	f002 fbbf 	bl	8011d4c <__ssprint_r>
 800f5ce:	2800      	cmp	r0, #0
 800f5d0:	f47f a82d 	bne.w	800e62e <_svfprintf_r+0x262>
 800f5d4:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
 800f5d8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800f5da:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f5de:	f7ff b8f3 	b.w	800e7c8 <_svfprintf_r+0x3fc>
 800f5e2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f5e4:	4958      	ldr	r1, [pc, #352]	; (800f748 <_svfprintf_r+0x137c>)
 800f5e6:	f8c9 1000 	str.w	r1, [r9]
 800f5ea:	3201      	adds	r2, #1
 800f5ec:	3401      	adds	r4, #1
 800f5ee:	2101      	movs	r1, #1
 800f5f0:	2a07      	cmp	r2, #7
 800f5f2:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
 800f5f6:	f8c9 1004 	str.w	r1, [r9, #4]
 800f5fa:	f300 80dd 	bgt.w	800f7b8 <_svfprintf_r+0x13ec>
 800f5fe:	f109 0908 	add.w	r9, r9, #8
 800f602:	2b00      	cmp	r3, #0
 800f604:	d163      	bne.n	800f6ce <_svfprintf_r+0x1302>
 800f606:	9b06      	ldr	r3, [sp, #24]
 800f608:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800f60a:	f003 0301 	and.w	r3, r3, #1
 800f60e:	4313      	orrs	r3, r2
 800f610:	f43f a915 	beq.w	800e83e <_svfprintf_r+0x472>
 800f614:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f616:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800f618:	f8c9 3000 	str.w	r3, [r9]
 800f61c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800f61e:	f8c9 3004 	str.w	r3, [r9, #4]
 800f622:	3201      	adds	r2, #1
 800f624:	441c      	add	r4, r3
 800f626:	2a07      	cmp	r2, #7
 800f628:	942a      	str	r4, [sp, #168]	; 0xa8
 800f62a:	9229      	str	r2, [sp, #164]	; 0xa4
 800f62c:	f300 80f8 	bgt.w	800f820 <_svfprintf_r+0x1454>
 800f630:	f109 0908 	add.w	r9, r9, #8
 800f634:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800f636:	3201      	adds	r2, #1
 800f638:	441c      	add	r4, r3
 800f63a:	2a07      	cmp	r2, #7
 800f63c:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
 800f640:	e9c9 6300 	strd	r6, r3, [r9]
 800f644:	f77f a8f9 	ble.w	800e83a <_svfprintf_r+0x46e>
 800f648:	e440      	b.n	800eecc <_svfprintf_r+0xb00>
 800f64a:	aa28      	add	r2, sp, #160	; 0xa0
 800f64c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f650:	f002 fb7c 	bl	8011d4c <__ssprint_r>
 800f654:	2800      	cmp	r0, #0
 800f656:	f47e afea 	bne.w	800e62e <_svfprintf_r+0x262>
 800f65a:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f65e:	f7ff bb26 	b.w	800ecae <_svfprintf_r+0x8e2>
 800f662:	4653      	mov	r3, sl
 800f664:	3201      	adds	r2, #1
 800f666:	442c      	add	r4, r5
 800f668:	2a07      	cmp	r2, #7
 800f66a:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
 800f66e:	e9c9 3500 	strd	r3, r5, [r9]
 800f672:	f77f a8e2 	ble.w	800e83a <_svfprintf_r+0x46e>
 800f676:	e429      	b.n	800eecc <_svfprintf_r+0xb00>
 800f678:	aa28      	add	r2, sp, #160	; 0xa0
 800f67a:	4649      	mov	r1, r9
 800f67c:	4658      	mov	r0, fp
 800f67e:	f002 fb65 	bl	8011d4c <__ssprint_r>
 800f682:	2800      	cmp	r0, #0
 800f684:	f47e afd3 	bne.w	800e62e <_svfprintf_r+0x262>
 800f688:	f898 3000 	ldrb.w	r3, [r8]
 800f68c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800f68e:	aa2b      	add	r2, sp, #172	; 0xac
 800f690:	e73d      	b.n	800f50e <_svfprintf_r+0x1142>
 800f692:	aa28      	add	r2, sp, #160	; 0xa0
 800f694:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f698:	f002 fb58 	bl	8011d4c <__ssprint_r>
 800f69c:	2800      	cmp	r0, #0
 800f69e:	f47e afc6 	bne.w	800e62e <_svfprintf_r+0x262>
 800f6a2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800f6a4:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f6a8:	f7ff b8b2 	b.w	800e810 <_svfprintf_r+0x444>
 800f6ac:	2b01      	cmp	r3, #1
 800f6ae:	9f06      	ldr	r7, [sp, #24]
 800f6b0:	f47f aa64 	bne.w	800eb7c <_svfprintf_r+0x7b0>
 800f6b4:	e484      	b.n	800efc0 <_svfprintf_r+0xbf4>
 800f6b6:	9a08      	ldr	r2, [sp, #32]
 800f6b8:	601a      	str	r2, [r3, #0]
 800f6ba:	465e      	mov	r6, fp
 800f6bc:	f7ff b8de 	b.w	800e87c <_svfprintf_r+0x4b0>
 800f6c0:	4630      	mov	r0, r6
 800f6c2:	f7f8 fc3d 	bl	8007f40 <strlen>
 800f6c6:	46aa      	mov	sl, r5
 800f6c8:	4607      	mov	r7, r0
 800f6ca:	f7ff b9e2 	b.w	800ea92 <_svfprintf_r+0x6c6>
 800f6ce:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f6d0:	9919      	ldr	r1, [sp, #100]	; 0x64
 800f6d2:	f8c9 1000 	str.w	r1, [r9]
 800f6d6:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800f6d8:	f8c9 1004 	str.w	r1, [r9, #4]
 800f6dc:	3201      	adds	r2, #1
 800f6de:	440c      	add	r4, r1
 800f6e0:	2a07      	cmp	r2, #7
 800f6e2:	942a      	str	r4, [sp, #168]	; 0xa8
 800f6e4:	9229      	str	r2, [sp, #164]	; 0xa4
 800f6e6:	f300 809b 	bgt.w	800f820 <_svfprintf_r+0x1454>
 800f6ea:	f109 0908 	add.w	r9, r9, #8
 800f6ee:	2b00      	cmp	r3, #0
 800f6f0:	daa0      	bge.n	800f634 <_svfprintf_r+0x1268>
 800f6f2:	425d      	negs	r5, r3
 800f6f4:	3310      	adds	r3, #16
 800f6f6:	4b13      	ldr	r3, [pc, #76]	; (800f744 <_svfprintf_r+0x1378>)
 800f6f8:	f280 8245 	bge.w	800fb86 <_svfprintf_r+0x17ba>
 800f6fc:	4619      	mov	r1, r3
 800f6fe:	2710      	movs	r7, #16
 800f700:	4623      	mov	r3, r4
 800f702:	e9dd 8a0a 	ldrd	r8, sl, [sp, #40]	; 0x28
 800f706:	460c      	mov	r4, r1
 800f708:	e005      	b.n	800f716 <_svfprintf_r+0x134a>
 800f70a:	f109 0908 	add.w	r9, r9, #8
 800f70e:	3d10      	subs	r5, #16
 800f710:	2d10      	cmp	r5, #16
 800f712:	f340 8235 	ble.w	800fb80 <_svfprintf_r+0x17b4>
 800f716:	3201      	adds	r2, #1
 800f718:	3310      	adds	r3, #16
 800f71a:	2a07      	cmp	r2, #7
 800f71c:	e9cd 2329 	strd	r2, r3, [sp, #164]	; 0xa4
 800f720:	e9c9 4700 	strd	r4, r7, [r9]
 800f724:	ddf1      	ble.n	800f70a <_svfprintf_r+0x133e>
 800f726:	aa28      	add	r2, sp, #160	; 0xa0
 800f728:	4651      	mov	r1, sl
 800f72a:	4640      	mov	r0, r8
 800f72c:	f002 fb0e 	bl	8011d4c <__ssprint_r>
 800f730:	2800      	cmp	r0, #0
 800f732:	f47e af7c 	bne.w	800e62e <_svfprintf_r+0x262>
 800f736:	e9dd 2329 	ldrd	r2, r3, [sp, #164]	; 0xa4
 800f73a:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f73e:	e7e6      	b.n	800f70e <_svfprintf_r+0x1342>
 800f740:	080135d4 	.word	0x080135d4
 800f744:	080135f0 	.word	0x080135f0
 800f748:	080135dc 	.word	0x080135dc
 800f74c:	4622      	mov	r2, r4
 800f74e:	461c      	mov	r4, r3
 800f750:	4613      	mov	r3, r2
 800f752:	462a      	mov	r2, r5
 800f754:	3201      	adds	r2, #1
 800f756:	920e      	str	r2, [sp, #56]	; 0x38
 800f758:	f107 0208 	add.w	r2, r7, #8
 800f75c:	e9c7 3800 	strd	r3, r8, [r7]
 800f760:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f762:	9329      	str	r3, [sp, #164]	; 0xa4
 800f764:	4444      	add	r4, r8
 800f766:	2b07      	cmp	r3, #7
 800f768:	942a      	str	r4, [sp, #168]	; 0xa8
 800f76a:	f73f af1b 	bgt.w	800f5a4 <_svfprintf_r+0x11d8>
 800f76e:	3301      	adds	r3, #1
 800f770:	930e      	str	r3, [sp, #56]	; 0x38
 800f772:	f102 0908 	add.w	r9, r2, #8
 800f776:	4617      	mov	r7, r2
 800f778:	f7ff bb9d 	b.w	800eeb6 <_svfprintf_r+0xaea>
 800f77c:	9f06      	ldr	r7, [sp, #24]
 800f77e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f780:	f417 7f00 	tst.w	r7, #512	; 0x200
 800f784:	d03d      	beq.n	800f802 <_svfprintf_r+0x1436>
 800f786:	781c      	ldrb	r4, [r3, #0]
 800f788:	920d      	str	r2, [sp, #52]	; 0x34
 800f78a:	2500      	movs	r5, #0
 800f78c:	2301      	movs	r3, #1
 800f78e:	f7ff b904 	b.w	800e99a <_svfprintf_r+0x5ce>
 800f792:	4621      	mov	r1, r4
 800f794:	461c      	mov	r4, r3
 800f796:	460b      	mov	r3, r1
 800f798:	3201      	adds	r2, #1
 800f79a:	442c      	add	r4, r5
 800f79c:	2a07      	cmp	r2, #7
 800f79e:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
 800f7a2:	e9c9 3500 	strd	r3, r5, [r9]
 800f7a6:	dc4c      	bgt.n	800f842 <_svfprintf_r+0x1476>
 800f7a8:	f109 0908 	add.w	r9, r9, #8
 800f7ac:	e432      	b.n	800f014 <_svfprintf_r+0xc48>
 800f7ae:	222d      	movs	r2, #45	; 0x2d
 800f7b0:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
 800f7b4:	f7ff b93b 	b.w	800ea2e <_svfprintf_r+0x662>
 800f7b8:	aa28      	add	r2, sp, #160	; 0xa0
 800f7ba:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f7be:	f002 fac5 	bl	8011d4c <__ssprint_r>
 800f7c2:	2800      	cmp	r0, #0
 800f7c4:	f47e af33 	bne.w	800e62e <_svfprintf_r+0x262>
 800f7c8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f7ca:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800f7cc:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f7d0:	e717      	b.n	800f602 <_svfprintf_r+0x1236>
 800f7d2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800f7d4:	18b5      	adds	r5, r6, r2
 800f7d6:	eba5 050a 	sub.w	r5, r5, sl
 800f7da:	1ad3      	subs	r3, r2, r3
 800f7dc:	429d      	cmp	r5, r3
 800f7de:	bfa8      	it	ge
 800f7e0:	461d      	movge	r5, r3
 800f7e2:	e44e      	b.n	800f082 <_svfprintf_r+0xcb6>
 800f7e4:	9a08      	ldr	r2, [sp, #32]
 800f7e6:	801a      	strh	r2, [r3, #0]
 800f7e8:	465e      	mov	r6, fp
 800f7ea:	f7ff b847 	b.w	800e87c <_svfprintf_r+0x4b0>
 800f7ee:	7814      	ldrb	r4, [r2, #0]
 800f7f0:	930d      	str	r3, [sp, #52]	; 0x34
 800f7f2:	2500      	movs	r5, #0
 800f7f4:	f7fe bf3a 	b.w	800e66c <_svfprintf_r+0x2a0>
 800f7f8:	7814      	ldrb	r4, [r2, #0]
 800f7fa:	930d      	str	r3, [sp, #52]	; 0x34
 800f7fc:	2500      	movs	r5, #0
 800f7fe:	f7fe bebf 	b.w	800e580 <_svfprintf_r+0x1b4>
 800f802:	681c      	ldr	r4, [r3, #0]
 800f804:	9f06      	ldr	r7, [sp, #24]
 800f806:	920d      	str	r2, [sp, #52]	; 0x34
 800f808:	2500      	movs	r5, #0
 800f80a:	2301      	movs	r3, #1
 800f80c:	f7ff b8c5 	b.w	800e99a <_svfprintf_r+0x5ce>
 800f810:	f993 4000 	ldrsb.w	r4, [r3]
 800f814:	910d      	str	r1, [sp, #52]	; 0x34
 800f816:	17e5      	asrs	r5, r4, #31
 800f818:	4622      	mov	r2, r4
 800f81a:	462b      	mov	r3, r5
 800f81c:	f7fe bec7 	b.w	800e5ae <_svfprintf_r+0x1e2>
 800f820:	aa28      	add	r2, sp, #160	; 0xa0
 800f822:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f826:	f002 fa91 	bl	8011d4c <__ssprint_r>
 800f82a:	2800      	cmp	r0, #0
 800f82c:	f47e aeff 	bne.w	800e62e <_svfprintf_r+0x262>
 800f830:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f832:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
 800f836:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f83a:	e758      	b.n	800f6ee <_svfprintf_r+0x1322>
 800f83c:	f04f 0a06 	mov.w	sl, #6
 800f840:	e508      	b.n	800f254 <_svfprintf_r+0xe88>
 800f842:	aa28      	add	r2, sp, #160	; 0xa0
 800f844:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f848:	f002 fa80 	bl	8011d4c <__ssprint_r>
 800f84c:	2800      	cmp	r0, #0
 800f84e:	f47e aeee 	bne.w	800e62e <_svfprintf_r+0x262>
 800f852:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800f854:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f858:	f7ff bbdc 	b.w	800f014 <_svfprintf_r+0xc48>
 800f85c:	46b2      	mov	sl, r6
 800f85e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800f860:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800f862:	f8dd b03c 	ldr.w	fp, [sp, #60]	; 0x3c
 800f866:	f8cd 8070 	str.w	r8, [sp, #112]	; 0x70
 800f86a:	18f3      	adds	r3, r6, r3
 800f86c:	459a      	cmp	sl, r3
 800f86e:	4691      	mov	r9, r2
 800f870:	460c      	mov	r4, r1
 800f872:	bf28      	it	cs
 800f874:	469a      	movcs	sl, r3
 800f876:	f7ff bbd4 	b.w	800f022 <_svfprintf_r+0xc56>
 800f87a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f87c:	1cd8      	adds	r0, r3, #3
 800f87e:	db01      	blt.n	800f884 <_svfprintf_r+0x14b8>
 800f880:	4553      	cmp	r3, sl
 800f882:	dd05      	ble.n	800f890 <_svfprintf_r+0x14c4>
 800f884:	f1a8 0802 	sub.w	r8, r8, #2
 800f888:	f028 0320 	bic.w	r3, r8, #32
 800f88c:	9307      	str	r3, [sp, #28]
 800f88e:	e51a      	b.n	800f2c6 <_svfprintf_r+0xefa>
 800f890:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800f892:	4619      	mov	r1, r3
 800f894:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f896:	4299      	cmp	r1, r3
 800f898:	f300 8165 	bgt.w	800fb66 <_svfprintf_r+0x179a>
 800f89c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800f89e:	07d2      	lsls	r2, r2, #31
 800f8a0:	f140 8209 	bpl.w	800fcb6 <_svfprintf_r+0x18ea>
 800f8a4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800f8a6:	189f      	adds	r7, r3, r2
 800f8a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f8aa:	055b      	lsls	r3, r3, #21
 800f8ac:	d503      	bpl.n	800f8b6 <_svfprintf_r+0x14ea>
 800f8ae:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f8b0:	2b00      	cmp	r3, #0
 800f8b2:	f300 81d2 	bgt.w	800fc5a <_svfprintf_r+0x188e>
 800f8b6:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
 800f8ba:	9307      	str	r3, [sp, #28]
 800f8bc:	f04f 0867 	mov.w	r8, #103	; 0x67
 800f8c0:	2300      	movs	r3, #0
 800f8c2:	9310      	str	r3, [sp, #64]	; 0x40
 800f8c4:	9313      	str	r3, [sp, #76]	; 0x4c
 800f8c6:	e561      	b.n	800f38c <_svfprintf_r+0xfc0>
 800f8c8:	222d      	movs	r2, #45	; 0x2d
 800f8ca:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
 800f8ce:	f04f 0a00 	mov.w	sl, #0
 800f8d2:	f7ff b8c1 	b.w	800ea58 <_svfprintf_r+0x68c>
 800f8d6:	aa28      	add	r2, sp, #160	; 0xa0
 800f8d8:	4649      	mov	r1, r9
 800f8da:	4658      	mov	r0, fp
 800f8dc:	f002 fa36 	bl	8011d4c <__ssprint_r>
 800f8e0:	2800      	cmp	r0, #0
 800f8e2:	f47e aea4 	bne.w	800e62e <_svfprintf_r+0x262>
 800f8e6:	f898 3000 	ldrb.w	r3, [r8]
 800f8ea:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800f8ec:	aa2b      	add	r2, sp, #172	; 0xac
 800f8ee:	441e      	add	r6, r3
 800f8f0:	e614      	b.n	800f51c <_svfprintf_r+0x1150>
 800f8f2:	aa28      	add	r2, sp, #160	; 0xa0
 800f8f4:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f8f8:	f002 fa28 	bl	8011d4c <__ssprint_r>
 800f8fc:	2800      	cmp	r0, #0
 800f8fe:	f47e ae96 	bne.w	800e62e <_svfprintf_r+0x262>
 800f902:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800f904:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f908:	f7ff bb7c 	b.w	800f004 <_svfprintf_r+0xc38>
 800f90c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800f90e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f910:	1af6      	subs	r6, r6, r3
 800f912:	461a      	mov	r2, r3
 800f914:	4630      	mov	r0, r6
 800f916:	f002 f9df 	bl	8011cd8 <strncpy>
 800f91a:	f899 3001 	ldrb.w	r3, [r9, #1]
 800f91e:	b10b      	cbz	r3, 800f924 <_svfprintf_r+0x1558>
 800f920:	f109 0901 	add.w	r9, r9, #1
 800f924:	220a      	movs	r2, #10
 800f926:	2300      	movs	r3, #0
 800f928:	4620      	mov	r0, r4
 800f92a:	4629      	mov	r1, r5
 800f92c:	f04f 0800 	mov.w	r8, #0
 800f930:	f7f9 f808 	bl	8008944 <__aeabi_uldivmod>
 800f934:	f7ff b959 	b.w	800ebea <_svfprintf_r+0x81e>
 800f938:	aa28      	add	r2, sp, #160	; 0xa0
 800f93a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f93e:	f002 fa05 	bl	8011d4c <__ssprint_r>
 800f942:	2800      	cmp	r0, #0
 800f944:	f47e ae73 	bne.w	800e62e <_svfprintf_r+0x262>
 800f948:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f94a:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800f94c:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800f950:	f7ff bb7f 	b.w	800f052 <_svfprintf_r+0xc86>
 800f954:	a826      	add	r0, sp, #152	; 0x98
 800f956:	a923      	add	r1, sp, #140	; 0x8c
 800f958:	9004      	str	r0, [sp, #16]
 800f95a:	9103      	str	r1, [sp, #12]
 800f95c:	a822      	add	r0, sp, #136	; 0x88
 800f95e:	2103      	movs	r1, #3
 800f960:	462b      	mov	r3, r5
 800f962:	9002      	str	r0, [sp, #8]
 800f964:	463a      	mov	r2, r7
 800f966:	f8cd a004 	str.w	sl, [sp, #4]
 800f96a:	9100      	str	r1, [sp, #0]
 800f96c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800f96e:	f000 fbc3 	bl	80100f8 <_dtoa_r>
 800f972:	7803      	ldrb	r3, [r0, #0]
 800f974:	2b30      	cmp	r3, #48	; 0x30
 800f976:	4606      	mov	r6, r0
 800f978:	f000 81ba 	beq.w	800fcf0 <_svfprintf_r+0x1924>
 800f97c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800f97e:	4453      	add	r3, sl
 800f980:	18f4      	adds	r4, r6, r3
 800f982:	4638      	mov	r0, r7
 800f984:	4629      	mov	r1, r5
 800f986:	2200      	movs	r2, #0
 800f988:	2300      	movs	r3, #0
 800f98a:	f7f8 ff6b 	bl	8008864 <__aeabi_dcmpeq>
 800f98e:	b108      	cbz	r0, 800f994 <_svfprintf_r+0x15c8>
 800f990:	4627      	mov	r7, r4
 800f992:	e48c      	b.n	800f2ae <_svfprintf_r+0xee2>
 800f994:	9f26      	ldr	r7, [sp, #152]	; 0x98
 800f996:	42a7      	cmp	r7, r4
 800f998:	f4bf ac89 	bcs.w	800f2ae <_svfprintf_r+0xee2>
 800f99c:	2230      	movs	r2, #48	; 0x30
 800f99e:	1c7b      	adds	r3, r7, #1
 800f9a0:	9326      	str	r3, [sp, #152]	; 0x98
 800f9a2:	703a      	strb	r2, [r7, #0]
 800f9a4:	9f26      	ldr	r7, [sp, #152]	; 0x98
 800f9a6:	42bc      	cmp	r4, r7
 800f9a8:	d8f9      	bhi.n	800f99e <_svfprintf_r+0x15d2>
 800f9aa:	e480      	b.n	800f2ae <_svfprintf_r+0xee2>
 800f9ac:	4657      	mov	r7, sl
 800f9ae:	f8cd a01c 	str.w	sl, [sp, #28]
 800f9b2:	940d      	str	r4, [sp, #52]	; 0x34
 800f9b4:	4682      	mov	sl, r0
 800f9b6:	9010      	str	r0, [sp, #64]	; 0x40
 800f9b8:	e9cd 0012 	strd	r0, r0, [sp, #72]	; 0x48
 800f9bc:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
 800f9c0:	f7ff b847 	b.w	800ea52 <_svfprintf_r+0x686>
 800f9c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f9c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f9c8:	f003 0301 	and.w	r3, r3, #1
 800f9cc:	2a00      	cmp	r2, #0
 800f9ce:	ea43 030a 	orr.w	r3, r3, sl
 800f9d2:	f340 81a9 	ble.w	800fd28 <_svfprintf_r+0x195c>
 800f9d6:	2b00      	cmp	r3, #0
 800f9d8:	f040 8167 	bne.w	800fcaa <_svfprintf_r+0x18de>
 800f9dc:	9f12      	ldr	r7, [sp, #72]	; 0x48
 800f9de:	f04f 0866 	mov.w	r8, #102	; 0x66
 800f9e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f9e4:	055a      	lsls	r2, r3, #21
 800f9e6:	f100 813a 	bmi.w	800fc5e <_svfprintf_r+0x1892>
 800f9ea:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
 800f9ee:	9307      	str	r3, [sp, #28]
 800f9f0:	e766      	b.n	800f8c0 <_svfprintf_r+0x14f4>
 800f9f2:	2330      	movs	r3, #48	; 0x30
 800f9f4:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
 800f9f8:	2358      	movs	r3, #88	; 0x58
 800f9fa:	f88d 3085 	strb.w	r3, [sp, #133]	; 0x85
 800f9fe:	9b06      	ldr	r3, [sp, #24]
 800fa00:	f1ba 0f63 	cmp.w	sl, #99	; 0x63
 800fa04:	f043 0302 	orr.w	r3, r3, #2
 800fa08:	930e      	str	r3, [sp, #56]	; 0x38
 800fa0a:	f300 8105 	bgt.w	800fc18 <_svfprintf_r+0x184c>
 800fa0e:	2300      	movs	r3, #0
 800fa10:	930c      	str	r3, [sp, #48]	; 0x30
 800fa12:	ae3b      	add	r6, sp, #236	; 0xec
 800fa14:	9b06      	ldr	r3, [sp, #24]
 800fa16:	f443 7381 	orr.w	r3, r3, #258	; 0x102
 800fa1a:	9306      	str	r3, [sp, #24]
 800fa1c:	f028 0320 	bic.w	r3, r8, #32
 800fa20:	9307      	str	r3, [sp, #28]
 800fa22:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fa24:	1e1d      	subs	r5, r3, #0
 800fa26:	f2c0 8086 	blt.w	800fb36 <_svfprintf_r+0x176a>
 800fa2a:	2300      	movs	r3, #0
 800fa2c:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800fa2e:	931e      	str	r3, [sp, #120]	; 0x78
 800fa30:	f1b8 0f61 	cmp.w	r8, #97	; 0x61
 800fa34:	f000 80fb 	beq.w	800fc2e <_svfprintf_r+0x1862>
 800fa38:	f1b8 0f41 	cmp.w	r8, #65	; 0x41
 800fa3c:	f47f ac17 	bne.w	800f26e <_svfprintf_r+0xea2>
 800fa40:	aa22      	add	r2, sp, #136	; 0x88
 800fa42:	4638      	mov	r0, r7
 800fa44:	4629      	mov	r1, r5
 800fa46:	f002 f8c9 	bl	8011bdc <frexp>
 800fa4a:	2200      	movs	r2, #0
 800fa4c:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800fa50:	f7f8 fca0 	bl	8008394 <__aeabi_dmul>
 800fa54:	2200      	movs	r2, #0
 800fa56:	2300      	movs	r3, #0
 800fa58:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800fa5c:	f7f8 ff02 	bl	8008864 <__aeabi_dcmpeq>
 800fa60:	b108      	cbz	r0, 800fa66 <_svfprintf_r+0x169a>
 800fa62:	2301      	movs	r3, #1
 800fa64:	9322      	str	r3, [sp, #136]	; 0x88
 800fa66:	4bb8      	ldr	r3, [pc, #736]	; (800fd48 <_svfprintf_r+0x197c>)
 800fa68:	930f      	str	r3, [sp, #60]	; 0x3c
 800fa6a:	f10a 35ff 	add.w	r5, sl, #4294967295	; 0xffffffff
 800fa6e:	e9cd 8912 	strd	r8, r9, [sp, #72]	; 0x48
 800fa72:	f8cd b058 	str.w	fp, [sp, #88]	; 0x58
 800fa76:	f8cd a07c 	str.w	sl, [sp, #124]	; 0x7c
 800fa7a:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
 800fa7e:	f8dd b03c 	ldr.w	fp, [sp, #60]	; 0x3c
 800fa82:	9610      	str	r6, [sp, #64]	; 0x40
 800fa84:	46b2      	mov	sl, r6
 800fa86:	e003      	b.n	800fa90 <_svfprintf_r+0x16c4>
 800fa88:	f7f8 feec 	bl	8008864 <__aeabi_dcmpeq>
 800fa8c:	bb20      	cbnz	r0, 800fad8 <_svfprintf_r+0x170c>
 800fa8e:	46ba      	mov	sl, r7
 800fa90:	2200      	movs	r2, #0
 800fa92:	4bae      	ldr	r3, [pc, #696]	; (800fd4c <_svfprintf_r+0x1980>)
 800fa94:	4640      	mov	r0, r8
 800fa96:	4649      	mov	r1, r9
 800fa98:	f7f8 fc7c 	bl	8008394 <__aeabi_dmul>
 800fa9c:	4689      	mov	r9, r1
 800fa9e:	4680      	mov	r8, r0
 800faa0:	f7f8 ff28 	bl	80088f4 <__aeabi_d2iz>
 800faa4:	4606      	mov	r6, r0
 800faa6:	f7f8 fc0b 	bl	80082c0 <__aeabi_i2d>
 800faaa:	4602      	mov	r2, r0
 800faac:	460b      	mov	r3, r1
 800faae:	4640      	mov	r0, r8
 800fab0:	4649      	mov	r1, r9
 800fab2:	f7f8 fab7 	bl	8008024 <__aeabi_dsub>
 800fab6:	4657      	mov	r7, sl
 800fab8:	f81b 4006 	ldrb.w	r4, [fp, r6]
 800fabc:	f807 4b01 	strb.w	r4, [r7], #1
 800fac0:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
 800fac4:	462c      	mov	r4, r5
 800fac6:	4680      	mov	r8, r0
 800fac8:	4689      	mov	r9, r1
 800faca:	f04f 0200 	mov.w	r2, #0
 800face:	f04f 0300 	mov.w	r3, #0
 800fad2:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 800fad6:	d1d7      	bne.n	800fa88 <_svfprintf_r+0x16bc>
 800fad8:	4640      	mov	r0, r8
 800fada:	4649      	mov	r1, r9
 800fadc:	2200      	movs	r2, #0
 800fade:	4b9c      	ldr	r3, [pc, #624]	; (800fd50 <_svfprintf_r+0x1984>)
 800fae0:	f8dd b058 	ldr.w	fp, [sp, #88]	; 0x58
 800fae4:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	; 0x48
 800fae8:	4635      	mov	r5, r6
 800faea:	f8cd a048 	str.w	sl, [sp, #72]	; 0x48
 800faee:	9e10      	ldr	r6, [sp, #64]	; 0x40
 800faf0:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 800faf4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800faf8:	f7f8 fedc 	bl	80088b4 <__aeabi_dcmpgt>
 800fafc:	2800      	cmp	r0, #0
 800fafe:	d158      	bne.n	800fbb2 <_svfprintf_r+0x17e6>
 800fb00:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800fb04:	2200      	movs	r2, #0
 800fb06:	4b92      	ldr	r3, [pc, #584]	; (800fd50 <_svfprintf_r+0x1984>)
 800fb08:	f7f8 feac 	bl	8008864 <__aeabi_dcmpeq>
 800fb0c:	b110      	cbz	r0, 800fb14 <_svfprintf_r+0x1748>
 800fb0e:	462b      	mov	r3, r5
 800fb10:	07dd      	lsls	r5, r3, #31
 800fb12:	d44e      	bmi.n	800fbb2 <_svfprintf_r+0x17e6>
 800fb14:	2c00      	cmp	r4, #0
 800fb16:	f6ff abca 	blt.w	800f2ae <_svfprintf_r+0xee2>
 800fb1a:	1c63      	adds	r3, r4, #1
 800fb1c:	443b      	add	r3, r7
 800fb1e:	2230      	movs	r2, #48	; 0x30
 800fb20:	f807 2b01 	strb.w	r2, [r7], #1
 800fb24:	429f      	cmp	r7, r3
 800fb26:	d1fb      	bne.n	800fb20 <_svfprintf_r+0x1754>
 800fb28:	f7ff bbc1 	b.w	800f2ae <_svfprintf_r+0xee2>
 800fb2c:	9a06      	ldr	r2, [sp, #24]
 800fb2e:	920e      	str	r2, [sp, #56]	; 0x38
 800fb30:	2200      	movs	r2, #0
 800fb32:	920c      	str	r2, [sp, #48]	; 0x30
 800fb34:	9306      	str	r3, [sp, #24]
 800fb36:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
 800fb3a:	461f      	mov	r7, r3
 800fb3c:	232d      	movs	r3, #45	; 0x2d
 800fb3e:	f104 4500 	add.w	r5, r4, #2147483648	; 0x80000000
 800fb42:	931e      	str	r3, [sp, #120]	; 0x78
 800fb44:	e774      	b.n	800fa30 <_svfprintf_r+0x1664>
 800fb46:	aa28      	add	r2, sp, #160	; 0xa0
 800fb48:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800fb4c:	f002 f8fe 	bl	8011d4c <__ssprint_r>
 800fb50:	2800      	cmp	r0, #0
 800fb52:	f47e ad6c 	bne.w	800e62e <_svfprintf_r+0x262>
 800fb56:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800fb58:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800fb5a:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 800fb5c:	1ad3      	subs	r3, r2, r3
 800fb5e:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800fb62:	f7ff ba8e 	b.w	800f082 <_svfprintf_r+0xcb6>
 800fb66:	e9dd 3216 	ldrd	r3, r2, [sp, #88]	; 0x58
 800fb6a:	189f      	adds	r7, r3, r2
 800fb6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800fb6e:	2b00      	cmp	r3, #0
 800fb70:	f340 80d1 	ble.w	800fd16 <_svfprintf_r+0x194a>
 800fb74:	f04f 0867 	mov.w	r8, #103	; 0x67
 800fb78:	e733      	b.n	800f9e2 <_svfprintf_r+0x1616>
 800fb7a:	eb06 040a 	add.w	r4, r6, sl
 800fb7e:	e700      	b.n	800f982 <_svfprintf_r+0x15b6>
 800fb80:	4621      	mov	r1, r4
 800fb82:	461c      	mov	r4, r3
 800fb84:	460b      	mov	r3, r1
 800fb86:	3201      	adds	r2, #1
 800fb88:	442c      	add	r4, r5
 800fb8a:	2a07      	cmp	r2, #7
 800fb8c:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
 800fb90:	e9c9 3500 	strd	r3, r5, [r9]
 800fb94:	f77f ad4c 	ble.w	800f630 <_svfprintf_r+0x1264>
 800fb98:	aa28      	add	r2, sp, #160	; 0xa0
 800fb9a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800fb9e:	f002 f8d5 	bl	8011d4c <__ssprint_r>
 800fba2:	2800      	cmp	r0, #0
 800fba4:	f47e ad43 	bne.w	800e62e <_svfprintf_r+0x262>
 800fba8:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
 800fbac:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
 800fbb0:	e540      	b.n	800f634 <_svfprintf_r+0x1268>
 800fbb2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800fbb4:	9326      	str	r3, [sp, #152]	; 0x98
 800fbb6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fbb8:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 800fbbc:	7bd9      	ldrb	r1, [r3, #15]
 800fbbe:	428a      	cmp	r2, r1
 800fbc0:	463b      	mov	r3, r7
 800fbc2:	d109      	bne.n	800fbd8 <_svfprintf_r+0x180c>
 800fbc4:	2030      	movs	r0, #48	; 0x30
 800fbc6:	f803 0c01 	strb.w	r0, [r3, #-1]
 800fbca:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800fbcc:	1e5a      	subs	r2, r3, #1
 800fbce:	9226      	str	r2, [sp, #152]	; 0x98
 800fbd0:	f813 2c01 	ldrb.w	r2, [r3, #-1]
 800fbd4:	4291      	cmp	r1, r2
 800fbd6:	d0f6      	beq.n	800fbc6 <_svfprintf_r+0x17fa>
 800fbd8:	2a39      	cmp	r2, #57	; 0x39
 800fbda:	bf0b      	itete	eq
 800fbdc:	9a0f      	ldreq	r2, [sp, #60]	; 0x3c
 800fbde:	3201      	addne	r2, #1
 800fbe0:	7a92      	ldrbeq	r2, [r2, #10]
 800fbe2:	b2d2      	uxtbne	r2, r2
 800fbe4:	f803 2c01 	strb.w	r2, [r3, #-1]
 800fbe8:	f7ff bb61 	b.w	800f2ae <_svfprintf_r+0xee2>
 800fbec:	2330      	movs	r3, #48	; 0x30
 800fbee:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
 800fbf2:	2378      	movs	r3, #120	; 0x78
 800fbf4:	e701      	b.n	800f9fa <_svfprintf_r+0x162e>
 800fbf6:	a826      	add	r0, sp, #152	; 0x98
 800fbf8:	a923      	add	r1, sp, #140	; 0x8c
 800fbfa:	f10a 0401 	add.w	r4, sl, #1
 800fbfe:	9004      	str	r0, [sp, #16]
 800fc00:	9103      	str	r1, [sp, #12]
 800fc02:	a822      	add	r0, sp, #136	; 0x88
 800fc04:	2102      	movs	r1, #2
 800fc06:	9401      	str	r4, [sp, #4]
 800fc08:	9002      	str	r0, [sp, #8]
 800fc0a:	9100      	str	r1, [sp, #0]
 800fc0c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800fc0e:	f000 fa73 	bl	80100f8 <_dtoa_r>
 800fc12:	4606      	mov	r6, r0
 800fc14:	4434      	add	r4, r6
 800fc16:	e6b4      	b.n	800f982 <_svfprintf_r+0x15b6>
 800fc18:	f10a 0101 	add.w	r1, sl, #1
 800fc1c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800fc1e:	f7fd fd73 	bl	800d708 <_malloc_r>
 800fc22:	4606      	mov	r6, r0
 800fc24:	2800      	cmp	r0, #0
 800fc26:	f000 80ba 	beq.w	800fd9e <_svfprintf_r+0x19d2>
 800fc2a:	900c      	str	r0, [sp, #48]	; 0x30
 800fc2c:	e6f2      	b.n	800fa14 <_svfprintf_r+0x1648>
 800fc2e:	aa22      	add	r2, sp, #136	; 0x88
 800fc30:	4638      	mov	r0, r7
 800fc32:	4629      	mov	r1, r5
 800fc34:	f001 ffd2 	bl	8011bdc <frexp>
 800fc38:	2200      	movs	r2, #0
 800fc3a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800fc3e:	f7f8 fba9 	bl	8008394 <__aeabi_dmul>
 800fc42:	2200      	movs	r2, #0
 800fc44:	2300      	movs	r3, #0
 800fc46:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800fc4a:	f7f8 fe0b 	bl	8008864 <__aeabi_dcmpeq>
 800fc4e:	b108      	cbz	r0, 800fc54 <_svfprintf_r+0x1888>
 800fc50:	2301      	movs	r3, #1
 800fc52:	9322      	str	r3, [sp, #136]	; 0x88
 800fc54:	4b3f      	ldr	r3, [pc, #252]	; (800fd54 <_svfprintf_r+0x1988>)
 800fc56:	930f      	str	r3, [sp, #60]	; 0x3c
 800fc58:	e707      	b.n	800fa6a <_svfprintf_r+0x169e>
 800fc5a:	f04f 0867 	mov.w	r8, #103	; 0x67
 800fc5e:	981c      	ldr	r0, [sp, #112]	; 0x70
 800fc60:	2200      	movs	r2, #0
 800fc62:	9210      	str	r2, [sp, #64]	; 0x40
 800fc64:	9213      	str	r2, [sp, #76]	; 0x4c
 800fc66:	7803      	ldrb	r3, [r0, #0]
 800fc68:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fc6a:	2bff      	cmp	r3, #255	; 0xff
 800fc6c:	d00c      	beq.n	800fc88 <_svfprintf_r+0x18bc>
 800fc6e:	4293      	cmp	r3, r2
 800fc70:	da0a      	bge.n	800fc88 <_svfprintf_r+0x18bc>
 800fc72:	7841      	ldrb	r1, [r0, #1]
 800fc74:	1ad2      	subs	r2, r2, r3
 800fc76:	b1a1      	cbz	r1, 800fca2 <_svfprintf_r+0x18d6>
 800fc78:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800fc7a:	3301      	adds	r3, #1
 800fc7c:	9313      	str	r3, [sp, #76]	; 0x4c
 800fc7e:	460b      	mov	r3, r1
 800fc80:	2bff      	cmp	r3, #255	; 0xff
 800fc82:	f100 0001 	add.w	r0, r0, #1
 800fc86:	d1f2      	bne.n	800fc6e <_svfprintf_r+0x18a2>
 800fc88:	9212      	str	r2, [sp, #72]	; 0x48
 800fc8a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800fc8c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fc8e:	901c      	str	r0, [sp, #112]	; 0x70
 800fc90:	4413      	add	r3, r2
 800fc92:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800fc94:	fb02 7703 	mla	r7, r2, r3, r7
 800fc98:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
 800fc9c:	9307      	str	r3, [sp, #28]
 800fc9e:	f7ff bb75 	b.w	800f38c <_svfprintf_r+0xfc0>
 800fca2:	9910      	ldr	r1, [sp, #64]	; 0x40
 800fca4:	3101      	adds	r1, #1
 800fca6:	9110      	str	r1, [sp, #64]	; 0x40
 800fca8:	e7df      	b.n	800fc6a <_svfprintf_r+0x189e>
 800fcaa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800fcac:	18d7      	adds	r7, r2, r3
 800fcae:	4457      	add	r7, sl
 800fcb0:	f04f 0866 	mov.w	r8, #102	; 0x66
 800fcb4:	e695      	b.n	800f9e2 <_svfprintf_r+0x1616>
 800fcb6:	9f12      	ldr	r7, [sp, #72]	; 0x48
 800fcb8:	e5f6      	b.n	800f8a8 <_svfprintf_r+0x14dc>
 800fcba:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fcbc:	4e26      	ldr	r6, [pc, #152]	; (800fd58 <_svfprintf_r+0x198c>)
 800fcbe:	2b00      	cmp	r3, #0
 800fcc0:	bfb6      	itet	lt
 800fcc2:	222d      	movlt	r2, #45	; 0x2d
 800fcc4:	f89d 2083 	ldrbge.w	r2, [sp, #131]	; 0x83
 800fcc8:	f88d 2083 	strblt.w	r2, [sp, #131]	; 0x83
 800fccc:	4b23      	ldr	r3, [pc, #140]	; (800fd5c <_svfprintf_r+0x1990>)
 800fcce:	f7fe beb0 	b.w	800ea32 <_svfprintf_r+0x666>
 800fcd2:	2900      	cmp	r1, #0
 800fcd4:	d144      	bne.n	800fd60 <_svfprintf_r+0x1994>
 800fcd6:	2330      	movs	r3, #48	; 0x30
 800fcd8:	f88d 3092 	strb.w	r3, [sp, #146]	; 0x92
 800fcdc:	f10d 0393 	add.w	r3, sp, #147	; 0x93
 800fce0:	3230      	adds	r2, #48	; 0x30
 800fce2:	f803 2b01 	strb.w	r2, [r3], #1
 800fce6:	aa24      	add	r2, sp, #144	; 0x90
 800fce8:	1a9b      	subs	r3, r3, r2
 800fcea:	931a      	str	r3, [sp, #104]	; 0x68
 800fcec:	f7ff bb38 	b.w	800f360 <_svfprintf_r+0xf94>
 800fcf0:	4638      	mov	r0, r7
 800fcf2:	4629      	mov	r1, r5
 800fcf4:	2200      	movs	r2, #0
 800fcf6:	2300      	movs	r3, #0
 800fcf8:	f7f8 fdb4 	bl	8008864 <__aeabi_dcmpeq>
 800fcfc:	2800      	cmp	r0, #0
 800fcfe:	f47f ae3d 	bne.w	800f97c <_svfprintf_r+0x15b0>
 800fd02:	f1ca 0301 	rsb	r3, sl, #1
 800fd06:	9322      	str	r3, [sp, #136]	; 0x88
 800fd08:	e639      	b.n	800f97e <_svfprintf_r+0x15b2>
 800fd0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fd0c:	07d9      	lsls	r1, r3, #31
 800fd0e:	f57f ab30 	bpl.w	800f372 <_svfprintf_r+0xfa6>
 800fd12:	f7ff bb2c 	b.w	800f36e <_svfprintf_r+0xfa2>
 800fd16:	f1c3 0301 	rsb	r3, r3, #1
 800fd1a:	441f      	add	r7, r3
 800fd1c:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
 800fd20:	9307      	str	r3, [sp, #28]
 800fd22:	f04f 0867 	mov.w	r8, #103	; 0x67
 800fd26:	e5cb      	b.n	800f8c0 <_svfprintf_r+0x14f4>
 800fd28:	b92b      	cbnz	r3, 800fd36 <_svfprintf_r+0x196a>
 800fd2a:	2301      	movs	r3, #1
 800fd2c:	9307      	str	r3, [sp, #28]
 800fd2e:	461f      	mov	r7, r3
 800fd30:	f04f 0866 	mov.w	r8, #102	; 0x66
 800fd34:	e5c4      	b.n	800f8c0 <_svfprintf_r+0x14f4>
 800fd36:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800fd38:	1c5f      	adds	r7, r3, #1
 800fd3a:	4457      	add	r7, sl
 800fd3c:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
 800fd40:	9307      	str	r3, [sp, #28]
 800fd42:	f04f 0866 	mov.w	r8, #102	; 0x66
 800fd46:	e5bb      	b.n	800f8c0 <_svfprintf_r+0x14f4>
 800fd48:	080135c0 	.word	0x080135c0
 800fd4c:	40300000 	.word	0x40300000
 800fd50:	3fe00000 	.word	0x3fe00000
 800fd54:	080135ac 	.word	0x080135ac
 800fd58:	080135a4 	.word	0x080135a4
 800fd5c:	080135a8 	.word	0x080135a8
 800fd60:	f10d 0392 	add.w	r3, sp, #146	; 0x92
 800fd64:	e7bc      	b.n	800fce0 <_svfprintf_r+0x1914>
 800fd66:	464a      	mov	r2, r9
 800fd68:	e4f8      	b.n	800f75c <_svfprintf_r+0x1390>
 800fd6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fd6c:	f89b 8001 	ldrb.w	r8, [fp, #1]
 800fd70:	f853 0b04 	ldr.w	r0, [r3], #4
 800fd74:	930d      	str	r3, [sp, #52]	; 0x34
 800fd76:	4693      	mov	fp, r2
 800fd78:	ea40 7ae0 	orr.w	sl, r0, r0, asr #31
 800fd7c:	f7fe bb86 	b.w	800e48c <_svfprintf_r+0xc0>
 800fd80:	2302      	movs	r3, #2
 800fd82:	931a      	str	r3, [sp, #104]	; 0x68
 800fd84:	f7ff baec 	b.w	800f360 <_svfprintf_r+0xf94>
 800fd88:	4654      	mov	r4, sl
 800fd8a:	4434      	add	r4, r6
 800fd8c:	e5f9      	b.n	800f982 <_svfprintf_r+0x15b6>
 800fd8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fd90:	230c      	movs	r3, #12
 800fd92:	6013      	str	r3, [r2, #0]
 800fd94:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fd98:	9308      	str	r3, [sp, #32]
 800fd9a:	f7fe bc57 	b.w	800e64c <_svfprintf_r+0x280>
 800fd9e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fda0:	8993      	ldrh	r3, [r2, #12]
 800fda2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800fda6:	8193      	strh	r3, [r2, #12]
 800fda8:	f7fe bc49 	b.w	800e63e <_svfprintf_r+0x272>

0800fdac <__swbuf_r>:
 800fdac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fdae:	460d      	mov	r5, r1
 800fdb0:	4614      	mov	r4, r2
 800fdb2:	4606      	mov	r6, r0
 800fdb4:	b110      	cbz	r0, 800fdbc <__swbuf_r+0x10>
 800fdb6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800fdb8:	2b00      	cmp	r3, #0
 800fdba:	d043      	beq.n	800fe44 <__swbuf_r+0x98>
 800fdbc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800fdc0:	69a3      	ldr	r3, [r4, #24]
 800fdc2:	60a3      	str	r3, [r4, #8]
 800fdc4:	b291      	uxth	r1, r2
 800fdc6:	0708      	lsls	r0, r1, #28
 800fdc8:	d51b      	bpl.n	800fe02 <__swbuf_r+0x56>
 800fdca:	6923      	ldr	r3, [r4, #16]
 800fdcc:	b1cb      	cbz	r3, 800fe02 <__swbuf_r+0x56>
 800fdce:	b2ed      	uxtb	r5, r5
 800fdd0:	0489      	lsls	r1, r1, #18
 800fdd2:	462f      	mov	r7, r5
 800fdd4:	d522      	bpl.n	800fe1c <__swbuf_r+0x70>
 800fdd6:	6822      	ldr	r2, [r4, #0]
 800fdd8:	6961      	ldr	r1, [r4, #20]
 800fdda:	1ad3      	subs	r3, r2, r3
 800fddc:	4299      	cmp	r1, r3
 800fdde:	dd29      	ble.n	800fe34 <__swbuf_r+0x88>
 800fde0:	3301      	adds	r3, #1
 800fde2:	68a1      	ldr	r1, [r4, #8]
 800fde4:	1c50      	adds	r0, r2, #1
 800fde6:	3901      	subs	r1, #1
 800fde8:	60a1      	str	r1, [r4, #8]
 800fdea:	6020      	str	r0, [r4, #0]
 800fdec:	7015      	strb	r5, [r2, #0]
 800fdee:	6962      	ldr	r2, [r4, #20]
 800fdf0:	429a      	cmp	r2, r3
 800fdf2:	d02a      	beq.n	800fe4a <__swbuf_r+0x9e>
 800fdf4:	89a3      	ldrh	r3, [r4, #12]
 800fdf6:	07db      	lsls	r3, r3, #31
 800fdf8:	d501      	bpl.n	800fdfe <__swbuf_r+0x52>
 800fdfa:	2d0a      	cmp	r5, #10
 800fdfc:	d025      	beq.n	800fe4a <__swbuf_r+0x9e>
 800fdfe:	4638      	mov	r0, r7
 800fe00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fe02:	4621      	mov	r1, r4
 800fe04:	4630      	mov	r0, r6
 800fe06:	f000 f829 	bl	800fe5c <__swsetup_r>
 800fe0a:	bb20      	cbnz	r0, 800fe56 <__swbuf_r+0xaa>
 800fe0c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800fe10:	6923      	ldr	r3, [r4, #16]
 800fe12:	b291      	uxth	r1, r2
 800fe14:	b2ed      	uxtb	r5, r5
 800fe16:	0489      	lsls	r1, r1, #18
 800fe18:	462f      	mov	r7, r5
 800fe1a:	d4dc      	bmi.n	800fdd6 <__swbuf_r+0x2a>
 800fe1c:	6e61      	ldr	r1, [r4, #100]	; 0x64
 800fe1e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800fe22:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
 800fe26:	81a2      	strh	r2, [r4, #12]
 800fe28:	6822      	ldr	r2, [r4, #0]
 800fe2a:	6661      	str	r1, [r4, #100]	; 0x64
 800fe2c:	6961      	ldr	r1, [r4, #20]
 800fe2e:	1ad3      	subs	r3, r2, r3
 800fe30:	4299      	cmp	r1, r3
 800fe32:	dcd5      	bgt.n	800fde0 <__swbuf_r+0x34>
 800fe34:	4621      	mov	r1, r4
 800fe36:	4630      	mov	r0, r6
 800fe38:	f001 f934 	bl	80110a4 <_fflush_r>
 800fe3c:	b958      	cbnz	r0, 800fe56 <__swbuf_r+0xaa>
 800fe3e:	6822      	ldr	r2, [r4, #0]
 800fe40:	2301      	movs	r3, #1
 800fe42:	e7ce      	b.n	800fde2 <__swbuf_r+0x36>
 800fe44:	f001 f98a 	bl	801115c <__sinit>
 800fe48:	e7b8      	b.n	800fdbc <__swbuf_r+0x10>
 800fe4a:	4621      	mov	r1, r4
 800fe4c:	4630      	mov	r0, r6
 800fe4e:	f001 f929 	bl	80110a4 <_fflush_r>
 800fe52:	2800      	cmp	r0, #0
 800fe54:	d0d3      	beq.n	800fdfe <__swbuf_r+0x52>
 800fe56:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800fe5a:	e7d0      	b.n	800fdfe <__swbuf_r+0x52>

0800fe5c <__swsetup_r>:
 800fe5c:	b538      	push	{r3, r4, r5, lr}
 800fe5e:	4b32      	ldr	r3, [pc, #200]	; (800ff28 <__swsetup_r+0xcc>)
 800fe60:	681b      	ldr	r3, [r3, #0]
 800fe62:	4605      	mov	r5, r0
 800fe64:	460c      	mov	r4, r1
 800fe66:	b10b      	cbz	r3, 800fe6c <__swsetup_r+0x10>
 800fe68:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800fe6a:	b312      	cbz	r2, 800feb2 <__swsetup_r+0x56>
 800fe6c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800fe70:	b293      	uxth	r3, r2
 800fe72:	0718      	lsls	r0, r3, #28
 800fe74:	d525      	bpl.n	800fec2 <__swsetup_r+0x66>
 800fe76:	6920      	ldr	r0, [r4, #16]
 800fe78:	2800      	cmp	r0, #0
 800fe7a:	d02d      	beq.n	800fed8 <__swsetup_r+0x7c>
 800fe7c:	f013 0201 	ands.w	r2, r3, #1
 800fe80:	d007      	beq.n	800fe92 <__swsetup_r+0x36>
 800fe82:	6963      	ldr	r3, [r4, #20]
 800fe84:	2200      	movs	r2, #0
 800fe86:	425b      	negs	r3, r3
 800fe88:	61a3      	str	r3, [r4, #24]
 800fe8a:	60a2      	str	r2, [r4, #8]
 800fe8c:	b138      	cbz	r0, 800fe9e <__swsetup_r+0x42>
 800fe8e:	2000      	movs	r0, #0
 800fe90:	bd38      	pop	{r3, r4, r5, pc}
 800fe92:	0799      	lsls	r1, r3, #30
 800fe94:	bf58      	it	pl
 800fe96:	6962      	ldrpl	r2, [r4, #20]
 800fe98:	60a2      	str	r2, [r4, #8]
 800fe9a:	2800      	cmp	r0, #0
 800fe9c:	d1f7      	bne.n	800fe8e <__swsetup_r+0x32>
 800fe9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fea2:	061a      	lsls	r2, r3, #24
 800fea4:	d5f4      	bpl.n	800fe90 <__swsetup_r+0x34>
 800fea6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800feaa:	81a3      	strh	r3, [r4, #12]
 800feac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800feb0:	bd38      	pop	{r3, r4, r5, pc}
 800feb2:	4618      	mov	r0, r3
 800feb4:	f001 f952 	bl	801115c <__sinit>
 800feb8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800febc:	b293      	uxth	r3, r2
 800febe:	0718      	lsls	r0, r3, #28
 800fec0:	d4d9      	bmi.n	800fe76 <__swsetup_r+0x1a>
 800fec2:	06d9      	lsls	r1, r3, #27
 800fec4:	d528      	bpl.n	800ff18 <__swsetup_r+0xbc>
 800fec6:	0758      	lsls	r0, r3, #29
 800fec8:	d412      	bmi.n	800fef0 <__swsetup_r+0x94>
 800feca:	6920      	ldr	r0, [r4, #16]
 800fecc:	f042 0308 	orr.w	r3, r2, #8
 800fed0:	81a3      	strh	r3, [r4, #12]
 800fed2:	b29b      	uxth	r3, r3
 800fed4:	2800      	cmp	r0, #0
 800fed6:	d1d1      	bne.n	800fe7c <__swsetup_r+0x20>
 800fed8:	f403 7220 	and.w	r2, r3, #640	; 0x280
 800fedc:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800fee0:	d0cc      	beq.n	800fe7c <__swsetup_r+0x20>
 800fee2:	4628      	mov	r0, r5
 800fee4:	4621      	mov	r1, r4
 800fee6:	f001 fb2f 	bl	8011548 <__smakebuf_r>
 800feea:	89a3      	ldrh	r3, [r4, #12]
 800feec:	6920      	ldr	r0, [r4, #16]
 800feee:	e7c5      	b.n	800fe7c <__swsetup_r+0x20>
 800fef0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800fef2:	b151      	cbz	r1, 800ff0a <__swsetup_r+0xae>
 800fef4:	f104 0340 	add.w	r3, r4, #64	; 0x40
 800fef8:	4299      	cmp	r1, r3
 800fefa:	d004      	beq.n	800ff06 <__swsetup_r+0xaa>
 800fefc:	4628      	mov	r0, r5
 800fefe:	f001 f9cd 	bl	801129c <_free_r>
 800ff02:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800ff06:	2300      	movs	r3, #0
 800ff08:	6323      	str	r3, [r4, #48]	; 0x30
 800ff0a:	2300      	movs	r3, #0
 800ff0c:	6920      	ldr	r0, [r4, #16]
 800ff0e:	6063      	str	r3, [r4, #4]
 800ff10:	f022 0224 	bic.w	r2, r2, #36	; 0x24
 800ff14:	6020      	str	r0, [r4, #0]
 800ff16:	e7d9      	b.n	800fecc <__swsetup_r+0x70>
 800ff18:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800ff1c:	2309      	movs	r3, #9
 800ff1e:	602b      	str	r3, [r5, #0]
 800ff20:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ff24:	81a2      	strh	r2, [r4, #12]
 800ff26:	bd38      	pop	{r3, r4, r5, pc}
 800ff28:	20000808 	.word	0x20000808

0800ff2c <__register_exitproc>:
 800ff2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ff30:	4c1e      	ldr	r4, [pc, #120]	; (800ffac <__register_exitproc+0x80>)
 800ff32:	4605      	mov	r5, r0
 800ff34:	6820      	ldr	r0, [r4, #0]
 800ff36:	4690      	mov	r8, r2
 800ff38:	461f      	mov	r7, r3
 800ff3a:	460e      	mov	r6, r1
 800ff3c:	f7fd fbd0 	bl	800d6e0 <__retarget_lock_acquire_recursive>
 800ff40:	4b1b      	ldr	r3, [pc, #108]	; (800ffb0 <__register_exitproc+0x84>)
 800ff42:	681a      	ldr	r2, [r3, #0]
 800ff44:	f8d2 3148 	ldr.w	r3, [r2, #328]	; 0x148
 800ff48:	b333      	cbz	r3, 800ff98 <__register_exitproc+0x6c>
 800ff4a:	685a      	ldr	r2, [r3, #4]
 800ff4c:	6820      	ldr	r0, [r4, #0]
 800ff4e:	2a1f      	cmp	r2, #31
 800ff50:	dc27      	bgt.n	800ffa2 <__register_exitproc+0x76>
 800ff52:	b94d      	cbnz	r5, 800ff68 <__register_exitproc+0x3c>
 800ff54:	1c91      	adds	r1, r2, #2
 800ff56:	3201      	adds	r2, #1
 800ff58:	605a      	str	r2, [r3, #4]
 800ff5a:	f843 6021 	str.w	r6, [r3, r1, lsl #2]
 800ff5e:	f7fd fbc1 	bl	800d6e4 <__retarget_lock_release_recursive>
 800ff62:	2000      	movs	r0, #0
 800ff64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ff68:	eb03 0182 	add.w	r1, r3, r2, lsl #2
 800ff6c:	2401      	movs	r4, #1
 800ff6e:	f8c1 8088 	str.w	r8, [r1, #136]	; 0x88
 800ff72:	fa04 fe02 	lsl.w	lr, r4, r2
 800ff76:	f8d3 4188 	ldr.w	r4, [r3, #392]	; 0x188
 800ff7a:	2d02      	cmp	r5, #2
 800ff7c:	ea44 0c0e 	orr.w	ip, r4, lr
 800ff80:	f8c3 c188 	str.w	ip, [r3, #392]	; 0x188
 800ff84:	f8c1 7108 	str.w	r7, [r1, #264]	; 0x108
 800ff88:	d1e4      	bne.n	800ff54 <__register_exitproc+0x28>
 800ff8a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
 800ff8e:	ea4e 0401 	orr.w	r4, lr, r1
 800ff92:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
 800ff96:	e7dd      	b.n	800ff54 <__register_exitproc+0x28>
 800ff98:	f502 73a6 	add.w	r3, r2, #332	; 0x14c
 800ff9c:	f8c2 3148 	str.w	r3, [r2, #328]	; 0x148
 800ffa0:	e7d3      	b.n	800ff4a <__register_exitproc+0x1e>
 800ffa2:	f7fd fb9f 	bl	800d6e4 <__retarget_lock_release_recursive>
 800ffa6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ffaa:	e7db      	b.n	800ff64 <__register_exitproc+0x38>
 800ffac:	20001048 	.word	0x20001048
 800ffb0:	08013598 	.word	0x08013598

0800ffb4 <register_fini>:
 800ffb4:	4b02      	ldr	r3, [pc, #8]	; (800ffc0 <register_fini+0xc>)
 800ffb6:	b113      	cbz	r3, 800ffbe <register_fini+0xa>
 800ffb8:	4802      	ldr	r0, [pc, #8]	; (800ffc4 <register_fini+0x10>)
 800ffba:	f000 b805 	b.w	800ffc8 <atexit>
 800ffbe:	4770      	bx	lr
 800ffc0:	00000000 	.word	0x00000000
 800ffc4:	080111c9 	.word	0x080111c9

0800ffc8 <atexit>:
 800ffc8:	2300      	movs	r3, #0
 800ffca:	4601      	mov	r1, r0
 800ffcc:	461a      	mov	r2, r3
 800ffce:	4618      	mov	r0, r3
 800ffd0:	f7ff bfac 	b.w	800ff2c <__register_exitproc>

0800ffd4 <quorem>:
 800ffd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffd8:	6903      	ldr	r3, [r0, #16]
 800ffda:	690f      	ldr	r7, [r1, #16]
 800ffdc:	42bb      	cmp	r3, r7
 800ffde:	b083      	sub	sp, #12
 800ffe0:	f2c0 8086 	blt.w	80100f0 <quorem+0x11c>
 800ffe4:	3f01      	subs	r7, #1
 800ffe6:	f101 0614 	add.w	r6, r1, #20
 800ffea:	f100 0a14 	add.w	sl, r0, #20
 800ffee:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
 800fff2:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
 800fff6:	00bc      	lsls	r4, r7, #2
 800fff8:	3301      	adds	r3, #1
 800fffa:	9400      	str	r4, [sp, #0]
 800fffc:	eb06 0904 	add.w	r9, r6, r4
 8010000:	429a      	cmp	r2, r3
 8010002:	4454      	add	r4, sl
 8010004:	fbb2 f8f3 	udiv	r8, r2, r3
 8010008:	9401      	str	r4, [sp, #4]
 801000a:	d33a      	bcc.n	8010082 <quorem+0xae>
 801000c:	2500      	movs	r5, #0
 801000e:	462a      	mov	r2, r5
 8010010:	46b6      	mov	lr, r6
 8010012:	46d4      	mov	ip, sl
 8010014:	f85e 4b04 	ldr.w	r4, [lr], #4
 8010018:	f8dc 3000 	ldr.w	r3, [ip]
 801001c:	fa1f fb84 	uxth.w	fp, r4
 8010020:	fb08 550b 	mla	r5, r8, fp, r5
 8010024:	ea4f 4b15 	mov.w	fp, r5, lsr #16
 8010028:	0c24      	lsrs	r4, r4, #16
 801002a:	fb08 b404 	mla	r4, r8, r4, fp
 801002e:	b2ad      	uxth	r5, r5
 8010030:	1b55      	subs	r5, r2, r5
 8010032:	b2a2      	uxth	r2, r4
 8010034:	ebc2 4213 	rsb	r2, r2, r3, lsr #16
 8010038:	fa15 f383 	uxtah	r3, r5, r3
 801003c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8010040:	b29b      	uxth	r3, r3
 8010042:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8010046:	45f1      	cmp	r9, lr
 8010048:	ea4f 4514 	mov.w	r5, r4, lsr #16
 801004c:	f84c 3b04 	str.w	r3, [ip], #4
 8010050:	ea4f 4222 	mov.w	r2, r2, asr #16
 8010054:	d2de      	bcs.n	8010014 <quorem+0x40>
 8010056:	9b00      	ldr	r3, [sp, #0]
 8010058:	f85a 3003 	ldr.w	r3, [sl, r3]
 801005c:	b98b      	cbnz	r3, 8010082 <quorem+0xae>
 801005e:	9a01      	ldr	r2, [sp, #4]
 8010060:	1f13      	subs	r3, r2, #4
 8010062:	459a      	cmp	sl, r3
 8010064:	d20c      	bcs.n	8010080 <quorem+0xac>
 8010066:	f852 3c04 	ldr.w	r3, [r2, #-4]
 801006a:	b94b      	cbnz	r3, 8010080 <quorem+0xac>
 801006c:	f1a2 0308 	sub.w	r3, r2, #8
 8010070:	e002      	b.n	8010078 <quorem+0xa4>
 8010072:	681a      	ldr	r2, [r3, #0]
 8010074:	3b04      	subs	r3, #4
 8010076:	b91a      	cbnz	r2, 8010080 <quorem+0xac>
 8010078:	459a      	cmp	sl, r3
 801007a:	f107 37ff 	add.w	r7, r7, #4294967295	; 0xffffffff
 801007e:	d3f8      	bcc.n	8010072 <quorem+0x9e>
 8010080:	6107      	str	r7, [r0, #16]
 8010082:	4604      	mov	r4, r0
 8010084:	f001 fcbc 	bl	8011a00 <__mcmp>
 8010088:	2800      	cmp	r0, #0
 801008a:	db2d      	blt.n	80100e8 <quorem+0x114>
 801008c:	f108 0801 	add.w	r8, r8, #1
 8010090:	4650      	mov	r0, sl
 8010092:	2300      	movs	r3, #0
 8010094:	f856 1b04 	ldr.w	r1, [r6], #4
 8010098:	6805      	ldr	r5, [r0, #0]
 801009a:	b28a      	uxth	r2, r1
 801009c:	1a9a      	subs	r2, r3, r2
 801009e:	0c0b      	lsrs	r3, r1, #16
 80100a0:	fa12 f285 	uxtah	r2, r2, r5
 80100a4:	ebc3 4315 	rsb	r3, r3, r5, lsr #16
 80100a8:	eb03 4322 	add.w	r3, r3, r2, asr #16
 80100ac:	b292      	uxth	r2, r2
 80100ae:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80100b2:	45b1      	cmp	r9, r6
 80100b4:	f840 2b04 	str.w	r2, [r0], #4
 80100b8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80100bc:	d2ea      	bcs.n	8010094 <quorem+0xc0>
 80100be:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
 80100c2:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
 80100c6:	b97a      	cbnz	r2, 80100e8 <quorem+0x114>
 80100c8:	1f1a      	subs	r2, r3, #4
 80100ca:	4592      	cmp	sl, r2
 80100cc:	d20b      	bcs.n	80100e6 <quorem+0x112>
 80100ce:	f853 2c04 	ldr.w	r2, [r3, #-4]
 80100d2:	b942      	cbnz	r2, 80100e6 <quorem+0x112>
 80100d4:	3b08      	subs	r3, #8
 80100d6:	e002      	b.n	80100de <quorem+0x10a>
 80100d8:	681a      	ldr	r2, [r3, #0]
 80100da:	3b04      	subs	r3, #4
 80100dc:	b91a      	cbnz	r2, 80100e6 <quorem+0x112>
 80100de:	459a      	cmp	sl, r3
 80100e0:	f107 37ff 	add.w	r7, r7, #4294967295	; 0xffffffff
 80100e4:	d3f8      	bcc.n	80100d8 <quorem+0x104>
 80100e6:	6127      	str	r7, [r4, #16]
 80100e8:	4640      	mov	r0, r8
 80100ea:	b003      	add	sp, #12
 80100ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100f0:	2000      	movs	r0, #0
 80100f2:	b003      	add	sp, #12
 80100f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080100f8 <_dtoa_r>:
 80100f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100fc:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80100fe:	b097      	sub	sp, #92	; 0x5c
 8010100:	4616      	mov	r6, r2
 8010102:	461f      	mov	r7, r3
 8010104:	4682      	mov	sl, r0
 8010106:	9c23      	ldr	r4, [sp, #140]	; 0x8c
 8010108:	e9cd 6702 	strd	r6, r7, [sp, #8]
 801010c:	b149      	cbz	r1, 8010122 <_dtoa_r+0x2a>
 801010e:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8010110:	604a      	str	r2, [r1, #4]
 8010112:	2301      	movs	r3, #1
 8010114:	4093      	lsls	r3, r2
 8010116:	608b      	str	r3, [r1, #8]
 8010118:	f001 fa86 	bl	8011628 <_Bfree>
 801011c:	2300      	movs	r3, #0
 801011e:	f8ca 3040 	str.w	r3, [sl, #64]	; 0x40
 8010122:	1e3e      	subs	r6, r7, #0
 8010124:	bfb4      	ite	lt
 8010126:	2301      	movlt	r3, #1
 8010128:	2300      	movge	r3, #0
 801012a:	6023      	str	r3, [r4, #0]
 801012c:	4b76      	ldr	r3, [pc, #472]	; (8010308 <_dtoa_r+0x210>)
 801012e:	bfbc      	itt	lt
 8010130:	f026 4600 	biclt.w	r6, r6, #2147483648	; 0x80000000
 8010134:	9603      	strlt	r6, [sp, #12]
 8010136:	43b3      	bics	r3, r6
 8010138:	f000 80b0 	beq.w	801029c <_dtoa_r+0x1a4>
 801013c:	e9dd 3402 	ldrd	r3, r4, [sp, #8]
 8010140:	2200      	movs	r2, #0
 8010142:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
 8010146:	4618      	mov	r0, r3
 8010148:	4621      	mov	r1, r4
 801014a:	2300      	movs	r3, #0
 801014c:	f7f8 fb8a 	bl	8008864 <__aeabi_dcmpeq>
 8010150:	4605      	mov	r5, r0
 8010152:	b178      	cbz	r0, 8010174 <_dtoa_r+0x7c>
 8010154:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8010156:	2301      	movs	r3, #1
 8010158:	6013      	str	r3, [r2, #0]
 801015a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801015c:	2b00      	cmp	r3, #0
 801015e:	f000 832e 	beq.w	80107be <_dtoa_r+0x6c6>
 8010162:	4b6a      	ldr	r3, [pc, #424]	; (801030c <_dtoa_r+0x214>)
 8010164:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8010166:	6013      	str	r3, [r2, #0]
 8010168:	3b01      	subs	r3, #1
 801016a:	9305      	str	r3, [sp, #20]
 801016c:	9805      	ldr	r0, [sp, #20]
 801016e:	b017      	add	sp, #92	; 0x5c
 8010170:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010174:	e9dd 780a 	ldrd	r7, r8, [sp, #40]	; 0x28
 8010178:	aa14      	add	r2, sp, #80	; 0x50
 801017a:	ab15      	add	r3, sp, #84	; 0x54
 801017c:	e9cd 3200 	strd	r3, r2, [sp]
 8010180:	4650      	mov	r0, sl
 8010182:	463a      	mov	r2, r7
 8010184:	4643      	mov	r3, r8
 8010186:	f001 fcd3 	bl	8011b30 <__d2b>
 801018a:	0d34      	lsrs	r4, r6, #20
 801018c:	4683      	mov	fp, r0
 801018e:	f040 809b 	bne.w	80102c8 <_dtoa_r+0x1d0>
 8010192:	e9dd 5414 	ldrd	r5, r4, [sp, #80]	; 0x50
 8010196:	442c      	add	r4, r5
 8010198:	f204 4332 	addw	r3, r4, #1074	; 0x432
 801019c:	2b20      	cmp	r3, #32
 801019e:	f340 83dd 	ble.w	801095c <_dtoa_r+0x864>
 80101a2:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 80101a6:	409e      	lsls	r6, r3
 80101a8:	9b02      	ldr	r3, [sp, #8]
 80101aa:	f204 4012 	addw	r0, r4, #1042	; 0x412
 80101ae:	fa23 f000 	lsr.w	r0, r3, r0
 80101b2:	4330      	orrs	r0, r6
 80101b4:	f7f8 f874 	bl	80082a0 <__aeabi_ui2d>
 80101b8:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 80101bc:	2101      	movs	r1, #1
 80101be:	4602      	mov	r2, r0
 80101c0:	3c01      	subs	r4, #1
 80101c2:	910f      	str	r1, [sp, #60]	; 0x3c
 80101c4:	4610      	mov	r0, r2
 80101c6:	4619      	mov	r1, r3
 80101c8:	2200      	movs	r2, #0
 80101ca:	4b51      	ldr	r3, [pc, #324]	; (8010310 <_dtoa_r+0x218>)
 80101cc:	f7f7 ff2a 	bl	8008024 <__aeabi_dsub>
 80101d0:	a347      	add	r3, pc, #284	; (adr r3, 80102f0 <_dtoa_r+0x1f8>)
 80101d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101d6:	f7f8 f8dd 	bl	8008394 <__aeabi_dmul>
 80101da:	a347      	add	r3, pc, #284	; (adr r3, 80102f8 <_dtoa_r+0x200>)
 80101dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101e0:	f7f7 ff22 	bl	8008028 <__adddf3>
 80101e4:	4606      	mov	r6, r0
 80101e6:	4620      	mov	r0, r4
 80101e8:	460f      	mov	r7, r1
 80101ea:	f7f8 f869 	bl	80082c0 <__aeabi_i2d>
 80101ee:	a344      	add	r3, pc, #272	; (adr r3, 8010300 <_dtoa_r+0x208>)
 80101f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101f4:	f7f8 f8ce 	bl	8008394 <__aeabi_dmul>
 80101f8:	4602      	mov	r2, r0
 80101fa:	460b      	mov	r3, r1
 80101fc:	4630      	mov	r0, r6
 80101fe:	4639      	mov	r1, r7
 8010200:	f7f7 ff12 	bl	8008028 <__adddf3>
 8010204:	4606      	mov	r6, r0
 8010206:	460f      	mov	r7, r1
 8010208:	f7f8 fb74 	bl	80088f4 <__aeabi_d2iz>
 801020c:	2200      	movs	r2, #0
 801020e:	4681      	mov	r9, r0
 8010210:	2300      	movs	r3, #0
 8010212:	4630      	mov	r0, r6
 8010214:	4639      	mov	r1, r7
 8010216:	f7f8 fb2f 	bl	8008878 <__aeabi_dcmplt>
 801021a:	2800      	cmp	r0, #0
 801021c:	f040 82c2 	bne.w	80107a4 <_dtoa_r+0x6ac>
 8010220:	1b2c      	subs	r4, r5, r4
 8010222:	1e63      	subs	r3, r4, #1
 8010224:	f1b9 0f16 	cmp.w	r9, #22
 8010228:	9306      	str	r3, [sp, #24]
 801022a:	f200 82af 	bhi.w	801078c <_dtoa_r+0x694>
 801022e:	4b39      	ldr	r3, [pc, #228]	; (8010314 <_dtoa_r+0x21c>)
 8010230:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8010234:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010238:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 801023c:	f7f8 fb1c 	bl	8008878 <__aeabi_dcmplt>
 8010240:	2800      	cmp	r0, #0
 8010242:	d06d      	beq.n	8010320 <_dtoa_r+0x228>
 8010244:	2300      	movs	r3, #0
 8010246:	930e      	str	r3, [sp, #56]	; 0x38
 8010248:	9b06      	ldr	r3, [sp, #24]
 801024a:	2b00      	cmp	r3, #0
 801024c:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8010250:	f2c0 82a2 	blt.w	8010798 <_dtoa_r+0x6a0>
 8010254:	2300      	movs	r3, #0
 8010256:	9308      	str	r3, [sp, #32]
 8010258:	f1b9 0f00 	cmp.w	r9, #0
 801025c:	da66      	bge.n	801032c <_dtoa_r+0x234>
 801025e:	9b08      	ldr	r3, [sp, #32]
 8010260:	f8cd 901c 	str.w	r9, [sp, #28]
 8010264:	eba3 0309 	sub.w	r3, r3, r9
 8010268:	9308      	str	r3, [sp, #32]
 801026a:	f1c9 0300 	rsb	r3, r9, #0
 801026e:	930d      	str	r3, [sp, #52]	; 0x34
 8010270:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8010272:	2b09      	cmp	r3, #9
 8010274:	f04f 0900 	mov.w	r9, #0
 8010278:	d861      	bhi.n	801033e <_dtoa_r+0x246>
 801027a:	2b05      	cmp	r3, #5
 801027c:	f340 836c 	ble.w	8010958 <_dtoa_r+0x860>
 8010280:	3b04      	subs	r3, #4
 8010282:	9320      	str	r3, [sp, #128]	; 0x80
 8010284:	2400      	movs	r4, #0
 8010286:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8010288:	3b02      	subs	r3, #2
 801028a:	2b03      	cmp	r3, #3
 801028c:	f200 864b 	bhi.w	8010f26 <_dtoa_r+0xe2e>
 8010290:	e8df f013 	tbh	[pc, r3, lsl #1]
 8010294:	0487048a 	.word	0x0487048a
 8010298:	047a045d 	.word	0x047a045d
 801029c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801029e:	f242 730f 	movw	r3, #9999	; 0x270f
 80102a2:	6013      	str	r3, [r2, #0]
 80102a4:	9b02      	ldr	r3, [sp, #8]
 80102a6:	f3c6 0613 	ubfx	r6, r6, #0, #20
 80102aa:	4333      	orrs	r3, r6
 80102ac:	d118      	bne.n	80102e0 <_dtoa_r+0x1e8>
 80102ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80102b0:	2b00      	cmp	r3, #0
 80102b2:	f000 862f 	beq.w	8010f14 <_dtoa_r+0xe1c>
 80102b6:	4b18      	ldr	r3, [pc, #96]	; (8010318 <_dtoa_r+0x220>)
 80102b8:	9305      	str	r3, [sp, #20]
 80102ba:	3308      	adds	r3, #8
 80102bc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80102be:	9805      	ldr	r0, [sp, #20]
 80102c0:	6013      	str	r3, [r2, #0]
 80102c2:	b017      	add	sp, #92	; 0x5c
 80102c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102c8:	f3c8 0113 	ubfx	r1, r8, #0, #20
 80102cc:	f041 537f 	orr.w	r3, r1, #1069547520	; 0x3fc00000
 80102d0:	950f      	str	r5, [sp, #60]	; 0x3c
 80102d2:	463a      	mov	r2, r7
 80102d4:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 80102d8:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80102dc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80102de:	e771      	b.n	80101c4 <_dtoa_r+0xcc>
 80102e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80102e2:	2b00      	cmp	r3, #0
 80102e4:	f040 8422 	bne.w	8010b2c <_dtoa_r+0xa34>
 80102e8:	4b0c      	ldr	r3, [pc, #48]	; (801031c <_dtoa_r+0x224>)
 80102ea:	9305      	str	r3, [sp, #20]
 80102ec:	e73e      	b.n	801016c <_dtoa_r+0x74>
 80102ee:	bf00      	nop
 80102f0:	636f4361 	.word	0x636f4361
 80102f4:	3fd287a7 	.word	0x3fd287a7
 80102f8:	8b60c8b3 	.word	0x8b60c8b3
 80102fc:	3fc68a28 	.word	0x3fc68a28
 8010300:	509f79fb 	.word	0x509f79fb
 8010304:	3fd34413 	.word	0x3fd34413
 8010308:	7ff00000 	.word	0x7ff00000
 801030c:	080135dd 	.word	0x080135dd
 8010310:	3ff80000 	.word	0x3ff80000
 8010314:	08013638 	.word	0x08013638
 8010318:	08013604 	.word	0x08013604
 801031c:	08013600 	.word	0x08013600
 8010320:	9b06      	ldr	r3, [sp, #24]
 8010322:	2b00      	cmp	r3, #0
 8010324:	f2c0 848c 	blt.w	8010c40 <_dtoa_r+0xb48>
 8010328:	900e      	str	r0, [sp, #56]	; 0x38
 801032a:	9008      	str	r0, [sp, #32]
 801032c:	9b06      	ldr	r3, [sp, #24]
 801032e:	444b      	add	r3, r9
 8010330:	e9cd 3906 	strd	r3, r9, [sp, #24]
 8010334:	2300      	movs	r3, #0
 8010336:	930d      	str	r3, [sp, #52]	; 0x34
 8010338:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801033a:	2b09      	cmp	r3, #9
 801033c:	d99d      	bls.n	801027a <_dtoa_r+0x182>
 801033e:	2300      	movs	r3, #0
 8010340:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8010344:	2401      	movs	r4, #1
 8010346:	9320      	str	r3, [sp, #128]	; 0x80
 8010348:	9509      	str	r5, [sp, #36]	; 0x24
 801034a:	940c      	str	r4, [sp, #48]	; 0x30
 801034c:	9321      	str	r3, [sp, #132]	; 0x84
 801034e:	2100      	movs	r1, #0
 8010350:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8010354:	9510      	str	r5, [sp, #64]	; 0x40
 8010356:	4650      	mov	r0, sl
 8010358:	f001 f940 	bl	80115dc <_Balloc>
 801035c:	2d0e      	cmp	r5, #14
 801035e:	9005      	str	r0, [sp, #20]
 8010360:	f8ca 0040 	str.w	r0, [sl, #64]	; 0x40
 8010364:	f200 8120 	bhi.w	80105a8 <_dtoa_r+0x4b0>
 8010368:	2c00      	cmp	r4, #0
 801036a:	f000 811d 	beq.w	80105a8 <_dtoa_r+0x4b0>
 801036e:	9907      	ldr	r1, [sp, #28]
 8010370:	2900      	cmp	r1, #0
 8010372:	f340 8467 	ble.w	8010c44 <_dtoa_r+0xb4c>
 8010376:	4bbd      	ldr	r3, [pc, #756]	; (801066c <_dtoa_r+0x574>)
 8010378:	f001 020f 	and.w	r2, r1, #15
 801037c:	110e      	asrs	r6, r1, #4
 801037e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8010382:	06f0      	lsls	r0, r6, #27
 8010384:	e9d3 4500 	ldrd	r4, r5, [r3]
 8010388:	f140 842d 	bpl.w	8010be6 <_dtoa_r+0xaee>
 801038c:	4bb8      	ldr	r3, [pc, #736]	; (8010670 <_dtoa_r+0x578>)
 801038e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8010392:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8010396:	f7f8 f927 	bl	80085e8 <__aeabi_ddiv>
 801039a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801039e:	f006 060f 	and.w	r6, r6, #15
 80103a2:	f04f 0803 	mov.w	r8, #3
 80103a6:	b186      	cbz	r6, 80103ca <_dtoa_r+0x2d2>
 80103a8:	4fb1      	ldr	r7, [pc, #708]	; (8010670 <_dtoa_r+0x578>)
 80103aa:	07f1      	lsls	r1, r6, #31
 80103ac:	d509      	bpl.n	80103c2 <_dtoa_r+0x2ca>
 80103ae:	4620      	mov	r0, r4
 80103b0:	4629      	mov	r1, r5
 80103b2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80103b6:	f7f7 ffed 	bl	8008394 <__aeabi_dmul>
 80103ba:	f108 0801 	add.w	r8, r8, #1
 80103be:	4604      	mov	r4, r0
 80103c0:	460d      	mov	r5, r1
 80103c2:	1076      	asrs	r6, r6, #1
 80103c4:	f107 0708 	add.w	r7, r7, #8
 80103c8:	d1ef      	bne.n	80103aa <_dtoa_r+0x2b2>
 80103ca:	4622      	mov	r2, r4
 80103cc:	462b      	mov	r3, r5
 80103ce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80103d2:	f7f8 f909 	bl	80085e8 <__aeabi_ddiv>
 80103d6:	4606      	mov	r6, r0
 80103d8:	460f      	mov	r7, r1
 80103da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80103dc:	b143      	cbz	r3, 80103f0 <_dtoa_r+0x2f8>
 80103de:	2200      	movs	r2, #0
 80103e0:	4ba4      	ldr	r3, [pc, #656]	; (8010674 <_dtoa_r+0x57c>)
 80103e2:	4630      	mov	r0, r6
 80103e4:	4639      	mov	r1, r7
 80103e6:	f7f8 fa47 	bl	8008878 <__aeabi_dcmplt>
 80103ea:	2800      	cmp	r0, #0
 80103ec:	f040 8520 	bne.w	8010e30 <_dtoa_r+0xd38>
 80103f0:	4640      	mov	r0, r8
 80103f2:	f7f7 ff65 	bl	80082c0 <__aeabi_i2d>
 80103f6:	4632      	mov	r2, r6
 80103f8:	463b      	mov	r3, r7
 80103fa:	f7f7 ffcb 	bl	8008394 <__aeabi_dmul>
 80103fe:	4b9e      	ldr	r3, [pc, #632]	; (8010678 <_dtoa_r+0x580>)
 8010400:	2200      	movs	r2, #0
 8010402:	f7f7 fe11 	bl	8008028 <__adddf3>
 8010406:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010408:	4604      	mov	r4, r0
 801040a:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 801040e:	2b00      	cmp	r3, #0
 8010410:	f000 80ae 	beq.w	8010570 <_dtoa_r+0x478>
 8010414:	9b07      	ldr	r3, [sp, #28]
 8010416:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
 801041a:	9311      	str	r3, [sp, #68]	; 0x44
 801041c:	4639      	mov	r1, r7
 801041e:	4630      	mov	r0, r6
 8010420:	f7f8 fa68 	bl	80088f4 <__aeabi_d2iz>
 8010424:	9002      	str	r0, [sp, #8]
 8010426:	f7f7 ff4b 	bl	80082c0 <__aeabi_i2d>
 801042a:	4602      	mov	r2, r0
 801042c:	460b      	mov	r3, r1
 801042e:	4630      	mov	r0, r6
 8010430:	4639      	mov	r1, r7
 8010432:	f7f7 fdf7 	bl	8008024 <__aeabi_dsub>
 8010436:	9a02      	ldr	r2, [sp, #8]
 8010438:	4b8c      	ldr	r3, [pc, #560]	; (801066c <_dtoa_r+0x574>)
 801043a:	4606      	mov	r6, r0
 801043c:	460f      	mov	r7, r1
 801043e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8010440:	9905      	ldr	r1, [sp, #20]
 8010442:	3230      	adds	r2, #48	; 0x30
 8010444:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8010448:	e9cd 4502 	strd	r4, r5, [sp, #8]
 801044c:	b2d5      	uxtb	r5, r2
 801044e:	1c4c      	adds	r4, r1, #1
 8010450:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8010454:	2800      	cmp	r0, #0
 8010456:	f000 8463 	beq.w	8010d20 <_dtoa_r+0xc28>
 801045a:	2000      	movs	r0, #0
 801045c:	4987      	ldr	r1, [pc, #540]	; (801067c <_dtoa_r+0x584>)
 801045e:	f7f8 f8c3 	bl	80085e8 <__aeabi_ddiv>
 8010462:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8010466:	f7f7 fddd 	bl	8008024 <__aeabi_dsub>
 801046a:	9b05      	ldr	r3, [sp, #20]
 801046c:	4632      	mov	r2, r6
 801046e:	701d      	strb	r5, [r3, #0]
 8010470:	463b      	mov	r3, r7
 8010472:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010476:	f7f8 fa1d 	bl	80088b4 <__aeabi_dcmpgt>
 801047a:	2800      	cmp	r0, #0
 801047c:	f040 8499 	bne.w	8010db2 <_dtoa_r+0xcba>
 8010480:	4632      	mov	r2, r6
 8010482:	463b      	mov	r3, r7
 8010484:	2000      	movs	r0, #0
 8010486:	497b      	ldr	r1, [pc, #492]	; (8010674 <_dtoa_r+0x57c>)
 8010488:	f7f7 fdcc 	bl	8008024 <__aeabi_dsub>
 801048c:	4602      	mov	r2, r0
 801048e:	460b      	mov	r3, r1
 8010490:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8010494:	f7f8 fa0e 	bl	80088b4 <__aeabi_dcmpgt>
 8010498:	2800      	cmp	r0, #0
 801049a:	f040 8537 	bne.w	8010f0c <_dtoa_r+0xe14>
 801049e:	f1b8 0f01 	cmp.w	r8, #1
 80104a2:	d07d      	beq.n	80105a0 <_dtoa_r+0x4a8>
 80104a4:	9b05      	ldr	r3, [sp, #20]
 80104a6:	e9cd b912 	strd	fp, r9, [sp, #72]	; 0x48
 80104aa:	4498      	add	r8, r3
 80104ac:	46d1      	mov	r9, sl
 80104ae:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
 80104b2:	e00d      	b.n	80104d0 <_dtoa_r+0x3d8>
 80104b4:	2000      	movs	r0, #0
 80104b6:	496f      	ldr	r1, [pc, #444]	; (8010674 <_dtoa_r+0x57c>)
 80104b8:	f7f7 fdb4 	bl	8008024 <__aeabi_dsub>
 80104bc:	4652      	mov	r2, sl
 80104be:	465b      	mov	r3, fp
 80104c0:	f7f8 f9da 	bl	8008878 <__aeabi_dcmplt>
 80104c4:	2800      	cmp	r0, #0
 80104c6:	f040 84f6 	bne.w	8010eb6 <_dtoa_r+0xdbe>
 80104ca:	45a0      	cmp	r8, r4
 80104cc:	f000 84fa 	beq.w	8010ec4 <_dtoa_r+0xdcc>
 80104d0:	4650      	mov	r0, sl
 80104d2:	4659      	mov	r1, fp
 80104d4:	2200      	movs	r2, #0
 80104d6:	4b6a      	ldr	r3, [pc, #424]	; (8010680 <_dtoa_r+0x588>)
 80104d8:	f7f7 ff5c 	bl	8008394 <__aeabi_dmul>
 80104dc:	2200      	movs	r2, #0
 80104de:	4b68      	ldr	r3, [pc, #416]	; (8010680 <_dtoa_r+0x588>)
 80104e0:	4682      	mov	sl, r0
 80104e2:	468b      	mov	fp, r1
 80104e4:	4630      	mov	r0, r6
 80104e6:	4639      	mov	r1, r7
 80104e8:	f7f7 ff54 	bl	8008394 <__aeabi_dmul>
 80104ec:	460f      	mov	r7, r1
 80104ee:	4606      	mov	r6, r0
 80104f0:	f7f8 fa00 	bl	80088f4 <__aeabi_d2iz>
 80104f4:	4605      	mov	r5, r0
 80104f6:	f7f7 fee3 	bl	80082c0 <__aeabi_i2d>
 80104fa:	4602      	mov	r2, r0
 80104fc:	460b      	mov	r3, r1
 80104fe:	4630      	mov	r0, r6
 8010500:	4639      	mov	r1, r7
 8010502:	f7f7 fd8f 	bl	8008024 <__aeabi_dsub>
 8010506:	3530      	adds	r5, #48	; 0x30
 8010508:	b2ed      	uxtb	r5, r5
 801050a:	4652      	mov	r2, sl
 801050c:	465b      	mov	r3, fp
 801050e:	f804 5b01 	strb.w	r5, [r4], #1
 8010512:	4606      	mov	r6, r0
 8010514:	460f      	mov	r7, r1
 8010516:	f7f8 f9af 	bl	8008878 <__aeabi_dcmplt>
 801051a:	4632      	mov	r2, r6
 801051c:	463b      	mov	r3, r7
 801051e:	2800      	cmp	r0, #0
 8010520:	d0c8      	beq.n	80104b4 <_dtoa_r+0x3bc>
 8010522:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010524:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 8010528:	3301      	adds	r3, #1
 801052a:	46ca      	mov	sl, r9
 801052c:	9307      	str	r3, [sp, #28]
 801052e:	4659      	mov	r1, fp
 8010530:	4650      	mov	r0, sl
 8010532:	f001 f879 	bl	8011628 <_Bfree>
 8010536:	2300      	movs	r3, #0
 8010538:	7023      	strb	r3, [r4, #0]
 801053a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801053c:	461a      	mov	r2, r3
 801053e:	9b07      	ldr	r3, [sp, #28]
 8010540:	6013      	str	r3, [r2, #0]
 8010542:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8010544:	2b00      	cmp	r3, #0
 8010546:	f43f ae11 	beq.w	801016c <_dtoa_r+0x74>
 801054a:	9805      	ldr	r0, [sp, #20]
 801054c:	601c      	str	r4, [r3, #0]
 801054e:	b017      	add	sp, #92	; 0x5c
 8010550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010554:	4640      	mov	r0, r8
 8010556:	f7f7 feb3 	bl	80082c0 <__aeabi_i2d>
 801055a:	4632      	mov	r2, r6
 801055c:	463b      	mov	r3, r7
 801055e:	f7f7 ff19 	bl	8008394 <__aeabi_dmul>
 8010562:	2200      	movs	r2, #0
 8010564:	4b44      	ldr	r3, [pc, #272]	; (8010678 <_dtoa_r+0x580>)
 8010566:	f7f7 fd5f 	bl	8008028 <__adddf3>
 801056a:	4604      	mov	r4, r0
 801056c:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 8010570:	4630      	mov	r0, r6
 8010572:	4639      	mov	r1, r7
 8010574:	2200      	movs	r2, #0
 8010576:	4b43      	ldr	r3, [pc, #268]	; (8010684 <_dtoa_r+0x58c>)
 8010578:	f7f7 fd54 	bl	8008024 <__aeabi_dsub>
 801057c:	4622      	mov	r2, r4
 801057e:	462b      	mov	r3, r5
 8010580:	4607      	mov	r7, r0
 8010582:	4688      	mov	r8, r1
 8010584:	f7f8 f996 	bl	80088b4 <__aeabi_dcmpgt>
 8010588:	4606      	mov	r6, r0
 801058a:	2800      	cmp	r0, #0
 801058c:	f040 83b3 	bne.w	8010cf6 <_dtoa_r+0xbfe>
 8010590:	4622      	mov	r2, r4
 8010592:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8010596:	4638      	mov	r0, r7
 8010598:	4641      	mov	r1, r8
 801059a:	f7f8 f96d 	bl	8008878 <__aeabi_dcmplt>
 801059e:	bb30      	cbnz	r0, 80105ee <_dtoa_r+0x4f6>
 80105a0:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	; 0x28
 80105a4:	e9cd 3402 	strd	r3, r4, [sp, #8]
 80105a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80105aa:	2b00      	cmp	r3, #0
 80105ac:	f2c0 80ca 	blt.w	8010744 <_dtoa_r+0x64c>
 80105b0:	9a07      	ldr	r2, [sp, #28]
 80105b2:	2a0e      	cmp	r2, #14
 80105b4:	f300 80c6 	bgt.w	8010744 <_dtoa_r+0x64c>
 80105b8:	4b2c      	ldr	r3, [pc, #176]	; (801066c <_dtoa_r+0x574>)
 80105ba:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80105be:	e9d3 8900 	ldrd	r8, r9, [r3]
 80105c2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80105c4:	2b00      	cmp	r3, #0
 80105c6:	da17      	bge.n	80105f8 <_dtoa_r+0x500>
 80105c8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80105ca:	2e00      	cmp	r6, #0
 80105cc:	dc14      	bgt.n	80105f8 <_dtoa_r+0x500>
 80105ce:	f040 8461 	bne.w	8010e94 <_dtoa_r+0xd9c>
 80105d2:	2200      	movs	r2, #0
 80105d4:	4b2b      	ldr	r3, [pc, #172]	; (8010684 <_dtoa_r+0x58c>)
 80105d6:	4640      	mov	r0, r8
 80105d8:	4649      	mov	r1, r9
 80105da:	f7f7 fedb 	bl	8008394 <__aeabi_dmul>
 80105de:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80105e2:	f7f8 f95d 	bl	80088a0 <__aeabi_dcmpge>
 80105e6:	2800      	cmp	r0, #0
 80105e8:	f000 8386 	beq.w	8010cf8 <_dtoa_r+0xc00>
 80105ec:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80105ee:	4635      	mov	r5, r6
 80105f0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80105f2:	9c05      	ldr	r4, [sp, #20]
 80105f4:	43db      	mvns	r3, r3
 80105f6:	e26d      	b.n	8010ad4 <_dtoa_r+0x9dc>
 80105f8:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80105fc:	4642      	mov	r2, r8
 80105fe:	464b      	mov	r3, r9
 8010600:	4620      	mov	r0, r4
 8010602:	4629      	mov	r1, r5
 8010604:	f7f7 fff0 	bl	80085e8 <__aeabi_ddiv>
 8010608:	f7f8 f974 	bl	80088f4 <__aeabi_d2iz>
 801060c:	9002      	str	r0, [sp, #8]
 801060e:	f7f7 fe57 	bl	80082c0 <__aeabi_i2d>
 8010612:	4642      	mov	r2, r8
 8010614:	464b      	mov	r3, r9
 8010616:	f7f7 febd 	bl	8008394 <__aeabi_dmul>
 801061a:	4602      	mov	r2, r0
 801061c:	460b      	mov	r3, r1
 801061e:	4620      	mov	r0, r4
 8010620:	4629      	mov	r1, r5
 8010622:	f7f7 fcff 	bl	8008024 <__aeabi_dsub>
 8010626:	9b02      	ldr	r3, [sp, #8]
 8010628:	9c05      	ldr	r4, [sp, #20]
 801062a:	9a07      	ldr	r2, [sp, #28]
 801062c:	3330      	adds	r3, #48	; 0x30
 801062e:	f804 3b01 	strb.w	r3, [r4], #1
 8010632:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010634:	3201      	adds	r2, #1
 8010636:	2b01      	cmp	r3, #1
 8010638:	4606      	mov	r6, r0
 801063a:	460f      	mov	r7, r1
 801063c:	9207      	str	r2, [sp, #28]
 801063e:	d055      	beq.n	80106ec <_dtoa_r+0x5f4>
 8010640:	2200      	movs	r2, #0
 8010642:	4b0f      	ldr	r3, [pc, #60]	; (8010680 <_dtoa_r+0x588>)
 8010644:	f7f7 fea6 	bl	8008394 <__aeabi_dmul>
 8010648:	2200      	movs	r2, #0
 801064a:	2300      	movs	r3, #0
 801064c:	4606      	mov	r6, r0
 801064e:	460f      	mov	r7, r1
 8010650:	f7f8 f908 	bl	8008864 <__aeabi_dcmpeq>
 8010654:	2800      	cmp	r0, #0
 8010656:	f47f af6a 	bne.w	801052e <_dtoa_r+0x436>
 801065a:	f8cd b008 	str.w	fp, [sp, #8]
 801065e:	2501      	movs	r5, #1
 8010660:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8010664:	f8cd a018 	str.w	sl, [sp, #24]
 8010668:	e019      	b.n	801069e <_dtoa_r+0x5a6>
 801066a:	bf00      	nop
 801066c:	08013638 	.word	0x08013638
 8010670:	08013610 	.word	0x08013610
 8010674:	3ff00000 	.word	0x3ff00000
 8010678:	401c0000 	.word	0x401c0000
 801067c:	3fe00000 	.word	0x3fe00000
 8010680:	40240000 	.word	0x40240000
 8010684:	40140000 	.word	0x40140000
 8010688:	f7f7 fe84 	bl	8008394 <__aeabi_dmul>
 801068c:	2200      	movs	r2, #0
 801068e:	2300      	movs	r3, #0
 8010690:	4606      	mov	r6, r0
 8010692:	460f      	mov	r7, r1
 8010694:	f7f8 f8e6 	bl	8008864 <__aeabi_dcmpeq>
 8010698:	2800      	cmp	r0, #0
 801069a:	f040 8323 	bne.w	8010ce4 <_dtoa_r+0xbec>
 801069e:	4642      	mov	r2, r8
 80106a0:	464b      	mov	r3, r9
 80106a2:	4630      	mov	r0, r6
 80106a4:	4639      	mov	r1, r7
 80106a6:	f7f7 ff9f 	bl	80085e8 <__aeabi_ddiv>
 80106aa:	f7f8 f923 	bl	80088f4 <__aeabi_d2iz>
 80106ae:	4682      	mov	sl, r0
 80106b0:	f7f7 fe06 	bl	80082c0 <__aeabi_i2d>
 80106b4:	4642      	mov	r2, r8
 80106b6:	464b      	mov	r3, r9
 80106b8:	f7f7 fe6c 	bl	8008394 <__aeabi_dmul>
 80106bc:	4602      	mov	r2, r0
 80106be:	460b      	mov	r3, r1
 80106c0:	4630      	mov	r0, r6
 80106c2:	4639      	mov	r1, r7
 80106c4:	f7f7 fcae 	bl	8008024 <__aeabi_dsub>
 80106c8:	3501      	adds	r5, #1
 80106ca:	f10a 0c30 	add.w	ip, sl, #48	; 0x30
 80106ce:	45ab      	cmp	fp, r5
 80106d0:	4606      	mov	r6, r0
 80106d2:	460f      	mov	r7, r1
 80106d4:	f04f 0200 	mov.w	r2, #0
 80106d8:	4bad      	ldr	r3, [pc, #692]	; (8010990 <_dtoa_r+0x898>)
 80106da:	f804 cb01 	strb.w	ip, [r4], #1
 80106de:	d1d3      	bne.n	8010688 <_dtoa_r+0x590>
 80106e0:	f8dd b008 	ldr.w	fp, [sp, #8]
 80106e4:	f8cd a008 	str.w	sl, [sp, #8]
 80106e8:	f8dd a018 	ldr.w	sl, [sp, #24]
 80106ec:	4632      	mov	r2, r6
 80106ee:	463b      	mov	r3, r7
 80106f0:	4630      	mov	r0, r6
 80106f2:	4639      	mov	r1, r7
 80106f4:	f7f7 fc98 	bl	8008028 <__adddf3>
 80106f8:	4642      	mov	r2, r8
 80106fa:	464b      	mov	r3, r9
 80106fc:	4606      	mov	r6, r0
 80106fe:	460f      	mov	r7, r1
 8010700:	f7f8 f8d8 	bl	80088b4 <__aeabi_dcmpgt>
 8010704:	b960      	cbnz	r0, 8010720 <_dtoa_r+0x628>
 8010706:	4642      	mov	r2, r8
 8010708:	464b      	mov	r3, r9
 801070a:	4630      	mov	r0, r6
 801070c:	4639      	mov	r1, r7
 801070e:	f7f8 f8a9 	bl	8008864 <__aeabi_dcmpeq>
 8010712:	2800      	cmp	r0, #0
 8010714:	f43f af0b 	beq.w	801052e <_dtoa_r+0x436>
 8010718:	9b02      	ldr	r3, [sp, #8]
 801071a:	07db      	lsls	r3, r3, #31
 801071c:	f57f af07 	bpl.w	801052e <_dtoa_r+0x436>
 8010720:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 8010724:	9a05      	ldr	r2, [sp, #20]
 8010726:	1e63      	subs	r3, r4, #1
 8010728:	e004      	b.n	8010734 <_dtoa_r+0x63c>
 801072a:	429a      	cmp	r2, r3
 801072c:	f000 83a6 	beq.w	8010e7c <_dtoa_r+0xd84>
 8010730:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 8010734:	2d39      	cmp	r5, #57	; 0x39
 8010736:	f103 0401 	add.w	r4, r3, #1
 801073a:	d0f6      	beq.n	801072a <_dtoa_r+0x632>
 801073c:	1c6a      	adds	r2, r5, #1
 801073e:	b2d2      	uxtb	r2, r2
 8010740:	701a      	strb	r2, [r3, #0]
 8010742:	e6f4      	b.n	801052e <_dtoa_r+0x436>
 8010744:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010746:	2a00      	cmp	r2, #0
 8010748:	d03f      	beq.n	80107ca <_dtoa_r+0x6d2>
 801074a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801074c:	2a01      	cmp	r2, #1
 801074e:	f340 8268 	ble.w	8010c22 <_dtoa_r+0xb2a>
 8010752:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010754:	1e5e      	subs	r6, r3, #1
 8010756:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010758:	42b3      	cmp	r3, r6
 801075a:	f280 8242 	bge.w	8010be2 <_dtoa_r+0xaea>
 801075e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010760:	960d      	str	r6, [sp, #52]	; 0x34
 8010762:	1af3      	subs	r3, r6, r3
 8010764:	4499      	add	r9, r3
 8010766:	2600      	movs	r6, #0
 8010768:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801076a:	2b00      	cmp	r3, #0
 801076c:	f2c0 82bf 	blt.w	8010cee <_dtoa_r+0xbf6>
 8010770:	9a06      	ldr	r2, [sp, #24]
 8010772:	4611      	mov	r1, r2
 8010774:	9a08      	ldr	r2, [sp, #32]
 8010776:	4419      	add	r1, r3
 8010778:	4614      	mov	r4, r2
 801077a:	441a      	add	r2, r3
 801077c:	9106      	str	r1, [sp, #24]
 801077e:	9208      	str	r2, [sp, #32]
 8010780:	2101      	movs	r1, #1
 8010782:	4650      	mov	r0, sl
 8010784:	f000 fff0 	bl	8011768 <__i2b>
 8010788:	4605      	mov	r5, r0
 801078a:	e021      	b.n	80107d0 <_dtoa_r+0x6d8>
 801078c:	2301      	movs	r3, #1
 801078e:	930e      	str	r3, [sp, #56]	; 0x38
 8010790:	9b06      	ldr	r3, [sp, #24]
 8010792:	2b00      	cmp	r3, #0
 8010794:	f6bf ad5e 	bge.w	8010254 <_dtoa_r+0x15c>
 8010798:	f1c4 0301 	rsb	r3, r4, #1
 801079c:	9308      	str	r3, [sp, #32]
 801079e:	2300      	movs	r3, #0
 80107a0:	9306      	str	r3, [sp, #24]
 80107a2:	e559      	b.n	8010258 <_dtoa_r+0x160>
 80107a4:	4648      	mov	r0, r9
 80107a6:	f7f7 fd8b 	bl	80082c0 <__aeabi_i2d>
 80107aa:	4632      	mov	r2, r6
 80107ac:	463b      	mov	r3, r7
 80107ae:	f7f8 f859 	bl	8008864 <__aeabi_dcmpeq>
 80107b2:	2800      	cmp	r0, #0
 80107b4:	f47f ad34 	bne.w	8010220 <_dtoa_r+0x128>
 80107b8:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80107bc:	e530      	b.n	8010220 <_dtoa_r+0x128>
 80107be:	4b75      	ldr	r3, [pc, #468]	; (8010994 <_dtoa_r+0x89c>)
 80107c0:	9305      	str	r3, [sp, #20]
 80107c2:	9805      	ldr	r0, [sp, #20]
 80107c4:	b017      	add	sp, #92	; 0x5c
 80107c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107ca:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80107cc:	9c08      	ldr	r4, [sp, #32]
 80107ce:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80107d0:	2c00      	cmp	r4, #0
 80107d2:	dd0c      	ble.n	80107ee <_dtoa_r+0x6f6>
 80107d4:	9a06      	ldr	r2, [sp, #24]
 80107d6:	2a00      	cmp	r2, #0
 80107d8:	dd09      	ble.n	80107ee <_dtoa_r+0x6f6>
 80107da:	42a2      	cmp	r2, r4
 80107dc:	9908      	ldr	r1, [sp, #32]
 80107de:	4613      	mov	r3, r2
 80107e0:	bfa8      	it	ge
 80107e2:	4623      	movge	r3, r4
 80107e4:	1ac9      	subs	r1, r1, r3
 80107e6:	1ae4      	subs	r4, r4, r3
 80107e8:	1ad3      	subs	r3, r2, r3
 80107ea:	9108      	str	r1, [sp, #32]
 80107ec:	9306      	str	r3, [sp, #24]
 80107ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80107f0:	b1d3      	cbz	r3, 8010828 <_dtoa_r+0x730>
 80107f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80107f4:	2b00      	cmp	r3, #0
 80107f6:	f000 8192 	beq.w	8010b1e <_dtoa_r+0xa26>
 80107fa:	2e00      	cmp	r6, #0
 80107fc:	dd10      	ble.n	8010820 <_dtoa_r+0x728>
 80107fe:	4629      	mov	r1, r5
 8010800:	4632      	mov	r2, r6
 8010802:	4650      	mov	r0, sl
 8010804:	f001 f852 	bl	80118ac <__pow5mult>
 8010808:	465a      	mov	r2, fp
 801080a:	4601      	mov	r1, r0
 801080c:	4605      	mov	r5, r0
 801080e:	4650      	mov	r0, sl
 8010810:	f000 ffb4 	bl	801177c <__multiply>
 8010814:	4659      	mov	r1, fp
 8010816:	4607      	mov	r7, r0
 8010818:	4650      	mov	r0, sl
 801081a:	f000 ff05 	bl	8011628 <_Bfree>
 801081e:	46bb      	mov	fp, r7
 8010820:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010822:	1b9a      	subs	r2, r3, r6
 8010824:	f040 817c 	bne.w	8010b20 <_dtoa_r+0xa28>
 8010828:	2101      	movs	r1, #1
 801082a:	4650      	mov	r0, sl
 801082c:	f000 ff9c 	bl	8011768 <__i2b>
 8010830:	f1b9 0f00 	cmp.w	r9, #0
 8010834:	4606      	mov	r6, r0
 8010836:	f300 8097 	bgt.w	8010968 <_dtoa_r+0x870>
 801083a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801083c:	2b01      	cmp	r3, #1
 801083e:	f340 817a 	ble.w	8010b36 <_dtoa_r+0xa3e>
 8010842:	2700      	movs	r7, #0
 8010844:	2001      	movs	r0, #1
 8010846:	f1b9 0f00 	cmp.w	r9, #0
 801084a:	f040 8098 	bne.w	801097e <_dtoa_r+0x886>
 801084e:	9a06      	ldr	r2, [sp, #24]
 8010850:	4410      	add	r0, r2
 8010852:	f010 001f 	ands.w	r0, r0, #31
 8010856:	d076      	beq.n	8010946 <_dtoa_r+0x84e>
 8010858:	f1c0 0320 	rsb	r3, r0, #32
 801085c:	2b04      	cmp	r3, #4
 801085e:	f340 835d 	ble.w	8010f1c <_dtoa_r+0xe24>
 8010862:	9b08      	ldr	r3, [sp, #32]
 8010864:	f1c0 001c 	rsb	r0, r0, #28
 8010868:	4403      	add	r3, r0
 801086a:	4402      	add	r2, r0
 801086c:	9308      	str	r3, [sp, #32]
 801086e:	4404      	add	r4, r0
 8010870:	9206      	str	r2, [sp, #24]
 8010872:	9b08      	ldr	r3, [sp, #32]
 8010874:	2b00      	cmp	r3, #0
 8010876:	dd05      	ble.n	8010884 <_dtoa_r+0x78c>
 8010878:	4659      	mov	r1, fp
 801087a:	461a      	mov	r2, r3
 801087c:	4650      	mov	r0, sl
 801087e:	f001 f865 	bl	801194c <__lshift>
 8010882:	4683      	mov	fp, r0
 8010884:	9b06      	ldr	r3, [sp, #24]
 8010886:	2b00      	cmp	r3, #0
 8010888:	dd05      	ble.n	8010896 <_dtoa_r+0x79e>
 801088a:	4631      	mov	r1, r6
 801088c:	461a      	mov	r2, r3
 801088e:	4650      	mov	r0, sl
 8010890:	f001 f85c 	bl	801194c <__lshift>
 8010894:	4606      	mov	r6, r0
 8010896:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010898:	2b00      	cmp	r3, #0
 801089a:	f040 8125 	bne.w	8010ae8 <_dtoa_r+0x9f0>
 801089e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80108a0:	2b00      	cmp	r3, #0
 80108a2:	f340 80fc 	ble.w	8010a9e <_dtoa_r+0x9a6>
 80108a6:	9b07      	ldr	r3, [sp, #28]
 80108a8:	3301      	adds	r3, #1
 80108aa:	9307      	str	r3, [sp, #28]
 80108ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80108ae:	2b00      	cmp	r3, #0
 80108b0:	d17e      	bne.n	80109b0 <_dtoa_r+0x8b8>
 80108b2:	9c05      	ldr	r4, [sp, #20]
 80108b4:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
 80108b8:	2701      	movs	r7, #1
 80108ba:	e003      	b.n	80108c4 <_dtoa_r+0x7cc>
 80108bc:	f000 febe 	bl	801163c <__multadd>
 80108c0:	3701      	adds	r7, #1
 80108c2:	4683      	mov	fp, r0
 80108c4:	4631      	mov	r1, r6
 80108c6:	4658      	mov	r0, fp
 80108c8:	f7ff fb84 	bl	800ffd4 <quorem>
 80108cc:	4547      	cmp	r7, r8
 80108ce:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80108d2:	f804 9b01 	strb.w	r9, [r4], #1
 80108d6:	f04f 0300 	mov.w	r3, #0
 80108da:	f04f 020a 	mov.w	r2, #10
 80108de:	4659      	mov	r1, fp
 80108e0:	4650      	mov	r0, sl
 80108e2:	dbeb      	blt.n	80108bc <_dtoa_r+0x7c4>
 80108e4:	2300      	movs	r3, #0
 80108e6:	9302      	str	r3, [sp, #8]
 80108e8:	4659      	mov	r1, fp
 80108ea:	2201      	movs	r2, #1
 80108ec:	4650      	mov	r0, sl
 80108ee:	f001 f82d 	bl	801194c <__lshift>
 80108f2:	4631      	mov	r1, r6
 80108f4:	4683      	mov	fp, r0
 80108f6:	f001 f883 	bl	8011a00 <__mcmp>
 80108fa:	2800      	cmp	r0, #0
 80108fc:	f814 2c01 	ldrb.w	r2, [r4, #-1]
 8010900:	f340 817a 	ble.w	8010bf8 <_dtoa_r+0xb00>
 8010904:	1e63      	subs	r3, r4, #1
 8010906:	9905      	ldr	r1, [sp, #20]
 8010908:	e004      	b.n	8010914 <_dtoa_r+0x81c>
 801090a:	4299      	cmp	r1, r3
 801090c:	f000 8182 	beq.w	8010c14 <_dtoa_r+0xb1c>
 8010910:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8010914:	2a39      	cmp	r2, #57	; 0x39
 8010916:	f103 0401 	add.w	r4, r3, #1
 801091a:	d0f6      	beq.n	801090a <_dtoa_r+0x812>
 801091c:	3201      	adds	r2, #1
 801091e:	701a      	strb	r2, [r3, #0]
 8010920:	4631      	mov	r1, r6
 8010922:	4650      	mov	r0, sl
 8010924:	f000 fe80 	bl	8011628 <_Bfree>
 8010928:	2d00      	cmp	r5, #0
 801092a:	f43f ae00 	beq.w	801052e <_dtoa_r+0x436>
 801092e:	9902      	ldr	r1, [sp, #8]
 8010930:	b121      	cbz	r1, 801093c <_dtoa_r+0x844>
 8010932:	42a9      	cmp	r1, r5
 8010934:	d002      	beq.n	801093c <_dtoa_r+0x844>
 8010936:	4650      	mov	r0, sl
 8010938:	f000 fe76 	bl	8011628 <_Bfree>
 801093c:	4629      	mov	r1, r5
 801093e:	4650      	mov	r0, sl
 8010940:	f000 fe72 	bl	8011628 <_Bfree>
 8010944:	e5f3      	b.n	801052e <_dtoa_r+0x436>
 8010946:	201c      	movs	r0, #28
 8010948:	9b08      	ldr	r3, [sp, #32]
 801094a:	4403      	add	r3, r0
 801094c:	9308      	str	r3, [sp, #32]
 801094e:	9b06      	ldr	r3, [sp, #24]
 8010950:	4403      	add	r3, r0
 8010952:	4404      	add	r4, r0
 8010954:	9306      	str	r3, [sp, #24]
 8010956:	e78c      	b.n	8010872 <_dtoa_r+0x77a>
 8010958:	2401      	movs	r4, #1
 801095a:	e494      	b.n	8010286 <_dtoa_r+0x18e>
 801095c:	f1c3 0620 	rsb	r6, r3, #32
 8010960:	9b02      	ldr	r3, [sp, #8]
 8010962:	fa03 f006 	lsl.w	r0, r3, r6
 8010966:	e425      	b.n	80101b4 <_dtoa_r+0xbc>
 8010968:	4601      	mov	r1, r0
 801096a:	464a      	mov	r2, r9
 801096c:	4650      	mov	r0, sl
 801096e:	f000 ff9d 	bl	80118ac <__pow5mult>
 8010972:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8010974:	2b01      	cmp	r3, #1
 8010976:	4606      	mov	r6, r0
 8010978:	f340 816c 	ble.w	8010c54 <_dtoa_r+0xb5c>
 801097c:	2700      	movs	r7, #0
 801097e:	6933      	ldr	r3, [r6, #16]
 8010980:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8010984:	6918      	ldr	r0, [r3, #16]
 8010986:	f000 fe9f 	bl	80116c8 <__hi0bits>
 801098a:	f1c0 0020 	rsb	r0, r0, #32
 801098e:	e75e      	b.n	801084e <_dtoa_r+0x756>
 8010990:	40240000 	.word	0x40240000
 8010994:	080135dc 	.word	0x080135dc
 8010998:	4629      	mov	r1, r5
 801099a:	2300      	movs	r3, #0
 801099c:	220a      	movs	r2, #10
 801099e:	4650      	mov	r0, sl
 80109a0:	f000 fe4c 	bl	801163c <__multadd>
 80109a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80109a6:	2b00      	cmp	r3, #0
 80109a8:	4605      	mov	r5, r0
 80109aa:	f340 82a6 	ble.w	8010efa <_dtoa_r+0xe02>
 80109ae:	9309      	str	r3, [sp, #36]	; 0x24
 80109b0:	2c00      	cmp	r4, #0
 80109b2:	f300 810f 	bgt.w	8010bd4 <_dtoa_r+0xadc>
 80109b6:	2f00      	cmp	r7, #0
 80109b8:	f040 8180 	bne.w	8010cbc <_dtoa_r+0xbc4>
 80109bc:	46a8      	mov	r8, r5
 80109be:	9b02      	ldr	r3, [sp, #8]
 80109c0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80109c2:	9f05      	ldr	r7, [sp, #20]
 80109c4:	f003 0201 	and.w	r2, r3, #1
 80109c8:	920c      	str	r2, [sp, #48]	; 0x30
 80109ca:	430a      	orrs	r2, r1
 80109cc:	920a      	str	r2, [sp, #40]	; 0x28
 80109ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80109d0:	1e7b      	subs	r3, r7, #1
 80109d2:	441a      	add	r2, r3
 80109d4:	9209      	str	r2, [sp, #36]	; 0x24
 80109d6:	4634      	mov	r4, r6
 80109d8:	4621      	mov	r1, r4
 80109da:	4658      	mov	r0, fp
 80109dc:	f7ff fafa 	bl	800ffd4 <quorem>
 80109e0:	4629      	mov	r1, r5
 80109e2:	9002      	str	r0, [sp, #8]
 80109e4:	4658      	mov	r0, fp
 80109e6:	f001 f80b 	bl	8011a00 <__mcmp>
 80109ea:	4642      	mov	r2, r8
 80109ec:	4606      	mov	r6, r0
 80109ee:	4621      	mov	r1, r4
 80109f0:	4650      	mov	r0, sl
 80109f2:	f001 f821 	bl	8011a38 <__mdiff>
 80109f6:	9b02      	ldr	r3, [sp, #8]
 80109f8:	f103 0230 	add.w	r2, r3, #48	; 0x30
 80109fc:	68c3      	ldr	r3, [r0, #12]
 80109fe:	4681      	mov	r9, r0
 8010a00:	2b00      	cmp	r3, #0
 8010a02:	d13e      	bne.n	8010a82 <_dtoa_r+0x98a>
 8010a04:	4601      	mov	r1, r0
 8010a06:	4658      	mov	r0, fp
 8010a08:	9208      	str	r2, [sp, #32]
 8010a0a:	f000 fff9 	bl	8011a00 <__mcmp>
 8010a0e:	4649      	mov	r1, r9
 8010a10:	9006      	str	r0, [sp, #24]
 8010a12:	4650      	mov	r0, sl
 8010a14:	f000 fe08 	bl	8011628 <_Bfree>
 8010a18:	9b06      	ldr	r3, [sp, #24]
 8010a1a:	9a08      	ldr	r2, [sp, #32]
 8010a1c:	b91b      	cbnz	r3, 8010a26 <_dtoa_r+0x92e>
 8010a1e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8010a20:	2900      	cmp	r1, #0
 8010a22:	f000 8256 	beq.w	8010ed2 <_dtoa_r+0xdda>
 8010a26:	2e00      	cmp	r6, #0
 8010a28:	f107 0901 	add.w	r9, r7, #1
 8010a2c:	f2c0 8129 	blt.w	8010c82 <_dtoa_r+0xb8a>
 8010a30:	9920      	ldr	r1, [sp, #128]	; 0x80
 8010a32:	430e      	orrs	r6, r1
 8010a34:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010a36:	4331      	orrs	r1, r6
 8010a38:	f000 8123 	beq.w	8010c82 <_dtoa_r+0xb8a>
 8010a3c:	2b00      	cmp	r3, #0
 8010a3e:	f300 815d 	bgt.w	8010cfc <_dtoa_r+0xc04>
 8010a42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010a44:	703a      	strb	r2, [r7, #0]
 8010a46:	42bb      	cmp	r3, r7
 8010a48:	f000 8164 	beq.w	8010d14 <_dtoa_r+0xc1c>
 8010a4c:	4659      	mov	r1, fp
 8010a4e:	2300      	movs	r3, #0
 8010a50:	220a      	movs	r2, #10
 8010a52:	4650      	mov	r0, sl
 8010a54:	f000 fdf2 	bl	801163c <__multadd>
 8010a58:	4545      	cmp	r5, r8
 8010a5a:	4683      	mov	fp, r0
 8010a5c:	4629      	mov	r1, r5
 8010a5e:	f04f 0300 	mov.w	r3, #0
 8010a62:	f04f 020a 	mov.w	r2, #10
 8010a66:	4650      	mov	r0, sl
 8010a68:	d013      	beq.n	8010a92 <_dtoa_r+0x99a>
 8010a6a:	f000 fde7 	bl	801163c <__multadd>
 8010a6e:	4641      	mov	r1, r8
 8010a70:	4605      	mov	r5, r0
 8010a72:	2300      	movs	r3, #0
 8010a74:	220a      	movs	r2, #10
 8010a76:	4650      	mov	r0, sl
 8010a78:	f000 fde0 	bl	801163c <__multadd>
 8010a7c:	464f      	mov	r7, r9
 8010a7e:	4680      	mov	r8, r0
 8010a80:	e7aa      	b.n	80109d8 <_dtoa_r+0x8e0>
 8010a82:	4601      	mov	r1, r0
 8010a84:	4650      	mov	r0, sl
 8010a86:	9206      	str	r2, [sp, #24]
 8010a88:	f000 fdce 	bl	8011628 <_Bfree>
 8010a8c:	2301      	movs	r3, #1
 8010a8e:	9a06      	ldr	r2, [sp, #24]
 8010a90:	e7c9      	b.n	8010a26 <_dtoa_r+0x92e>
 8010a92:	f000 fdd3 	bl	801163c <__multadd>
 8010a96:	464f      	mov	r7, r9
 8010a98:	4605      	mov	r5, r0
 8010a9a:	4680      	mov	r8, r0
 8010a9c:	e79c      	b.n	80109d8 <_dtoa_r+0x8e0>
 8010a9e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8010aa0:	2b02      	cmp	r3, #2
 8010aa2:	f340 8084 	ble.w	8010bae <_dtoa_r+0xab6>
 8010aa6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010aa8:	2b00      	cmp	r3, #0
 8010aaa:	f47f ada1 	bne.w	80105f0 <_dtoa_r+0x4f8>
 8010aae:	4631      	mov	r1, r6
 8010ab0:	2205      	movs	r2, #5
 8010ab2:	4650      	mov	r0, sl
 8010ab4:	f000 fdc2 	bl	801163c <__multadd>
 8010ab8:	4601      	mov	r1, r0
 8010aba:	4606      	mov	r6, r0
 8010abc:	4658      	mov	r0, fp
 8010abe:	f000 ff9f 	bl	8011a00 <__mcmp>
 8010ac2:	2800      	cmp	r0, #0
 8010ac4:	f77f ad94 	ble.w	80105f0 <_dtoa_r+0x4f8>
 8010ac8:	9c05      	ldr	r4, [sp, #20]
 8010aca:	9b07      	ldr	r3, [sp, #28]
 8010acc:	2231      	movs	r2, #49	; 0x31
 8010ace:	f804 2b01 	strb.w	r2, [r4], #1
 8010ad2:	3301      	adds	r3, #1
 8010ad4:	3301      	adds	r3, #1
 8010ad6:	4631      	mov	r1, r6
 8010ad8:	4650      	mov	r0, sl
 8010ada:	9307      	str	r3, [sp, #28]
 8010adc:	f000 fda4 	bl	8011628 <_Bfree>
 8010ae0:	2d00      	cmp	r5, #0
 8010ae2:	f47f af2b 	bne.w	801093c <_dtoa_r+0x844>
 8010ae6:	e522      	b.n	801052e <_dtoa_r+0x436>
 8010ae8:	4631      	mov	r1, r6
 8010aea:	4658      	mov	r0, fp
 8010aec:	f000 ff88 	bl	8011a00 <__mcmp>
 8010af0:	2800      	cmp	r0, #0
 8010af2:	f6bf aed4 	bge.w	801089e <_dtoa_r+0x7a6>
 8010af6:	4659      	mov	r1, fp
 8010af8:	2300      	movs	r3, #0
 8010afa:	220a      	movs	r2, #10
 8010afc:	4650      	mov	r0, sl
 8010afe:	f000 fd9d 	bl	801163c <__multadd>
 8010b02:	9b07      	ldr	r3, [sp, #28]
 8010b04:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8010b08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010b0a:	4683      	mov	fp, r0
 8010b0c:	2b00      	cmp	r3, #0
 8010b0e:	f47f af43 	bne.w	8010998 <_dtoa_r+0x8a0>
 8010b12:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010b14:	2b00      	cmp	r3, #0
 8010b16:	f340 81e7 	ble.w	8010ee8 <_dtoa_r+0xdf0>
 8010b1a:	9309      	str	r3, [sp, #36]	; 0x24
 8010b1c:	e6c9      	b.n	80108b2 <_dtoa_r+0x7ba>
 8010b1e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010b20:	4659      	mov	r1, fp
 8010b22:	4650      	mov	r0, sl
 8010b24:	f000 fec2 	bl	80118ac <__pow5mult>
 8010b28:	4683      	mov	fp, r0
 8010b2a:	e67d      	b.n	8010828 <_dtoa_r+0x730>
 8010b2c:	4bba      	ldr	r3, [pc, #744]	; (8010e18 <_dtoa_r+0xd20>)
 8010b2e:	9305      	str	r3, [sp, #20]
 8010b30:	3303      	adds	r3, #3
 8010b32:	f7ff bbc3 	b.w	80102bc <_dtoa_r+0x1c4>
 8010b36:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010b3a:	2900      	cmp	r1, #0
 8010b3c:	f47f ae81 	bne.w	8010842 <_dtoa_r+0x74a>
 8010b40:	f3c2 0313 	ubfx	r3, r2, #0, #20
 8010b44:	2b00      	cmp	r3, #0
 8010b46:	f000 808f 	beq.w	8010c68 <_dtoa_r+0xb70>
 8010b4a:	9f02      	ldr	r7, [sp, #8]
 8010b4c:	e67a      	b.n	8010844 <_dtoa_r+0x74c>
 8010b4e:	2301      	movs	r3, #1
 8010b50:	930c      	str	r3, [sp, #48]	; 0x30
 8010b52:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8010b54:	2b00      	cmp	r3, #0
 8010b56:	dd4a      	ble.n	8010bee <_dtoa_r+0xaf6>
 8010b58:	9310      	str	r3, [sp, #64]	; 0x40
 8010b5a:	9309      	str	r3, [sp, #36]	; 0x24
 8010b5c:	4618      	mov	r0, r3
 8010b5e:	2100      	movs	r1, #0
 8010b60:	2817      	cmp	r0, #23
 8010b62:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8010b66:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8010b68:	f77f abf5 	ble.w	8010356 <_dtoa_r+0x25e>
 8010b6c:	2201      	movs	r2, #1
 8010b6e:	2304      	movs	r3, #4
 8010b70:	005b      	lsls	r3, r3, #1
 8010b72:	f103 0614 	add.w	r6, r3, #20
 8010b76:	4286      	cmp	r6, r0
 8010b78:	4611      	mov	r1, r2
 8010b7a:	f102 0201 	add.w	r2, r2, #1
 8010b7e:	d9f7      	bls.n	8010b70 <_dtoa_r+0xa78>
 8010b80:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8010b84:	f7ff bbe7 	b.w	8010356 <_dtoa_r+0x25e>
 8010b88:	2301      	movs	r3, #1
 8010b8a:	930c      	str	r3, [sp, #48]	; 0x30
 8010b8c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8010b8e:	9a07      	ldr	r2, [sp, #28]
 8010b90:	4413      	add	r3, r2
 8010b92:	9310      	str	r3, [sp, #64]	; 0x40
 8010b94:	3301      	adds	r3, #1
 8010b96:	2b01      	cmp	r3, #1
 8010b98:	4618      	mov	r0, r3
 8010b9a:	9309      	str	r3, [sp, #36]	; 0x24
 8010b9c:	bfb8      	it	lt
 8010b9e:	2001      	movlt	r0, #1
 8010ba0:	e7dd      	b.n	8010b5e <_dtoa_r+0xa66>
 8010ba2:	2300      	movs	r3, #0
 8010ba4:	930c      	str	r3, [sp, #48]	; 0x30
 8010ba6:	e7f1      	b.n	8010b8c <_dtoa_r+0xa94>
 8010ba8:	2300      	movs	r3, #0
 8010baa:	930c      	str	r3, [sp, #48]	; 0x30
 8010bac:	e7d1      	b.n	8010b52 <_dtoa_r+0xa5a>
 8010bae:	9b07      	ldr	r3, [sp, #28]
 8010bb0:	3301      	adds	r3, #1
 8010bb2:	9307      	str	r3, [sp, #28]
 8010bb4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010bb6:	2b00      	cmp	r3, #0
 8010bb8:	f47f aefa 	bne.w	80109b0 <_dtoa_r+0x8b8>
 8010bbc:	4631      	mov	r1, r6
 8010bbe:	4658      	mov	r0, fp
 8010bc0:	f7ff fa08 	bl	800ffd4 <quorem>
 8010bc4:	9c05      	ldr	r4, [sp, #20]
 8010bc6:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8010bca:	2300      	movs	r3, #0
 8010bcc:	f804 9b01 	strb.w	r9, [r4], #1
 8010bd0:	9302      	str	r3, [sp, #8]
 8010bd2:	e689      	b.n	80108e8 <_dtoa_r+0x7f0>
 8010bd4:	4629      	mov	r1, r5
 8010bd6:	4622      	mov	r2, r4
 8010bd8:	4650      	mov	r0, sl
 8010bda:	f000 feb7 	bl	801194c <__lshift>
 8010bde:	4605      	mov	r5, r0
 8010be0:	e6e9      	b.n	80109b6 <_dtoa_r+0x8be>
 8010be2:	1b9e      	subs	r6, r3, r6
 8010be4:	e5c0      	b.n	8010768 <_dtoa_r+0x670>
 8010be6:	f04f 0802 	mov.w	r8, #2
 8010bea:	f7ff bbdc 	b.w	80103a6 <_dtoa_r+0x2ae>
 8010bee:	2501      	movs	r5, #1
 8010bf0:	9521      	str	r5, [sp, #132]	; 0x84
 8010bf2:	9509      	str	r5, [sp, #36]	; 0x24
 8010bf4:	f7ff bbab 	b.w	801034e <_dtoa_r+0x256>
 8010bf8:	d103      	bne.n	8010c02 <_dtoa_r+0xb0a>
 8010bfa:	f019 0f01 	tst.w	r9, #1
 8010bfe:	f47f ae81 	bne.w	8010904 <_dtoa_r+0x80c>
 8010c02:	1e63      	subs	r3, r4, #1
 8010c04:	e001      	b.n	8010c0a <_dtoa_r+0xb12>
 8010c06:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8010c0a:	2a30      	cmp	r2, #48	; 0x30
 8010c0c:	f103 0401 	add.w	r4, r3, #1
 8010c10:	d0f9      	beq.n	8010c06 <_dtoa_r+0xb0e>
 8010c12:	e685      	b.n	8010920 <_dtoa_r+0x828>
 8010c14:	9a07      	ldr	r2, [sp, #28]
 8010c16:	3201      	adds	r2, #1
 8010c18:	9207      	str	r2, [sp, #28]
 8010c1a:	9a05      	ldr	r2, [sp, #20]
 8010c1c:	2331      	movs	r3, #49	; 0x31
 8010c1e:	7013      	strb	r3, [r2, #0]
 8010c20:	e67e      	b.n	8010920 <_dtoa_r+0x828>
 8010c22:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010c24:	2a00      	cmp	r2, #0
 8010c26:	f000 80c9 	beq.w	8010dbc <_dtoa_r+0xcc4>
 8010c2a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8010c2e:	9a06      	ldr	r2, [sp, #24]
 8010c30:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8010c32:	441a      	add	r2, r3
 8010c34:	9206      	str	r2, [sp, #24]
 8010c36:	9a08      	ldr	r2, [sp, #32]
 8010c38:	4614      	mov	r4, r2
 8010c3a:	441a      	add	r2, r3
 8010c3c:	9208      	str	r2, [sp, #32]
 8010c3e:	e59f      	b.n	8010780 <_dtoa_r+0x688>
 8010c40:	900e      	str	r0, [sp, #56]	; 0x38
 8010c42:	e5a9      	b.n	8010798 <_dtoa_r+0x6a0>
 8010c44:	f040 80be 	bne.w	8010dc4 <_dtoa_r+0xccc>
 8010c48:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8010c4c:	f04f 0802 	mov.w	r8, #2
 8010c50:	f7ff bbc3 	b.w	80103da <_dtoa_r+0x2e2>
 8010c54:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010c58:	2900      	cmp	r1, #0
 8010c5a:	f47f ae8f 	bne.w	801097c <_dtoa_r+0x884>
 8010c5e:	f3c2 0313 	ubfx	r3, r2, #0, #20
 8010c62:	2b00      	cmp	r3, #0
 8010c64:	f47f ae8a 	bne.w	801097c <_dtoa_r+0x884>
 8010c68:	4f6c      	ldr	r7, [pc, #432]	; (8010e1c <_dtoa_r+0xd24>)
 8010c6a:	4017      	ands	r7, r2
 8010c6c:	2f00      	cmp	r7, #0
 8010c6e:	f43f ade9 	beq.w	8010844 <_dtoa_r+0x74c>
 8010c72:	9b08      	ldr	r3, [sp, #32]
 8010c74:	3301      	adds	r3, #1
 8010c76:	9308      	str	r3, [sp, #32]
 8010c78:	9b06      	ldr	r3, [sp, #24]
 8010c7a:	3301      	adds	r3, #1
 8010c7c:	9306      	str	r3, [sp, #24]
 8010c7e:	2701      	movs	r7, #1
 8010c80:	e5e0      	b.n	8010844 <_dtoa_r+0x74c>
 8010c82:	2b00      	cmp	r3, #0
 8010c84:	4626      	mov	r6, r4
 8010c86:	464c      	mov	r4, r9
 8010c88:	4691      	mov	r9, r2
 8010c8a:	dd12      	ble.n	8010cb2 <_dtoa_r+0xbba>
 8010c8c:	4659      	mov	r1, fp
 8010c8e:	2201      	movs	r2, #1
 8010c90:	4650      	mov	r0, sl
 8010c92:	f000 fe5b 	bl	801194c <__lshift>
 8010c96:	4631      	mov	r1, r6
 8010c98:	4683      	mov	fp, r0
 8010c9a:	f000 feb1 	bl	8011a00 <__mcmp>
 8010c9e:	2800      	cmp	r0, #0
 8010ca0:	f340 8102 	ble.w	8010ea8 <_dtoa_r+0xdb0>
 8010ca4:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8010ca8:	f000 80ef 	beq.w	8010e8a <_dtoa_r+0xd92>
 8010cac:	9b02      	ldr	r3, [sp, #8]
 8010cae:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8010cb2:	9502      	str	r5, [sp, #8]
 8010cb4:	f887 9000 	strb.w	r9, [r7]
 8010cb8:	4645      	mov	r5, r8
 8010cba:	e631      	b.n	8010920 <_dtoa_r+0x828>
 8010cbc:	6869      	ldr	r1, [r5, #4]
 8010cbe:	4650      	mov	r0, sl
 8010cc0:	f000 fc8c 	bl	80115dc <_Balloc>
 8010cc4:	692b      	ldr	r3, [r5, #16]
 8010cc6:	3302      	adds	r3, #2
 8010cc8:	009a      	lsls	r2, r3, #2
 8010cca:	4604      	mov	r4, r0
 8010ccc:	f105 010c 	add.w	r1, r5, #12
 8010cd0:	300c      	adds	r0, #12
 8010cd2:	f7f6 ff1d 	bl	8007b10 <memcpy>
 8010cd6:	4621      	mov	r1, r4
 8010cd8:	2201      	movs	r2, #1
 8010cda:	4650      	mov	r0, sl
 8010cdc:	f000 fe36 	bl	801194c <__lshift>
 8010ce0:	4680      	mov	r8, r0
 8010ce2:	e66c      	b.n	80109be <_dtoa_r+0x8c6>
 8010ce4:	f8dd b008 	ldr.w	fp, [sp, #8]
 8010ce8:	f8dd a018 	ldr.w	sl, [sp, #24]
 8010cec:	e41f      	b.n	801052e <_dtoa_r+0x436>
 8010cee:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8010cf2:	1a9c      	subs	r4, r3, r2
 8010cf4:	e544      	b.n	8010780 <_dtoa_r+0x688>
 8010cf6:	2600      	movs	r6, #0
 8010cf8:	4635      	mov	r5, r6
 8010cfa:	e6e5      	b.n	8010ac8 <_dtoa_r+0x9d0>
 8010cfc:	2a39      	cmp	r2, #57	; 0x39
 8010cfe:	4626      	mov	r6, r4
 8010d00:	464c      	mov	r4, r9
 8010d02:	f000 80c2 	beq.w	8010e8a <_dtoa_r+0xd92>
 8010d06:	f102 0901 	add.w	r9, r2, #1
 8010d0a:	9502      	str	r5, [sp, #8]
 8010d0c:	f887 9000 	strb.w	r9, [r7]
 8010d10:	4645      	mov	r5, r8
 8010d12:	e605      	b.n	8010920 <_dtoa_r+0x828>
 8010d14:	4626      	mov	r6, r4
 8010d16:	9502      	str	r5, [sp, #8]
 8010d18:	464c      	mov	r4, r9
 8010d1a:	4645      	mov	r5, r8
 8010d1c:	4691      	mov	r9, r2
 8010d1e:	e5e3      	b.n	80108e8 <_dtoa_r+0x7f0>
 8010d20:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8010d24:	f7f7 fb36 	bl	8008394 <__aeabi_dmul>
 8010d28:	9b05      	ldr	r3, [sp, #20]
 8010d2a:	f1b8 0f01 	cmp.w	r8, #1
 8010d2e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010d32:	701d      	strb	r5, [r3, #0]
 8010d34:	d01b      	beq.n	8010d6e <_dtoa_r+0xc76>
 8010d36:	9b05      	ldr	r3, [sp, #20]
 8010d38:	4498      	add	r8, r3
 8010d3a:	2200      	movs	r2, #0
 8010d3c:	4b38      	ldr	r3, [pc, #224]	; (8010e20 <_dtoa_r+0xd28>)
 8010d3e:	4630      	mov	r0, r6
 8010d40:	4639      	mov	r1, r7
 8010d42:	f7f7 fb27 	bl	8008394 <__aeabi_dmul>
 8010d46:	460f      	mov	r7, r1
 8010d48:	4606      	mov	r6, r0
 8010d4a:	f7f7 fdd3 	bl	80088f4 <__aeabi_d2iz>
 8010d4e:	4605      	mov	r5, r0
 8010d50:	f7f7 fab6 	bl	80082c0 <__aeabi_i2d>
 8010d54:	3530      	adds	r5, #48	; 0x30
 8010d56:	4602      	mov	r2, r0
 8010d58:	460b      	mov	r3, r1
 8010d5a:	4630      	mov	r0, r6
 8010d5c:	4639      	mov	r1, r7
 8010d5e:	f7f7 f961 	bl	8008024 <__aeabi_dsub>
 8010d62:	f804 5b01 	strb.w	r5, [r4], #1
 8010d66:	45a0      	cmp	r8, r4
 8010d68:	4606      	mov	r6, r0
 8010d6a:	460f      	mov	r7, r1
 8010d6c:	d1e5      	bne.n	8010d3a <_dtoa_r+0xc42>
 8010d6e:	2200      	movs	r2, #0
 8010d70:	4b2c      	ldr	r3, [pc, #176]	; (8010e24 <_dtoa_r+0xd2c>)
 8010d72:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8010d76:	f7f7 f957 	bl	8008028 <__adddf3>
 8010d7a:	4632      	mov	r2, r6
 8010d7c:	463b      	mov	r3, r7
 8010d7e:	f7f7 fd7b 	bl	8008878 <__aeabi_dcmplt>
 8010d82:	2800      	cmp	r0, #0
 8010d84:	f040 808a 	bne.w	8010e9c <_dtoa_r+0xda4>
 8010d88:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8010d8c:	2000      	movs	r0, #0
 8010d8e:	4925      	ldr	r1, [pc, #148]	; (8010e24 <_dtoa_r+0xd2c>)
 8010d90:	f7f7 f948 	bl	8008024 <__aeabi_dsub>
 8010d94:	4632      	mov	r2, r6
 8010d96:	463b      	mov	r3, r7
 8010d98:	f7f7 fd8c 	bl	80088b4 <__aeabi_dcmpgt>
 8010d9c:	2800      	cmp	r0, #0
 8010d9e:	f43f abff 	beq.w	80105a0 <_dtoa_r+0x4a8>
 8010da2:	e000      	b.n	8010da6 <_dtoa_r+0xcae>
 8010da4:	4614      	mov	r4, r2
 8010da6:	f814 3c01 	ldrb.w	r3, [r4, #-1]
 8010daa:	2b30      	cmp	r3, #48	; 0x30
 8010dac:	f104 32ff 	add.w	r2, r4, #4294967295	; 0xffffffff
 8010db0:	d0f8      	beq.n	8010da4 <_dtoa_r+0xcac>
 8010db2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010db4:	3301      	adds	r3, #1
 8010db6:	9307      	str	r3, [sp, #28]
 8010db8:	f7ff bbb9 	b.w	801052e <_dtoa_r+0x436>
 8010dbc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8010dbe:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8010dc2:	e734      	b.n	8010c2e <_dtoa_r+0xb36>
 8010dc4:	9b07      	ldr	r3, [sp, #28]
 8010dc6:	425c      	negs	r4, r3
 8010dc8:	4b17      	ldr	r3, [pc, #92]	; (8010e28 <_dtoa_r+0xd30>)
 8010dca:	f004 020f 	and.w	r2, r4, #15
 8010dce:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8010dd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010dd6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8010dda:	f7f7 fadb 	bl	8008394 <__aeabi_dmul>
 8010dde:	1124      	asrs	r4, r4, #4
 8010de0:	4606      	mov	r6, r0
 8010de2:	460f      	mov	r7, r1
 8010de4:	f000 808e 	beq.w	8010f04 <_dtoa_r+0xe0c>
 8010de8:	4d10      	ldr	r5, [pc, #64]	; (8010e2c <_dtoa_r+0xd34>)
 8010dea:	2300      	movs	r3, #0
 8010dec:	f04f 0802 	mov.w	r8, #2
 8010df0:	07e2      	lsls	r2, r4, #31
 8010df2:	d506      	bpl.n	8010e02 <_dtoa_r+0xd0a>
 8010df4:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010df8:	f7f7 facc 	bl	8008394 <__aeabi_dmul>
 8010dfc:	f108 0801 	add.w	r8, r8, #1
 8010e00:	2301      	movs	r3, #1
 8010e02:	1064      	asrs	r4, r4, #1
 8010e04:	f105 0508 	add.w	r5, r5, #8
 8010e08:	d1f2      	bne.n	8010df0 <_dtoa_r+0xcf8>
 8010e0a:	2b00      	cmp	r3, #0
 8010e0c:	f43f aae5 	beq.w	80103da <_dtoa_r+0x2e2>
 8010e10:	4606      	mov	r6, r0
 8010e12:	460f      	mov	r7, r1
 8010e14:	f7ff bae1 	b.w	80103da <_dtoa_r+0x2e2>
 8010e18:	08013600 	.word	0x08013600
 8010e1c:	7ff00000 	.word	0x7ff00000
 8010e20:	40240000 	.word	0x40240000
 8010e24:	3fe00000 	.word	0x3fe00000
 8010e28:	08013638 	.word	0x08013638
 8010e2c:	08013610 	.word	0x08013610
 8010e30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010e32:	2b00      	cmp	r3, #0
 8010e34:	f43f ab8e 	beq.w	8010554 <_dtoa_r+0x45c>
 8010e38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e3a:	2b00      	cmp	r3, #0
 8010e3c:	f77f abb0 	ble.w	80105a0 <_dtoa_r+0x4a8>
 8010e40:	2200      	movs	r2, #0
 8010e42:	4b42      	ldr	r3, [pc, #264]	; (8010f4c <_dtoa_r+0xe54>)
 8010e44:	4630      	mov	r0, r6
 8010e46:	4639      	mov	r1, r7
 8010e48:	f7f7 faa4 	bl	8008394 <__aeabi_dmul>
 8010e4c:	4606      	mov	r6, r0
 8010e4e:	460f      	mov	r7, r1
 8010e50:	f108 0001 	add.w	r0, r8, #1
 8010e54:	f7f7 fa34 	bl	80082c0 <__aeabi_i2d>
 8010e58:	4632      	mov	r2, r6
 8010e5a:	463b      	mov	r3, r7
 8010e5c:	f7f7 fa9a 	bl	8008394 <__aeabi_dmul>
 8010e60:	2200      	movs	r2, #0
 8010e62:	4b3b      	ldr	r3, [pc, #236]	; (8010f50 <_dtoa_r+0xe58>)
 8010e64:	f7f7 f8e0 	bl	8008028 <__adddf3>
 8010e68:	9a07      	ldr	r2, [sp, #28]
 8010e6a:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 8010e6e:	3a01      	subs	r2, #1
 8010e70:	4604      	mov	r4, r0
 8010e72:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 8010e76:	9211      	str	r2, [sp, #68]	; 0x44
 8010e78:	f7ff bad0 	b.w	801041c <_dtoa_r+0x324>
 8010e7c:	9a07      	ldr	r2, [sp, #28]
 8010e7e:	3201      	adds	r2, #1
 8010e80:	9207      	str	r2, [sp, #28]
 8010e82:	2231      	movs	r2, #49	; 0x31
 8010e84:	701a      	strb	r2, [r3, #0]
 8010e86:	f7ff bb52 	b.w	801052e <_dtoa_r+0x436>
 8010e8a:	2239      	movs	r2, #57	; 0x39
 8010e8c:	9502      	str	r5, [sp, #8]
 8010e8e:	703a      	strb	r2, [r7, #0]
 8010e90:	4645      	mov	r5, r8
 8010e92:	e537      	b.n	8010904 <_dtoa_r+0x80c>
 8010e94:	2600      	movs	r6, #0
 8010e96:	4635      	mov	r5, r6
 8010e98:	f7ff bbaa 	b.w	80105f0 <_dtoa_r+0x4f8>
 8010e9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010e9e:	3301      	adds	r3, #1
 8010ea0:	9307      	str	r3, [sp, #28]
 8010ea2:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 8010ea6:	e43d      	b.n	8010724 <_dtoa_r+0x62c>
 8010ea8:	f47f af03 	bne.w	8010cb2 <_dtoa_r+0xbba>
 8010eac:	f019 0f01 	tst.w	r9, #1
 8010eb0:	f47f aef8 	bne.w	8010ca4 <_dtoa_r+0xbac>
 8010eb4:	e6fd      	b.n	8010cb2 <_dtoa_r+0xbba>
 8010eb6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010eb8:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 8010ebc:	3301      	adds	r3, #1
 8010ebe:	46ca      	mov	sl, r9
 8010ec0:	9307      	str	r3, [sp, #28]
 8010ec2:	e42f      	b.n	8010724 <_dtoa_r+0x62c>
 8010ec4:	46ca      	mov	sl, r9
 8010ec6:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 8010eca:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
 8010ece:	f7ff bb67 	b.w	80105a0 <_dtoa_r+0x4a8>
 8010ed2:	2a39      	cmp	r2, #57	; 0x39
 8010ed4:	4633      	mov	r3, r6
 8010ed6:	4691      	mov	r9, r2
 8010ed8:	4626      	mov	r6, r4
 8010eda:	f107 0401 	add.w	r4, r7, #1
 8010ede:	d0d4      	beq.n	8010e8a <_dtoa_r+0xd92>
 8010ee0:	2b00      	cmp	r3, #0
 8010ee2:	f73f aee3 	bgt.w	8010cac <_dtoa_r+0xbb4>
 8010ee6:	e6e4      	b.n	8010cb2 <_dtoa_r+0xbba>
 8010ee8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8010eea:	2b02      	cmp	r3, #2
 8010eec:	f77f ae66 	ble.w	8010bbc <_dtoa_r+0xac4>
 8010ef0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010ef2:	9309      	str	r3, [sp, #36]	; 0x24
 8010ef4:	f8cd 801c 	str.w	r8, [sp, #28]
 8010ef8:	e5d5      	b.n	8010aa6 <_dtoa_r+0x9ae>
 8010efa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8010efc:	2b02      	cmp	r3, #2
 8010efe:	dcf7      	bgt.n	8010ef0 <_dtoa_r+0xdf8>
 8010f00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010f02:	e554      	b.n	80109ae <_dtoa_r+0x8b6>
 8010f04:	f04f 0802 	mov.w	r8, #2
 8010f08:	f7ff ba67 	b.w	80103da <_dtoa_r+0x2e2>
 8010f0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010f0e:	3301      	adds	r3, #1
 8010f10:	9307      	str	r3, [sp, #28]
 8010f12:	e407      	b.n	8010724 <_dtoa_r+0x62c>
 8010f14:	4b0f      	ldr	r3, [pc, #60]	; (8010f54 <_dtoa_r+0xe5c>)
 8010f16:	9305      	str	r3, [sp, #20]
 8010f18:	f7ff b928 	b.w	801016c <_dtoa_r+0x74>
 8010f1c:	f43f aca9 	beq.w	8010872 <_dtoa_r+0x77a>
 8010f20:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
 8010f24:	e510      	b.n	8010948 <_dtoa_r+0x850>
 8010f26:	2400      	movs	r4, #0
 8010f28:	f8ca 4044 	str.w	r4, [sl, #68]	; 0x44
 8010f2c:	4621      	mov	r1, r4
 8010f2e:	4650      	mov	r0, sl
 8010f30:	f000 fb54 	bl	80115dc <_Balloc>
 8010f34:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010f38:	9309      	str	r3, [sp, #36]	; 0x24
 8010f3a:	9310      	str	r3, [sp, #64]	; 0x40
 8010f3c:	2301      	movs	r3, #1
 8010f3e:	9005      	str	r0, [sp, #20]
 8010f40:	9421      	str	r4, [sp, #132]	; 0x84
 8010f42:	f8ca 0040 	str.w	r0, [sl, #64]	; 0x40
 8010f46:	930c      	str	r3, [sp, #48]	; 0x30
 8010f48:	f7ff bb2e 	b.w	80105a8 <_dtoa_r+0x4b0>
 8010f4c:	40240000 	.word	0x40240000
 8010f50:	401c0000 	.word	0x401c0000
 8010f54:	08013604 	.word	0x08013604

08010f58 <__sflush_r>:
 8010f58:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
 8010f5c:	b29a      	uxth	r2, r3
 8010f5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010f62:	460c      	mov	r4, r1
 8010f64:	0711      	lsls	r1, r2, #28
 8010f66:	4680      	mov	r8, r0
 8010f68:	d448      	bmi.n	8010ffc <__sflush_r+0xa4>
 8010f6a:	6862      	ldr	r2, [r4, #4]
 8010f6c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8010f70:	2a00      	cmp	r2, #0
 8010f72:	81a3      	strh	r3, [r4, #12]
 8010f74:	dd5d      	ble.n	8011032 <__sflush_r+0xda>
 8010f76:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 8010f78:	2d00      	cmp	r5, #0
 8010f7a:	d057      	beq.n	801102c <__sflush_r+0xd4>
 8010f7c:	2200      	movs	r2, #0
 8010f7e:	b29b      	uxth	r3, r3
 8010f80:	f8d8 6000 	ldr.w	r6, [r8]
 8010f84:	69e1      	ldr	r1, [r4, #28]
 8010f86:	f8c8 2000 	str.w	r2, [r8]
 8010f8a:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
 8010f8e:	d154      	bne.n	801103a <__sflush_r+0xe2>
 8010f90:	2301      	movs	r3, #1
 8010f92:	4640      	mov	r0, r8
 8010f94:	47a8      	blx	r5
 8010f96:	1c43      	adds	r3, r0, #1
 8010f98:	d066      	beq.n	8011068 <__sflush_r+0x110>
 8010f9a:	89a3      	ldrh	r3, [r4, #12]
 8010f9c:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 8010f9e:	69e1      	ldr	r1, [r4, #28]
 8010fa0:	075f      	lsls	r7, r3, #29
 8010fa2:	d505      	bpl.n	8010fb0 <__sflush_r+0x58>
 8010fa4:	6862      	ldr	r2, [r4, #4]
 8010fa6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010fa8:	1a80      	subs	r0, r0, r2
 8010faa:	b10b      	cbz	r3, 8010fb0 <__sflush_r+0x58>
 8010fac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010fae:	1ac0      	subs	r0, r0, r3
 8010fb0:	4602      	mov	r2, r0
 8010fb2:	2300      	movs	r3, #0
 8010fb4:	4640      	mov	r0, r8
 8010fb6:	47a8      	blx	r5
 8010fb8:	1c45      	adds	r5, r0, #1
 8010fba:	d148      	bne.n	801104e <__sflush_r+0xf6>
 8010fbc:	f8d8 2000 	ldr.w	r2, [r8]
 8010fc0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010fc4:	2a00      	cmp	r2, #0
 8010fc6:	d05c      	beq.n	8011082 <__sflush_r+0x12a>
 8010fc8:	2a1d      	cmp	r2, #29
 8010fca:	d001      	beq.n	8010fd0 <__sflush_r+0x78>
 8010fcc:	2a16      	cmp	r2, #22
 8010fce:	d164      	bne.n	801109a <__sflush_r+0x142>
 8010fd0:	6922      	ldr	r2, [r4, #16]
 8010fd2:	2100      	movs	r1, #0
 8010fd4:	e9c4 2100 	strd	r2, r1, [r4]
 8010fd8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8010fdc:	81a3      	strh	r3, [r4, #12]
 8010fde:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010fe0:	f8c8 6000 	str.w	r6, [r8]
 8010fe4:	b311      	cbz	r1, 801102c <__sflush_r+0xd4>
 8010fe6:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8010fea:	4299      	cmp	r1, r3
 8010fec:	d002      	beq.n	8010ff4 <__sflush_r+0x9c>
 8010fee:	4640      	mov	r0, r8
 8010ff0:	f000 f954 	bl	801129c <_free_r>
 8010ff4:	2000      	movs	r0, #0
 8010ff6:	6320      	str	r0, [r4, #48]	; 0x30
 8010ff8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010ffc:	6926      	ldr	r6, [r4, #16]
 8010ffe:	b1ae      	cbz	r6, 801102c <__sflush_r+0xd4>
 8011000:	6825      	ldr	r5, [r4, #0]
 8011002:	6026      	str	r6, [r4, #0]
 8011004:	0791      	lsls	r1, r2, #30
 8011006:	bf0c      	ite	eq
 8011008:	6963      	ldreq	r3, [r4, #20]
 801100a:	2300      	movne	r3, #0
 801100c:	1bad      	subs	r5, r5, r6
 801100e:	60a3      	str	r3, [r4, #8]
 8011010:	e00a      	b.n	8011028 <__sflush_r+0xd0>
 8011012:	462b      	mov	r3, r5
 8011014:	4632      	mov	r2, r6
 8011016:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8011018:	69e1      	ldr	r1, [r4, #28]
 801101a:	4640      	mov	r0, r8
 801101c:	47b8      	blx	r7
 801101e:	2800      	cmp	r0, #0
 8011020:	eba5 0500 	sub.w	r5, r5, r0
 8011024:	4406      	add	r6, r0
 8011026:	dd0a      	ble.n	801103e <__sflush_r+0xe6>
 8011028:	2d00      	cmp	r5, #0
 801102a:	dcf2      	bgt.n	8011012 <__sflush_r+0xba>
 801102c:	2000      	movs	r0, #0
 801102e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011032:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8011034:	2a00      	cmp	r2, #0
 8011036:	dc9e      	bgt.n	8010f76 <__sflush_r+0x1e>
 8011038:	e7f8      	b.n	801102c <__sflush_r+0xd4>
 801103a:	6d20      	ldr	r0, [r4, #80]	; 0x50
 801103c:	e7b0      	b.n	8010fa0 <__sflush_r+0x48>
 801103e:	89a3      	ldrh	r3, [r4, #12]
 8011040:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8011044:	81a3      	strh	r3, [r4, #12]
 8011046:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801104a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801104e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8011052:	6922      	ldr	r2, [r4, #16]
 8011054:	6022      	str	r2, [r4, #0]
 8011056:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801105a:	2200      	movs	r2, #0
 801105c:	6062      	str	r2, [r4, #4]
 801105e:	04da      	lsls	r2, r3, #19
 8011060:	81a3      	strh	r3, [r4, #12]
 8011062:	d5bc      	bpl.n	8010fde <__sflush_r+0x86>
 8011064:	6520      	str	r0, [r4, #80]	; 0x50
 8011066:	e7ba      	b.n	8010fde <__sflush_r+0x86>
 8011068:	f8d8 3000 	ldr.w	r3, [r8]
 801106c:	2b00      	cmp	r3, #0
 801106e:	d094      	beq.n	8010f9a <__sflush_r+0x42>
 8011070:	2b1d      	cmp	r3, #29
 8011072:	d00f      	beq.n	8011094 <__sflush_r+0x13c>
 8011074:	2b16      	cmp	r3, #22
 8011076:	d00d      	beq.n	8011094 <__sflush_r+0x13c>
 8011078:	89a3      	ldrh	r3, [r4, #12]
 801107a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801107e:	81a3      	strh	r3, [r4, #12]
 8011080:	e7d5      	b.n	801102e <__sflush_r+0xd6>
 8011082:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8011086:	6921      	ldr	r1, [r4, #16]
 8011088:	81a3      	strh	r3, [r4, #12]
 801108a:	04db      	lsls	r3, r3, #19
 801108c:	e9c4 1200 	strd	r1, r2, [r4]
 8011090:	d5a5      	bpl.n	8010fde <__sflush_r+0x86>
 8011092:	e7e7      	b.n	8011064 <__sflush_r+0x10c>
 8011094:	f8c8 6000 	str.w	r6, [r8]
 8011098:	e7c8      	b.n	801102c <__sflush_r+0xd4>
 801109a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801109e:	81a3      	strh	r3, [r4, #12]
 80110a0:	e7c5      	b.n	801102e <__sflush_r+0xd6>
 80110a2:	bf00      	nop

080110a4 <_fflush_r>:
 80110a4:	b538      	push	{r3, r4, r5, lr}
 80110a6:	460d      	mov	r5, r1
 80110a8:	4604      	mov	r4, r0
 80110aa:	b108      	cbz	r0, 80110b0 <_fflush_r+0xc>
 80110ac:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80110ae:	b1a3      	cbz	r3, 80110da <_fflush_r+0x36>
 80110b0:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
 80110b4:	b1b8      	cbz	r0, 80110e6 <_fflush_r+0x42>
 80110b6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80110b8:	07db      	lsls	r3, r3, #31
 80110ba:	d401      	bmi.n	80110c0 <_fflush_r+0x1c>
 80110bc:	0581      	lsls	r1, r0, #22
 80110be:	d515      	bpl.n	80110ec <_fflush_r+0x48>
 80110c0:	4620      	mov	r0, r4
 80110c2:	4629      	mov	r1, r5
 80110c4:	f7ff ff48 	bl	8010f58 <__sflush_r>
 80110c8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80110ca:	07da      	lsls	r2, r3, #31
 80110cc:	4604      	mov	r4, r0
 80110ce:	d402      	bmi.n	80110d6 <_fflush_r+0x32>
 80110d0:	89ab      	ldrh	r3, [r5, #12]
 80110d2:	059b      	lsls	r3, r3, #22
 80110d4:	d50e      	bpl.n	80110f4 <_fflush_r+0x50>
 80110d6:	4620      	mov	r0, r4
 80110d8:	bd38      	pop	{r3, r4, r5, pc}
 80110da:	f000 f83f 	bl	801115c <__sinit>
 80110de:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
 80110e2:	2800      	cmp	r0, #0
 80110e4:	d1e7      	bne.n	80110b6 <_fflush_r+0x12>
 80110e6:	4604      	mov	r4, r0
 80110e8:	4620      	mov	r0, r4
 80110ea:	bd38      	pop	{r3, r4, r5, pc}
 80110ec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80110ee:	f7fc faf7 	bl	800d6e0 <__retarget_lock_acquire_recursive>
 80110f2:	e7e5      	b.n	80110c0 <_fflush_r+0x1c>
 80110f4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80110f6:	f7fc faf5 	bl	800d6e4 <__retarget_lock_release_recursive>
 80110fa:	4620      	mov	r0, r4
 80110fc:	bd38      	pop	{r3, r4, r5, pc}
 80110fe:	bf00      	nop

08011100 <std>:
 8011100:	b510      	push	{r4, lr}
 8011102:	2300      	movs	r3, #0
 8011104:	4604      	mov	r4, r0
 8011106:	8181      	strh	r1, [r0, #12]
 8011108:	81c2      	strh	r2, [r0, #14]
 801110a:	e9c0 3300 	strd	r3, r3, [r0]
 801110e:	6083      	str	r3, [r0, #8]
 8011110:	6643      	str	r3, [r0, #100]	; 0x64
 8011112:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8011116:	6183      	str	r3, [r0, #24]
 8011118:	4619      	mov	r1, r3
 801111a:	2208      	movs	r2, #8
 801111c:	305c      	adds	r0, #92	; 0x5c
 801111e:	f7fc fe43 	bl	800dda8 <memset>
 8011122:	4807      	ldr	r0, [pc, #28]	; (8011140 <std+0x40>)
 8011124:	4907      	ldr	r1, [pc, #28]	; (8011144 <std+0x44>)
 8011126:	4a08      	ldr	r2, [pc, #32]	; (8011148 <std+0x48>)
 8011128:	4b08      	ldr	r3, [pc, #32]	; (801114c <std+0x4c>)
 801112a:	62e3      	str	r3, [r4, #44]	; 0x2c
 801112c:	e9c4 4007 	strd	r4, r0, [r4, #28]
 8011130:	e9c4 1209 	strd	r1, r2, [r4, #36]	; 0x24
 8011134:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011138:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801113c:	f7fc bacc 	b.w	800d6d8 <__retarget_lock_init_recursive>
 8011140:	08011c4d 	.word	0x08011c4d
 8011144:	08011c71 	.word	0x08011c71
 8011148:	08011cb1 	.word	0x08011cb1
 801114c:	08011cd1 	.word	0x08011cd1

08011150 <_cleanup_r>:
 8011150:	4901      	ldr	r1, [pc, #4]	; (8011158 <_cleanup_r+0x8>)
 8011152:	f000 b99d 	b.w	8011490 <_fwalk_reent>
 8011156:	bf00      	nop
 8011158:	08011ea5 	.word	0x08011ea5

0801115c <__sinit>:
 801115c:	b510      	push	{r4, lr}
 801115e:	4604      	mov	r4, r0
 8011160:	4811      	ldr	r0, [pc, #68]	; (80111a8 <__sinit+0x4c>)
 8011162:	f7fc fabd 	bl	800d6e0 <__retarget_lock_acquire_recursive>
 8011166:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011168:	b9c2      	cbnz	r2, 801119c <__sinit+0x40>
 801116a:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
 801116e:	480f      	ldr	r0, [pc, #60]	; (80111ac <__sinit+0x50>)
 8011170:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
 8011174:	2103      	movs	r1, #3
 8011176:	e9c4 13b9 	strd	r1, r3, [r4, #740]	; 0x2e4
 801117a:	63e0      	str	r0, [r4, #60]	; 0x3c
 801117c:	2104      	movs	r1, #4
 801117e:	6860      	ldr	r0, [r4, #4]
 8011180:	f7ff ffbe 	bl	8011100 <std>
 8011184:	2201      	movs	r2, #1
 8011186:	2109      	movs	r1, #9
 8011188:	68a0      	ldr	r0, [r4, #8]
 801118a:	f7ff ffb9 	bl	8011100 <std>
 801118e:	2202      	movs	r2, #2
 8011190:	2112      	movs	r1, #18
 8011192:	68e0      	ldr	r0, [r4, #12]
 8011194:	f7ff ffb4 	bl	8011100 <std>
 8011198:	2301      	movs	r3, #1
 801119a:	63a3      	str	r3, [r4, #56]	; 0x38
 801119c:	4802      	ldr	r0, [pc, #8]	; (80111a8 <__sinit+0x4c>)
 801119e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80111a2:	f7fc ba9f 	b.w	800d6e4 <__retarget_lock_release_recursive>
 80111a6:	bf00      	nop
 80111a8:	200026bc 	.word	0x200026bc
 80111ac:	08011151 	.word	0x08011151

080111b0 <__sfp_lock_acquire>:
 80111b0:	4801      	ldr	r0, [pc, #4]	; (80111b8 <__sfp_lock_acquire+0x8>)
 80111b2:	f7fc ba95 	b.w	800d6e0 <__retarget_lock_acquire_recursive>
 80111b6:	bf00      	nop
 80111b8:	200026d0 	.word	0x200026d0

080111bc <__sfp_lock_release>:
 80111bc:	4801      	ldr	r0, [pc, #4]	; (80111c4 <__sfp_lock_release+0x8>)
 80111be:	f7fc ba91 	b.w	800d6e4 <__retarget_lock_release_recursive>
 80111c2:	bf00      	nop
 80111c4:	200026d0 	.word	0x200026d0

080111c8 <__libc_fini_array>:
 80111c8:	b538      	push	{r3, r4, r5, lr}
 80111ca:	4c0a      	ldr	r4, [pc, #40]	; (80111f4 <__libc_fini_array+0x2c>)
 80111cc:	4d0a      	ldr	r5, [pc, #40]	; (80111f8 <__libc_fini_array+0x30>)
 80111ce:	1b64      	subs	r4, r4, r5
 80111d0:	10a4      	asrs	r4, r4, #2
 80111d2:	d00a      	beq.n	80111ea <__libc_fini_array+0x22>
 80111d4:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 80111d8:	3b01      	subs	r3, #1
 80111da:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 80111de:	3c01      	subs	r4, #1
 80111e0:	f855 3904 	ldr.w	r3, [r5], #-4
 80111e4:	4798      	blx	r3
 80111e6:	2c00      	cmp	r4, #0
 80111e8:	d1f9      	bne.n	80111de <__libc_fini_array+0x16>
 80111ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80111ee:	f7f9 ba2f 	b.w	800a650 <_fini>
 80111f2:	bf00      	nop
 80111f4:	080001cc 	.word	0x080001cc
 80111f8:	080001cc 	.word	0x080001cc

080111fc <_malloc_trim_r>:
 80111fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80111fe:	4f24      	ldr	r7, [pc, #144]	; (8011290 <_malloc_trim_r+0x94>)
 8011200:	460c      	mov	r4, r1
 8011202:	4606      	mov	r6, r0
 8011204:	f7fc fe20 	bl	800de48 <__malloc_lock>
 8011208:	68bb      	ldr	r3, [r7, #8]
 801120a:	685d      	ldr	r5, [r3, #4]
 801120c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
 8011210:	310f      	adds	r1, #15
 8011212:	f025 0503 	bic.w	r5, r5, #3
 8011216:	4429      	add	r1, r5
 8011218:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
 801121c:	f021 010f 	bic.w	r1, r1, #15
 8011220:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
 8011224:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
 8011228:	db07      	blt.n	801123a <_malloc_trim_r+0x3e>
 801122a:	2100      	movs	r1, #0
 801122c:	4630      	mov	r0, r6
 801122e:	f7f9 fa4f 	bl	800a6d0 <_sbrk_r>
 8011232:	68bb      	ldr	r3, [r7, #8]
 8011234:	442b      	add	r3, r5
 8011236:	4298      	cmp	r0, r3
 8011238:	d004      	beq.n	8011244 <_malloc_trim_r+0x48>
 801123a:	4630      	mov	r0, r6
 801123c:	f7fc fe0a 	bl	800de54 <__malloc_unlock>
 8011240:	2000      	movs	r0, #0
 8011242:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011244:	4261      	negs	r1, r4
 8011246:	4630      	mov	r0, r6
 8011248:	f7f9 fa42 	bl	800a6d0 <_sbrk_r>
 801124c:	3001      	adds	r0, #1
 801124e:	d00d      	beq.n	801126c <_malloc_trim_r+0x70>
 8011250:	4b10      	ldr	r3, [pc, #64]	; (8011294 <_malloc_trim_r+0x98>)
 8011252:	68ba      	ldr	r2, [r7, #8]
 8011254:	6819      	ldr	r1, [r3, #0]
 8011256:	1b2d      	subs	r5, r5, r4
 8011258:	f045 0501 	orr.w	r5, r5, #1
 801125c:	4630      	mov	r0, r6
 801125e:	1b09      	subs	r1, r1, r4
 8011260:	6055      	str	r5, [r2, #4]
 8011262:	6019      	str	r1, [r3, #0]
 8011264:	f7fc fdf6 	bl	800de54 <__malloc_unlock>
 8011268:	2001      	movs	r0, #1
 801126a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801126c:	2100      	movs	r1, #0
 801126e:	4630      	mov	r0, r6
 8011270:	f7f9 fa2e 	bl	800a6d0 <_sbrk_r>
 8011274:	68ba      	ldr	r2, [r7, #8]
 8011276:	1a83      	subs	r3, r0, r2
 8011278:	2b0f      	cmp	r3, #15
 801127a:	ddde      	ble.n	801123a <_malloc_trim_r+0x3e>
 801127c:	4c06      	ldr	r4, [pc, #24]	; (8011298 <_malloc_trim_r+0x9c>)
 801127e:	4905      	ldr	r1, [pc, #20]	; (8011294 <_malloc_trim_r+0x98>)
 8011280:	6824      	ldr	r4, [r4, #0]
 8011282:	f043 0301 	orr.w	r3, r3, #1
 8011286:	1b00      	subs	r0, r0, r4
 8011288:	6053      	str	r3, [r2, #4]
 801128a:	6008      	str	r0, [r1, #0]
 801128c:	e7d5      	b.n	801123a <_malloc_trim_r+0x3e>
 801128e:	bf00      	nop
 8011290:	20000c38 	.word	0x20000c38
 8011294:	2000267c 	.word	0x2000267c
 8011298:	20001040 	.word	0x20001040

0801129c <_free_r>:
 801129c:	2900      	cmp	r1, #0
 801129e:	d05e      	beq.n	801135e <_free_r+0xc2>
 80112a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80112a2:	460f      	mov	r7, r1
 80112a4:	4606      	mov	r6, r0
 80112a6:	f7fc fdcf 	bl	800de48 <__malloc_lock>
 80112aa:	f857 cc04 	ldr.w	ip, [r7, #-4]
 80112ae:	4d75      	ldr	r5, [pc, #468]	; (8011484 <_free_r+0x1e8>)
 80112b0:	f02c 0301 	bic.w	r3, ip, #1
 80112b4:	f1a7 0008 	sub.w	r0, r7, #8
 80112b8:	18c2      	adds	r2, r0, r3
 80112ba:	68a9      	ldr	r1, [r5, #8]
 80112bc:	6854      	ldr	r4, [r2, #4]
 80112be:	4291      	cmp	r1, r2
 80112c0:	f024 0403 	bic.w	r4, r4, #3
 80112c4:	f000 8084 	beq.w	80113d0 <_free_r+0x134>
 80112c8:	f01c 0f01 	tst.w	ip, #1
 80112cc:	6054      	str	r4, [r2, #4]
 80112ce:	eb02 0104 	add.w	r1, r2, r4
 80112d2:	d133      	bne.n	801133c <_free_r+0xa0>
 80112d4:	f857 ec08 	ldr.w	lr, [r7, #-8]
 80112d8:	6849      	ldr	r1, [r1, #4]
 80112da:	eba0 000e 	sub.w	r0, r0, lr
 80112de:	f105 0c08 	add.w	ip, r5, #8
 80112e2:	6887      	ldr	r7, [r0, #8]
 80112e4:	4567      	cmp	r7, ip
 80112e6:	4473      	add	r3, lr
 80112e8:	f001 0101 	and.w	r1, r1, #1
 80112ec:	d060      	beq.n	80113b0 <_free_r+0x114>
 80112ee:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 80112f2:	f8c7 e00c 	str.w	lr, [r7, #12]
 80112f6:	f8ce 7008 	str.w	r7, [lr, #8]
 80112fa:	2900      	cmp	r1, #0
 80112fc:	f000 808d 	beq.w	801141a <_free_r+0x17e>
 8011300:	f043 0101 	orr.w	r1, r3, #1
 8011304:	6041      	str	r1, [r0, #4]
 8011306:	6013      	str	r3, [r2, #0]
 8011308:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801130c:	d230      	bcs.n	8011370 <_free_r+0xd4>
 801130e:	08db      	lsrs	r3, r3, #3
 8011310:	1c59      	adds	r1, r3, #1
 8011312:	686c      	ldr	r4, [r5, #4]
 8011314:	109a      	asrs	r2, r3, #2
 8011316:	2301      	movs	r3, #1
 8011318:	4093      	lsls	r3, r2
 801131a:	4323      	orrs	r3, r4
 801131c:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 8011320:	f855 4031 	ldr.w	r4, [r5, r1, lsl #3]
 8011324:	606b      	str	r3, [r5, #4]
 8011326:	3a08      	subs	r2, #8
 8011328:	e9c0 4202 	strd	r4, r2, [r0, #8]
 801132c:	f845 0031 	str.w	r0, [r5, r1, lsl #3]
 8011330:	60e0      	str	r0, [r4, #12]
 8011332:	4630      	mov	r0, r6
 8011334:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8011338:	f7fc bd8c 	b.w	800de54 <__malloc_unlock>
 801133c:	6849      	ldr	r1, [r1, #4]
 801133e:	07c9      	lsls	r1, r1, #31
 8011340:	d40e      	bmi.n	8011360 <_free_r+0xc4>
 8011342:	4423      	add	r3, r4
 8011344:	f105 0c08 	add.w	ip, r5, #8
 8011348:	6891      	ldr	r1, [r2, #8]
 801134a:	4561      	cmp	r1, ip
 801134c:	f043 0401 	orr.w	r4, r3, #1
 8011350:	d06b      	beq.n	801142a <_free_r+0x18e>
 8011352:	68d2      	ldr	r2, [r2, #12]
 8011354:	60ca      	str	r2, [r1, #12]
 8011356:	6091      	str	r1, [r2, #8]
 8011358:	6044      	str	r4, [r0, #4]
 801135a:	50c3      	str	r3, [r0, r3]
 801135c:	e7d4      	b.n	8011308 <_free_r+0x6c>
 801135e:	4770      	bx	lr
 8011360:	f043 0101 	orr.w	r1, r3, #1
 8011364:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011368:	f847 1c04 	str.w	r1, [r7, #-4]
 801136c:	6013      	str	r3, [r2, #0]
 801136e:	d3ce      	bcc.n	801130e <_free_r+0x72>
 8011370:	0a5a      	lsrs	r2, r3, #9
 8011372:	2a04      	cmp	r2, #4
 8011374:	d846      	bhi.n	8011404 <_free_r+0x168>
 8011376:	099a      	lsrs	r2, r3, #6
 8011378:	f102 0739 	add.w	r7, r2, #57	; 0x39
 801137c:	00ff      	lsls	r7, r7, #3
 801137e:	f102 0138 	add.w	r1, r2, #56	; 0x38
 8011382:	19ec      	adds	r4, r5, r7
 8011384:	59ea      	ldr	r2, [r5, r7]
 8011386:	3c08      	subs	r4, #8
 8011388:	4294      	cmp	r4, r2
 801138a:	d055      	beq.n	8011438 <_free_r+0x19c>
 801138c:	6851      	ldr	r1, [r2, #4]
 801138e:	f021 0103 	bic.w	r1, r1, #3
 8011392:	4299      	cmp	r1, r3
 8011394:	d902      	bls.n	801139c <_free_r+0x100>
 8011396:	6892      	ldr	r2, [r2, #8]
 8011398:	4294      	cmp	r4, r2
 801139a:	d1f7      	bne.n	801138c <_free_r+0xf0>
 801139c:	68d4      	ldr	r4, [r2, #12]
 801139e:	e9c0 2402 	strd	r2, r4, [r0, #8]
 80113a2:	60a0      	str	r0, [r4, #8]
 80113a4:	60d0      	str	r0, [r2, #12]
 80113a6:	4630      	mov	r0, r6
 80113a8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80113ac:	f7fc bd52 	b.w	800de54 <__malloc_unlock>
 80113b0:	2900      	cmp	r1, #0
 80113b2:	d162      	bne.n	801147a <_free_r+0x1de>
 80113b4:	e9d2 2102 	ldrd	r2, r1, [r2, #8]
 80113b8:	4423      	add	r3, r4
 80113ba:	f043 0401 	orr.w	r4, r3, #1
 80113be:	60d1      	str	r1, [r2, #12]
 80113c0:	608a      	str	r2, [r1, #8]
 80113c2:	6044      	str	r4, [r0, #4]
 80113c4:	50c3      	str	r3, [r0, r3]
 80113c6:	4630      	mov	r0, r6
 80113c8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80113cc:	f7fc bd42 	b.w	800de54 <__malloc_unlock>
 80113d0:	f01c 0f01 	tst.w	ip, #1
 80113d4:	4423      	add	r3, r4
 80113d6:	d107      	bne.n	80113e8 <_free_r+0x14c>
 80113d8:	f857 2c08 	ldr.w	r2, [r7, #-8]
 80113dc:	1a80      	subs	r0, r0, r2
 80113de:	4413      	add	r3, r2
 80113e0:	e9d0 1202 	ldrd	r1, r2, [r0, #8]
 80113e4:	60ca      	str	r2, [r1, #12]
 80113e6:	6091      	str	r1, [r2, #8]
 80113e8:	4a27      	ldr	r2, [pc, #156]	; (8011488 <_free_r+0x1ec>)
 80113ea:	6812      	ldr	r2, [r2, #0]
 80113ec:	f043 0101 	orr.w	r1, r3, #1
 80113f0:	429a      	cmp	r2, r3
 80113f2:	6041      	str	r1, [r0, #4]
 80113f4:	60a8      	str	r0, [r5, #8]
 80113f6:	d89c      	bhi.n	8011332 <_free_r+0x96>
 80113f8:	4b24      	ldr	r3, [pc, #144]	; (801148c <_free_r+0x1f0>)
 80113fa:	4630      	mov	r0, r6
 80113fc:	6819      	ldr	r1, [r3, #0]
 80113fe:	f7ff fefd 	bl	80111fc <_malloc_trim_r>
 8011402:	e796      	b.n	8011332 <_free_r+0x96>
 8011404:	2a14      	cmp	r2, #20
 8011406:	d90a      	bls.n	801141e <_free_r+0x182>
 8011408:	2a54      	cmp	r2, #84	; 0x54
 801140a:	d81d      	bhi.n	8011448 <_free_r+0x1ac>
 801140c:	0b1a      	lsrs	r2, r3, #12
 801140e:	f102 076f 	add.w	r7, r2, #111	; 0x6f
 8011412:	00ff      	lsls	r7, r7, #3
 8011414:	f102 016e 	add.w	r1, r2, #110	; 0x6e
 8011418:	e7b3      	b.n	8011382 <_free_r+0xe6>
 801141a:	4423      	add	r3, r4
 801141c:	e794      	b.n	8011348 <_free_r+0xac>
 801141e:	f102 075c 	add.w	r7, r2, #92	; 0x5c
 8011422:	00ff      	lsls	r7, r7, #3
 8011424:	f102 015b 	add.w	r1, r2, #91	; 0x5b
 8011428:	e7ab      	b.n	8011382 <_free_r+0xe6>
 801142a:	e9c5 0004 	strd	r0, r0, [r5, #16]
 801142e:	e9c0 cc02 	strd	ip, ip, [r0, #8]
 8011432:	6044      	str	r4, [r0, #4]
 8011434:	50c3      	str	r3, [r0, r3]
 8011436:	e77c      	b.n	8011332 <_free_r+0x96>
 8011438:	686b      	ldr	r3, [r5, #4]
 801143a:	1089      	asrs	r1, r1, #2
 801143c:	2701      	movs	r7, #1
 801143e:	fa07 f101 	lsl.w	r1, r7, r1
 8011442:	4319      	orrs	r1, r3
 8011444:	6069      	str	r1, [r5, #4]
 8011446:	e7aa      	b.n	801139e <_free_r+0x102>
 8011448:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 801144c:	d806      	bhi.n	801145c <_free_r+0x1c0>
 801144e:	0bda      	lsrs	r2, r3, #15
 8011450:	f102 0778 	add.w	r7, r2, #120	; 0x78
 8011454:	00ff      	lsls	r7, r7, #3
 8011456:	f102 0177 	add.w	r1, r2, #119	; 0x77
 801145a:	e792      	b.n	8011382 <_free_r+0xe6>
 801145c:	f240 5154 	movw	r1, #1364	; 0x554
 8011460:	428a      	cmp	r2, r1
 8011462:	d806      	bhi.n	8011472 <_free_r+0x1d6>
 8011464:	0c9a      	lsrs	r2, r3, #18
 8011466:	f102 077d 	add.w	r7, r2, #125	; 0x7d
 801146a:	00ff      	lsls	r7, r7, #3
 801146c:	f102 017c 	add.w	r1, r2, #124	; 0x7c
 8011470:	e787      	b.n	8011382 <_free_r+0xe6>
 8011472:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
 8011476:	217e      	movs	r1, #126	; 0x7e
 8011478:	e783      	b.n	8011382 <_free_r+0xe6>
 801147a:	f043 0101 	orr.w	r1, r3, #1
 801147e:	6041      	str	r1, [r0, #4]
 8011480:	6013      	str	r3, [r2, #0]
 8011482:	e756      	b.n	8011332 <_free_r+0x96>
 8011484:	20000c38 	.word	0x20000c38
 8011488:	20001044 	.word	0x20001044
 801148c:	200026ac 	.word	0x200026ac

08011490 <_fwalk_reent>:
 8011490:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011494:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
 8011498:	d01f      	beq.n	80114da <_fwalk_reent+0x4a>
 801149a:	4688      	mov	r8, r1
 801149c:	4606      	mov	r6, r0
 801149e:	f04f 0900 	mov.w	r9, #0
 80114a2:	e9d7 5401 	ldrd	r5, r4, [r7, #4]
 80114a6:	3d01      	subs	r5, #1
 80114a8:	d411      	bmi.n	80114ce <_fwalk_reent+0x3e>
 80114aa:	89a3      	ldrh	r3, [r4, #12]
 80114ac:	2b01      	cmp	r3, #1
 80114ae:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 80114b2:	d908      	bls.n	80114c6 <_fwalk_reent+0x36>
 80114b4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80114b8:	3301      	adds	r3, #1
 80114ba:	4621      	mov	r1, r4
 80114bc:	4630      	mov	r0, r6
 80114be:	d002      	beq.n	80114c6 <_fwalk_reent+0x36>
 80114c0:	47c0      	blx	r8
 80114c2:	ea49 0900 	orr.w	r9, r9, r0
 80114c6:	1c6b      	adds	r3, r5, #1
 80114c8:	f104 0468 	add.w	r4, r4, #104	; 0x68
 80114cc:	d1ed      	bne.n	80114aa <_fwalk_reent+0x1a>
 80114ce:	683f      	ldr	r7, [r7, #0]
 80114d0:	2f00      	cmp	r7, #0
 80114d2:	d1e6      	bne.n	80114a2 <_fwalk_reent+0x12>
 80114d4:	4648      	mov	r0, r9
 80114d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80114da:	46b9      	mov	r9, r7
 80114dc:	4648      	mov	r0, r9
 80114de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80114e2:	bf00      	nop

080114e4 <_localeconv_r>:
 80114e4:	4800      	ldr	r0, [pc, #0]	; (80114e8 <_localeconv_r+0x4>)
 80114e6:	4770      	bx	lr
 80114e8:	2000113c 	.word	0x2000113c

080114ec <__swhatbuf_r>:
 80114ec:	b570      	push	{r4, r5, r6, lr}
 80114ee:	460c      	mov	r4, r1
 80114f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80114f4:	2900      	cmp	r1, #0
 80114f6:	b096      	sub	sp, #88	; 0x58
 80114f8:	4615      	mov	r5, r2
 80114fa:	461e      	mov	r6, r3
 80114fc:	db14      	blt.n	8011528 <__swhatbuf_r+0x3c>
 80114fe:	466a      	mov	r2, sp
 8011500:	f7f9 f8d6 	bl	800a6b0 <_fstat_r>
 8011504:	2800      	cmp	r0, #0
 8011506:	db0f      	blt.n	8011528 <__swhatbuf_r+0x3c>
 8011508:	9a01      	ldr	r2, [sp, #4]
 801150a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801150e:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
 8011512:	fab2 f282 	clz	r2, r2
 8011516:	0952      	lsrs	r2, r2, #5
 8011518:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801151c:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8011520:	6032      	str	r2, [r6, #0]
 8011522:	602b      	str	r3, [r5, #0]
 8011524:	b016      	add	sp, #88	; 0x58
 8011526:	bd70      	pop	{r4, r5, r6, pc}
 8011528:	89a2      	ldrh	r2, [r4, #12]
 801152a:	2300      	movs	r3, #0
 801152c:	f012 0080 	ands.w	r0, r2, #128	; 0x80
 8011530:	6033      	str	r3, [r6, #0]
 8011532:	d004      	beq.n	801153e <__swhatbuf_r+0x52>
 8011534:	2240      	movs	r2, #64	; 0x40
 8011536:	4618      	mov	r0, r3
 8011538:	602a      	str	r2, [r5, #0]
 801153a:	b016      	add	sp, #88	; 0x58
 801153c:	bd70      	pop	{r4, r5, r6, pc}
 801153e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011542:	602b      	str	r3, [r5, #0]
 8011544:	b016      	add	sp, #88	; 0x58
 8011546:	bd70      	pop	{r4, r5, r6, pc}

08011548 <__smakebuf_r>:
 8011548:	898a      	ldrh	r2, [r1, #12]
 801154a:	0792      	lsls	r2, r2, #30
 801154c:	460b      	mov	r3, r1
 801154e:	d506      	bpl.n	801155e <__smakebuf_r+0x16>
 8011550:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8011554:	2101      	movs	r1, #1
 8011556:	601a      	str	r2, [r3, #0]
 8011558:	e9c3 2104 	strd	r2, r1, [r3, #16]
 801155c:	4770      	bx	lr
 801155e:	b570      	push	{r4, r5, r6, lr}
 8011560:	b082      	sub	sp, #8
 8011562:	ab01      	add	r3, sp, #4
 8011564:	466a      	mov	r2, sp
 8011566:	460c      	mov	r4, r1
 8011568:	4606      	mov	r6, r0
 801156a:	f7ff ffbf 	bl	80114ec <__swhatbuf_r>
 801156e:	9900      	ldr	r1, [sp, #0]
 8011570:	4605      	mov	r5, r0
 8011572:	4630      	mov	r0, r6
 8011574:	f7fc f8c8 	bl	800d708 <_malloc_r>
 8011578:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801157c:	b170      	cbz	r0, 801159c <__smakebuf_r+0x54>
 801157e:	4916      	ldr	r1, [pc, #88]	; (80115d8 <__smakebuf_r+0x90>)
 8011580:	63f1      	str	r1, [r6, #60]	; 0x3c
 8011582:	9a01      	ldr	r2, [sp, #4]
 8011584:	9900      	ldr	r1, [sp, #0]
 8011586:	6020      	str	r0, [r4, #0]
 8011588:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801158c:	81a3      	strh	r3, [r4, #12]
 801158e:	e9c4 0104 	strd	r0, r1, [r4, #16]
 8011592:	b98a      	cbnz	r2, 80115b8 <__smakebuf_r+0x70>
 8011594:	432b      	orrs	r3, r5
 8011596:	81a3      	strh	r3, [r4, #12]
 8011598:	b002      	add	sp, #8
 801159a:	bd70      	pop	{r4, r5, r6, pc}
 801159c:	059a      	lsls	r2, r3, #22
 801159e:	d4fb      	bmi.n	8011598 <__smakebuf_r+0x50>
 80115a0:	f023 0303 	bic.w	r3, r3, #3
 80115a4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80115a8:	f043 0302 	orr.w	r3, r3, #2
 80115ac:	2101      	movs	r1, #1
 80115ae:	81a3      	strh	r3, [r4, #12]
 80115b0:	6022      	str	r2, [r4, #0]
 80115b2:	e9c4 2104 	strd	r2, r1, [r4, #16]
 80115b6:	e7ef      	b.n	8011598 <__smakebuf_r+0x50>
 80115b8:	4630      	mov	r0, r6
 80115ba:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80115be:	f7f9 f86f 	bl	800a6a0 <_isatty_r>
 80115c2:	b910      	cbnz	r0, 80115ca <__smakebuf_r+0x82>
 80115c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80115c8:	e7e4      	b.n	8011594 <__smakebuf_r+0x4c>
 80115ca:	89a3      	ldrh	r3, [r4, #12]
 80115cc:	f023 0303 	bic.w	r3, r3, #3
 80115d0:	f043 0301 	orr.w	r3, r3, #1
 80115d4:	b21b      	sxth	r3, r3
 80115d6:	e7dd      	b.n	8011594 <__smakebuf_r+0x4c>
 80115d8:	08011151 	.word	0x08011151

080115dc <_Balloc>:
 80115dc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80115de:	b570      	push	{r4, r5, r6, lr}
 80115e0:	4605      	mov	r5, r0
 80115e2:	460c      	mov	r4, r1
 80115e4:	b14b      	cbz	r3, 80115fa <_Balloc+0x1e>
 80115e6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80115ea:	b180      	cbz	r0, 801160e <_Balloc+0x32>
 80115ec:	6802      	ldr	r2, [r0, #0]
 80115ee:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 80115f2:	2300      	movs	r3, #0
 80115f4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80115f8:	bd70      	pop	{r4, r5, r6, pc}
 80115fa:	2221      	movs	r2, #33	; 0x21
 80115fc:	2104      	movs	r1, #4
 80115fe:	f000 fc21 	bl	8011e44 <_calloc_r>
 8011602:	4603      	mov	r3, r0
 8011604:	64e8      	str	r0, [r5, #76]	; 0x4c
 8011606:	2800      	cmp	r0, #0
 8011608:	d1ed      	bne.n	80115e6 <_Balloc+0xa>
 801160a:	2000      	movs	r0, #0
 801160c:	bd70      	pop	{r4, r5, r6, pc}
 801160e:	2101      	movs	r1, #1
 8011610:	fa01 f604 	lsl.w	r6, r1, r4
 8011614:	1d72      	adds	r2, r6, #5
 8011616:	4628      	mov	r0, r5
 8011618:	0092      	lsls	r2, r2, #2
 801161a:	f000 fc13 	bl	8011e44 <_calloc_r>
 801161e:	2800      	cmp	r0, #0
 8011620:	d0f3      	beq.n	801160a <_Balloc+0x2e>
 8011622:	e9c0 4601 	strd	r4, r6, [r0, #4]
 8011626:	e7e4      	b.n	80115f2 <_Balloc+0x16>

08011628 <_Bfree>:
 8011628:	b131      	cbz	r1, 8011638 <_Bfree+0x10>
 801162a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 801162c:	684a      	ldr	r2, [r1, #4]
 801162e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8011632:	6008      	str	r0, [r1, #0]
 8011634:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8011638:	4770      	bx	lr
 801163a:	bf00      	nop

0801163c <__multadd>:
 801163c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801163e:	690c      	ldr	r4, [r1, #16]
 8011640:	b083      	sub	sp, #12
 8011642:	460d      	mov	r5, r1
 8011644:	4606      	mov	r6, r0
 8011646:	f101 0c14 	add.w	ip, r1, #20
 801164a:	2700      	movs	r7, #0
 801164c:	f8dc 0000 	ldr.w	r0, [ip]
 8011650:	b281      	uxth	r1, r0
 8011652:	fb02 3301 	mla	r3, r2, r1, r3
 8011656:	0c19      	lsrs	r1, r3, #16
 8011658:	0c00      	lsrs	r0, r0, #16
 801165a:	fb02 1000 	mla	r0, r2, r0, r1
 801165e:	b29b      	uxth	r3, r3
 8011660:	3701      	adds	r7, #1
 8011662:	eb03 4300 	add.w	r3, r3, r0, lsl #16
 8011666:	42bc      	cmp	r4, r7
 8011668:	f84c 3b04 	str.w	r3, [ip], #4
 801166c:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8011670:	dcec      	bgt.n	801164c <__multadd+0x10>
 8011672:	b13b      	cbz	r3, 8011684 <__multadd+0x48>
 8011674:	68aa      	ldr	r2, [r5, #8]
 8011676:	42a2      	cmp	r2, r4
 8011678:	dd07      	ble.n	801168a <__multadd+0x4e>
 801167a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
 801167e:	3401      	adds	r4, #1
 8011680:	6153      	str	r3, [r2, #20]
 8011682:	612c      	str	r4, [r5, #16]
 8011684:	4628      	mov	r0, r5
 8011686:	b003      	add	sp, #12
 8011688:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801168a:	6869      	ldr	r1, [r5, #4]
 801168c:	9301      	str	r3, [sp, #4]
 801168e:	3101      	adds	r1, #1
 8011690:	4630      	mov	r0, r6
 8011692:	f7ff ffa3 	bl	80115dc <_Balloc>
 8011696:	692a      	ldr	r2, [r5, #16]
 8011698:	3202      	adds	r2, #2
 801169a:	f105 010c 	add.w	r1, r5, #12
 801169e:	4607      	mov	r7, r0
 80116a0:	0092      	lsls	r2, r2, #2
 80116a2:	300c      	adds	r0, #12
 80116a4:	f7f6 fa34 	bl	8007b10 <memcpy>
 80116a8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
 80116aa:	6869      	ldr	r1, [r5, #4]
 80116ac:	9b01      	ldr	r3, [sp, #4]
 80116ae:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 80116b2:	6028      	str	r0, [r5, #0]
 80116b4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
 80116b8:	463d      	mov	r5, r7
 80116ba:	eb05 0284 	add.w	r2, r5, r4, lsl #2
 80116be:	3401      	adds	r4, #1
 80116c0:	6153      	str	r3, [r2, #20]
 80116c2:	612c      	str	r4, [r5, #16]
 80116c4:	e7de      	b.n	8011684 <__multadd+0x48>
 80116c6:	bf00      	nop

080116c8 <__hi0bits>:
 80116c8:	0c02      	lsrs	r2, r0, #16
 80116ca:	0412      	lsls	r2, r2, #16
 80116cc:	4603      	mov	r3, r0
 80116ce:	b9ca      	cbnz	r2, 8011704 <__hi0bits+0x3c>
 80116d0:	0403      	lsls	r3, r0, #16
 80116d2:	2010      	movs	r0, #16
 80116d4:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80116d8:	bf04      	itt	eq
 80116da:	021b      	lsleq	r3, r3, #8
 80116dc:	3008      	addeq	r0, #8
 80116de:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80116e2:	bf04      	itt	eq
 80116e4:	011b      	lsleq	r3, r3, #4
 80116e6:	3004      	addeq	r0, #4
 80116e8:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80116ec:	bf04      	itt	eq
 80116ee:	009b      	lsleq	r3, r3, #2
 80116f0:	3002      	addeq	r0, #2
 80116f2:	2b00      	cmp	r3, #0
 80116f4:	db05      	blt.n	8011702 <__hi0bits+0x3a>
 80116f6:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 80116fa:	f100 0001 	add.w	r0, r0, #1
 80116fe:	bf08      	it	eq
 8011700:	2020      	moveq	r0, #32
 8011702:	4770      	bx	lr
 8011704:	2000      	movs	r0, #0
 8011706:	e7e5      	b.n	80116d4 <__hi0bits+0xc>

08011708 <__lo0bits>:
 8011708:	6803      	ldr	r3, [r0, #0]
 801170a:	f013 0207 	ands.w	r2, r3, #7
 801170e:	4601      	mov	r1, r0
 8011710:	d007      	beq.n	8011722 <__lo0bits+0x1a>
 8011712:	07da      	lsls	r2, r3, #31
 8011714:	d420      	bmi.n	8011758 <__lo0bits+0x50>
 8011716:	0798      	lsls	r0, r3, #30
 8011718:	d522      	bpl.n	8011760 <__lo0bits+0x58>
 801171a:	085b      	lsrs	r3, r3, #1
 801171c:	600b      	str	r3, [r1, #0]
 801171e:	2001      	movs	r0, #1
 8011720:	4770      	bx	lr
 8011722:	b298      	uxth	r0, r3
 8011724:	b9b0      	cbnz	r0, 8011754 <__lo0bits+0x4c>
 8011726:	0c1b      	lsrs	r3, r3, #16
 8011728:	2010      	movs	r0, #16
 801172a:	f013 0fff 	tst.w	r3, #255	; 0xff
 801172e:	bf04      	itt	eq
 8011730:	0a1b      	lsreq	r3, r3, #8
 8011732:	3008      	addeq	r0, #8
 8011734:	071a      	lsls	r2, r3, #28
 8011736:	bf04      	itt	eq
 8011738:	091b      	lsreq	r3, r3, #4
 801173a:	3004      	addeq	r0, #4
 801173c:	079a      	lsls	r2, r3, #30
 801173e:	bf04      	itt	eq
 8011740:	089b      	lsreq	r3, r3, #2
 8011742:	3002      	addeq	r0, #2
 8011744:	07da      	lsls	r2, r3, #31
 8011746:	d403      	bmi.n	8011750 <__lo0bits+0x48>
 8011748:	085b      	lsrs	r3, r3, #1
 801174a:	f100 0001 	add.w	r0, r0, #1
 801174e:	d005      	beq.n	801175c <__lo0bits+0x54>
 8011750:	600b      	str	r3, [r1, #0]
 8011752:	4770      	bx	lr
 8011754:	4610      	mov	r0, r2
 8011756:	e7e8      	b.n	801172a <__lo0bits+0x22>
 8011758:	2000      	movs	r0, #0
 801175a:	4770      	bx	lr
 801175c:	2020      	movs	r0, #32
 801175e:	4770      	bx	lr
 8011760:	089b      	lsrs	r3, r3, #2
 8011762:	600b      	str	r3, [r1, #0]
 8011764:	2002      	movs	r0, #2
 8011766:	4770      	bx	lr

08011768 <__i2b>:
 8011768:	b510      	push	{r4, lr}
 801176a:	460c      	mov	r4, r1
 801176c:	2101      	movs	r1, #1
 801176e:	f7ff ff35 	bl	80115dc <_Balloc>
 8011772:	2201      	movs	r2, #1
 8011774:	e9c0 2404 	strd	r2, r4, [r0, #16]
 8011778:	bd10      	pop	{r4, pc}
 801177a:	bf00      	nop

0801177c <__multiply>:
 801177c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011780:	690e      	ldr	r6, [r1, #16]
 8011782:	6917      	ldr	r7, [r2, #16]
 8011784:	42be      	cmp	r6, r7
 8011786:	b083      	sub	sp, #12
 8011788:	460c      	mov	r4, r1
 801178a:	4615      	mov	r5, r2
 801178c:	db05      	blt.n	801179a <__multiply+0x1e>
 801178e:	463a      	mov	r2, r7
 8011790:	462b      	mov	r3, r5
 8011792:	4637      	mov	r7, r6
 8011794:	460d      	mov	r5, r1
 8011796:	4616      	mov	r6, r2
 8011798:	461c      	mov	r4, r3
 801179a:	e9d5 1301 	ldrd	r1, r3, [r5, #4]
 801179e:	eb07 0806 	add.w	r8, r7, r6
 80117a2:	4543      	cmp	r3, r8
 80117a4:	bfb8      	it	lt
 80117a6:	3101      	addlt	r1, #1
 80117a8:	f7ff ff18 	bl	80115dc <_Balloc>
 80117ac:	f100 0a14 	add.w	sl, r0, #20
 80117b0:	eb0a 0988 	add.w	r9, sl, r8, lsl #2
 80117b4:	45ca      	cmp	sl, r9
 80117b6:	9000      	str	r0, [sp, #0]
 80117b8:	d205      	bcs.n	80117c6 <__multiply+0x4a>
 80117ba:	4653      	mov	r3, sl
 80117bc:	2100      	movs	r1, #0
 80117be:	f843 1b04 	str.w	r1, [r3], #4
 80117c2:	4599      	cmp	r9, r3
 80117c4:	d8fb      	bhi.n	80117be <__multiply+0x42>
 80117c6:	f104 0e14 	add.w	lr, r4, #20
 80117ca:	eb0e 0b86 	add.w	fp, lr, r6, lsl #2
 80117ce:	f105 0314 	add.w	r3, r5, #20
 80117d2:	45de      	cmp	lr, fp
 80117d4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80117d8:	d253      	bcs.n	8011882 <__multiply+0x106>
 80117da:	f8cd 8004 	str.w	r8, [sp, #4]
 80117de:	4698      	mov	r8, r3
 80117e0:	e005      	b.n	80117ee <__multiply+0x72>
 80117e2:	0c09      	lsrs	r1, r1, #16
 80117e4:	d128      	bne.n	8011838 <__multiply+0xbc>
 80117e6:	45f3      	cmp	fp, lr
 80117e8:	f10a 0a04 	add.w	sl, sl, #4
 80117ec:	d947      	bls.n	801187e <__multiply+0x102>
 80117ee:	f85e 1b04 	ldr.w	r1, [lr], #4
 80117f2:	b28e      	uxth	r6, r1
 80117f4:	2e00      	cmp	r6, #0
 80117f6:	d0f4      	beq.n	80117e2 <__multiply+0x66>
 80117f8:	4645      	mov	r5, r8
 80117fa:	4654      	mov	r4, sl
 80117fc:	2300      	movs	r3, #0
 80117fe:	f855 1b04 	ldr.w	r1, [r5], #4
 8011802:	6820      	ldr	r0, [r4, #0]
 8011804:	b28a      	uxth	r2, r1
 8011806:	fa1f fc80 	uxth.w	ip, r0
 801180a:	fb06 c202 	mla	r2, r6, r2, ip
 801180e:	0c09      	lsrs	r1, r1, #16
 8011810:	0c00      	lsrs	r0, r0, #16
 8011812:	4413      	add	r3, r2
 8011814:	fb06 0201 	mla	r2, r6, r1, r0
 8011818:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 801181c:	b29b      	uxth	r3, r3
 801181e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8011822:	42af      	cmp	r7, r5
 8011824:	f844 3b04 	str.w	r3, [r4], #4
 8011828:	ea4f 4312 	mov.w	r3, r2, lsr #16
 801182c:	d8e7      	bhi.n	80117fe <__multiply+0x82>
 801182e:	6023      	str	r3, [r4, #0]
 8011830:	f85e 1c04 	ldr.w	r1, [lr, #-4]
 8011834:	0c09      	lsrs	r1, r1, #16
 8011836:	d0d6      	beq.n	80117e6 <__multiply+0x6a>
 8011838:	f8da 3000 	ldr.w	r3, [sl]
 801183c:	4640      	mov	r0, r8
 801183e:	461a      	mov	r2, r3
 8011840:	4654      	mov	r4, sl
 8011842:	f04f 0c00 	mov.w	ip, #0
 8011846:	8805      	ldrh	r5, [r0, #0]
 8011848:	0c12      	lsrs	r2, r2, #16
 801184a:	fb01 2205 	mla	r2, r1, r5, r2
 801184e:	4494      	add	ip, r2
 8011850:	b29b      	uxth	r3, r3
 8011852:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
 8011856:	f844 3b04 	str.w	r3, [r4], #4
 801185a:	f850 3b04 	ldr.w	r3, [r0], #4
 801185e:	6822      	ldr	r2, [r4, #0]
 8011860:	0c1b      	lsrs	r3, r3, #16
 8011862:	b295      	uxth	r5, r2
 8011864:	fb01 5303 	mla	r3, r1, r3, r5
 8011868:	eb03 431c 	add.w	r3, r3, ip, lsr #16
 801186c:	4287      	cmp	r7, r0
 801186e:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 8011872:	d8e8      	bhi.n	8011846 <__multiply+0xca>
 8011874:	45f3      	cmp	fp, lr
 8011876:	6023      	str	r3, [r4, #0]
 8011878:	f10a 0a04 	add.w	sl, sl, #4
 801187c:	d8b7      	bhi.n	80117ee <__multiply+0x72>
 801187e:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8011882:	f1b8 0f00 	cmp.w	r8, #0
 8011886:	dd0b      	ble.n	80118a0 <__multiply+0x124>
 8011888:	f859 3c04 	ldr.w	r3, [r9, #-4]
 801188c:	f1a9 0904 	sub.w	r9, r9, #4
 8011890:	b11b      	cbz	r3, 801189a <__multiply+0x11e>
 8011892:	e005      	b.n	80118a0 <__multiply+0x124>
 8011894:	f859 3d04 	ldr.w	r3, [r9, #-4]!
 8011898:	b913      	cbnz	r3, 80118a0 <__multiply+0x124>
 801189a:	f1b8 0801 	subs.w	r8, r8, #1
 801189e:	d1f9      	bne.n	8011894 <__multiply+0x118>
 80118a0:	9800      	ldr	r0, [sp, #0]
 80118a2:	f8c0 8010 	str.w	r8, [r0, #16]
 80118a6:	b003      	add	sp, #12
 80118a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080118ac <__pow5mult>:
 80118ac:	f012 0303 	ands.w	r3, r2, #3
 80118b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80118b4:	4614      	mov	r4, r2
 80118b6:	4607      	mov	r7, r0
 80118b8:	d12e      	bne.n	8011918 <__pow5mult+0x6c>
 80118ba:	460d      	mov	r5, r1
 80118bc:	10a4      	asrs	r4, r4, #2
 80118be:	d01c      	beq.n	80118fa <__pow5mult+0x4e>
 80118c0:	6cbe      	ldr	r6, [r7, #72]	; 0x48
 80118c2:	b396      	cbz	r6, 801192a <__pow5mult+0x7e>
 80118c4:	07e3      	lsls	r3, r4, #31
 80118c6:	f04f 0800 	mov.w	r8, #0
 80118ca:	d406      	bmi.n	80118da <__pow5mult+0x2e>
 80118cc:	1064      	asrs	r4, r4, #1
 80118ce:	d014      	beq.n	80118fa <__pow5mult+0x4e>
 80118d0:	6830      	ldr	r0, [r6, #0]
 80118d2:	b1a8      	cbz	r0, 8011900 <__pow5mult+0x54>
 80118d4:	4606      	mov	r6, r0
 80118d6:	07e3      	lsls	r3, r4, #31
 80118d8:	d5f8      	bpl.n	80118cc <__pow5mult+0x20>
 80118da:	4632      	mov	r2, r6
 80118dc:	4629      	mov	r1, r5
 80118de:	4638      	mov	r0, r7
 80118e0:	f7ff ff4c 	bl	801177c <__multiply>
 80118e4:	b1b5      	cbz	r5, 8011914 <__pow5mult+0x68>
 80118e6:	686a      	ldr	r2, [r5, #4]
 80118e8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80118ea:	1064      	asrs	r4, r4, #1
 80118ec:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80118f0:	6029      	str	r1, [r5, #0]
 80118f2:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 80118f6:	4605      	mov	r5, r0
 80118f8:	d1ea      	bne.n	80118d0 <__pow5mult+0x24>
 80118fa:	4628      	mov	r0, r5
 80118fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011900:	4632      	mov	r2, r6
 8011902:	4631      	mov	r1, r6
 8011904:	4638      	mov	r0, r7
 8011906:	f7ff ff39 	bl	801177c <__multiply>
 801190a:	6030      	str	r0, [r6, #0]
 801190c:	f8c0 8000 	str.w	r8, [r0]
 8011910:	4606      	mov	r6, r0
 8011912:	e7e0      	b.n	80118d6 <__pow5mult+0x2a>
 8011914:	4605      	mov	r5, r0
 8011916:	e7d9      	b.n	80118cc <__pow5mult+0x20>
 8011918:	3b01      	subs	r3, #1
 801191a:	4a0b      	ldr	r2, [pc, #44]	; (8011948 <__pow5mult+0x9c>)
 801191c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8011920:	2300      	movs	r3, #0
 8011922:	f7ff fe8b 	bl	801163c <__multadd>
 8011926:	4605      	mov	r5, r0
 8011928:	e7c8      	b.n	80118bc <__pow5mult+0x10>
 801192a:	2101      	movs	r1, #1
 801192c:	4638      	mov	r0, r7
 801192e:	f7ff fe55 	bl	80115dc <_Balloc>
 8011932:	f240 2371 	movw	r3, #625	; 0x271
 8011936:	6143      	str	r3, [r0, #20]
 8011938:	2201      	movs	r2, #1
 801193a:	2300      	movs	r3, #0
 801193c:	6102      	str	r2, [r0, #16]
 801193e:	4606      	mov	r6, r0
 8011940:	64b8      	str	r0, [r7, #72]	; 0x48
 8011942:	6003      	str	r3, [r0, #0]
 8011944:	e7be      	b.n	80118c4 <__pow5mult+0x18>
 8011946:	bf00      	nop
 8011948:	08013700 	.word	0x08013700

0801194c <__lshift>:
 801194c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011950:	690e      	ldr	r6, [r1, #16]
 8011952:	460d      	mov	r5, r1
 8011954:	ea4f 1962 	mov.w	r9, r2, asr #5
 8011958:	e9d1 1301 	ldrd	r1, r3, [r1, #4]
 801195c:	444e      	add	r6, r9
 801195e:	1c74      	adds	r4, r6, #1
 8011960:	429c      	cmp	r4, r3
 8011962:	4690      	mov	r8, r2
 8011964:	4607      	mov	r7, r0
 8011966:	dd04      	ble.n	8011972 <__lshift+0x26>
 8011968:	005b      	lsls	r3, r3, #1
 801196a:	429c      	cmp	r4, r3
 801196c:	f101 0101 	add.w	r1, r1, #1
 8011970:	dcfa      	bgt.n	8011968 <__lshift+0x1c>
 8011972:	4638      	mov	r0, r7
 8011974:	f7ff fe32 	bl	80115dc <_Balloc>
 8011978:	f1b9 0f00 	cmp.w	r9, #0
 801197c:	f100 0c14 	add.w	ip, r0, #20
 8011980:	dd0e      	ble.n	80119a0 <__lshift+0x54>
 8011982:	f109 0905 	add.w	r9, r9, #5
 8011986:	ea4f 0989 	mov.w	r9, r9, lsl #2
 801198a:	eb00 0109 	add.w	r1, r0, r9
 801198e:	4663      	mov	r3, ip
 8011990:	2200      	movs	r2, #0
 8011992:	f843 2b04 	str.w	r2, [r3], #4
 8011996:	428b      	cmp	r3, r1
 8011998:	d1fb      	bne.n	8011992 <__lshift+0x46>
 801199a:	f1a9 0914 	sub.w	r9, r9, #20
 801199e:	44cc      	add	ip, r9
 80119a0:	6929      	ldr	r1, [r5, #16]
 80119a2:	f105 0314 	add.w	r3, r5, #20
 80119a6:	f018 081f 	ands.w	r8, r8, #31
 80119aa:	eb03 0e81 	add.w	lr, r3, r1, lsl #2
 80119ae:	d01d      	beq.n	80119ec <__lshift+0xa0>
 80119b0:	f1c8 0920 	rsb	r9, r8, #32
 80119b4:	2200      	movs	r2, #0
 80119b6:	6819      	ldr	r1, [r3, #0]
 80119b8:	fa01 f108 	lsl.w	r1, r1, r8
 80119bc:	4311      	orrs	r1, r2
 80119be:	f84c 1b04 	str.w	r1, [ip], #4
 80119c2:	f853 2b04 	ldr.w	r2, [r3], #4
 80119c6:	4573      	cmp	r3, lr
 80119c8:	fa22 f209 	lsr.w	r2, r2, r9
 80119cc:	d3f3      	bcc.n	80119b6 <__lshift+0x6a>
 80119ce:	f8cc 2000 	str.w	r2, [ip]
 80119d2:	2a00      	cmp	r2, #0
 80119d4:	bf18      	it	ne
 80119d6:	4626      	movne	r6, r4
 80119d8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80119da:	686a      	ldr	r2, [r5, #4]
 80119dc:	6106      	str	r6, [r0, #16]
 80119de:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80119e2:	6029      	str	r1, [r5, #0]
 80119e4:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 80119e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80119ec:	f1ac 0c04 	sub.w	ip, ip, #4
 80119f0:	f853 2b04 	ldr.w	r2, [r3], #4
 80119f4:	f84c 2f04 	str.w	r2, [ip, #4]!
 80119f8:	459e      	cmp	lr, r3
 80119fa:	d8f9      	bhi.n	80119f0 <__lshift+0xa4>
 80119fc:	e7ec      	b.n	80119d8 <__lshift+0x8c>
 80119fe:	bf00      	nop

08011a00 <__mcmp>:
 8011a00:	b430      	push	{r4, r5}
 8011a02:	690b      	ldr	r3, [r1, #16]
 8011a04:	4605      	mov	r5, r0
 8011a06:	6900      	ldr	r0, [r0, #16]
 8011a08:	1ac0      	subs	r0, r0, r3
 8011a0a:	d110      	bne.n	8011a2e <__mcmp+0x2e>
 8011a0c:	009b      	lsls	r3, r3, #2
 8011a0e:	3514      	adds	r5, #20
 8011a10:	3114      	adds	r1, #20
 8011a12:	4419      	add	r1, r3
 8011a14:	442b      	add	r3, r5
 8011a16:	e001      	b.n	8011a1c <__mcmp+0x1c>
 8011a18:	429d      	cmp	r5, r3
 8011a1a:	d208      	bcs.n	8011a2e <__mcmp+0x2e>
 8011a1c:	f853 4d04 	ldr.w	r4, [r3, #-4]!
 8011a20:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8011a24:	4294      	cmp	r4, r2
 8011a26:	d0f7      	beq.n	8011a18 <__mcmp+0x18>
 8011a28:	d203      	bcs.n	8011a32 <__mcmp+0x32>
 8011a2a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011a2e:	bc30      	pop	{r4, r5}
 8011a30:	4770      	bx	lr
 8011a32:	2001      	movs	r0, #1
 8011a34:	bc30      	pop	{r4, r5}
 8011a36:	4770      	bx	lr

08011a38 <__mdiff>:
 8011a38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011a3c:	460f      	mov	r7, r1
 8011a3e:	690d      	ldr	r5, [r1, #16]
 8011a40:	6911      	ldr	r1, [r2, #16]
 8011a42:	1a6d      	subs	r5, r5, r1
 8011a44:	2d00      	cmp	r5, #0
 8011a46:	4690      	mov	r8, r2
 8011a48:	4684      	mov	ip, r0
 8011a4a:	f107 0414 	add.w	r4, r7, #20
 8011a4e:	f102 0614 	add.w	r6, r2, #20
 8011a52:	d114      	bne.n	8011a7e <__mdiff+0x46>
 8011a54:	0089      	lsls	r1, r1, #2
 8011a56:	1863      	adds	r3, r4, r1
 8011a58:	4431      	add	r1, r6
 8011a5a:	e001      	b.n	8011a60 <__mdiff+0x28>
 8011a5c:	42a3      	cmp	r3, r4
 8011a5e:	d95d      	bls.n	8011b1c <__mdiff+0xe4>
 8011a60:	f853 0d04 	ldr.w	r0, [r3, #-4]!
 8011a64:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8011a68:	4290      	cmp	r0, r2
 8011a6a:	d0f7      	beq.n	8011a5c <__mdiff+0x24>
 8011a6c:	d209      	bcs.n	8011a82 <__mdiff+0x4a>
 8011a6e:	4622      	mov	r2, r4
 8011a70:	463b      	mov	r3, r7
 8011a72:	4634      	mov	r4, r6
 8011a74:	4647      	mov	r7, r8
 8011a76:	4616      	mov	r6, r2
 8011a78:	4698      	mov	r8, r3
 8011a7a:	2501      	movs	r5, #1
 8011a7c:	e001      	b.n	8011a82 <__mdiff+0x4a>
 8011a7e:	dbf6      	blt.n	8011a6e <__mdiff+0x36>
 8011a80:	2500      	movs	r5, #0
 8011a82:	4660      	mov	r0, ip
 8011a84:	6879      	ldr	r1, [r7, #4]
 8011a86:	f7ff fda9 	bl	80115dc <_Balloc>
 8011a8a:	693f      	ldr	r7, [r7, #16]
 8011a8c:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8011a90:	60c5      	str	r5, [r0, #12]
 8011a92:	eb06 0e83 	add.w	lr, r6, r3, lsl #2
 8011a96:	eb04 0c87 	add.w	ip, r4, r7, lsl #2
 8011a9a:	f100 0514 	add.w	r5, r0, #20
 8011a9e:	2200      	movs	r2, #0
 8011aa0:	e000      	b.n	8011aa4 <__mdiff+0x6c>
 8011aa2:	460d      	mov	r5, r1
 8011aa4:	f856 1b04 	ldr.w	r1, [r6], #4
 8011aa8:	f854 8b04 	ldr.w	r8, [r4], #4
 8011aac:	fa1f f981 	uxth.w	r9, r1
 8011ab0:	fa12 f388 	uxtah	r3, r2, r8
 8011ab4:	0c0a      	lsrs	r2, r1, #16
 8011ab6:	eba3 0309 	sub.w	r3, r3, r9
 8011aba:	ebc2 4218 	rsb	r2, r2, r8, lsr #16
 8011abe:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8011ac2:	4629      	mov	r1, r5
 8011ac4:	b29b      	uxth	r3, r3
 8011ac6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8011aca:	45b6      	cmp	lr, r6
 8011acc:	ea4f 4222 	mov.w	r2, r2, asr #16
 8011ad0:	f841 3b04 	str.w	r3, [r1], #4
 8011ad4:	46a0      	mov	r8, r4
 8011ad6:	d8e4      	bhi.n	8011aa2 <__mdiff+0x6a>
 8011ad8:	45a4      	cmp	ip, r4
 8011ada:	d916      	bls.n	8011b0a <__mdiff+0xd2>
 8011adc:	460e      	mov	r6, r1
 8011ade:	f858 5b04 	ldr.w	r5, [r8], #4
 8011ae2:	fa12 f385 	uxtah	r3, r2, r5
 8011ae6:	141a      	asrs	r2, r3, #16
 8011ae8:	eb02 4215 	add.w	r2, r2, r5, lsr #16
 8011aec:	b29b      	uxth	r3, r3
 8011aee:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8011af2:	45c4      	cmp	ip, r8
 8011af4:	f846 3b04 	str.w	r3, [r6], #4
 8011af8:	ea4f 4222 	mov.w	r2, r2, asr #16
 8011afc:	d8ef      	bhi.n	8011ade <__mdiff+0xa6>
 8011afe:	f10c 35ff 	add.w	r5, ip, #4294967295	; 0xffffffff
 8011b02:	1b2d      	subs	r5, r5, r4
 8011b04:	f025 0503 	bic.w	r5, r5, #3
 8011b08:	440d      	add	r5, r1
 8011b0a:	b923      	cbnz	r3, 8011b16 <__mdiff+0xde>
 8011b0c:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8011b10:	3f01      	subs	r7, #1
 8011b12:	2b00      	cmp	r3, #0
 8011b14:	d0fa      	beq.n	8011b0c <__mdiff+0xd4>
 8011b16:	6107      	str	r7, [r0, #16]
 8011b18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011b1c:	4660      	mov	r0, ip
 8011b1e:	2100      	movs	r1, #0
 8011b20:	f7ff fd5c 	bl	80115dc <_Balloc>
 8011b24:	2201      	movs	r2, #1
 8011b26:	2300      	movs	r3, #0
 8011b28:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8011b2c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08011b30 <__d2b>:
 8011b30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b34:	2101      	movs	r1, #1
 8011b36:	b082      	sub	sp, #8
 8011b38:	461c      	mov	r4, r3
 8011b3a:	4690      	mov	r8, r2
 8011b3c:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
 8011b40:	f7ff fd4c 	bl	80115dc <_Balloc>
 8011b44:	4623      	mov	r3, r4
 8011b46:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8011b4a:	4607      	mov	r7, r0
 8011b4c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8011b50:	b10c      	cbz	r4, 8011b56 <__d2b+0x26>
 8011b52:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8011b56:	f1b8 0200 	subs.w	r2, r8, #0
 8011b5a:	9301      	str	r3, [sp, #4]
 8011b5c:	d024      	beq.n	8011ba8 <__d2b+0x78>
 8011b5e:	4668      	mov	r0, sp
 8011b60:	9200      	str	r2, [sp, #0]
 8011b62:	f7ff fdd1 	bl	8011708 <__lo0bits>
 8011b66:	b9a0      	cbnz	r0, 8011b92 <__d2b+0x62>
 8011b68:	e9dd 2300 	ldrd	r2, r3, [sp]
 8011b6c:	617a      	str	r2, [r7, #20]
 8011b6e:	2b00      	cmp	r3, #0
 8011b70:	bf14      	ite	ne
 8011b72:	2102      	movne	r1, #2
 8011b74:	2101      	moveq	r1, #1
 8011b76:	61bb      	str	r3, [r7, #24]
 8011b78:	6139      	str	r1, [r7, #16]
 8011b7a:	b1fc      	cbz	r4, 8011bbc <__d2b+0x8c>
 8011b7c:	f2a4 4333 	subw	r3, r4, #1075	; 0x433
 8011b80:	4403      	add	r3, r0
 8011b82:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8011b86:	6033      	str	r3, [r6, #0]
 8011b88:	6028      	str	r0, [r5, #0]
 8011b8a:	4638      	mov	r0, r7
 8011b8c:	b002      	add	sp, #8
 8011b8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b92:	e9dd 1300 	ldrd	r1, r3, [sp]
 8011b96:	f1c0 0220 	rsb	r2, r0, #32
 8011b9a:	fa03 f202 	lsl.w	r2, r3, r2
 8011b9e:	430a      	orrs	r2, r1
 8011ba0:	40c3      	lsrs	r3, r0
 8011ba2:	9301      	str	r3, [sp, #4]
 8011ba4:	617a      	str	r2, [r7, #20]
 8011ba6:	e7e2      	b.n	8011b6e <__d2b+0x3e>
 8011ba8:	a801      	add	r0, sp, #4
 8011baa:	f7ff fdad 	bl	8011708 <__lo0bits>
 8011bae:	9b01      	ldr	r3, [sp, #4]
 8011bb0:	617b      	str	r3, [r7, #20]
 8011bb2:	2101      	movs	r1, #1
 8011bb4:	3020      	adds	r0, #32
 8011bb6:	6139      	str	r1, [r7, #16]
 8011bb8:	2c00      	cmp	r4, #0
 8011bba:	d1df      	bne.n	8011b7c <__d2b+0x4c>
 8011bbc:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8011bc0:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8011bc4:	6030      	str	r0, [r6, #0]
 8011bc6:	6918      	ldr	r0, [r3, #16]
 8011bc8:	f7ff fd7e 	bl	80116c8 <__hi0bits>
 8011bcc:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8011bd0:	6028      	str	r0, [r5, #0]
 8011bd2:	4638      	mov	r0, r7
 8011bd4:	b002      	add	sp, #8
 8011bd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011bda:	bf00      	nop

08011bdc <frexp>:
 8011bdc:	f8df c064 	ldr.w	ip, [pc, #100]	; 8011c44 <frexp+0x68>
 8011be0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011be2:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8011be6:	2700      	movs	r7, #0
 8011be8:	4563      	cmp	r3, ip
 8011bea:	4604      	mov	r4, r0
 8011bec:	460d      	mov	r5, r1
 8011bee:	4616      	mov	r6, r2
 8011bf0:	6017      	str	r7, [r2, #0]
 8011bf2:	dc22      	bgt.n	8011c3a <frexp+0x5e>
 8011bf4:	4684      	mov	ip, r0
 8011bf6:	ea53 0c0c 	orrs.w	ip, r3, ip
 8011bfa:	d01e      	beq.n	8011c3a <frexp+0x5e>
 8011bfc:	f8df c048 	ldr.w	ip, [pc, #72]	; 8011c48 <frexp+0x6c>
 8011c00:	ea01 0c0c 	and.w	ip, r1, ip
 8011c04:	460a      	mov	r2, r1
 8011c06:	f1bc 0f00 	cmp.w	ip, #0
 8011c0a:	d109      	bne.n	8011c20 <frexp+0x44>
 8011c0c:	2200      	movs	r2, #0
 8011c0e:	4b0c      	ldr	r3, [pc, #48]	; (8011c40 <frexp+0x64>)
 8011c10:	f7f6 fbc0 	bl	8008394 <__aeabi_dmul>
 8011c14:	f06f 0735 	mvn.w	r7, #53	; 0x35
 8011c18:	4604      	mov	r4, r0
 8011c1a:	460a      	mov	r2, r1
 8011c1c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8011c20:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
 8011c24:	151b      	asrs	r3, r3, #20
 8011c26:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
 8011c2a:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 8011c2e:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
 8011c32:	443b      	add	r3, r7
 8011c34:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
 8011c38:	6033      	str	r3, [r6, #0]
 8011c3a:	4620      	mov	r0, r4
 8011c3c:	4629      	mov	r1, r5
 8011c3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011c40:	43500000 	.word	0x43500000
 8011c44:	7fefffff 	.word	0x7fefffff
 8011c48:	7ff00000 	.word	0x7ff00000

08011c4c <__sread>:
 8011c4c:	b510      	push	{r4, lr}
 8011c4e:	460c      	mov	r4, r1
 8011c50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011c54:	f7f8 fd64 	bl	800a720 <_read_r>
 8011c58:	2800      	cmp	r0, #0
 8011c5a:	db03      	blt.n	8011c64 <__sread+0x18>
 8011c5c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8011c5e:	4403      	add	r3, r0
 8011c60:	6523      	str	r3, [r4, #80]	; 0x50
 8011c62:	bd10      	pop	{r4, pc}
 8011c64:	89a3      	ldrh	r3, [r4, #12]
 8011c66:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8011c6a:	81a3      	strh	r3, [r4, #12]
 8011c6c:	bd10      	pop	{r4, pc}
 8011c6e:	bf00      	nop

08011c70 <__swrite>:
 8011c70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c74:	4616      	mov	r6, r2
 8011c76:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8011c7a:	461f      	mov	r7, r3
 8011c7c:	05d3      	lsls	r3, r2, #23
 8011c7e:	460c      	mov	r4, r1
 8011c80:	4605      	mov	r5, r0
 8011c82:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011c86:	d409      	bmi.n	8011c9c <__swrite+0x2c>
 8011c88:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8011c8c:	81a2      	strh	r2, [r4, #12]
 8011c8e:	463b      	mov	r3, r7
 8011c90:	4632      	mov	r2, r6
 8011c92:	4628      	mov	r0, r5
 8011c94:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011c98:	f7f8 bd32 	b.w	800a700 <_write_r>
 8011c9c:	2200      	movs	r2, #0
 8011c9e:	2302      	movs	r3, #2
 8011ca0:	f7f8 fd36 	bl	800a710 <_lseek_r>
 8011ca4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8011ca8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8011cac:	e7ec      	b.n	8011c88 <__swrite+0x18>
 8011cae:	bf00      	nop

08011cb0 <__sseek>:
 8011cb0:	b510      	push	{r4, lr}
 8011cb2:	460c      	mov	r4, r1
 8011cb4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011cb8:	f7f8 fd2a 	bl	800a710 <_lseek_r>
 8011cbc:	89a3      	ldrh	r3, [r4, #12]
 8011cbe:	1c42      	adds	r2, r0, #1
 8011cc0:	bf0e      	itee	eq
 8011cc2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8011cc6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8011cca:	6520      	strne	r0, [r4, #80]	; 0x50
 8011ccc:	81a3      	strh	r3, [r4, #12]
 8011cce:	bd10      	pop	{r4, pc}

08011cd0 <__sclose>:
 8011cd0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011cd4:	f7f8 bd0c 	b.w	800a6f0 <_close_r>

08011cd8 <strncpy>:
 8011cd8:	b470      	push	{r4, r5, r6}
 8011cda:	ea40 0401 	orr.w	r4, r0, r1
 8011cde:	07a3      	lsls	r3, r4, #30
 8011ce0:	d127      	bne.n	8011d32 <strncpy+0x5a>
 8011ce2:	2a03      	cmp	r2, #3
 8011ce4:	d925      	bls.n	8011d32 <strncpy+0x5a>
 8011ce6:	460b      	mov	r3, r1
 8011ce8:	4606      	mov	r6, r0
 8011cea:	4619      	mov	r1, r3
 8011cec:	f853 5b04 	ldr.w	r5, [r3], #4
 8011cf0:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
 8011cf4:	ea24 0405 	bic.w	r4, r4, r5
 8011cf8:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
 8011cfc:	d106      	bne.n	8011d0c <strncpy+0x34>
 8011cfe:	3a04      	subs	r2, #4
 8011d00:	2a03      	cmp	r2, #3
 8011d02:	f846 5b04 	str.w	r5, [r6], #4
 8011d06:	4619      	mov	r1, r3
 8011d08:	d8ef      	bhi.n	8011cea <strncpy+0x12>
 8011d0a:	b182      	cbz	r2, 8011d2e <strncpy+0x56>
 8011d0c:	4633      	mov	r3, r6
 8011d0e:	780c      	ldrb	r4, [r1, #0]
 8011d10:	f803 4b01 	strb.w	r4, [r3], #1
 8011d14:	1e55      	subs	r5, r2, #1
 8011d16:	b174      	cbz	r4, 8011d36 <strncpy+0x5e>
 8011d18:	4432      	add	r2, r6
 8011d1a:	442e      	add	r6, r5
 8011d1c:	e005      	b.n	8011d2a <strncpy+0x52>
 8011d1e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8011d22:	1af5      	subs	r5, r6, r3
 8011d24:	f803 4b01 	strb.w	r4, [r3], #1
 8011d28:	b12c      	cbz	r4, 8011d36 <strncpy+0x5e>
 8011d2a:	429a      	cmp	r2, r3
 8011d2c:	d1f7      	bne.n	8011d1e <strncpy+0x46>
 8011d2e:	bc70      	pop	{r4, r5, r6}
 8011d30:	4770      	bx	lr
 8011d32:	4606      	mov	r6, r0
 8011d34:	e7e9      	b.n	8011d0a <strncpy+0x32>
 8011d36:	2d00      	cmp	r5, #0
 8011d38:	d0f9      	beq.n	8011d2e <strncpy+0x56>
 8011d3a:	441d      	add	r5, r3
 8011d3c:	2200      	movs	r2, #0
 8011d3e:	f803 2b01 	strb.w	r2, [r3], #1
 8011d42:	42ab      	cmp	r3, r5
 8011d44:	d1fb      	bne.n	8011d3e <strncpy+0x66>
 8011d46:	bc70      	pop	{r4, r5, r6}
 8011d48:	4770      	bx	lr
 8011d4a:	bf00      	nop

08011d4c <__ssprint_r>:
 8011d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d50:	6893      	ldr	r3, [r2, #8]
 8011d52:	b083      	sub	sp, #12
 8011d54:	4690      	mov	r8, r2
 8011d56:	2b00      	cmp	r3, #0
 8011d58:	d06d      	beq.n	8011e36 <__ssprint_r+0xea>
 8011d5a:	6817      	ldr	r7, [r2, #0]
 8011d5c:	688d      	ldr	r5, [r1, #8]
 8011d5e:	4682      	mov	sl, r0
 8011d60:	460c      	mov	r4, r1
 8011d62:	6808      	ldr	r0, [r1, #0]
 8011d64:	3708      	adds	r7, #8
 8011d66:	e043      	b.n	8011df0 <__ssprint_r+0xa4>
 8011d68:	89a3      	ldrh	r3, [r4, #12]
 8011d6a:	f413 6f90 	tst.w	r3, #1152	; 0x480
 8011d6e:	d02e      	beq.n	8011dce <__ssprint_r+0x82>
 8011d70:	e9d4 1504 	ldrd	r1, r5, [r4, #16]
 8011d74:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8011d78:	eba0 0b01 	sub.w	fp, r0, r1
 8011d7c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8011d80:	eb0b 0006 	add.w	r0, fp, r6
 8011d84:	106d      	asrs	r5, r5, #1
 8011d86:	3001      	adds	r0, #1
 8011d88:	42a8      	cmp	r0, r5
 8011d8a:	462a      	mov	r2, r5
 8011d8c:	bf84      	itt	hi
 8011d8e:	4605      	movhi	r5, r0
 8011d90:	462a      	movhi	r2, r5
 8011d92:	055b      	lsls	r3, r3, #21
 8011d94:	d536      	bpl.n	8011e04 <__ssprint_r+0xb8>
 8011d96:	4611      	mov	r1, r2
 8011d98:	4650      	mov	r0, sl
 8011d9a:	f7fb fcb5 	bl	800d708 <_malloc_r>
 8011d9e:	2800      	cmp	r0, #0
 8011da0:	d03a      	beq.n	8011e18 <__ssprint_r+0xcc>
 8011da2:	465a      	mov	r2, fp
 8011da4:	6921      	ldr	r1, [r4, #16]
 8011da6:	9001      	str	r0, [sp, #4]
 8011da8:	f7f5 feb2 	bl	8007b10 <memcpy>
 8011dac:	89a2      	ldrh	r2, [r4, #12]
 8011dae:	9b01      	ldr	r3, [sp, #4]
 8011db0:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8011db4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8011db8:	81a2      	strh	r2, [r4, #12]
 8011dba:	eba5 020b 	sub.w	r2, r5, fp
 8011dbe:	eb03 000b 	add.w	r0, r3, fp
 8011dc2:	6165      	str	r5, [r4, #20]
 8011dc4:	6123      	str	r3, [r4, #16]
 8011dc6:	6020      	str	r0, [r4, #0]
 8011dc8:	60a2      	str	r2, [r4, #8]
 8011dca:	4635      	mov	r5, r6
 8011dcc:	46b3      	mov	fp, r6
 8011dce:	465a      	mov	r2, fp
 8011dd0:	4649      	mov	r1, r9
 8011dd2:	f7fb ff81 	bl	800dcd8 <memmove>
 8011dd6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8011dda:	68a2      	ldr	r2, [r4, #8]
 8011ddc:	6820      	ldr	r0, [r4, #0]
 8011dde:	1b55      	subs	r5, r2, r5
 8011de0:	4458      	add	r0, fp
 8011de2:	1b9e      	subs	r6, r3, r6
 8011de4:	60a5      	str	r5, [r4, #8]
 8011de6:	6020      	str	r0, [r4, #0]
 8011de8:	f8c8 6008 	str.w	r6, [r8, #8]
 8011dec:	b31e      	cbz	r6, 8011e36 <__ssprint_r+0xea>
 8011dee:	3708      	adds	r7, #8
 8011df0:	e957 9602 	ldrd	r9, r6, [r7, #-8]
 8011df4:	46ab      	mov	fp, r5
 8011df6:	2e00      	cmp	r6, #0
 8011df8:	d0f9      	beq.n	8011dee <__ssprint_r+0xa2>
 8011dfa:	42ae      	cmp	r6, r5
 8011dfc:	d2b4      	bcs.n	8011d68 <__ssprint_r+0x1c>
 8011dfe:	4635      	mov	r5, r6
 8011e00:	46b3      	mov	fp, r6
 8011e02:	e7e4      	b.n	8011dce <__ssprint_r+0x82>
 8011e04:	4650      	mov	r0, sl
 8011e06:	f7fc f86d 	bl	800dee4 <_realloc_r>
 8011e0a:	4603      	mov	r3, r0
 8011e0c:	2800      	cmp	r0, #0
 8011e0e:	d1d4      	bne.n	8011dba <__ssprint_r+0x6e>
 8011e10:	6921      	ldr	r1, [r4, #16]
 8011e12:	4650      	mov	r0, sl
 8011e14:	f7ff fa42 	bl	801129c <_free_r>
 8011e18:	230c      	movs	r3, #12
 8011e1a:	f8ca 3000 	str.w	r3, [sl]
 8011e1e:	89a3      	ldrh	r3, [r4, #12]
 8011e20:	2200      	movs	r2, #0
 8011e22:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8011e26:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011e2a:	81a3      	strh	r3, [r4, #12]
 8011e2c:	e9c8 2201 	strd	r2, r2, [r8, #4]
 8011e30:	b003      	add	sp, #12
 8011e32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e36:	2000      	movs	r0, #0
 8011e38:	f8c8 0004 	str.w	r0, [r8, #4]
 8011e3c:	b003      	add	sp, #12
 8011e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e42:	bf00      	nop

08011e44 <_calloc_r>:
 8011e44:	b510      	push	{r4, lr}
 8011e46:	fb02 f101 	mul.w	r1, r2, r1
 8011e4a:	f7fb fc5d 	bl	800d708 <_malloc_r>
 8011e4e:	4604      	mov	r4, r0
 8011e50:	b168      	cbz	r0, 8011e6e <_calloc_r+0x2a>
 8011e52:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8011e56:	f022 0203 	bic.w	r2, r2, #3
 8011e5a:	3a04      	subs	r2, #4
 8011e5c:	2a24      	cmp	r2, #36	; 0x24
 8011e5e:	d818      	bhi.n	8011e92 <_calloc_r+0x4e>
 8011e60:	2a13      	cmp	r2, #19
 8011e62:	d806      	bhi.n	8011e72 <_calloc_r+0x2e>
 8011e64:	4602      	mov	r2, r0
 8011e66:	2300      	movs	r3, #0
 8011e68:	e9c2 3300 	strd	r3, r3, [r2]
 8011e6c:	6093      	str	r3, [r2, #8]
 8011e6e:	4620      	mov	r0, r4
 8011e70:	bd10      	pop	{r4, pc}
 8011e72:	2300      	movs	r3, #0
 8011e74:	2a1b      	cmp	r2, #27
 8011e76:	e9c0 3300 	strd	r3, r3, [r0]
 8011e7a:	d90f      	bls.n	8011e9c <_calloc_r+0x58>
 8011e7c:	2a24      	cmp	r2, #36	; 0x24
 8011e7e:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8011e82:	bf12      	itee	ne
 8011e84:	f100 0210 	addne.w	r2, r0, #16
 8011e88:	e9c0 3304 	strdeq	r3, r3, [r0, #16]
 8011e8c:	f100 0218 	addeq.w	r2, r0, #24
 8011e90:	e7e9      	b.n	8011e66 <_calloc_r+0x22>
 8011e92:	2100      	movs	r1, #0
 8011e94:	f7fb ff88 	bl	800dda8 <memset>
 8011e98:	4620      	mov	r0, r4
 8011e9a:	bd10      	pop	{r4, pc}
 8011e9c:	f100 0208 	add.w	r2, r0, #8
 8011ea0:	e7e1      	b.n	8011e66 <_calloc_r+0x22>
 8011ea2:	bf00      	nop

08011ea4 <_fclose_r>:
 8011ea4:	b570      	push	{r4, r5, r6, lr}
 8011ea6:	2900      	cmp	r1, #0
 8011ea8:	d04a      	beq.n	8011f40 <_fclose_r+0x9c>
 8011eaa:	4605      	mov	r5, r0
 8011eac:	460c      	mov	r4, r1
 8011eae:	b110      	cbz	r0, 8011eb6 <_fclose_r+0x12>
 8011eb0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8011eb2:	2b00      	cmp	r3, #0
 8011eb4:	d047      	beq.n	8011f46 <_fclose_r+0xa2>
 8011eb6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8011eb8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8011ebc:	07d8      	lsls	r0, r3, #31
 8011ebe:	d532      	bpl.n	8011f26 <_fclose_r+0x82>
 8011ec0:	2a00      	cmp	r2, #0
 8011ec2:	d03d      	beq.n	8011f40 <_fclose_r+0x9c>
 8011ec4:	4621      	mov	r1, r4
 8011ec6:	4628      	mov	r0, r5
 8011ec8:	f7ff f846 	bl	8010f58 <__sflush_r>
 8011ecc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011ece:	4606      	mov	r6, r0
 8011ed0:	b133      	cbz	r3, 8011ee0 <_fclose_r+0x3c>
 8011ed2:	69e1      	ldr	r1, [r4, #28]
 8011ed4:	4628      	mov	r0, r5
 8011ed6:	4798      	blx	r3
 8011ed8:	2800      	cmp	r0, #0
 8011eda:	bfb8      	it	lt
 8011edc:	f04f 36ff 	movlt.w	r6, #4294967295	; 0xffffffff
 8011ee0:	89a3      	ldrh	r3, [r4, #12]
 8011ee2:	061a      	lsls	r2, r3, #24
 8011ee4:	d43c      	bmi.n	8011f60 <_fclose_r+0xbc>
 8011ee6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011ee8:	b141      	cbz	r1, 8011efc <_fclose_r+0x58>
 8011eea:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8011eee:	4299      	cmp	r1, r3
 8011ef0:	d002      	beq.n	8011ef8 <_fclose_r+0x54>
 8011ef2:	4628      	mov	r0, r5
 8011ef4:	f7ff f9d2 	bl	801129c <_free_r>
 8011ef8:	2300      	movs	r3, #0
 8011efa:	6323      	str	r3, [r4, #48]	; 0x30
 8011efc:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011efe:	b121      	cbz	r1, 8011f0a <_fclose_r+0x66>
 8011f00:	4628      	mov	r0, r5
 8011f02:	f7ff f9cb 	bl	801129c <_free_r>
 8011f06:	2300      	movs	r3, #0
 8011f08:	6463      	str	r3, [r4, #68]	; 0x44
 8011f0a:	f7ff f951 	bl	80111b0 <__sfp_lock_acquire>
 8011f0e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8011f10:	2200      	movs	r2, #0
 8011f12:	07db      	lsls	r3, r3, #31
 8011f14:	81a2      	strh	r2, [r4, #12]
 8011f16:	d528      	bpl.n	8011f6a <_fclose_r+0xc6>
 8011f18:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011f1a:	f7fb fbdf 	bl	800d6dc <__retarget_lock_close_recursive>
 8011f1e:	f7ff f94d 	bl	80111bc <__sfp_lock_release>
 8011f22:	4630      	mov	r0, r6
 8011f24:	bd70      	pop	{r4, r5, r6, pc}
 8011f26:	0591      	lsls	r1, r2, #22
 8011f28:	d4cc      	bmi.n	8011ec4 <_fclose_r+0x20>
 8011f2a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011f2c:	f7fb fbd8 	bl	800d6e0 <__retarget_lock_acquire_recursive>
 8011f30:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8011f34:	2b00      	cmp	r3, #0
 8011f36:	d1c5      	bne.n	8011ec4 <_fclose_r+0x20>
 8011f38:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8011f3a:	f016 0601 	ands.w	r6, r6, #1
 8011f3e:	d00a      	beq.n	8011f56 <_fclose_r+0xb2>
 8011f40:	2600      	movs	r6, #0
 8011f42:	4630      	mov	r0, r6
 8011f44:	bd70      	pop	{r4, r5, r6, pc}
 8011f46:	f7ff f909 	bl	801115c <__sinit>
 8011f4a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8011f4c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8011f50:	07d8      	lsls	r0, r3, #31
 8011f52:	d4b5      	bmi.n	8011ec0 <_fclose_r+0x1c>
 8011f54:	e7e7      	b.n	8011f26 <_fclose_r+0x82>
 8011f56:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011f58:	f7fb fbc4 	bl	800d6e4 <__retarget_lock_release_recursive>
 8011f5c:	4630      	mov	r0, r6
 8011f5e:	bd70      	pop	{r4, r5, r6, pc}
 8011f60:	6921      	ldr	r1, [r4, #16]
 8011f62:	4628      	mov	r0, r5
 8011f64:	f7ff f99a 	bl	801129c <_free_r>
 8011f68:	e7bd      	b.n	8011ee6 <_fclose_r+0x42>
 8011f6a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011f6c:	f7fb fbba 	bl	800d6e4 <__retarget_lock_release_recursive>
 8011f70:	e7d2      	b.n	8011f18 <_fclose_r+0x74>
 8011f72:	bf00      	nop

08011f74 <__ascii_mbtowc>:
 8011f74:	b082      	sub	sp, #8
 8011f76:	b149      	cbz	r1, 8011f8c <__ascii_mbtowc+0x18>
 8011f78:	b15a      	cbz	r2, 8011f92 <__ascii_mbtowc+0x1e>
 8011f7a:	b16b      	cbz	r3, 8011f98 <__ascii_mbtowc+0x24>
 8011f7c:	7813      	ldrb	r3, [r2, #0]
 8011f7e:	600b      	str	r3, [r1, #0]
 8011f80:	7812      	ldrb	r2, [r2, #0]
 8011f82:	1c10      	adds	r0, r2, #0
 8011f84:	bf18      	it	ne
 8011f86:	2001      	movne	r0, #1
 8011f88:	b002      	add	sp, #8
 8011f8a:	4770      	bx	lr
 8011f8c:	a901      	add	r1, sp, #4
 8011f8e:	2a00      	cmp	r2, #0
 8011f90:	d1f3      	bne.n	8011f7a <__ascii_mbtowc+0x6>
 8011f92:	4610      	mov	r0, r2
 8011f94:	b002      	add	sp, #8
 8011f96:	4770      	bx	lr
 8011f98:	f06f 0001 	mvn.w	r0, #1
 8011f9c:	e7f4      	b.n	8011f88 <__ascii_mbtowc+0x14>
 8011f9e:	bf00      	nop

08011fa0 <__ascii_wctomb>:
 8011fa0:	b149      	cbz	r1, 8011fb6 <__ascii_wctomb+0x16>
 8011fa2:	2aff      	cmp	r2, #255	; 0xff
 8011fa4:	d802      	bhi.n	8011fac <__ascii_wctomb+0xc>
 8011fa6:	700a      	strb	r2, [r1, #0]
 8011fa8:	2001      	movs	r0, #1
 8011faa:	4770      	bx	lr
 8011fac:	238a      	movs	r3, #138	; 0x8a
 8011fae:	6003      	str	r3, [r0, #0]
 8011fb0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011fb4:	4770      	bx	lr
 8011fb6:	4608      	mov	r0, r1
 8011fb8:	4770      	bx	lr
 8011fba:	bf00      	nop
